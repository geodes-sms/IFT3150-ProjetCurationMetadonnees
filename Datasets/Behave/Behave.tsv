key	project	title	abstract	keywords	authors	venue	doi	references	pages	bibtex	screened_decision	final_decision	mode	inclusion_criteria	exclusion_criteria	reviewer_count	source	year	meta_title	link	publisher	metadata_missing
0	Behave	On the understanding of BDD scenarios' quality: Preliminary practitioners' opinions	[Context & Motivation] In agile development, acceptance tests are written to express the details from the conversations between customers and developers. One of the formats to express those details is BDD (Behavior-Driven Development) scenarios, which use a ubiquitous language, one that business and technical people can understand, to build an executable specification that represents a system behavior. [Question/Problem] Problems caused by bad documentation are known to cause project failure and we believe those problems apply to documentation in the format of acceptance tests as well. Thus, in the long-term, we seek to understand what would be the definition of a good BDD scenario and the criteria to define it. [Principal idea/results] To achieve that, we previously identified known requirements' quality attributes that would be suitable to evaluate BDD scenarios' quality. Based on that list of attributes, we now aim to validate that list with practitioners, identify their interpretation of the listed attributes, and uncover general recommendations to write BDD scenarios. [Contribution] Preliminary results from our initial set of interviews revealed practitioners' interpretations for consistent, testable, valuable, understandable, and unambiguous attributes and some recommendations to write good BDD scenarios, such as the use of declarative form of writing.	Acceptance tests; Boolean functions; Computer software selection and evaluation; Requirements engineering; Agile development; Behavior-driven development; Empirical studies; Executable specifications; Project failures; Quality attributes; System behaviors; Quality control; Acceptance tests;  Boolean functions;  Computer software selection and evaluation;  Requirements engineering;  Agile development;  Behavior-driven development;  Empirical studies;  Executable specifications;  Project failures;  Quality attributes;  System behaviors;  Quality control	Oliveira, Gabriel; Marczak, Sabrina	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)	https://doi.org/10.1007/978-3-319-77243-1_18		290 - 296	"""@ARTICLE{Oliveira2018290,
    author = ""Oliveira, Gabriel and Marczak, Sabrina"",
    editor = ""E., Kamsties and J., Horkoff and F., Dalpiaz"",
    title = ""On the understanding of BDD scenarios' quality: Preliminary practitioners' opinions"",
    year = ""2018"",
    journal = ""Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)"",
    volume = ""10753 LNCS"",
    pages = ""290 - 296"",
    doi = ""10.1007/978-3-319-77243-1\_18"",
    url = ""https://www.scopus.com/inward/record.uri?eid=2-s2.0-85043392736\&doi=10.1007\%2f978-3-319-77243-1\_18\&partnerID=40\&md5=090286ca4a05c49ba9db32b1e67f3e31"",
    affiliations = ""Computer Science School, PUCRS, Porto Alegre, Brazil"",
    abstract = ""[Context \& Motivation] In agile development, acceptance tests are written to express the details from the conversations between customers and developers. One of the formats to express those details is BDD (Behavior-Driven Development) scenarios, which use a ubiquitous language, one that business and technical people can understand, to build an executable specification that represents a system behavior. [Question/Problem] Problems caused by bad documentation are known to cause project failure and we believe those problems apply to documentation in the format of acceptance tests as well. Thus, in the long-term, we seek to understand what would be the definition of a good BDD scenario and the criteria to define it. [Principal idea/results] To achieve that, we previously identified known requirements' quality attributes that would be suitable to evaluate BDD scenarios' quality. Based on that list of attributes, we now aim to validate that list with practitioners, identify their interpretation of the listed attributes, and uncover general recommendations to write BDD scenarios. [Contribution] Preliminary results from our initial set of interviews revealed practitioners' interpretations for consistent, testable, valuable, understandable, and unambiguous attributes and some recommendations to write good BDD scenarios, such as the use of declarative form of writing. (c) Springer International Publishing AG, part of Springer Nature 2018."",
    author_keywords = ""Behavior-driven development; Documentation evaluation; Documentation quality; Empirical study"",
    keywords = ""Acceptance tests; Boolean functions; Computer software selection and evaluation; Requirements engineering; Agile development; Behavior-driven development; Empirical studies; Executable specifications; Project failures; Quality attributes; System behaviors; Quality control"",
    correspondence_address = ""G. Oliveira; Computer Science School, PUCRS, Porto Alegre, Brazil; email: gabriel.pimentel@acad.pucrs.br"",
    publisher = ""Springer Verlag"",
    issn = ""03029743"",
    isbn = ""978-331977242-4"",
    language = ""English"",
    abbrev_source_title = ""Lect. Notes Comput. Sci."",
    type = ""Conference paper"",
    publication_stage = ""Final"",
    source = ""Scopus"",
    note = ""Cited by: 8; Conference name: 24th International Working Conference on Requirements Engineering Foundation for Software Quality, REFSQ 2018; Conference date: 19 March 2018 through 22 March 2018; Conference code: 211359""
}
"""	Excluded	Excluded	new_screen			2	Scopus Signed In		On the understanding of BDD scenarios’ quality: Preliminary practitioners’ opinions	https://doi.org/10.1007/978-3-319-77243-1_18	Springer Verlag	nan; References; Link
1	Behave	Testing schematron using XSpec	[No abstract available]	Automated Testing;; Behavior Driven Development;; Continuous Integration;; Open Source;; Quality;; Schematron;; Test Driven Development;; Unit Testing;; Validating;; XSpec	[No author name available]	Balisage Series on Markup Technologies	https://www.scopus.com/record/display.uri?eid=2-s2.0-85049661706&origin=resultslist&sort=plf-f&src=s&sid=dc7e7d21a218126cc1889a85a8dbffc1&sot=b&sdt=b&s=TITLE-ABS-KEY%28testing+schematron+using+xspec%29&sl=45&sessionSearchId=dc7e7d21a218126cc1889a85a8dbffc1&relpos=0			"""@CONFERENCE{2017,
    title = ""Testing schematron using XSpec"",
    year = ""2017"",
    journal = ""Balisage Series on Markup Technologies"",
    volume = ""19"",
    url = ""https://www.scopus.com/inward/record.uri?eid=2-s2.0-85049661706\&partnerID=40\&md5=dd53cbd0fd5197101ef5918fe76e91a5"",
    author_keywords = ""Automated Testing; Behavior Driven Development; Continuous Integration; Open Source; Quality; Schematron; Test Driven Development; Unit Testing; Validating; XSpec"",
    publisher = ""Mulberry Tecnologies, Inc."",
    issn = ""19472609"",
    isbn = ""978-193595815-4"",
    language = ""English"",
    abbrev_source_title = ""Balisage Ser. Markup Technol."",
    type = ""Conference paper"",
    publication_stage = ""Final"",
    source = ""Scopus"",
    note = ""Cited by: 0; Conference name: 2017 Balisage: The Markup Conference; Conference date: 1 August 2017 through 4 August 2017; Conference code: 137364""
}
"""	Excluded	Excluded	new_screen			2	Scopus Signed In		Testing schematron using XSpec	https://www.scopus.com/record/display.uri?eid=2-s2.0-85049661706&origin=resultslist&sort=plf-f&src=s&sid=dc7e7d21a218126cc1889a85a8dbffc1&sot=b&sdt=b&s=TITLE-ABS-KEY%28testing+schematron+using+xspec%29&sl=45&sessionSearchId=dc7e7d21a218126cc1889a85a8dbffc1&relpos=0	Mulberry Tecnologies, Inc	nan; Authors; Abstract; References; Pages
2	Behave	Enhancing the Student Learning Experience by Adopting TDD and BDD in Course Projects	A demonstration of the application and contribution of Test-Driven Development (TDD) and Behavior-Driven Development (BDD) in the student learning experience in the context of a Software Engineering course. Background: Software testing is an activity for ensuring software quality. Although teaching testing rigorously to students is a priority in academia, undergraduate students often encounter difficulties performing testing tasks effectively. Intended Outcomes: To increase satisfaction rate and course grades, and reduce delivery time. Application Design: We experimented with the Software Engineering Laboratory (LES) course of a Private University in the Bachelor of Computer Science and Information Systems courses. This experiment corroborated the learning difficulties of students. Collected data were assessed both quantitatively and qualitatively. Findings: Backed up with statistical tests, the results showed a reduction in student absences, higher student satisfaction rate, and higher grades in the courses. Furthermore, our approach allowed students to deliver a product in a short period, representing a possibility of adoption of BDD due to their successful learning experience. Finally, we aim to foster a discussion of appropriate teaching methods of software testing.	Software testing;Computer science;Software design;Software quality;Tools;Proposals;Task analysis;Software Testing;Student Learning Experience;Software Engineering Education;course Project;Agile Software Development; Software testing; Computer science; Software design; Software quality; Tools; Proposals; Task analysis; Software Testing; Student Learning Experience; Software Engineering Education; course Project; Agile Software Development	Rocha, Fabio Gomes; Souza, Layse Santos; Silva, Thiciane Suely; Rodriguez, Guillermo	2021 IEEE Global Engineering Education Conference (EDUCON)	https://doi.org/10.1109/EDUCON46332.2021.9453916		1116-1125	"""@INPROCEEDINGS{9453916,
    author = ""Rocha, Fabio Gomes and Souza, Layse Santos and Silva, Thiciane Suely and Rodriguez, Guillermo"",
    booktitle = ""2021 IEEE Global Engineering Education Conference (EDUCON)"",
    title = ""Enhancing the Student Learning Experience by Adopting TDD and BDD in Course Projects"",
    year = ""2021"",
    volume = """",
    number = """",
    pages = ""1116-1125"",
    abstract = ""A demonstration of the application and contribution of Test-Driven Development (TDD) and Behavior-Driven Development (BDD) in the student learning experience in the context of a Software Engineering course. Background: Software testing is an activity for ensuring software quality. Although teaching testing rigorously to students is a priority in academia, undergraduate students often encounter difficulties performing testing tasks effectively. Intended Outcomes: To increase satisfaction rate and course grades, and reduce delivery time. Application Design: We experimented with the Software Engineering Laboratory (LES) course of a Private University in the Bachelor of Computer Science and Information Systems courses. This experiment corroborated the learning difficulties of students. Collected data were assessed both quantitatively and qualitatively. Findings: Backed up with statistical tests, the results showed a reduction in student absences, higher student satisfaction rate, and higher grades in the courses. Furthermore, our approach allowed students to deliver a product in a short period, representing a possibility of adoption of BDD due to their successful learning experience. Finally, we aim to foster a discussion of appropriate teaching methods of software testing."",
    keywords = ""Software testing;Computer science;Software design;Software quality;Tools;Proposals;Task analysis;Software Testing;Student Learning Experience;Software Engineering Education;course Project;Agile Software Development"",
    doi = ""10.1109/EDUCON46332.2021.9453916"",
    ISSN = ""2165-9567"",
    month = ""April""
}
"""	Included	Included	new_screen			2	Scopus Signed In		Enhancing the Student Learning Experience by Adopting TDD and BDD in Course Projects	https://ieeexplore.ieee.org/document/9453916	IEEE	nan; References
3	Behave	How to Evaluate BDD Scenarios' Quality?	A scenario from the Behavior-driven development (BDD) practice is a known format to represent acceptance tests in agile methodologies, communicating assumptions and expectations by expressing the details that result from the conversations between customers and developers. We believe that this formalization of behavior need to be of good quality to avoid known requirement problems that arise from bad documentation, such as incomplete, underspecified and inconsistent requirements. However, there are only informal guidelines to guide practitioners on their BDD scenarios' elaboration and quality evaluations. To address this lack of guidance, we define a set of quality attributes and propose a question-based checklist to assist BDD scenarios' quality evaluations. [Methods] The quality attributes were identified from an interview-based study with 18 practitioners. In this study, practitioners shared their interpretations on an initial set of literature-informed quality attributes and their own personal evaluation criteria. We consolidated both in a single list of newly redefined attributes, used in the definition of our proposed checklist. We believe that our newly re-defined quality attributes and question-based checklist can enhance the existing guidelines and practitioners' ability to evaluate BDD scenario's quality by providing them with an standard guideline for scenarios' refinement conversations.	behavior-driven development;  checklist;  documentation;  empirical study;  quality; behavior-driven development, checklist, documentation, empirical study, quality	Oliveira, Gabriel; Marczak, Sabrina; Moralles, Cassiano	SBES '19: Proceedings of the XXXIII Brazilian Symposium on Software Engineering	https://doi.org/10.1145/3350768.3351301		481-490	"""@inproceedings{10.1145/3350768.3351301,
    author = ""Oliveira, Gabriel and Marczak, Sabrina and Moralles, Cassiano"",
    title = ""How to Evaluate BDD Scenarios' Quality?"",
    year = ""2019"",
    isbn = ""9781450376518"",
    publisher = ""Association for Computing Machinery"",
    address = ""New York, NY, USA"",
    url = ""https://doi.org/10.1145/3350768.3351301"",
    doi = ""10.1145/3350768.3351301"",
    abstract = ""A scenario from the Behavior-driven development (BDD) practice is a known format to represent acceptance tests in agile methodologies, communicating assumptions and expectations by expressing the details that result from the conversations between customers and developers. We believe that this formalization of behavior need to be of good quality to avoid known requirement problems that arise from bad documentation, such as incomplete, underspecified and inconsistent requirements. However, there are only informal guidelines to guide practitioners on their BDD scenarios' elaboration and quality evaluations. To address this lack of guidance, we define a set of quality attributes and propose a question-based checklist to assist BDD scenarios' quality evaluations. [Methods] The quality attributes were identified from an interview-based study with 18 practitioners. In this study, practitioners shared their interpretations on an initial set of literature-informed quality attributes and their own personal evaluation criteria. We consolidated both in a single list of newly redefined attributes, used in the definition of our proposed checklist. We believe that our newly re-defined quality attributes and question-based checklist can enhance the existing guidelines and practitioners' ability to evaluate BDD scenario's quality by providing them with an standard guideline for scenarios' refinement conversations."",
    booktitle = ""Proceedings of the XXXIII Brazilian Symposium on Software Engineering"",
    pages = ""481-490"",
    numpages = ""10"",
    keywords = ""behavior-driven development, checklist, documentation, empirical study, quality"",
    location = ""Salvador, Brazil"",
    series = ""SBES '19""
}
"""	Included	Included	new_screen			2	Scopus Signed In		How to Evaluate BDD Scenarios' Quality?	https://dl.acm.org/doi/10.1145/3350768.3351301	Association for Computing Machinery	nan; References
4	Behave	Implementing Behavior Driven Development in an Open Source ERP	A typical problem in Software Engineering is how to guarantee that all system's requirements are correctly implemented through source code. Traditionally, requirement tracing is a manual task comprised of keeping links from requirements to source code, going through different modeling artifacts, including models. However, these techniques cannot guarantee that requirements are always correctly implemented by source code. Aiming at solving this problem, Behavior-Driven Development (BDD) is a specification technique that automatically checks if all functional requirements are treated properly by source code through the connection of the textual description of requirements to automated tests. Given that for Enterprise Information Systems, requirements are usually identified by analyzing business process models, and these processes are implemented through workflows, connecting workflows to automated tests through BDD specifications can provide automated requirements traceability. The aim of this paper is to briefly present this proposal and show how it was implemented for the open source ERP5 system.	Behavior Driven Development; Automated Tests; ERP	de Carvalho, Rogerio Atem; de Carvalho e Silva, Fernando Luiz; Manh{\~a}es, Rodrigo Soares; de Oliveira, Gabriel Lima	Enterprise Information Systems of the Future	https://doi.org/10.1007/978-3-642-36611-6_22		242--249	"""@InProceedings{10.1007/978-3-642-36611-6_22,
    author = ""de Carvalho, Rogerio Atem and de Carvalho e Silva, Fernando Luiz and Manh{\\textasciitilde a}es, Rodrigo Soares and de Oliveira, Gabriel Lima"",
    editor = ""Poels, Geert"",
    title = ""Implementing Behavior Driven Development in an Open Source ERP"",
    booktitle = ""Enterprise Information Systems of the Future"",
    year = ""2013"",
    publisher = ""Springer Berlin Heidelberg"",
    address = ""Berlin, Heidelberg"",
    pages = ""242--249"",
    abstract = ""A typical problem in Software Engineering is how to guarantee that all system's requirements are correctly implemented through source code. Traditionally, requirement tracing is a manual task comprised of keeping links from requirements to source code, going through different modeling artifacts, including models. However, these techniques cannot guarantee that requirements are always correctly implemented by source code. Aiming at solving this problem, Behavior-Driven Development (BDD) is a specification technique that automatically checks if all functional requirements are treated properly by source code through the connection of the textual description of requirements to automated tests. Given that for Enterprise Information Systems, requirements are usually identified by analyzing business process models, and these processes are implemented through workflows, connecting workflows to automated tests through BDD specifications can provide automated requirements traceability. The aim of this paper is to briefly present this proposal and show how it was implemented for the open source ERP5 system."",
    isbn = ""978-3-642-36611-6""
}
"""	Included	Included	new_screen			2	Springer Link		Implementing behavior driven development in an open source ERP	https://link.springer.com/chapter/10.1007/978-3-642-36611-6_22	Springer Berlin Heidelberg	nan; References
5	Behave	Business Language Driven Development: Joining business process models to automated tests	A typical problem in Software Engineering is how to guarantee that every system requirement is correctly implemented by source code. Many techniques were proposed, mostly based on taking notes of relationships between requirements and code in modeling and documenting artifacts. However, these techniques cannot guarantee that the artifacts are always synchronized with source code. Aiming at solving this problem, Behavior-Driven Development (BDD) is a specification technique that automatically checks that all functional requirements are treated properly by source code, through connecting the textual description of requirements to automated tests. Nevertheless, in some software development areas, such as Enterprise Information Systems (EIS), requirements are usually identified by analyzing business process models - which use graphical notations of the underlying processes logic. Therefore, the aim of this paper is to present Business Language Driven Development (BLDD), a method that aims to extend BDD, by connecting business process models directly to automated tests, thus guaranteeing that requirements are properly covered by code.	Behavior Driven Development; Business Process Modeling; Requirements Engineering; Enterprise Information Systems	Rogerio Atem De Carvalho; Fernando Luiz De Carvalho e Silva; R.S. Manhaes	Nucleo de Pesquisa em Sistemas de Informacao (NSI)	https://www.researchgate.net/publication/290580324_Business_Language_Driven_Development_Joining_business_process_models_to_automated_tests		16	"""nan"""	Included	Included	new_screen			2	Google Scholar		Business Language Driven Development: Joining business process models to automated tests	https://www.researchgate.net/publication/290580324_Business_Language_Driven_Development_Joining_business_process_models_to_automated_tests	Nucleo de Pesquisa em Sistemas de Informacao (NSI)	
6	Behave	Test Automation using Selenium Webdriver 3.0 with C#	About the Book Test Automation using Selenium WebDriver with C#, is the latest book released on Selenium 3.0 using C# as a programming language. This Selenium book has been designed with the objectives of simplicity and ease of understanding. After the huge success of author Vaibhav Mittal and Navneesh Gargs Test Automation books on Selenium with Java, UFT and Microsoft Coded UI this book follows a similar step by step approach to Install, configure and design automation framework using Selenium WebDriver using Visual Studio 2017 and its components. Who is this book for? This book is recommended both for those who are beginning to learn test automation (using Selenium WebDriver) and for advanced automation users. It follows a unique training based approach instead of a regular textbook approach. Using a step by step approach, it guides the students through the exercises using pictorial snapshots. It includes many practical examples and issues which most of the automation testers encounter in day-to-day automation. These experiences will give you an insight into what challenges you could face with automation in the real world. Practical examples cover how to use most of the features within Selenium WebDriver using Visual Studio 2017. No Programming Background? A major fear amongst functional testers who want to learn Selenium is of programming language and coding. As a part of this, we will cover just enough basics of C# programming language that will give the readers the confidence to use Selenium WebDriver. Integrations Covered This book covers Selenium Webdriver integration with independent components to be installed like Microsoft Visual Studio 2017, Katalon, Extent Report, VSTS (Continuous Integration tool) and Specflow (Behaviour Driven Development). We will cover step by step installation, configuration and use of each of these components. Those want to know about Cross Browser testing, it covers how to use Selenium WebDriver to run on IE, Firefox and Chrome browsers. It also covers aspects of Continuous Integration tool from Microsoft (VSTS) so that Selenium WebDriver scripts can be integrated with the development environment and run on nightly builds.		Mittal, Vaibhav; Garg, Navneesh	Test Automation using Selenium Webdriver 3.0 with C#	https://doi.org/10.5555/3299227			"""@book{10.5555/3299227,
    author = ""Mittal, Vaibhav and Garg, Navneesh"",
    title = ""Test Automation using Selenium Webdriver 3.0 with C\#"",
    year = ""2018"",
    isbn = ""0992293553"",
    publisher = ""AdactIn Group Pty Limited"",
    address = ""Parramatta, NSW, AUS"",
    abstract = ""About the Book Test Automation using Selenium WebDriver with C\#, is the latest book released on Selenium 3.0 using C\# as a programming language. This Selenium book has been designed with the objectives of simplicity and ease of understanding. After the huge success of author Vaibhav Mittal and Navneesh Gargs Test Automation books on Selenium with Java, UFT and Microsoft Coded UI this book follows a similar step by step approach to Install, configure and design automation framework using Selenium WebDriver using Visual Studio 2017 and its components. Who is this book for? This book is recommended both for those who are beginning to learn test automation (using Selenium WebDriver) and for advanced automation users. It follows a unique training based approach instead of a regular textbook approach. Using a step by step approach, it guides the students through the exercises using pictorial snapshots. It includes many practical examples and issues which most of the automation testers encounter in day-to-day automation. These experiences will give you an insight into what challenges you could face with automation in the real world. Practical examples cover how to use most of the features within Selenium WebDriver using Visual Studio 2017. No Programming Background? A major fear amongst functional testers who want to learn Selenium is of programming language and coding. As a part of this, we will cover just enough basics of C\# programming language that will give the readers the confidence to use Selenium WebDriver. Integrations Covered This book covers Selenium Webdriver integration with independent components to be installed like Microsoft Visual Studio 2017, Katalon, Extent Report, VSTS (Continuous Integration tool) and Specflow (Behaviour Driven Development). We will cover step by step installation, configuration and use of each of these components. Those want to know about Cross Browser testing, it covers how to use Selenium WebDriver to run on IE, Firefox and Chrome browsers. It also covers aspects of Continuous Integration tool from Microsoft (VSTS) so that Selenium WebDriver scripts can be integrated with the development environment and run on nightly builds.""
}
"""	Excluded	Excluded	new_screen			2	ACM		Test Automation Using Selenium Webdriver 3.0 with C#	https://dl.acm.org/doi/abs/10.5555/3299227	AdactIn Group Pty Limited	nan; Keywords; References; Pages
7	Behave	Bridging the Gap between Requirements Modeling and Behavior-Driven Development	Acceptance criteria (AC) are implementation agnostic conditions that a system must meet to be consistent with its requirements and be accepted by its stakeholders. Each acceptance criterion is typically expressed as a natural-language statement with a clear pass or fail outcome. Writing AC is a tedious and error-prone activity, especially when the requirements specifications evolve and there are different analysts and testing teams involved. Analysts and testers must iterate multiple times to ensure that AC are understandable and feasible, and accurately address the most important requirements and workflows of the system being developed. In many cases, analysts express requirements through models, along with natural language, typically in some variant of the UML. AC must then be derived by developers and testers from such models. In this paper, we bridge the gap between requirements models and AC by providing a UML-based modeling methodology and an automated solution to generate AC. We target AC in the form of Behavioral Specifications in the context of Behavioral-Driven Development (BDD), a widely used agile practice in many application domains. More specially we target the well-known Gherkin language to express AC, which then can be used to generate executable test cases. We evaluate our modeling methodology and AC generation solution through an industrial case study in the financial domain. Our results suggest that (1) our methodology is feasible to apply in practice, and (2) the additional modeling effort required by our methodology is outweighed by the benefits the methodology brings in terms of automated and systematic AC generation and improved model precision.	Software testing;BDD;modeling;requirements engineering;text generation;Gherkin;FinTech; Software testing; BDD; modeling; requirements engineering; text generation; Gherkin; FinTech	Alferez, Mauricio; Pastore, Fabrizio; Sabetzadeh, Mehrdad; Briand, Lionel; Riccardi, Jean-Richard	2019 ACM/IEEE 22nd International Conference on Model Driven Engineering Languages and Systems (MODELS)	https://doi.org/10.1109/MODELS.2019.00008	"1.P. Ammann and J. Offutt, Introduction to software testing, Cambridge University Press, 2016. CrossRef  Google Scholar; 2.M. Wynne and A. Hellesoy, The Cucumber Book: Behaviour-Driven Development for Testers and Developers, Pragmatic Bookshelf, 2017. Google Scholar; 3.""OMG unified modeling language (OMG UML). version 2.5"", Object Management Group Inc., 2015,  [online]  Available: http://www.omg.org/specIUML/2.5/. Google Scholar; 4.Clearstream services SA,  [online]  Available: https://www.clearstream.com. Google Scholar; 5.""Target2-Securities. User detailed functional specifications. v3.0"", European Central Bank, March 2018,  [online]  Available: https://www.ecb.europa.eu/paym/t2s/html/index.en.html. Google Scholar; 6.C. Larman, Applying UML and Patterns: An Introduction to Object-Oriented Analysis and Design and the Unified Process, Prentice Hall Professional, 2002. Google Scholar; 7.M. Alferez, F. Pastore, M. Sabetzadeh, L. C. Briand and J.-R. Riccardi, Bridging the gap between requirements modeling and behavior-driven development supplementary materials, 2019,  [online]  Available: http://hdl.handle.net/10993/39710. Google Scholar; 8.Enterprise architect,  [online]  Available: https://sparxsystems.com/products/ea/. Google Scholar; 9.T. H. Cormen, C. E. Leiserson, R. L. Rivest and C. Stein, Introduction to Algorithms, MIT Press, 2009. Google Scholar; 10.M. Shirole and R. Kumar, ""UML behavioral model based test case generation: a survey"", ACM SIGSOFT Software Engineering Notes, vol. 38, no. 4, pp. 1-13, 2013. CrossRef  Google Scholar; 11.A. Groce and W. Visser, ""Heuristic model checking for java programs"" in SPIN ser. Lecture Notes in Computer Science, Springer, vol. 2318, pp. 242-245, 2002. CrossRef  Google Scholar; 12.C. Wang, F. Pastore and L. Briand, ""Automated generation of constraints from use case specifications to support system testing"", 2018 IEEE 11 th International Conference on Software Testing Verification and Validation (ICST), pp. 23-33, April 2018. View Article  Google Scholar; 13.C. Wang, F. Pastore and L. C. Briand, ""Automated generation of constraints from use case specifications to support system testing"", ICST. IEEE Computer Society, pp. 23-33, 2018. View Article  Google Scholar; 14.A. Orso and G. Rothermel, ""Software testing: A research travelogue (2000-2014)"", Proceedings of the on Future of Software Engineering ser. FOSE 2014, pp. 117-132, 2014. CrossRef  Google Scholar; 15.S. Anand, E. K. Burke, T. Y. Chen, J. Clark, M. B. Cohen, W. Grieskamp, et al., ""An orchestrated survey of methodologies for automated software test case generation"", J. Syst. Softw., vol. 86, no. 8, pp. 1978-2001, Aug. 2013. CrossRef  Google Scholar; 16.M. J. E. Cuaresma, J. J. Gutierrez, M. Mejias, G. Aragon, I. M. Ramos, J. T. Valderrama, et al., ""An overview on test generation from functional requirements"", Journal of Systems and Software, vol. 84, no. 8, pp. 1379-1393, 2011. Google Scholar; 17.A. C. Dias Neto, R. Subramanyan, M. Vieira and G. H. Travassos, ""A survey on model-based testing approaches: A systematic review"", Proceedings of the 1st ACM International Workshop on Empirical Assessment of Software Engineering Languages and Technologies: Held in Conjunction with the 22Nd IEEE/ACM International Conference on Automated Software Engineering (ASE) 2007 ser. WEASELTech'07, pp. 31-36, 2007. CrossRef  Google Scholar; 18.A. Nayak and D. Samanta, ""Synthesis of test scenarios using UML activity diagrams"", Software and System Modeling, vol. 10, no. 1, pp. 63-89, 2011. CrossRef  Google Scholar; 19.D. Kundu, M. Sarma and D. Samanta, ""A uml model-based approach to detect infeasible paths"", J. Syst. Softw., vol. 107, no. C, pp. 71-92, Sep. 2015. CrossRef  Google Scholar; 20.C. Sun, Y. Zhao, L. Pan, X. He and D. Towey, ""A transformation-based approach to testing concurrent programs using UML activity diagrams"", Softw. Pract. Exper., vol. 46, no. 4, pp. 551-576, 2016. CrossRef  Google Scholar; 21.V. Arora, R. Bhatia and M. Singh, ""Synthesizing test scenarios in uml activity diagram using a bio-inspired approach"", Comput. Lang. Syst. Struct., vol. 50, no. C, pp. 1-19, Dec. 2017. CrossRef  Google Scholar; 22.C. Wang, F. Pastore, A. Goknil, L. C. Briand and M. Z. Z. Iqbal, ""Automatic generation of system test cases from use case specifications"", Proceedings of the 2015 International Symposium on Software Testing and Analysis ISSTA 2015, pp. 385-396, July 12-17, 2015, 2015. CrossRef  Google Scholar; 23.G. Carvalho, D. Falcao, F. Barros, A. Sampaio, A. Mota, L. Motta, et al., ""NAT2TEST SCR: Test case generation from natural language requirements based on SCR specifications"", Science of Computer Programming, vol. 95, no. P3, pp. 275-297, Dec. 2014. CrossRef  Google Scholar; 24.T. Yue, S. Ali and M. Zhang, ""Rtcm: A natural language based automated and practical test case generation framework"", Proceedings of International Symposium on Software Testing and Analysis ser. ISSTA 2015, pp. 397-408, 2015. CrossRef  Google Scholar; 25.E. Sarmiento, J. C. Leite, E. Almentero and G. S. Alzamora, ""Test scenario generation from natural language requirements descriptions based on petri-nets"", Electronic Notes in Theoretical Computer Science, vol. 329, pp. 123-148, 2016. CrossRef  Google Scholar"	239-249	"""@INPROCEEDINGS{8906976,
    author = ""Alferez, Mauricio and Pastore, Fabrizio and Sabetzadeh, Mehrdad and Briand, Lionel and Riccardi, Jean-Richard"",
    booktitle = ""2019 ACM/IEEE 22nd International Conference on Model Driven Engineering Languages and Systems (MODELS)"",
    title = ""Bridging the Gap between Requirements Modeling and Behavior-Driven Development"",
    year = ""2019"",
    volume = """",
    number = """",
    pages = ""239-249"",
    abstract = ""Acceptance criteria (AC) are implementation agnostic conditions that a system must meet to be consistent with its requirements and be accepted by its stakeholders. Each acceptance criterion is typically expressed as a natural-language statement with a clear pass or fail outcome. Writing AC is a tedious and error-prone activity, especially when the requirements specifications evolve and there are different analysts and testing teams involved. Analysts and testers must iterate multiple times to ensure that AC are understandable and feasible, and accurately address the most important requirements and workflows of the system being developed. In many cases, analysts express requirements through models, along with natural language, typically in some variant of the UML. AC must then be derived by developers and testers from such models. In this paper, we bridge the gap between requirements models and AC by providing a UML-based modeling methodology and an automated solution to generate AC. We target AC in the form of Behavioral Specifications in the context of Behavioral-Driven Development (BDD), a widely used agile practice in many application domains. More specially we target the well-known Gherkin language to express AC, which then can be used to generate executable test cases. We evaluate our modeling methodology and AC generation solution through an industrial case study in the financial domain. Our results suggest that (1) our methodology is feasible to apply in practice, and (2) the additional modeling effort required by our methodology is outweighed by the benefits the methodology brings in terms of automated and systematic AC generation and improved model precision."",
    keywords = ""Software testing;BDD;modeling;requirements engineering;text generation;Gherkin;FinTech"",
    doi = ""10.1109/MODELS.2019.00008"",
    ISSN = """",
    month = ""Sep.""
}
"""	Included	Included	new_screen			2	Scopus Signed In		Bridging the Gap between Requirements Modeling and Behavior-Driven Development	https://ieeexplore.ieee.org/document/8906976	IEEE	
8	Behave	Design and validation of a C++ code generator from Abstract State Machines specifications	According to best practices of model-driven engineering, the implementation of a system should be obtained from its model through a systematic model-to-code transformation. We present in this paper a methodology supported by the Asm2C++ tool, which allows the users to generate C++ code from abstract state machine models. Thanks to Asm2C++, the implementation is generated in a seamless manner with an assurance of potential bug freeness of the generated code. Following the same approach, model-based testing suggests deriving also (unit) tests from abstract models. We extend the Asm2C++ tool such that it can automatically produce unit tests for the generated code. Abstract test sequences, either generated randomly or through model checking, are translated to concrete C++ unit tests using the Boost library. In a similar manner, also, scenarios are generated in a behavior-driven development (BDD) approach. To guarantee the correctness of the transformation process, we define a mechanism to test the correctness of the model-to-code transformation with respect to two main criteria: syntactical correctness and semantic correctness, which is based on the definition of conformance between the specification and the code. Using this approach, we have devised a process able to test the generated code by reusing unit tests. The process has been used to validate our model-to-code transformations.	Automatic programming; Automatic test pattern generation; C++ (programming language); Cesium; Cosine transforms; Semantics; Specifications; Systems analysis; Abstract state machines; Automatic code generations; Model-driven Engineering; transformation validation; Unit tests; Model checking; Automatic programming;  Automatic test pattern generation;  C++ (programming language);  Cesium;  Cosine transforms;  Semantics;  Specifications;  Systems analysis;  Abstract state machines;  Automatic code generations;  Model-driven Engineering;  transformation validation;  Unit tests;  Model checking	Bonfanti, Silvia; Gargantini, Angelo; Mashkoor, Atif	Journal of Software: Evolution and Process	https://doi.org/10.1002/smr.2205			"""@ARTICLE{Bonfanti2020,
    author = ""Bonfanti, Silvia and Gargantini, Angelo and Mashkoor, Atif"",
    title = ""Design and validation of a C++ code generator from Abstract State Machines specifications"",
    year = ""2020"",
    journal = ""Journal of Software: Evolution and Process"",
    volume = ""32"",
    number = ""2"",
    doi = ""10.1002/smr.2205"",
    url = ""https://www.scopus.com/inward/record.uri?eid=2-s2.0-85075467384\&doi=10.1002\%2fsmr.2205\&partnerID=40\&md5=604bc3ff58c979a5f9d8254716d26025"",
    affiliations = ""Department of Management, Information and Production Engineering, University of Bergamo, Bergamo, Italy; Software Competence Center Hagenberg, Hagenberg, Austria; Institute for Software Systems Engineering, Johannes Kepler University, Linz, Austria"",
    abstract = ""According to best practices of model-driven engineering, the implementation of a system should be obtained from its model through a systematic model-to-code transformation. We present in this paper a methodology supported by the Asm2C++ tool, which allows the users to generate C++ code from abstract state machine models. Thanks to Asm2C++, the implementation is generated in a seamless manner with an assurance of potential bug freeness of the generated code. Following the same approach, model-based testing suggests deriving also (unit) tests from abstract models. We extend the Asm2C++ tool such that it can automatically produce unit tests for the generated code. Abstract test sequences, either generated randomly or through model checking, are translated to concrete C++ unit tests using the Boost library. In a similar manner, also, scenarios are generated in a behavior-driven development (BDD) approach. To guarantee the correctness of the transformation process, we define a mechanism to test the correctness of the model-to-code transformation with respect to two main criteria: syntactical correctness and semantic correctness, which is based on the definition of conformance between the specification and the code. Using this approach, we have devised a process able to test the generated code by reusing unit tests. The process has been used to validate our model-to-code transformations. (c) 2019 John Wiley \& Sons, Ltd."",
    author_keywords = ""abstract state machine; automatic code generation; C++; model-driven engineering; transformation validation; unit tests generation"",
    keywords = ""Automatic programming; Automatic test pattern generation; C++ (programming language); Cesium; Cosine transforms; Semantics; Specifications; Systems analysis; Abstract state machines; Automatic code generations; Model-driven Engineering; transformation validation; Unit tests; Model checking"",
    correspondence_address = ""S. Bonfanti; Department of Management, Information and Production Engineering, University of Bergamo, Bergamo, Italy; email: silvia.bonfanti@unibg.it"",
    publisher = ""John Wiley and Sons Ltd"",
    issn = ""20477481"",
    language = ""English"",
    abbrev_source_title = ""J. Softw. Evol. Process"",
    type = ""Conference paper"",
    publication_stage = ""Final"",
    source = ""Scopus"",
    note = ""Cited by: 23; All Open Access, Green Open Access""
}
"""	Excluded	Excluded	new_screen			2	Scopus Signed In		Design and validation of a C++ code generator from Abstract State Machines specifications	https://www.scopus.com/record/display.uri?eid=2-s2.0-85075467384&origin=resultslist&sort=plf-f&src=s&sid=57723f09ff9f392a10dfff955495a963&sot=b&sdt=b&s=TITLE-ABS-KEY%28design+and+validation+of+a+c%2B%2B+code+generator+from+abstract+state+machines+specifications%29&sl=104&sessionSearchId=57723f09ff9f392a10dfff955495a963&relpos=0	John Wiley and Sons Ltd	nan; References; Pages
9	Behave	An optimized algorithm on distributed network node data access path based on behavior drive model	According to different node data access objects, and based on the idea of behavior-driven development, an interface-oriented node data access tool is designed and implemented. The tool mainly implements an executable node data access tool that is based on MFC, and writes a set of Win32 console application, which improves the node data automation access scripts and encapsulates the module interfaces, thus improving the distributed network data access speed.	Algorithms; Distributed computer systems; Manufacture; Peer to peer networks; Cascading WPP; Distributed systems; Drive development; Node access; P2P; Digital storage; Algorithms;  Distributed computer systems;  Manufacture;  Peer to peer networks;  Cascading WPP;  Distributed systems;  Drive development;  Node access;  P2P;  Digital storage	Jiang, Wu Xue; Hu, Xuan Zi; Wang, Shi; Liang, Yan	Applied Mechanics and Materials	https://doi.org/10.4028/www.scientific.net/AMM.687-691.3066		3066 - 3069	"""@ARTICLE{Jiang20143066,
    author = ""Jiang, Wu Xue and Hu, Xuan Zi and Wang, Shi and Liang, Yan"",
    editor = ""Z., Lin and H., Hu and Y., Zhang and J., Qiao and J., Xu"",
    title = ""An optimized algorithm on distributed network node data access path based on behavior drive model"",
    year = ""2014"",
    journal = ""Applied Mechanics and Materials"",
    volume = ""687-691"",
    pages = ""3066 - 3069"",
    doi = ""10.4028/www.scientific.net/AMM.687-691.3066"",
    url = ""https://www.scopus.com/inward/record.uri?eid=2-s2.0-84921418651\&doi=10.4028\%2fwww.scientific.net\%2fAMM.687-691.3066\&partnerID=40\&md5=5ce5fbc7a9a5ca303fa9ac49c61e19b0"",
    affiliations = ""Department of Computer Engineering, Dongguan Polytechnic, Dongguan, 523808, Guangdong, China; Department of Computer Engineering, Maoming Polytechnic, Maoming, 525000, Guangdong, China"",
    abstract = ""According to different node data access objects, and based on the idea of behavior-driven development, an interface-oriented node data access tool is designed and implemented. The tool mainly implements an executable node data access tool that is based on MFC, and writes a set of Win32 console application, which improves the node data automation access scripts and encapsulates the module interfaces, thus improving the distributed network data access speed. (c) (2014) Trans Tech Publications, Switzerland."",
    author_keywords = ""Behavior drive development; Cascading WPP; Distributed system; Node access; P2P"",
    keywords = ""Algorithms; Distributed computer systems; Manufacture; Peer to peer networks; Cascading WPP; Distributed systems; Drive development; Node access; P2P; Digital storage"",
    publisher = ""Trans Tech Publications Ltd"",
    issn = ""16609336"",
    isbn = ""978-303835328-7"",
    language = ""English"",
    abbrev_source_title = ""Appl. Mech. Mater."",
    type = ""Conference paper"",
    publication_stage = ""Final"",
    source = ""Scopus"",
    note = ""Cited by: 0; Conference name: 2014 International Conference on Manufacturing Technology and Electronics Applications, ICMTEA 2014; Conference date: 8 November 2014 through 9 November 2014; Conference code: 112049""
}
"""	Excluded	Excluded	new_screen			2	Scopus Signed In		An optimized algorithm on distributed network node data access path based on behavior drive model	https://www.scopus.com/record/display.uri?eid=2-s2.0-84921418651&origin=resultslist&sort=plf-f&src=s&sid=94ae8cbac1d9ae83efe2751652bbb4c7&sot=b&sdt=b&s=TITLE-ABS-KEY%28an+optimized+algorithm+on+distributed+network+node+data+access+path+based+on+behavior+drive+model%29&sl=112&sessionSearchId=94ae8cbac1d9ae83efe2751652bbb4c7&relpos=0	Trans Tech Publications Ltd	nan; References
10	Behave	The new Y Chromosome Haplotype Reference Database	After opening the first version of an internet-accessible worldwide reference database of Y chromosome profiles 14 years ago and six years after the last major relaunch the new YHRD 4.0 repository and website has been rolled-out. By November 2014 about 136k 9-locus haplotypes, among these 84k 17-locus haplotypes, 25k 23-locus haplotypes and 15k Y SNP profiles from 917 sampling locations in 128 countries have been submitted by more than 250 institutes and laboratories. In geographic terms, about 39% of the YHRD samples are from Europe, 32% from Asia, 16% from South America, 6% from North America, 4% from Africa and 2% from Oceania/Australia. Worldwide collaboration is the driving force for the rapid growth of the database and this, in turn, allows the evaluation and implementation of enhanced interpretation tools (variable frequency estimators, LR-based mixture and kinship analysis, Y-SNP-based ancestry assessment).	Database;  Y chromosome;  Haplotype;  Y-STR;  Frequency estimation;  Metapopulation; Database, Y chromosome, Haplotype, Y-STR, Frequency estimation, Metapopulation	Willuweit, Sascha; Roewer, Lutz	Forensic Science International: Genetics	https://www.sciencedirect.com/science/article/pii/S1872497314002749		43-48	"""@article{WILLUWEIT201543,
    author = ""Willuweit, Sascha and Roewer, Lutz"",
    title = ""The new Y Chromosome Haplotype Reference Database"",
    journal = ""Forensic Science International: Genetics"",
    volume = ""15"",
    pages = ""43-48"",
    year = ""2015"",
    note = ""Special Issue: DNA in Forensics 2014"",
    issn = ""1872-4973"",
    doi = ""https://doi.org/10.1016/j.fsigen.2014.11.024"",
    url = ""https://www.sciencedirect.com/science/article/pii/S1872497314002749"",
    keywords = ""Database, Y chromosome, Haplotype, Y-STR, Frequency estimation, Metapopulation"",
    abstract = ""After opening the first version of an internet-accessible worldwide reference database of Y chromosome profiles 14 years ago and six years after the last major relaunch the new YHRD 4.0 repository and website has been rolled-out. By November 2014 about 136k 9-locus haplotypes, among these 84k 17-locus haplotypes, 25k 23-locus haplotypes and 15k Y SNP profiles from 917 sampling locations in 128 countries have been submitted by more than 250 institutes and laboratories. In geographic terms, about 39\% of the YHRD samples are from Europe, 32\% from Asia, 16\% from South America, 6\% from North America, 4\% from Africa and 2\% from Oceania/Australia. Worldwide collaboration is the driving force for the rapid growth of the database and this, in turn, allows the evaluation and implementation of enhanced interpretation tools (variable frequency estimators, LR-based mixture and kinship analysis, Y-SNP-based ancestry assessment).""
}
"""	Excluded	Excluded	new_screen			2	Science Direct		The new Y Chromosome Haplotype Reference Database	https://www.sciencedirect.com/science/article/pii/S1872497314002749	Science Direct	nan; References
11	Behave	Digital forensics as a service: Stepping up the game	After providing Digital Forensics as a Service (DFaaS) implementations to law enforcement agencies for close to a decade, we present our view from an inside-out perspective. We share the lessons learned from an organizational, operational and development perspective in a forensic and legal context. We conclude with our vision on how to bring the DFaaS concept to the next level for both investigative and innovative purposes.	Digital forensics;  Digital forensics as a service;  DFaaS;  Hansken; Digital forensics, Digital forensics as a service, DFaaS, Hansken	{van Beek}, H.M.A.; {van den Bos}, J.; Boztas, A.; {van Eijk}, E.J.; Schramp, R.; Ugen, M.	Forensic Science International: Digital Investigation	https://www.sciencedirect.com/science/article/pii/S2666281720300706		301021	"""@article{VANBEEK2020301021,
    author = ""{van Beek}, H.M.A. and {van den Bos}, J. and Boztas, A. and {van Eijk}, E.J. and Schramp, R. and Ugen, M."",
    title = ""Digital forensics as a service: Stepping up the game"",
    journal = ""Forensic Science International: Digital Investigation"",
    volume = ""35"",
    pages = ""301021"",
    year = ""2020"",
    issn = ""2666-2817"",
    doi = ""https://doi.org/10.1016/j.fsidi.2020.301021"",
    url = ""https://www.sciencedirect.com/science/article/pii/S2666281720300706"",
    keywords = ""Digital forensics, Digital forensics as a service, DFaaS, Hansken"",
    abstract = ""After providing Digital Forensics as a Service (DFaaS) implementations to law enforcement agencies for close to a decade, we present our view from an inside-out perspective. We share the lessons learned from an organizational, operational and development perspective in a forensic and legal context. We conclude with our vision on how to bring the DFaaS concept to the next level for both investigative and innovative purposes.""
}
"""	Excluded	Excluded	new_screen			2	Science Direct		Digital forensics as a service: Stepping up the game	https://www.sciencedirect.com/science/article/pii/S2666281720300706	Elsevier Ltd	nan; References
12	Behave	Behavior-driven development benefits and challenges: reports from an industrial study	Agile approaches arose as a way of addressing some of the main challenges in software development, such as changing requirements, lack of understanding about the system scope, and out-of-sync between code, requirements, and documentation. Studies show that agile projects still suffer from lack of customer support, resulting in difficulties to represent customer needs on requested features. Behavior-Driven Development (BDD) brings a structured way to represent user behaviors and to validate user stories by using an ubiquitous language, shared among everyone involved on the development of the software. The approach allows the creation of scenarios that can be used by the team to share information between different stakeholders, enabling all those players to successfully collaborate and coordinate their work. In this paper, we report on an empirical study conducted with 24 IT professionals with practical experience on BDD. Through this, we identify the perceived benefits and challenges of adopting BDD.	agile development;  behavior-driven development;  empirical study;  grounded theory; agile development, behavior-driven development, empirical study, grounded theory	Pereira, Lauriane; Sharp, Helen; de Souza, Cleidson; Oliveira, Gabriel; Marczak, Sabrina; Bastos, Ricardo	XP '18: Proceedings of the 19th International Conference on Agile Software Development: Companion	https://doi.org/10.1145/3234152.3234167		1-4	"""@inproceedings{10.1145/3234152.3234167,
    author = ""Pereira, Lauriane and Sharp, Helen and de Souza, Cleidson and Oliveira, Gabriel and Marczak, Sabrina and Bastos, Ricardo"",
    title = ""Behavior-driven development benefits and challenges: reports from an industrial study"",
    year = ""2018"",
    isbn = ""9781450364225"",
    publisher = ""Association for Computing Machinery"",
    address = ""New York, NY, USA"",
    url = ""https://doi.org/10.1145/3234152.3234167"",
    doi = ""10.1145/3234152.3234167"",
    abstract = ""Agile approaches arose as a way of addressing some of the main challenges in software development, such as changing requirements, lack of understanding about the system scope, and out-of-sync between code, requirements, and documentation. Studies show that agile projects still suffer from lack of customer support, resulting in difficulties to represent customer needs on requested features. Behavior-Driven Development (BDD) brings a structured way to represent user behaviors and to validate user stories by using an ubiquitous language, shared among everyone involved on the development of the software. The approach allows the creation of scenarios that can be used by the team to share information between different stakeholders, enabling all those players to successfully collaborate and coordinate their work. In this paper, we report on an empirical study conducted with 24 IT professionals with practical experience on BDD. Through this, we identify the perceived benefits and challenges of adopting BDD."",
    booktitle = ""Proceedings of the 19th International Conference on Agile Software Development: Companion"",
    articleno = ""42"",
    numpages = ""4"",
    keywords = ""agile development, behavior-driven development, empirical study, grounded theory"",
    location = ""Porto, Portugal"",
    series = ""XP '18""
}
"""	Included	Included	new_screen			2	Scopus Signed In		Behavior-Driven Development Benefits and Challenges: Reports from an Industrial Study	https://dl.acm.org/doi/10.1145/3234152.3234167	Association for Computing Machinery	nan; References
13	Behave	Legend: an agile DSL toolset for web acceptance testing	Agile development emphasizes collaborations among customers, business analysts, domain experts, developers, and testers. However, the large scale and rapid pace of many agile projects presents challenges during testing activities. Large sets of test artifacts must be comprehensible and available to various stakeholders, traceable to requirements, and easily maintainable as the software evolves. In this paper we describe Legend, a toolset that leverages domain-specific language to streamline functional testing in agile projects. Some key features of the toolset include test template generation from user stories, model-based automation, test inventory synchronization, and centralized test tagging.	Agile Development;  Behavior-Driven Development;  Domain-Specific Languages;  Software Testing;  Test Automation; Agile Development, Behavior-Driven Development, Domain-Specific Languages, Software Testing, Test Automation	King, Tariq M.; Nunez, Gabriel; Santiago, Dionny; Cando, Adam; Mack, Cody	ISSTA 2014: Proceedings of the 2014 International Symposium on Software Testing and Analysis	https://doi.org/10.1145/2610384.2628048		409-412	"""@inproceedings{10.1145/2610384.2628048,
    author = ""King, Tariq M. and Nunez, Gabriel and Santiago, Dionny and Cando, Adam and Mack, Cody"",
    title = ""Legend: an agile DSL toolset for web acceptance testing"",
    year = ""2014"",
    isbn = ""9781450326452"",
    publisher = ""Association for Computing Machinery"",
    address = ""New York, NY, USA"",
    url = ""https://doi.org/10.1145/2610384.2628048"",
    doi = ""10.1145/2610384.2628048"",
    abstract = ""Agile development emphasizes collaborations among customers, business analysts, domain experts, developers, and testers. However, the large scale and rapid pace of many agile projects presents challenges during testing activities. Large sets of test artifacts must be comprehensible and available to various stakeholders, traceable to requirements, and easily maintainable as the software evolves. In this paper we describe Legend, a toolset that leverages domain-specific language to streamline functional testing in agile projects. Some key features of the toolset include test template generation from user stories, model-based automation, test inventory synchronization, and centralized test tagging."",
    booktitle = ""Proceedings of the 2014 International Symposium on Software Testing and Analysis"",
    pages = ""409-412"",
    numpages = ""4"",
    keywords = ""Agile Development, Behavior-Driven Development, Domain-Specific Languages, Software Testing, Test Automation"",
    location = ""San Jose, CA, USA"",
    series = ""ISSTA 2014""
}
"""	Included	Included	new_screen			2	Scopus Signed In		Legend: An Agile DSL Toolset for Web Acceptance Testing	https://dl.acm.org/doi/10.1145/2610384.2628048	Association for Computing Machinery	nan; References
14	Behave	Combining STPA and BDD for safety analysis and verification in agile development	Agile development is in widespread use, even in safety-critical domains. However, there is a lack of an appropriate safety analysis and verification method in agile development. In this poster, we propose the use of Behavior Driven Development for safety verification with System-Theoretic Process Analysis for safety analysis in agile development. It shows a good capability on communication effectiveness through a preliminary controlled experiment.	agile development;  safety verification;  safety-critical systems; agile development, safety verification, safety-critical systems	Wang, Yang; Wagner, Stefan	ICSE '18: Proceedings of the 40th International Conference on Software Engineering: Companion Proceeedings	https://doi.org/10.1145/3183440.3194973		286-287	"""@inproceedings{10.1145/3183440.3194973,
    author = ""Wang, Yang and Wagner, Stefan"",
    title = ""Combining STPA and BDD for safety analysis and verification in agile development"",
    year = ""2018"",
    isbn = ""9781450356633"",
    publisher = ""Association for Computing Machinery"",
    address = ""New York, NY, USA"",
    url = ""https://doi.org/10.1145/3183440.3194973"",
    doi = ""10.1145/3183440.3194973"",
    abstract = ""Agile development is in widespread use, even in safety-critical domains. However, there is a lack of an appropriate safety analysis and verification method in agile development. In this poster, we propose the use of Behavior Driven Development for safety verification with System-Theoretic Process Analysis for safety analysis in agile development. It shows a good capability on communication effectiveness through a preliminary controlled experiment."",
    booktitle = ""Proceedings of the 40th International Conference on Software Engineering: Companion Proceeedings"",
    pages = ""286-287"",
    numpages = ""2"",
    keywords = ""agile development, safety verification, safety-critical systems"",
    location = ""Gothenburg, Sweden"",
    series = ""ICSE '18""
}
"""	Included	Included	new_screen			2	Scopus Signed In		Combining STPA and BDD for Safety Analysis and Verification in Agile Development	https://dl.acm.org/doi/10.1145/3183440.3194973	Association for Computing Machinery	nan; References
15	Behave	Combining STPA and BDD for safety analysis and verification in agile development	Agile development is in widespread use, even in safety-critical domains. However, there is a lack of an appropriate safety analysis and verification method in agile development. In this poster, we propose the use of Behavior Driven Development for safety verification with System-Theoretic Process Analysis for safety analysis in agile development. It shows a good capability on communication effectiveness through a preliminary controlled experiment.	agile development;  safety verification;  safety-critical systems; agile development, safety verification, safety-critical systems	Wang, Yang; Wagner, Stefan	ICSE '18: Proceedings of the 40th International Conference on Software Engineering: Companion Proceeedings	https://doi.org/10.1145/3183440.3194973		286-287	"""@inproceedings{10.1145/3183440.3194973,
    author = ""Wang, Yang and Wagner, Stefan"",
    title = ""Combining STPA and BDD for safety analysis and verification in agile development"",
    year = ""2018"",
    isbn = ""9781450356633"",
    publisher = ""Association for Computing Machinery"",
    address = ""New York, NY, USA"",
    url = ""https://doi.org/10.1145/3183440.3194973"",
    doi = ""10.1145/3183440.3194973"",
    abstract = ""Agile development is in widespread use, even in safety-critical domains. However, there is a lack of an appropriate safety analysis and verification method in agile development. In this poster, we propose the use of Behavior Driven Development for safety verification with System-Theoretic Process Analysis for safety analysis in agile development. It shows a good capability on communication effectiveness through a preliminary controlled experiment."",
    booktitle = ""Proceedings of the 40th International Conference on Software Engineering: Companion Proceeedings"",
    pages = ""286-287"",
    numpages = ""2"",
    keywords = ""agile development, safety verification, safety-critical systems"",
    location = ""Gothenburg, Sweden"",
    series = ""ICSE '18""
}
"""	Excluded	Excluded	new_screen			2	Scopus Signed In		Poster: Combining STPA and BDD for Safety Analysis and Verification in Agile Development	https://dl.acm.org/doi/10.1145/3183440.3194973	Association for Computing Machinery	nan; References
16	Behave	Identifying critical areas for improvement in agile multi-site co-development	Agile processes potentially ease distributed software development by demanding regular communication and self-management of virtual team members. However, being designed for collocated teams, extensions to the regular process need to be made. We investigate critical areas of improvement based on a case of distributed Scrum involving two unaffiliated Austrian IT organizations that collaborate to build software. We identified eight critical areas for improvement originating from interviews, retrospective meetings and an in-depth case analysis. Key suggestions for practice include the establishment of long-lived single-site Scrum teams and the application of Behavior Driven Development (BDD) to make implicit requirement knowledge explicit and transparent to all of the distributed parties.	Engineering; Industrial engineering; Agile software development; Behavior driven development; Distributed software development; Scrum; Software development process; Software design; Engineering;  Industrial engineering;  Agile software development;  Behavior driven development;  Distributed software development;  Scrum;  Software development process;  Software design	Vallon, Raoul; Bayrhammer, Klaus; Strobl, Stefan; Bernhart, Mario; Grechenig, Thomas	ENASE 2013 - Proceedings of the 8th International Conference on Evaluation of Novel Approaches to Software Engineering	https://www.scopus.com/record/display.uri?eid=2-s2.0-84887053861&origin=resultslist&sort=plf-f&src=s&sid=25ad9de13816f2c4530c0a07ebb159e2&sot=b&sdt=b&s=TITLE-ABS-KEY%28identifying+critical+areas+for+improvement+in+agile+multi+site+co+development%29&sl=92&sessionSearchId=25ad9de13816f2c4530c0a07ebb159e2&relpos=0		165 - 172	"""@CONFERENCE{Vallon2013165,
    author = ""Vallon, Raoul and Bayrhammer, Klaus and Strobl, Stefan and Bernhart, Mario and Grechenig, Thomas"",
    title = ""Identifying critical areas for improvement in agile multi-site co-development"",
    year = ""2013"",
    journal = ""ENASE 2013 - Proceedings of the 8th International Conference on Evaluation of Novel Approaches to Software Engineering"",
    pages = ""165 - 172"",
    url = ""https://www.scopus.com/inward/record.uri?eid=2-s2.0-84887053861\&partnerID=40\&md5=3cadced8c751aef28f93e71bfddecc39"",
    affiliations = ""Research Group for Industrial Software, Vienna University of Technology, Vienna, Austria"",
    abstract = ""Agile processes potentially ease distributed software development by demanding regular communication and self-management of virtual team members. However, being designed for collocated teams, extensions to the regular process need to be made. We investigate critical areas of improvement based on a case of distributed Scrum involving two unaffiliated Austrian IT organizations that collaborate to build software. We identified eight critical areas for improvement originating from interviews, retrospective meetings and an in-depth case analysis. Key suggestions for practice include the establishment of long-lived single-site Scrum teams and the application of Behavior Driven Development (BDD) to make implicit requirement knowledge explicit and transparent to all of the distributed parties. Copyright (c) 2013 SCITEPRESS."",
    author_keywords = ""Agile software development; Behavior driven development; Distributed software development; Scrum; Software development process"",
    keywords = ""Engineering; Industrial engineering; Agile software development; Behavior driven development; Distributed software development; Scrum; Software development process; Software design"",
    correspondence_address = ""R. Vallon; Research Group for Industrial Software, Vienna University of Technology, Vienna, Austria; email: raoul.vallon@inso.tuwien.ac.at"",
    isbn = ""978-989856562-4"",
    language = ""English"",
    abbrev_source_title = ""ENASE - Proc. Int. Conf. Eval. Novel Approaches Softw. Eng."",
    type = ""Conference paper"",
    publication_stage = ""Final"",
    source = ""Scopus"",
    note = ""Cited by: 6; Conference name: 8th International Conference on Evaluation of Novel Approaches to Software Engineering, ENASE 2013; Conference date: 4 July 2013 through 6 July 2013; Conference code: 100615""
}
"""	Excluded	Excluded	new_screen			2	Scopus Signed In		Identifying critical areas for improvement in agile multi-site co-development	https://www.scopus.com/record/display.uri?eid=2-s2.0-84887053861&origin=resultslist&sort=plf-f&src=s&sid=25ad9de13816f2c4530c0a07ebb159e2&sot=b&sdt=b&s=TITLE-ABS-KEY%28identifying+critical+areas+for+improvement+in+agile+multi+site+co+development%29&sl=92&sessionSearchId=25ad9de13816f2c4530c0a07ebb159e2&relpos=0		nan; References; Publisher
17	Behave	Quality of software requirements specification in agile projects: A cross-case analysis of six companies	Agile Software Development (ASD) has several limitations concerning its requirements engineering activities. Improving the quality of Software Requirements Specifications (SRSs) in ASD may help to gain a competitive advantage in the software industry. Based on the findings of a Systematic Mapping study, six industrial case studies in different contexts were conducted to investigate and characterize the requirements specification activity in ASD. Data collected from documents, observations, and interviews with software engineers were triangulated, analyzed, and synthesized using Grounded Theory and Meta-Ethnography. The analysis and cross-synthesis of the six case studies resulted in a model describing the phenomenon. This model defines the simplicity and objectivity as essential quality factors of SRSs in ASD. The main factors that affect the SRSs quality in ASD projects are related to their customer-driven nature that leads to prolix SRSs, hindering its understanding from the developer perspective. The emerged model is supported by explanations and provides a deeper understanding of the requirements specification activity in ASD. This creates opportunities for further studies and improvements in SRSs for ASD in industry.	Competition; Formal specification; Requirements engineering; Software design; Agile methods; Agile software development; Competitive advantage; Empirical studies; Industrial case study; Quality of softwares; Requirements specifications; Systematic mapping studies; Quality control; Competition;  Formal specification;  Requirements engineering;  Software design;  Agile methods;  Agile software development;  Competitive advantage;  Empirical studies;  Industrial case study;  Quality of softwares;  Requirements specifications;  Systematic mapping studies;  Quality control	Medeiros, Juliana; Vasconcelos, Alexandre; Silva, Carla; Goulao, Miguel	Journal of Systems and Software	https://doi.org/10.1016/j.jss.2018.04.064		171 - 194	"""@ARTICLE{Medeiros2018171,
    author = ""Medeiros, Juliana and Vasconcelos, Alexandre and Silva, Carla and Goulao, Miguel"",
    title = ""Quality of software requirements specification in agile projects: A cross-case analysis of six companies"",
    year = ""2018"",
    journal = ""Journal of Systems and Software"",
    volume = ""142"",
    pages = ""171 - 194"",
    doi = ""10.1016/j.jss.2018.04.064"",
    url = ""https://www.scopus.com/inward/record.uri?eid=2-s2.0-85046681152\&doi=10.1016\%2fj.jss.2018.04.064\&partnerID=40\&md5=14e8f2ea07d3b4be4141066baabb83f1"",
    affiliations = ""Instituto Federal de Educacao, Ciencia e Tecnologia da Paraiba (IFPB), Brazil; Centro de Informatica, Universidade Federal de Pernambuco (UFPE), Brazil; NOVA LINCS, Faculdade de Ciencias e Tecnologia, Universidade Nova de Lisboa, Portugal"",
    abstract = ""Agile Software Development (ASD) has several limitations concerning its requirements engineering activities. Improving the quality of Software Requirements Specifications (SRSs) in ASD may help to gain a competitive advantage in the software industry. Based on the findings of a Systematic Mapping study, six industrial case studies in different contexts were conducted to investigate and characterize the requirements specification activity in ASD. Data collected from documents, observations, and interviews with software engineers were triangulated, analyzed, and synthesized using Grounded Theory and Meta-Ethnography. The analysis and cross-synthesis of the six case studies resulted in a model describing the phenomenon. This model defines the simplicity and objectivity as essential quality factors of SRSs in ASD. The main factors that affect the SRSs quality in ASD projects are related to their customer-driven nature that leads to prolix SRSs, hindering its understanding from the developer perspective. The emerged model is supported by explanations and provides a deeper understanding of the requirements specification activity in ASD. This creates opportunities for further studies and improvements in SRSs for ASD in industry. (c) 2018 Elsevier Inc."",
    author_keywords = ""Agile methods; Agile Requirements Engineering; Empirical study; Requirements specification"",
    keywords = ""Competition; Formal specification; Requirements engineering; Software design; Agile methods; Agile software development; Competitive advantage; Empirical studies; Industrial case study; Quality of softwares; Requirements specifications; Systematic mapping studies; Quality control"",
    correspondence_address = ""J. Medeiros; Instituto Federal de Educacao, Ciencia e Tecnologia da Paraiba (IFPB), Brazil; email: juliana.medeiros@ifpb.edu.br"",
    publisher = ""Elsevier Inc."",
    issn = ""01641212"",
    coden = ""JSSOD"",
    language = ""English"",
    abbrev_source_title = ""J Syst Software"",
    type = ""Article"",
    publication_stage = ""Final"",
    source = ""Scopus"",
    note = ""Cited by: 30""
}
"""	Excluded	Excluded	new_screen			2	Scopus Signed In		Quality of software requirements specification in agile projects: A cross-case analysis of six companies	https://www.scopus.com/record/display.uri?eid=2-s2.0-85046681152&origin=resultslist&sort=plf-f&src=s&sid=567abe17164af32643ff469eb97b17d7&sot=b&sdt=b&s=TITLE-ABS-KEY%28quality+of+software+requirements+specification+in+agile+projects+a+cross+case+analysis+of+six+companies%29&sl=118&sessionSearchId=567abe17164af32643ff469eb97b17d7&relpos=0	Elsevier Inc	nan; References
18	Behave	Assessing the Effectiveness of Test-Driven Development and Behavior-Driven Development in an Industry Setting	Agile software development deviates from the traditional and plan-based approaches to software engineering as its iterative cycles embrace changes in software requirements. Test-Driven Development (TDD) and Behavior-Driven Development (BDD) are techniques that have been recently adopted by the software industry and have evolved from agile practices. These techniques aim at improving both the quality of the delivered software and the developers' productivity. They are several studies that have been conducted on TDD in both academic and industry settings with however only a few on BDD. While TDD and BDD have both become popular, many organizations and developers still do not understand the differences between these concepts or where they overlap. The aim of this paper is to assess the effectiveness of these two approaches in terms of external code quality, internal code quality and developers' productivity. To understand the weaknesses and strengths of each of these methods, a literature review was first performed. An experiment was then carried out in an industry setting to observe the effectiveness of TDD and BDD on a number of subjects. Our results showed that both techniques indeed increased the external quality of the delivered product. However, a decrease in productivity and internal quality were noted when BDD was used compared to TDD which might be due to the additional steps involved in BDD.	Artificial intelligence; Boolean functions; Computer programming; Computer software selection and evaluation; Image quality; Iterative methods; Productivity; Software quality; Software testing; Agile software development; Behavior-Driven Development; Code coverage; Iterative cycles; Literature reviews; Software industry; Software requirements; Test driven development; Software design; Artificial intelligence;  Boolean functions;  Computer programming;  Computer software selection and evaluation;  Image quality;  Iterative methods;  Productivity;  Software quality;  Software testing;  Agile software development;  Behavior-Driven Development;  Code coverage;  Iterative cycles;  Literature reviews;  Software industry;  Software requirements;  Test driven development;  Software design	Dookhun, Avishek Sharma; Nagowah, Leckraj	Proceedings of 2019 International Conference on Computational Intelligence and Knowledge Economy, ICCIKE 2019	https://doi.org/10.1109/ICCIKE47802.2019.9004328	Santos, E.C.S., Beder, D.M., Penteado, R.A.D.; North, D.(2006)Introducing BDD.Cited 58 times.[Accessed August 2019]http://dannorth.net/introducing-bdd; North, D.(2009)How to Sell BDD to the Business. Skills Matter[Accessed August 2019]https://skillsmatter.com/skillscasts/923-how-tosell-bdd-to-The-business#showModal?modal-signup-complete; Janzen, D.S., Saiedian, H.; Hellmann, T.D., Sharma, A., Ferreira, J., Maurer, F.; Beck, K.(2002)Test Driven Development: By Example.Cited 1665 times.Boston, MA, USA: Addison-Wesley Longman Publishing Co.; Janzen, D., Saiedian, H.; Erdogmus, H., Morisio, M., Torchiano, M.; Munir, H., Wnuk, K., Petersen, K., Moayyed, M.; Cisneros, L.A., Maximiano, M., Reis, C.I., Mera, Q.J.A.An experimental evaluation of itl, tdd and bdd(2018)ICSEA 2018 : The Thirteenth International Conference on Software Engineering Advances.Cited 6 times.; Osherove, R.(2018)Tdd Kata 1-string Calculatorhttp://osherove.com/tdd-kata-1/; Whelan, M.FizzBuzzWhiz Katahttps://github.com/mwhelan/Katas/tree/master/Katas.FizzBuzzWhiz.[Accessed9June2019]; Lopes, J.H.Evaluation of behavior-driven development(2012)Delft, Netherlands; Wynne, M., Hellesoy, A.(2012)The Cucumber Book: Behaviour-Driven Development for Testers and Developers.Cited 108 times.The Pragmatic Bookshelf, [Accessed August 2019] .; Wohlin, P.R., Wesslen, A., Regnell, B., Ohlsson, M., Host, M.(1999)Experimentation in Software Engineering: An Introduction.Cited 2352 times.1st ed., Springer, Ed.; Mccabe, T.J.; Metrics 1.3.6.Cited 2 times.SourceForge[Accessed 7 July 2019] .http://metrics.sourceforge.net/; Patelia, R.M., Vyas, S.A review and analysis on cyclomatic complexity(2014)Oriental Journal of Computer Science &Technology, 7 (3), pp. 382-384.; (2017)Mountainminds GmbH &Co. and KG and Contributors EclEmma 3.1.2 Java Code Coverage for Eclipse[Accessed July 2019] .https://www.eclemma.org/; Gomez, L.A.C.(2018)Analysis of the Impact of Test Based Development Techniques (TDD, BDD and ATDD) to the Software Life Cycle.Cited 3 times.	365 - 370	"""@CONFERENCE{Dookhun2019365,
    author = ""Dookhun, Avishek Sharma and Nagowah, Leckraj"",
    title = ""Assessing the Effectiveness of Test-Driven Development and Behavior-Driven Development in an Industry Setting"",
    year = ""2019"",
    journal = ""Proceedings of 2019 International Conference on Computational Intelligence and Knowledge Economy, ICCIKE 2019"",
    pages = ""365 - 370"",
    doi = ""10.1109/ICCIKE47802.2019.9004328"",
    url = ""https://www.scopus.com/inward/record.uri?eid=2-s2.0-85080882684\&doi=10.1109\%2fICCIKE47802.2019.9004328\&partnerID=40\&md5=cb86f2f2113de1080df50ace3fc61819"",
    affiliations = ""University of Mauritius, Software and Information Systems, Reduit, Mauritius"",
    abstract = ""Agile software development deviates from the traditional and plan-based approaches to software engineering as its iterative cycles embrace changes in software requirements. Test-Driven Development (TDD) and Behavior-Driven Development (BDD) are techniques that have been recently adopted by the software industry and have evolved from agile practices. These techniques aim at improving both the quality of the delivered software and the developers' productivity. They are several studies that have been conducted on TDD in both academic and industry settings with however only a few on BDD. While TDD and BDD have both become popular, many organizations and developers still do not understand the differences between these concepts or where they overlap. The aim of this paper is to assess the effectiveness of these two approaches in terms of external code quality, internal code quality and developers' productivity. To understand the weaknesses and strengths of each of these methods, a literature review was first performed. An experiment was then carried out in an industry setting to observe the effectiveness of TDD and BDD on a number of subjects. Our results showed that both techniques indeed increased the external quality of the delivered product. However, a decrease in productivity and internal quality were noted when BDD was used compared to TDD which might be due to the additional steps involved in BDD. (c) 2019 IEEE."",
    author_keywords = ""BDD; Behavior-Driven Development; code coverage; productivity; quality; TDD; Test-Driven Development"",
    keywords = ""Artificial intelligence; Boolean functions; Computer programming; Computer software selection and evaluation; Image quality; Iterative methods; Productivity; Software quality; Software testing; Agile software development; Behavior-Driven Development; Code coverage; Iterative cycles; Literature reviews; Software industry; Software requirements; Test driven development; Software design"",
    publisher = ""Institute of Electrical and Electronics Engineers Inc."",
    isbn = ""978-172813778-0"",
    language = ""English"",
    abbrev_source_title = ""Proc. Int. Conf. Comput. Intell. Knowl. Econ., ICCIKE"",
    type = ""Conference paper"",
    publication_stage = ""Final"",
    source = ""Scopus"",
    note = ""Cited by: 5; Conference name: 2019 International Conference on Computational Intelligence and Knowledge Economy, ICCIKE 2019; Conference date: 11 December 2019 through 12 December 2019; Conference code: 157936""
}
"""	Included	Included	new_screen			2	Scopus Signed In		Assessing The Effectiveness Of Test-Driven Development and Behavior-Driven Development in an Industry Setting	https://www.scopus.com/record/display.uri?eid=2-s2.0-85080882684&origin=resultslist&sort=r-f&src=s&sid=9b010f9d34f9b613df0e12f6419d6811&sot=b&sdt=b&s=TITLE%28assessing+the+effectiveness+of+test+driven+development+and+behavior+driven+development+in+an+industry+setting%29&sl=116&sessionSearchId=9b010f9d34f9b613df0e12f6419d6811&relpos=0	Institute of Electrical and Electronics Engineers Inc	
19	Behave	The effect of Test-Driven Development and Behavior-Driven Development on Project Success Factors: A Systematic Literature Review Based Study	Agile testing approaches test-driven development (TDD), behavior-driven development (BDD); have gained popularity since the introduction of agile practices. The concept of using these approaches in software projects is to help projects succeed. The effect of TDD and BDD on Project success factors namely, cost, time, and customer satisfaction/external quality, remains an area of investigation. Therefore, this study investigates the results of previously published articles on the effect of TDD and BDD on project success factors. A systematic literature review has been conducted considering articles published between 1999 up to 2020. Thirty-one studies were selected and analyzed. 74.1% of studies are experiments, 25.8% are case studies. 67.7% of these studies were performed in an industrial setting, 29.0% were performed in an academic setting and only one study with 3.22% was mixed academic and industrial settings. The result shows that the TDD and the BDD consume more time and cost compared to traditional testing (TLD). Moreover, the TDD as TLD may not necessarily satisfy the customer unlike the BDD appears that achieve customer satisfaction. Although, when TDD compared to BDD, TDD consumed more time and lower customer acceptance than the BDD.	Boolean functions; Customer satisfaction; Sales; Agile practices; Agile testing; Customer acceptance; Industrial settings; Project success factors; Software project; Systematic literature review; Test driven development; Computer programming; Boolean functions;  Customer satisfaction;  Sales;  Agile practices;  Agile testing;  Customer acceptance;  Industrial settings;  Project success factors;  Software project;  Systematic literature review;  Test driven development;  Computer programming	Abushama, Hisham M.; Alassam, Hanaa Altigani; Elhaj, Fatin A.	Proceedings of: 2020 International Conference on Computer, Control, Electrical, and Electronics Engineering, ICCCEEE 2020	https://doi.org/10.1109/ICCCEEE49695.2021.9429593			"""@CONFERENCE{Abushama2021,
    author = ""Abushama, Hisham M. and Alassam, Hanaa Altigani and Elhaj, Fatin A."",
    editor = ""D., Mahmoud and S., Gomha and A., Osman"",
    title = ""The effect of Test-Driven Development and Behavior-Driven Development on Project Success Factors: A Systematic Literature Review Based Study"",
    year = ""2021"",
    journal = ""Proceedings of: 2020 International Conference on Computer, Control, Electrical, and Electronics Engineering, ICCCEEE 2020"",
    doi = ""10.1109/ICCCEEE49695.2021.9429593"",
    url = ""https://www.scopus.com/inward/record.uri?eid=2-s2.0-85107133513\&doi=10.1109\%2fICCCEEE49695.2021.9429593\&partnerID=40\&md5=d319166df0c75cf75c65ae75f08bf3d1"",
    affiliations = ""University of Khartoum, Faculty of Mathematical Science, Department of Computer Sciences, P.O.BOX 321, Khartoum, Sudan"",
    abstract = ""Agile testing approaches test-driven development (TDD), behavior-driven development (BDD); have gained popularity since the introduction of agile practices. The concept of using these approaches in software projects is to help projects succeed. The effect of TDD and BDD on Project success factors namely, cost, time, and customer satisfaction/external quality, remains an area of investigation. Therefore, this study investigates the results of previously published articles on the effect of TDD and BDD on project success factors. A systematic literature review has been conducted considering articles published between 1999 up to 2020. Thirty-one studies were selected and analyzed. 74.1\% of studies are experiments, 25.8\% are case studies. 67.7\% of these studies were performed in an industrial setting, 29.0\% were performed in an academic setting and only one study with 3.22\% was mixed academic and industrial settings. The result shows that the TDD and the BDD consume more time and cost compared to traditional testing (TLD). Moreover, the TDD as TLD may not necessarily satisfy the customer unlike the BDD appears that achieve customer satisfaction. Although, when TDD compared to BDD, TDD consumed more time and lower customer acceptance than the BDD. (c) 2021 IEEE."",
    author_keywords = ""Agile Testing; Behavior Driven Development; Projects Success Factors; Systematic Literature Review; Test Driven Development; Test Last Development"",
    keywords = ""Boolean functions; Customer satisfaction; Sales; Agile practices; Agile testing; Customer acceptance; Industrial settings; Project success factors; Software project; Systematic literature review; Test driven development; Computer programming"",
    publisher = ""Institute of Electrical and Electronics Engineers Inc."",
    isbn = ""978-172819111-9"",
    language = ""English"",
    abbrev_source_title = ""Proc. of: Int. Conf. Comput., Control, Electr., Electron. Eng., ICCCEEE"",
    type = ""Conference paper"",
    publication_stage = ""Final"",
    source = ""Scopus"",
    note = ""Cited by: 8; Conference name: 2020 International Conference on Computer, Control, Electrical, and Electronics Engineering, ICCCEEE 2020; Conference date: 26 February 2021 through 28 February 2021; Conference code: 169057""
}
"""	Excluded	Excluded	new_screen			2	Scopus Signed In		The effect of Test-Driven Development and Behavior-Driven Development on Project Success Factors: A Systematic Literature Review Based Study	https://www.scopus.com/record/display.uri?eid=2-s2.0-85107133513&origin=resultslist&sort=plf-f&src=s&sid=9f2e4b4a377985d16f30475aa8c1cd5f&sot=b&sdt=b&s=TITLE-ABS-KEY%28the+effect+of+test+driven+development+and+behavior+driven+development+on+project+success+factors+a+systematic+literature+review+based+study%29&sl=154&sessionSearchId=9f2e4b4a377985d16f30475aa8c1cd5f&relpos=0	Institute of Electrical and Electronics Engineers Inc	nan; References; Pages
20	Behave	Behavior driven testing in ALMA telescope calibration software	ALMA software development cycle includes well defined testing stages that involves developers, testers and scientists. We adapted Behavior Driven Development (BDD) to testing activities applied to Telescope Calibration (TELCAL) software. BDD is an agile technique that encourages communication between roles by defining test cases using natural language to specify features and scenarios, what allows participants to share a common language and provides a high level set of automated tests. This work describes how we implemented and maintain BDD testing for TELCAL, the infrastructure needed to support it and proposals to expand this technique to other subsystems.	Automation; Boolean functions; Calibration; High level languages; Software design; Telescopes; Agile; ALMA telescope; Automated test; Calibration softwares; Common languages; Natural languages; Software development cycles; TELCAL; Software testing; Automation;  Boolean functions;  Calibration;  High level languages;  Software design;  Telescopes;  Agile;  ALMA telescope;  Automated test;  Calibration softwares;  Common languages;  Natural languages;  Software development cycles;  TELCAL;  Software testing	Gil, Juan P.; Garces, Mario; Broguiere, Dominique; Shen, Tzu-Chiang	Proceedings of SPIE - The International Society for Optical Engineering	https://doi.org/10.1117/12.2232197			"""@CONFERENCE{Gil2016,
    author = ""Gil, Juan P. and Garces, Mario and Broguiere, Dominique and Shen, Tzu-Chiang"",
    editor = ""G., Chiozzi and J.C., Guzman"",
    title = ""Behavior driven testing in ALMA telescope calibration software"",
    year = ""2016"",
    journal = ""Proceedings of SPIE - The International Society for Optical Engineering"",
    volume = ""9913"",
    doi = ""10.1117/12.2232197"",
    url = ""https://www.scopus.com/inward/record.uri?eid=2-s2.0-85006401169\&doi=10.1117\%2f12.2232197\&partnerID=40\&md5=b01b44b2871f0850ad840bdd209cc3ac"",
    affiliations = ""Atacama Large Milimeter/submilimeter Array, Alonso de Cordova 3107, Santiago, Chile; Institut de Radioastronomie Millimetrique (IRAM), Grenoble, France"",
    abstract = ""ALMA software development cycle includes well defined testing stages that involves developers, testers and scientists. We adapted Behavior Driven Development (BDD) to testing activities applied to Telescope Calibration (TELCAL) software. BDD is an agile technique that encourages communication between roles by defining test cases using natural language to specify features and scenarios, what allows participants to share a common language and provides a high level set of automated tests. This work describes how we implemented and maintain BDD testing for TELCAL, the infrastructure needed to support it and proposals to expand this technique to other subsystems. (c) COPYRIGHT SPIE. Downloading of the abstract is permitted for personal use only."",
    author_keywords = ""Agile; Automation; Behavior driven testing; TELCAL"",
    keywords = ""Automation; Boolean functions; Calibration; High level languages; Software design; Telescopes; Agile; ALMA telescope; Automated test; Calibration softwares; Common languages; Natural languages; Software development cycles; TELCAL; Software testing"",
    correspondence_address = ""J.P. Gil; Atacama Large Milimeter/submilimeter Array, Santiago, Alonso de Cordova 3107, Chile; email: jgil@alma.cl"",
    publisher = ""SPIE"",
    issn = ""0277786X"",
    isbn = ""978-151060205-2"",
    coden = ""PSISD"",
    language = ""English"",
    abbrev_source_title = ""Proc SPIE Int Soc Opt Eng"",
    type = ""Conference paper"",
    publication_stage = ""Final"",
    source = ""Scopus"",
    note = ""Cited by: 0; Conference name: Software and Cyberinfrastructure for Astronomy IV; Conference date: 26 June 2016 through 30 June 2016; Conference code: 125147""
}
"""	Included	Included	new_screen			2	Scopus Signed In		Behavior driven testing in ALMA telescope calibration software	https://www.scopus.com/record/display.uri?eid=2-s2.0-85006401169&origin=resultslist&sort=plf-f&src=s&sid=6cdf37c9f4b4dda07885455c7c95690e&sot=b&sdt=b&s=TITLE-ABS-KEY%28behavior+driven+testing+in+alma+telescope+calibration+software%29&sl=77&sessionSearchId=6cdf37c9f4b4dda07885455c7c95690e&relpos=0	SPIE	nan; References; Pages
21	Behave	Behavior-driven requirements traceability via automated acceptance tests	Although information retrieval advances significantly improved automated traceability tools, their accuracy is still far from 100% and therefore they still need human intervention. Furthermore, despite the demonstrated benefits of traceability, many practitioners find the overhead for its creation and maintenance too high. We propose the Behavior Driven Traceability Method (BDT) that takes a different standpoint on automated traceability: we establish ubiquitous traceability between user story requirements and source code by taking advantage of the automated acceptance tests that are created as part of the Behavior Driven Development process.	Automation; Requirements engineering; Behavior-driven development; Development process; Human intervention; Requirements; Requirements traceability; Traceability; Traceability methods; User stories; Acceptance tests; Automation;  Requirements engineering;  Behavior-driven development;  Development process;  Human intervention;  Requirements;  Requirements traceability;  Traceability;  Traceability methods;  User stories;  Acceptance tests	Lucassen, Garm; Dalpiaz, Fabiano; Van Der Werf, Jan Martijn E.M.; Brinkkemper, Sjaak; Zowghi, DIdar	Proceedings - 2017 IEEE 25th International Requirements Engineering Conference Workshops, REW 2017	https://doi.org/10.1109/REW.2017.84		431 - 434	"""@CONFERENCE{Lucassen2017431,
    author = ""Lucassen, Garm and Dalpiaz, Fabiano and Van Der Werf, Jan Martijn E.M. and Brinkkemper, Sjaak and Zowghi, DIdar"",
    title = ""Behavior-driven requirements traceability via automated acceptance tests"",
    year = ""2017"",
    journal = ""Proceedings - 2017 IEEE 25th International Requirements Engineering Conference Workshops, REW 2017"",
    pages = ""431 - 434"",
    doi = ""10.1109/REW.2017.84"",
    url = ""https://www.scopus.com/inward/record.uri?eid=2-s2.0-85034638343\&doi=10.1109\%2fREW.2017.84\&partnerID=40\&md5=55fb151a73b47cc8738f10ec74938431"",
    affiliations = ""Utrecht University, Netherlands; University of Technology Sydney, Australia"",
    abstract = ""Although information retrieval advances significantly improved automated traceability tools, their accuracy is still far from 100\% and therefore they still need human intervention. Furthermore, despite the demonstrated benefits of traceability, many practitioners find the overhead for its creation and maintenance too high. We propose the Behavior Driven Traceability Method (BDT) that takes a different standpoint on automated traceability: we establish ubiquitous traceability between user story requirements and source code by taking advantage of the automated acceptance tests that are created as part of the Behavior Driven Development process. (c) 2017 IEEE."",
    author_keywords = ""Automated acceptance tests; Behavior-driven development; Requirements; Traceability; User stories"",
    keywords = ""Automation; Requirements engineering; Behavior-driven development; Development process; Human intervention; Requirements; Requirements traceability; Traceability; Traceability methods; User stories; Acceptance tests"",
    publisher = ""Institute of Electrical and Electronics Engineers Inc."",
    isbn = ""978-153863488-2"",
    language = ""English"",
    abbrev_source_title = ""Proc. - IEEE Int. Requir. Eng. Conf. Workshops, REW"",
    type = ""Conference paper"",
    publication_stage = ""Final"",
    source = ""Scopus"",
    note = ""Cited by: 22; Conference name: 25th IEEE International Requirements Engineering Conference Workshops, REW 2017; Conference date: 4 September 2017 through 8 September 2017; Conference code: 130995""
}
"""	Included	Included	new_screen			2	Scopus Signed In		Behavior-Driven Requirements Traceability via Automated Acceptance Tests	https://www.scopus.com/record/display.uri?eid=2-s2.0-85034638343&origin=resultslist&sort=plf-f&src=s&sid=f0708bb46c08d6a4f91a617708227ae2&sot=b&sdt=b&s=TITLE-ABS-KEY%28behavior+driven+requirements+traceability+via+automated+acceptance+tests%29&sl=87&sessionSearchId=f0708bb46c08d6a4f91a617708227ae2&relpos=0	Institute of Electrical and Electronics Engineers Inc	nan; References
22	Behave	Orchestration of domain specific test languages with a behavior driven development approach	An airplane is composed by many complexes and embedded systems. During the integration testing phase, the design office produces requirements of the targeted system, and the test center produces concrete test procedures to be executed on a test bench. In this context, integration tests are mostly written in natural language and manually executed step by step by a tester. In order to formalize integration tests procedures dedicated to each system with domain specific languages approved by testers, and in order to automatize integration tests, we have introduced agile practices in the integration testing phase. We have chosen a Behavior Driven Development (BDD) approach to orchestrate Domain Specific Test Languages produced for the ACOVAS FUI project.	Embedded systems; Integration; Natural language processing systems; Problem oriented languages; Systems engineering; Testing; Agile practices; Development approach; Domain specific; Domain specific languages; Natural languages; Test benches; Test language; Test procedures; Integration testing; Embedded systems;  Integration;  Natural language processing systems;  Problem oriented languages;  Systems engineering;  Testing;  Agile practices;  Development approach;  Domain specific;  Domain specific languages;  Natural languages;  Test benches;  Test language;  Test procedures;  Integration testing	Bussenot, Robin; Leblanc, Herve; Percebois, Christian	2018 13th System of Systems Engineering Conference, SoSE 2018	https://doi.org/10.1109/SYSOSE.2018.8428788	Sommerville, I.(2010)Software Engineering 9th Ed.Cited 6769 times.USA: Addison-Wesley Publishing Company; Von Bertalanffy, L.(1968)General System Theory, Foundations, Development, Applications.Cited 9499 times.New York: George Braziller; Ata100 and Section HeadingsS. S-tech Entrepriseshttp://www.s-techent.com/ATA100.htm; Fowler, M.Domain-Specific Languages ser Addison-Wesley Signature Series (Fowler)https://books.google.gr/booksid=ri1muolw\YwC; Volter, M., Benz, S., Dietrich, C., Engelmann, B., Helander, M., Kats, L., Visser, E., (...), Wachsmuth, G.DSL engineering designing(2013)Implementing and Using Domain-Specific Languages.Cited 276 times.dslbook.orghttp://dslbook.org; Bussenot, R., Leblanc, H., Percebois, C.; Fowler, M.Language Workbenches: The Killer-app for Domain Specific Languages.Cited 253 times.http://www.martinfowler.com/articles/languageWorkbench.html; XTextItemishttp://www.eclipse.org/Xtext; Visser, E.Spoofax.Cited 2 times.http://strategoxt.org/Spoofax; Meta-programming System.Cited 32 times.Jetbrainshttps://www.jetbrains.com/mps; Campagne, F.The MPS Language Workbench, 1, pp. 2013-2014.FABIEN CAMPAGNE; North, D.(2006)Introducing BDD.Cited 58 times.https://dannorth.net/introducing-bdd; Solis, C., Wang, X.; Manning, C.D., Surdeanu, M., Bauer, J., Finkel, J., Bethard, S.J., McClosky, D.; (2015)The Test Description Language (TDL); Part 1 : Abstract Syntax and Associated Semantics.Cited 3 times.ETSI ES 203 119-1http://www.etsi.org/technologies-clusters/technologies/test-description-language; Ott, A.(2007)System Testing in the Avionics Domain.Cited 14 times.Ph.D. dissertation University of Bremen; Guduvan, A.-R., Waeselynck, H., Wiels, V., Durrieu, G., Fusero, Y., Schieber, M.; Salo, O., Abrahamsson, P.; Manhart, P., Schneider, K.; Smith, M., Kwan, A., Martin, A., Miller, J.; Karlesky, M.J., Bereza, W.I., Erickson, C.B.; Wils, A., Van Baelen, S., Holvoet, T., De Vlaminck, K.; Stalhane, T., Myklebust, T., Hanssen, G.	431 - 437	"""@CONFERENCE{Bussenot2018431,
    author = ""Bussenot, Robin and Leblanc, Herve and Percebois, Christian"",
    title = ""Orchestration of domain specific test languages with a behavior driven development approach"",
    year = ""2018"",
    journal = ""2018 13th System of Systems Engineering Conference, SoSE 2018"",
    pages = ""431 - 437"",
    doi = ""10.1109/SYSOSE.2018.8428788"",
    url = ""https://www.scopus.com/inward/record.uri?eid=2-s2.0-85052337962\&doi=10.1109\%2fSYSOSE.2018.8428788\&partnerID=40\&md5=132c3cbcfd5fbcd0630789c01cb2acb5"",
    affiliations = ""Institut de Recherche en Informatique de Toulouse, 118 Route de Narbonne, Toulouse, 31400, France"",
    abstract = ""An airplane is composed by many complexes and embedded systems. During the integration testing phase, the design office produces requirements of the targeted system, and the test center produces concrete test procedures to be executed on a test bench. In this context, integration tests are mostly written in natural language and manually executed step by step by a tester. In order to formalize integration tests procedures dedicated to each system with domain specific languages approved by testers, and in order to automatize integration tests, we have introduced agile practices in the integration testing phase. We have chosen a Behavior Driven Development (BDD) approach to orchestrate Domain Specific Test Languages produced for the ACOVAS FUI project. (c) 2018 IEEE."",
    keywords = ""Embedded systems; Integration; Natural language processing systems; Problem oriented languages; Systems engineering; Testing; Agile practices; Development approach; Domain specific; Domain specific languages; Natural languages; Test benches; Test language; Test procedures; Integration testing"",
    publisher = ""Institute of Electrical and Electronics Engineers Inc."",
    isbn = ""978-153864876-6"",
    language = ""English"",
    abbrev_source_title = ""Syst. Syst. Eng. Conf., SoSE"",
    type = ""Conference paper"",
    publication_stage = ""Final"",
    source = ""Scopus"",
    note = ""Cited by: 2; Conference name: 13th System of Systems Engineering Conference, SoSE 2018; Conference date: 19 June 2018 through 22 June 2018; Conference code: 138492; All Open Access, Green Open Access""
}
"""	Included	Included	new_screen			2	Scopus Signed In		Orchestration of Domain Specific Test Languages with a Behavior Driven Development approach	https://www.scopus.com/record/display.uri?eid=2-s2.0-85052337962&origin=resultslist&sort=r-f&src=s&sid=0164136b9789690f04b5a5be433d88b7&sot=b&sdt=b&s=TITLE%28orchestration+of+domain+specific+test+languages+with+a+behavior+driven+development+approach%29&sl=98&sessionSearchId=0164136b9789690f04b5a5be433d88b7&relpos=0	Institute of Electrical and Electronics Engineers Inc	
23	Behave	Android Best Practices	Android Best Practices by Godfrey Nolan shows you how to make your Android apps stand out from the crowd with great reviews. Why settle for just making any Android app? Build a brilliant Android app instead that lets your users praise it for ease of use, better performance, and more.  Using a series of example apps which gradually evolve throughout this book, Android Best Practices brings together current Android best practices from user interface (UI)/user experience (UX) design, test-driven development (TDD), and design patterns (e.g., MVC) to help you take your app to the next level.  In this book you'll learn how to:  * Use Android design patterns for consistent UI experience on many devices  * Use agile techniques such as test-driven development, behavior-driven development, and continuous integration  * Improve the speed and overall performance of your app  * Organize an Android app using design patterns such as MVC/MVP  * Create and consume REST and SOAP web services  Designing and developing an app that runs well on many if not all the leading Android smartphones and tablets today can be one of the most daunting challenges for Android developers. Well, this book takes much of the mystery out of that for you.  After reading and using Android Best Practices, you'll become a much better Android app designer and developer, which in turn can make your apps better placed and more successful in the market place.		Godfrey Nolan; David Truxall; Raghav Sood; Onur Cinar		https://books.google.ca/books?id=GJgQAwAAQBAJ&dq=Android+Best+Practices&lr=&source=gbs_navlinks_s		232	"""nan"""	Excluded	Excluded	new_screen			2	Google Scholar		Android Best Practices	https://books.google.ca/books?id=GJgQAwAAQBAJ&dq=Android+Best+Practices&lr=&source=gbs_navlinks_s	Apress	
24	Behave	Smells in software test code: A survey of knowledge in industry and academia	"As a type of anti-pattern, test smells are defined as poorly designed tests and their presence may negatively affect the quality of test suites and production code. Test smells are the subject of active discussions among practitioners and researchers, and various guidelines to handle smells are constantly offered for smell prevention, smell detection, and smell correction. Since there is a vast grey literature as well as a large body of research studies in this domain, it is not practical for practitioners and researchers to locate and synthesize such a large literature. Motivated by the above need and to find out what we, as the community, know about smells in test code, we conducted a 'multivocal' literature mapping (classification) on both the scientific literature and also practitioners' grey literature. By surveying all the sources on test smells in both industry (120 sources) and academia (46 sources), 166 sources in total, our review presents the largest catalogue of test smells, along with the summary of guidelines/techniques and the tools to deal with those smells. This article aims to benefit the readers (both practitioners and researchers) by serving as an ""index"" to the vast body of knowledge in this important area, and by helping them develop high-quality test scripts, and minimize occurrences of test smells and their negative consequences in large test automation projects."	Automation; Codes (symbols); Design for testability; Mapping; Odors; Surveying; Surveys; Testing; Anti-patterns; Automated testing; Systematic mapping; Test Automation; Test scripts; Software testing; Automation;  Codes (symbols);  Design for testability;  Mapping;  Odors;  Surveying;  Surveys;  Testing;  Anti-patterns;  Automated testing;  Systematic mapping;  Test Automation;  Test scripts;  Software testing	Garousi, Vahid; Kucuk, Baris	Journal of Systems and Software	https://doi.org/10.1016/j.jss.2017.12.013		52 - 81	"""@ARTICLE{Garousi201852,
    author = ""Garousi, Vahid and Kucuk, Baris"",
    title = ""Smells in software test code: A survey of knowledge in industry and academia"",
    year = ""2018"",
    journal = ""Journal of Systems and Software"",
    volume = ""138"",
    pages = ""52 - 81"",
    doi = ""10.1016/j.jss.2017.12.013"",
    url = ""https://www.scopus.com/inward/record.uri?eid=2-s2.0-85039428979\&doi=10.1016\%2fj.jss.2017.12.013\&partnerID=40\&md5=712a9941e4e4d1c5e9ecff82a16a1075"",
    affiliations = ""Information Technology Group, Wageningen University, Netherlands; Atilim University, Ankara, Turkey"",
    abstract = ""As a type of anti-pattern, test smells are defined as poorly designed tests and their presence may negatively affect the quality of test suites and production code. Test smells are the subject of active discussions among practitioners and researchers, and various guidelines to handle smells are constantly offered for smell prevention, smell detection, and smell correction. Since there is a vast grey literature as well as a large body of research studies in this domain, it is not practical for practitioners and researchers to locate and synthesize such a large literature. Motivated by the above need and to find out what we, as the community, know about smells in test code, we conducted a 'multivocal' literature mapping (classification) on both the scientific literature and also practitioners' grey literature. By surveying all the sources on test smells in both industry (120 sources) and academia (46 sources), 166 sources in total, our review presents the largest catalogue of test smells, along with the summary of guidelines/techniques and the tools to deal with those smells. This article aims to benefit the readers (both practitioners and researchers) by serving as an ""index"" to the vast body of knowledge in this important area, and by helping them develop high-quality test scripts, and minimize occurrences of test smells and their negative consequences in large test automation projects. (c) 2017 Elsevier Inc."",
    author_keywords = ""Automated testing; Multivocal literature mapping; Software testing; Survey; Systematic mapping; Test anti-patterns; Test automation; Test scripts; Test smells"",
    keywords = ""Automation; Codes (symbols); Design for testability; Mapping; Odors; Surveying; Surveys; Testing; Anti-patterns; Automated testing; Systematic mapping; Test Automation; Test scripts; Software testing"",
    correspondence_address = ""V. Garousi; Information Technology Group, Wageningen University, Netherlands; email: vahid.garousi@wur.nl"",
    publisher = ""Elsevier Inc."",
    issn = ""01641212"",
    coden = ""JSSOD"",
    language = ""English"",
    abbrev_source_title = ""J Syst Software"",
    type = ""Article"",
    publication_stage = ""Final"",
    source = ""Scopus"",
    note = ""Cited by: 114""
}
"""	Excluded	Excluded	new_screen			2	Scopus Signed In		Smells in software test code: A survey of knowledge in industry and academia	https://www.scopus.com/record/display.uri?eid=2-s2.0-85039428979&origin=resultslist&sort=plf-f&src=s&sid=c77ab408f002d809a50cc15390d2fd09&sot=b&sdt=b&s=TITLE-ABS-KEY%28smells+in+software+test+code+a+survey+of+knowledge+in+industry+and+academia%29&sl=90&sessionSearchId=c77ab408f002d809a50cc15390d2fd09&relpos=0	Elsevier Inc	nan; References
25	Behave	Omni-script: Device independent user interface development for omni-channel fintech applications	As the number of devices and platforms gradually increased that serve as a medium for online banking services, the number of replicated services for different platforms also increase. Each service has a different representation in a different platform even though targeting the same business objectives. This situation results in the problem of re-developing similar set of requirements for different devices and services which in turn results in multiplied effort in software development and degradation in the software quality because of the replicated code. The objective of this paper is to present a device independent user interface development approach that eliminates the replicated user interface development effort of the same set of services for different platforms/devices while increasing the presentation performance. In this context, we provide a basic technique that uses a json based user interface definition format, called omni-script, to separate the representation of banking services in different platforms/devices, so called channels. Omni-script is a pioneering solution being used in a real development environment in banking software domain that is experiencing a shift towards omni-channel user experience, where users are able to seamlessly continue using banking services in different platforms and devices. As the evaluation method, we have measured the actual development effort on a representative sample development team and a set of services. Additionally, we later deployed and measured the rendering time and the amount of data communication for the proposed approach in a real production environment. Production deployment resulted in a remarkable decrease in data communication and in loading times at the client side. As importantly, the proposed approach also resulted in a nearly 75% decrease in service development time by enabling analysts to produce user interface prototypes that can be integrated to service development with minimal effort.	Computer software selection and evaluation; Convolutional codes; Software design; Banking services; Development environment; Multimodal user interface; Production environments; Representative sample; User experience; User interface development; User interface prototypes; User interfaces; Computer software selection and evaluation;  Convolutional codes;  Software design;  Banking services;  Development environment;  Multimodal user interface;  Production environments;  Representative sample;  User experience;  User interface development;  User interface prototypes;  User interfaces	Ulusoy, Simge; Batioglu, Alper; Ovatman, Tolga	Computer Standards and Interfaces	https://doi.org/10.1016/j.csi.2019.01.003		106 - 116	"""@ARTICLE{Ulusoy2019106,
    author = ""Ulusoy, Simge and Batioglu, Alper and Ovatman, Tolga"",
    title = ""Omni-script: Device independent user interface development for omni-channel fintech applications"",
    year = ""2019"",
    journal = ""Computer Standards and Interfaces"",
    volume = ""64"",
    pages = ""106 - 116"",
    doi = ""10.1016/j.csi.2019.01.003"",
    url = ""https://www.scopus.com/inward/record.uri?eid=2-s2.0-85060113921\&doi=10.1016\%2fj.csi.2019.01.003\&partnerID=40\&md5=92904aa7c38bb6f231042b5f83ec92b1"",
    affiliations = ""SoftTech Software Technologies Research and Development Inc., Turkey; Istanbul Technical University Department of Computer Engineering, Turkey"",
    abstract = ""As the number of devices and platforms gradually increased that serve as a medium for online banking services, the number of replicated services for different platforms also increase. Each service has a different representation in a different platform even though targeting the same business objectives. This situation results in the problem of re-developing similar set of requirements for different devices and services which in turn results in multiplied effort in software development and degradation in the software quality because of the replicated code. The objective of this paper is to present a device independent user interface development approach that eliminates the replicated user interface development effort of the same set of services for different platforms/devices while increasing the presentation performance. In this context, we provide a basic technique that uses a json based user interface definition format, called omni-script, to separate the representation of banking services in different platforms/devices, so called channels. Omni-script is a pioneering solution being used in a real development environment in banking software domain that is experiencing a shift towards omni-channel user experience, where users are able to seamlessly continue using banking services in different platforms and devices. As the evaluation method, we have measured the actual development effort on a representative sample development team and a set of services. Additionally, we later deployed and measured the rendering time and the amount of data communication for the proposed approach in a real production environment. Production deployment resulted in a remarkable decrease in data communication and in loading times at the client side. As importantly, the proposed approach also resulted in a nearly 75\% decrease in service development time by enabling analysts to produce user interface prototypes that can be integrated to service development with minimal effort. (c) 2019"",
    author_keywords = ""Multimodal user interface definition; Omni-channel banking services; Omni-channel user experience"",
    keywords = ""Computer software selection and evaluation; Convolutional codes; Software design; Banking services; Development environment; Multimodal user interface; Production environments; Representative sample; User experience; User interface development; User interface prototypes; User interfaces"",
    correspondence_address = ""T. Ovatman; Istanbul Technical University Department of Computer Engineering, Turkey; email: ovatman@itu.edu.tr"",
    publisher = ""Elsevier B.V."",
    issn = ""09205489"",
    coden = ""CSTIE"",
    language = ""English"",
    abbrev_source_title = ""Comput Stand Interfaces"",
    type = ""Article"",
    publication_stage = ""Final"",
    source = ""Scopus"",
    note = ""Cited by: 3""
}
"""	Excluded	Excluded	new_screen			2	Scopus Signed In		Omni-script: Device independent user interface development for omni-channel fintech applications	https://www.scopus.com/record/display.uri?eid=2-s2.0-85060113921&origin=resultslist&sort=plf-f&src=s&sid=f8e0e9a98fe625d76d4cb177c8cce928&sot=b&sdt=b&s=TITLE-ABS-KEY%28omni+script+device+independent+user+interface+development+for+omni+channel+fintech+applications%29&sl=110&sessionSearchId=f8e0e9a98fe625d76d4cb177c8cce928&relpos=0	Elsevier B.V	nan; References
26	Behave	Validating enterprise architecture using ontology-based approach: A case study of student internship programme	As the practice of Enterprise Architecture (EA) diversifies, the schematic management of its objects, semantics and relationship continues to be complex. Given that EA provides support for the IT environment by simulating alignment between dynamic business architectures, heterogeneous application systems and incongruent technologies, the need to ensure validation of conceptualized EA models has become also critical. As a relatively new discipline, its disparate and widespread methodologies makes it even more challenging to adopt a generic approach in which models can be verified sequel to the unavailability of unified EA modelling languages able to describe a wide range of Information Technology domains. This paper seeks to present an approach for addressing this challenge through the use of ontologies and queries based on constraints specified in the model's motivation taxonomy. The paper is experimental research-based and grounds its hypothesis on initial model created using the ArchiMate modelling language. By transforming its conceptual metamodel into a model instance, a process which can be achieved irrespective of the modeling language used in the design of the EA, it represents extracted triples as resource description framework schema (RDFS) by mapping the model artefacts directly into classes and slots using a more conventional web ontology language. The generated RDF is then queried using Protocol and RDF Query Language (SPARQL) adopting the Behavior Driven Development (BDD) concept. A case study of the Student Internship Program (SIP) is deployed to translate information from business needs to IT solutions encapsulating a view of abstraction of the EA. The paper also proposes an implementation of the approach using an open source platform that allows construction of domain models and knowledge-based applications with ontologies and is a contribution towards effective validation of EA through taxonomy decomposition, systematic generation of testable EA artifacts, creation of structural triples of model elements and alignment of motivational goals to business behavior specifications.	Ontologies;Business;Resource description framework;Computer architecture;Semantics;Collaboration;Data models;Ontology;Enterprise Architecture;Metamodel;Model;Viewpoints;Resource Description Framework;Schema and Query Language;ArchiMate;Validation; Ontologies; Business; Resource description framework; Computer architecture; Semantics; Collaboration; Data models; Ontology; Enterprise Architecture; Metamodel; Model; Viewpoints; Resource Description Framework; Schema and Query Language; ArchiMate; Validation	Oussena, Samia; Essien, Joe	2013 3rd International Symposium ISKO-Maghreb	https://doi.org/10.1109/ISKO-Maghreb.2013.6728200	1.Ankolekar, A., Burstein, M., Hobbs, J. R., Lassila, O., Martin, D., McDermott, D.,  Sycara, K. (2002). DAML-S: Web service description for the semantic web. In The Semantic Web-ISWC 2002 (pp. 348-363). Springer Berlin Heidelberg. CrossRef  Google Scholar; 2.Boury-Brisset, A. C. (2003, July). Ontology-based approach for information fusion. In Proceedings of the Sixth International Conference on Information Fusion (pp. 522-529). View Article  Google Scholar; 3.Coleman, P., Papp, R., 2006. Strategic Alignment: Analysis of Perspectives. Proceedings of the 2006 Southern Association for Information Systems Conference. Google Scholar; 4.Fischer, C., Winter, R, Aier, S., 2010. What Is an Enterprise Architecture Principle? Towards a Consolidated Definition, Computer and Information Science 2010, SCI 317, pp. 193-205. springerlink.com Springer-Verlag Berlin Heidelberg. CrossRef  Google Scholar; 5.GARTNER, 2013. Available at http://www.gartner.com. Accessed April, 2013; 6.Glimm, B. (2011). Using SPARQL with RDFS and OWL entailment. In Reasoning Web. Semantic Technologies for the Web of Data (pp. 137-201). Springer Berlin Heidelberg. CrossRef  Google Scholar; 7.Green, N., Bate, C.,  Press, E. T. 2007. Lost in Translation: A Handbook for Information Systems in the 21st Century. Google Scholar; 8.Horrocks, I., Patel-Schneider, P. F., Boley, H., Tabet, S., Grosof, B.,  Dean, M. (2004). SWRL: A semantic web rule language combining OWL and RuleML. W3C Member submission, 21, 79. Google Scholar; 9.Heflin, J., Volz, R., Dale, J., Requirements for a Web Ontology Language, Working draft of the W3C Ontology Working Group, http://www.w3c.org/TR/webont- req. accessed:16/9/2013 Google Scholar; 10.Huang, J., Abadi, D. J.,  Ren, K. (2011). Scalable SPARQL querying of large RDF graphs. Proceedings of the VLDB Endowment, 4(11), 1123-1134. CrossRef  Google Scholar; 11.IEEE Computer Society. IEEE Recommended Practice for Architectural Description of Software Intensive Systems. IEEE Standard 1471-2000. Google Scholar; 12.Lankhorst, M., 2013. Enterprise Architecture at Work: Modelling, Communication and Analysis. Springer, Berlin, Heidelberg, New York. CrossRef  Google Scholar; 13.McGovern, J., 2004. A practical guide to enterprise architecture. Prentice Hall Professional. Google Scholar; 14.McGuinness, D. L. Ontologies Come of Age, In Dieter Fensel, J im Hendler, Henry Lieberman, and Wolfgang Wahlster, editors. Spinning the Semantic Web: Bringing the WWW to Its Full Potential. MIT Press, 2002. Google Scholar; 15.North, D., 2006. Introducing BDD. Available at: http://dannorth.net/ introducing-bdd/. Accessed on: March 2013. Google Scholar; 16.Quilitz, B.,  Leser, U. (2008). Querying distributed RDF data sources with SPARQL. In The Semantic Web: Research and Applications (pp. 524-538). Springer Berlin Heidelberg. CrossRef  Google Scholar; 17.Salmans, B., Kappelman, L. A., 2010. The State of EA: Progress, Not Perfection. The SIM guide to enterprise architecture, 165-187. Google Scholar; 18.Samia O, 2012, University of West London, Available at: http://samsa.uwl.ac.uk/mdse/. Accessed 07/01/2103 Google Scholar; 19.Sessions, R., 2007. A Comparison of the Top Four Enterprise-Architecture Methodologies, ObjectWatch, Inc. Google Scholar; 20.Sintek, M.,  Decker, S. (2002). TRIPLE-A query, inference, and transformation language for the semantic web. In The Semantic Web-ISWC 2002 (pp. 364-378). Springer Berlin Heidelberg. Google Scholar; 21.TOGAF, The Open Group. ArchiMate Version 2. http://www.opengroup.org/ archimate, Oct, 2012. Google Scholar; 22.Stanford Univeristy, 2013, Protege Version 3.5, http://protege.stanford.edu/accessed 16/09/2013 Google Scholar; 23.TURTLE, http://www.w3.org/TeamSubmission/turtle/ec-tutorial, accessed 17/09/2013. Google Scholar; 24.Venkatraman, N., Henderson, J., 2010. Strategic Alignment: Leveraging IT for Transforming Organisations, IBM Systems Journal, Vol 32 No 1. Google Scholar; 25.Wache, H., Voegele, T., Visser, U., Stuckenschmidt, H., Schuster, G., Neumann, H.,  Hubner, S. (2001). Ontology-based integration of information-a survey of existing approaaches. In IJCAI-01 workshop: ontologies and information sharing (Vol. 2001, pp. 108-117). Google Scholar; 26.Weston, J., Defee, J., 2004. Performance Based Enterprise Architecture Planning - A white Paper, 2004, http://www.caci.com/. Google Scholar	1-7	"""@INPROCEEDINGS{6728200,
    author = ""Oussena, Samia and Essien, Joe"",
    booktitle = ""2013 3rd International Symposium ISKO-Maghreb"",
    title = ""Validating enterprise architecture using ontology-based approach: A case study of student internship programme"",
    year = ""2013"",
    volume = """",
    number = """",
    pages = ""1-7"",
    abstract = ""As the practice of Enterprise Architecture (EA) diversifies, the schematic management of its objects, semantics and relationship continues to be complex. Given that EA provides support for the IT environment by simulating alignment between dynamic business architectures, heterogeneous application systems and incongruent technologies, the need to ensure validation of conceptualized EA models has become also critical. As a relatively new discipline, its disparate and widespread methodologies makes it even more challenging to adopt a generic approach in which models can be verified sequel to the unavailability of unified EA modelling languages able to describe a wide range of Information Technology domains. This paper seeks to present an approach for addressing this challenge through the use of ontologies and queries based on constraints specified in the model's motivation taxonomy. The paper is experimental research-based and grounds its hypothesis on initial model created using the ArchiMate modelling language. By transforming its conceptual metamodel into a model instance, a process which can be achieved irrespective of the modeling language used in the design of the EA, it represents extracted triples as resource description framework schema (RDFS) by mapping the model artefacts directly into classes and slots using a more conventional web ontology language. The generated RDF is then queried using Protocol and RDF Query Language (SPARQL) adopting the Behavior Driven Development (BDD) concept. A case study of the Student Internship Program (SIP) is deployed to translate information from business needs to IT solutions encapsulating a view of abstraction of the EA. The paper also proposes an implementation of the approach using an open source platform that allows construction of domain models and knowledge-based applications with ontologies and is a contribution towards effective validation of EA through taxonomy decomposition, systematic generation of testable EA artifacts, creation of structural triples of model elements and alignment of motivational goals to business behavior specifications."",
    keywords = ""Ontologies;Business;Resource description framework;Computer architecture;Semantics;Collaboration;Data models;Ontology;Enterprise Architecture;Metamodel;Model;Viewpoints;Resource Description Framework;Schema and Query Language;ArchiMate;Validation"",
    doi = ""10.1109/ISKO-Maghreb.2013.6728200"",
    ISSN = """",
    month = ""Nov""
}
"""	Excluded	Excluded	new_screen			2	Scopus Signed In		Validating enterprise architecture using ontology-based approach: A case study of student internship programme	https://ieeexplore.ieee.org/document/6728200	IEEE	
27	Behave	Did You Remember To Test Your Tokens?	"Authentication is a critical security feature for confirming the identity of a system's users, typically implemented with help from frameworks like Spring Security. It is a complex feature which should be robustly tested at all stages of development. Unit testing is an effective technique for fine-grained verification of feature behaviors that is not widely-used to test authentication. Part of the problem is that resources to help developers unit test security features are limited. Most security testing guides recommend test cases in a ""black box"" or penetration testing perspective. These resources are not easily applicable to developers writing new unit tests, or who want a security-focused perspective on coverage.In this paper, we address these issues by applying a grounded theory-based approach to identify common (unit) test cases for token authentication through analysis of 481 JUnit tests exercising Spring Security-based authentication implementations from 53 open source Java projects. The outcome of this study is a developer-friendly unit testing guide organized as a catalog of 53 test cases for token authentication, representing unique combinations of 17 scenarios, 40 conditions, and 30 expected outcomes learned from the data set in our analysis. We supplement the test guide with common test smells to avoid. To verify the accuracy and usefulness of our testing guide, we sought feedback from selected developers, some of whom authored unit tests in our dataset."	Unit Test;  Security Test;  Repository Mining;  Java;  Authentication; Unit Test, Security Test, Repository Mining, Java, Authentication	Gonzalez, Danielle; Rath, Michael; Mirakhorli, Mehdi	MSR '20: Proceedings of the 17th International Conference on Mining Software Repositories	https://doi.org/10.1145/3379597.3387471		232-242	"""@inproceedings{10.1145/3379597.3387471,
    author = ""Gonzalez, Danielle and Rath, Michael and Mirakhorli, Mehdi"",
    title = ""Did You Remember To Test Your Tokens?"",
    year = ""2020"",
    isbn = ""9781450375177"",
    publisher = ""Association for Computing Machinery"",
    address = ""New York, NY, USA"",
    url = ""https://doi.org/10.1145/3379597.3387471"",
    doi = ""10.1145/3379597.3387471"",
    abstract = {Authentication is a critical security feature for confirming the identity of a system's users, typically implemented with help from frameworks like Spring Security. It is a complex feature which should be robustly tested at all stages of development. Unit testing is an effective technique for fine-grained verification of feature behaviors that is not widely-used to test authentication. Part of the problem is that resources to help developers unit test security features are limited. Most security testing guides recommend test cases in a ""black box"" or penetration testing perspective. These resources are not easily applicable to developers writing new unit tests, or who want a security-focused perspective on coverage.In this paper, we address these issues by applying a grounded theory-based approach to identify common (unit) test cases for token authentication through analysis of 481 JUnit tests exercising Spring Security-based authentication implementations from 53 open source Java projects. The outcome of this study is a developer-friendly unit testing guide organized as a catalog of 53 test cases for token authentication, representing unique combinations of 17 scenarios, 40 conditions, and 30 expected outcomes learned from the data set in our analysis. We supplement the test guide with common test smells to avoid. To verify the accuracy and usefulness of our testing guide, we sought feedback from selected developers, some of whom authored unit tests in our dataset.},
    booktitle = ""Proceedings of the 17th International Conference on Mining Software Repositories"",
    pages = ""232-242"",
    numpages = ""11"",
    keywords = ""Unit Test, Security Test, Repository Mining, Java, Authentication"",
    location = ""Seoul, Republic of Korea"",
    series = ""MSR '20""
}
"""	Excluded	Excluded	new_screen			2	Scopus Signed In		Did You Remember To Test Your Tokens?	https://dl.acm.org/doi/10.1145/3379597.3387471	Association for Computing Machinery	nan; References
28	Behave	XUnit Test Patterns: Refactoring Test Code	"Automated testing is a cornerstone of agile development. An effective testing strategy will deliver new functionality more aggressively, accelerate user feedback, and improve quality. However, for many developers, creating effective automated tests is a unique and unfamiliar challenge.  xUnit Test Patterns is the definitive guide to writing automated tests using xUnit, the most popular unit testing framework in use today. Agile coach and test automation expert Gerard Meszaros describes 68 proven patterns for making tests easier to write, understand, and maintain. He then shows you how to make them more robust and repeatable--and far more cost-effective.  Loaded with information, this book feels like three books in one. The first part is a detailed tutorial on test automation that covers everything from test strategy to in-depth test coding. The second part, a catalog of 18 frequently encountered ""test smells,"" provides trouble-shooting guidelines to help you determine the root cause of problems and the most applicable patterns. The third part contains detailed descriptions of each pattern, including refactoring instructions illustrated by extensive code samples in multiple programming languages."		Gerard Meszaros	Addison-Wesley Signature Series (Fowler)	https://books.google.ca/books?id=-izOiCEIABQC&dq=XUnit+Test+Patterns:+Refactoring+Test+Code&lr=&source=gbs_navlinks_s		944	"""nan"""	Excluded	Excluded	new_screen			2	Google Scholar		XUnit Test Patterns: Refactoring Test Code	https://books.google.ca/books?id=-izOiCEIABQC&dq=XUnit+Test+Patterns:+Refactoring+Test+Code&lr=&source=gbs_navlinks_s	Pearson Education	
29	Behave	Visualizing data, encouraging change: Technical interventions in food purchasing	Baked Potato is a mobile web service geared at addressing the imbalance of power between those who market and those who consume food products. Food marketers rarely provide a detailed range of information about products that would allow consumers to understand how a product and its company connect to their cultural values. The main goal of this application is to connect people in a way that celebrates their differences and gives them agency by helping them make better decisions about their food purchases.	Data structures;Boolean functions;Human computer interaction;Labeling;Prototypes;Food products;Information technology;Behavior Driven Development;decision making;human-computer interaction;incentive design;social gaming; Data structures; Boolean functions; Human computer interaction; Labeling; Prototypes; Food products; Information technology; Behavior Driven Development; decision making; human-computer interaction; incentive design; social gaming	Sackey, Donnie Johnson; Ullmann, Noah	2012 IEEE International Professional Communication Conference	https://doi.org/10.1109/IPCC.2012.6408654	"1.G. Cowburn, ""Consumer understanding and use of nutrition labeling: A systematic review,."" Public Health Nutrition, vol. 8, no. 1, pp. 21-28 , 2005. CrossRef  Google Scholar; 2.E. Golan et al., ""Economics of food labeling,."" J. of Consumer Policy, vol. 24, no. 2, pp. 117-184, 2001. CrossRef  Google Scholar; 3.J. McGonigal, Gaming can make a better world. Available: http://www.ted.com/talks/jane-mcgonigal-gaming-can-make-a-better-world.html. Google Scholar; 4.R. Layard and S. Glaister, Cost-Benefit Analysis. New York, NY: Cambridge University Press, 1994. CrossRef  Google Scholar; 5.S. Bodker, Through the Interface-A Human Activity Approach to User Interface Design. Mahwah, NJ: Lawrence Erlbaum Associates, 1991. Google Scholar; 6.S. Rich and S. Jain, ""Social class and life cycle as predictors of shopping behavior,"" J. of Marketing Research, vol. 5, no. 1, pp. 41-49, 1968. CrossRef  Google Scholar; 7.D. Norman, ""Human-centered design considered harmful,"" Interactions, vol. 24, no. 4, pp. 14-19, 2005. CrossRef  Google Scholar; 8.J. Porter, Designing for the Social Web. Berkeley, CA: New Riders Press, 2008. Google Scholar"	1-5	"""@INPROCEEDINGS{6408654,
    author = ""Sackey, Donnie Johnson and Ullmann, Noah"",
    booktitle = ""2012 IEEE International Professional Communication Conference"",
    title = ""Visualizing data, encouraging change: Technical interventions in food purchasing"",
    year = ""2012"",
    volume = """",
    number = """",
    pages = ""1-5"",
    abstract = ""Baked Potato is a mobile web service geared at addressing the imbalance of power between those who market and those who consume food products. Food marketers rarely provide a detailed range of information about products that would allow consumers to understand how a product and its company connect to their cultural values. The main goal of this application is to connect people in a way that celebrates their differences and gives them agency by helping them make better decisions about their food purchases."",
    keywords = ""Data structures;Boolean functions;Human computer interaction;Labeling;Prototypes;Food products;Information technology;Behavior Driven Development;decision making;human-computer interaction;incentive design;social gaming"",
    doi = ""10.1109/IPCC.2012.6408654"",
    ISSN = ""2158-1002"",
    month = ""Oct""
}
"""	Excluded	Excluded	new_screen			2	Scopus Signed In		Visualizing data, encouraging change: Technical interventions in food purchasing	https://ieeexplore.ieee.org/document/6408654	IEEE	
30	Behave	Visualizing data, encouraging change: Technical interventions in food purchasing	Baked Potato is a mobile web service geared at addressing the imbalance of power between those who market and those who consume food products. Food marketers rarely provide a detailed range of information about products that would allow consumers to understand how a product and its company connect to their cultural values. The main goal of this application is to connect people in a way that celebrates their differences and gives them agency by helping them make better decisions about their food purchases.	Data structures;Boolean functions;Human computer interaction;Labeling;Prototypes;Food products;Information technology;Behavior Driven Development;decision making;human-computer interaction;incentive design;social gaming; Data structures; Boolean functions; Human computer interaction; Labeling; Prototypes; Food products; Information technology; Behavior Driven Development; decision making; human-computer interaction; incentive design; social gaming	Sackey, Donnie Johnson; Ullmann, Noah	2012 IEEE International Professional Communication Conference	https://doi.org/10.1109/IPCC.2012.6408654	"1.G. Cowburn, ""Consumer understanding and use of nutrition labeling: A systematic review,."" Public Health Nutrition, vol. 8, no. 1, pp. 21-28 , 2005. CrossRef  Google Scholar; 2.E. Golan et al., ""Economics of food labeling,."" J. of Consumer Policy, vol. 24, no. 2, pp. 117-184, 2001. CrossRef  Google Scholar; 3.J. McGonigal, Gaming can make a better world. Available: http://www.ted.com/talks/jane-mcgonigal-gaming-can-make-a-better-world.html. Google Scholar; 4.R. Layard and S. Glaister, Cost-Benefit Analysis. New York, NY: Cambridge University Press, 1994. CrossRef  Google Scholar; 5.S. Bodker, Through the Interface-A Human Activity Approach to User Interface Design. Mahwah, NJ: Lawrence Erlbaum Associates, 1991. Google Scholar; 6.S. Rich and S. Jain, ""Social class and life cycle as predictors of shopping behavior,"" J. of Marketing Research, vol. 5, no. 1, pp. 41-49, 1968. CrossRef  Google Scholar; 7.D. Norman, ""Human-centered design considered harmful,"" Interactions, vol. 24, no. 4, pp. 14-19, 2005. CrossRef  Google Scholar; 8.J. Porter, Designing for the Social Web. Berkeley, CA: New Riders Press, 2008. Google Scholar"	1-5	"""@INPROCEEDINGS{6408654,
    author = ""Sackey, Donnie Johnson and Ullmann, Noah"",
    booktitle = ""2012 IEEE International Professional Communication Conference"",
    title = ""Visualizing data, encouraging change: Technical interventions in food purchasing"",
    year = ""2012"",
    volume = """",
    number = """",
    pages = ""1-5"",
    abstract = ""Baked Potato is a mobile web service geared at addressing the imbalance of power between those who market and those who consume food products. Food marketers rarely provide a detailed range of information about products that would allow consumers to understand how a product and its company connect to their cultural values. The main goal of this application is to connect people in a way that celebrates their differences and gives them agency by helping them make better decisions about their food purchases."",
    keywords = ""Data structures;Boolean functions;Human computer interaction;Labeling;Prototypes;Food products;Information technology;Behavior Driven Development;decision making;human-computer interaction;incentive design;social gaming"",
    doi = ""10.1109/IPCC.2012.6408654"",
    ISSN = ""2158-1002"",
    month = ""Oct""
}
"""	Excluded	Excluded	new_screen			2	Scopus Signed In		Visualizing data, encouraging change: Technical interventions in food purchasing	https://ieeexplore.ieee.org/document/6408654	IEEE	
31	Behave	Behavior driven development for airborne software engineering	Behavior Driven Development (BDD) is a test driven development approach which aims at bridging the gap between the end-user and the software development. It promotes a semi-formal ubiquitous language for executable behavior specification and automated acceptance testing. The BDD infrastructure Cucumber and the language Gherkin have been established in many application domains. This paper discusses their utilization for airborne software engineering with an example application, Class C Terrain Awareness and Warning System, being developed using Rust language with Rust BDD infrastructure.	Acceptance tests; Application programs; Boolean functions; C (programming language); Software testing; Airborne software; Applications domains; Automated acceptance testing; Behavior specifications; Development approach; Development infrastructure; End-users; Executables; Terrain Awareness and Warning System; Test driven development; Software design; Acceptance tests;  Application programs;  Boolean functions;  C (programming language);  Software testing;  Airborne software;  Applications domains;  Automated acceptance testing;  Behavior specifications;  Development approach;  Development infrastructure;  End-users;  Executables;  Terrain Awareness and Warning System;  Test driven development;  Software design	Zaeske, Wanja; Beck, Janick; Torrens, Christoph; Durak, Umut	AIAA Scitech 2021 Forum	https://www.scopus.com/record/display.uri?eid=2-s2.0-85099811159&origin=resultslist&sort=plf-f&src=s&sid=916dc0070b1239390a0926ef6d01455f&sot=b&sdt=b&s=TITLE-ABS-KEY%28behavior+driven+development+for+airborne+software+engineering%29&sl=76&sessionSearchId=916dc0070b1239390a0926ef6d01455f&relpos=0		1 - 10	"""@CONFERENCE{Zaeske20211,
    author = ""Zaeske, Wanja and Beck, Janick and Torrens, Christoph and Durak, Umut"",
    title = ""Behavior driven development for airborne software engineering"",
    year = ""2021"",
    journal = ""AIAA Scitech 2021 Forum"",
    pages = ""1 - 10"",
    url = ""https://www.scopus.com/inward/record.uri?eid=2-s2.0-85099811159\&partnerID=40\&md5=903e28f166fa5c9cb35d1106f40f039c"",
    affiliations = ""Clausthal University of Technology, Institute of Informatics, Clausthal-Zellerfeld, 38678, Germany; German Aerospace Center (DLR), Institute of Flight Systems, Braunschweig, 38108, Germany"",
    abstract = ""Behavior Driven Development (BDD) is a test driven development approach which aims at bridging the gap between the end-user and the software development. It promotes a semi-formal ubiquitous language for executable behavior specification and automated acceptance testing. The BDD infrastructure Cucumber and the language Gherkin have been established in many application domains. This paper discusses their utilization for airborne software engineering with an example application, Class C Terrain Awareness and Warning System, being developed using Rust language with Rust BDD infrastructure. (c) 2021, American Institute of Aeronautics and Astronautics Inc, AIAA. All rights reserved."",
    keywords = ""Acceptance tests; Application programs; Boolean functions; C (programming language); Software testing; Airborne software; Applications domains; Automated acceptance testing; Behavior specifications; Development approach; Development infrastructure; End-users; Executables; Terrain Awareness and Warning System; Test driven development; Software design"",
    publisher = ""American Institute of Aeronautics and Astronautics Inc, AIAA"",
    isbn = ""978-162410609-5"",
    language = ""English"",
    abbrev_source_title = ""AIAA Scitech Forum"",
    type = ""Conference paper"",
    publication_stage = ""Final"",
    source = ""Scopus"",
    note = ""Cited by: 4; Conference name: AIAA Science and Technology Forum and Exposition, AIAA SciTech Forum 2021; Conference date: 11 January 2021 through 15 January 2021; Conference code: 253579""
}
"""	Included	Included	new_screen			2	Scopus Signed In		Behavior driven development for airborne software engineering	https://www.scopus.com/record/display.uri?eid=2-s2.0-85099811159&origin=resultslist&sort=plf-f&src=s&sid=916dc0070b1239390a0926ef6d01455f&sot=b&sdt=b&s=TITLE-ABS-KEY%28behavior+driven+development+for+airborne+software+engineering%29&sl=76&sessionSearchId=916dc0070b1239390a0926ef6d01455f&relpos=0	American Institute of Aeronautics and Astronautics Inc, AIAA	nan; References
32	Behave	Predicting co-changes between functionality specifications and source code in behavior driven development	Behavior Driven Development (BDD) is an agile approach that uses .feature files to describe the functionalities of a software system using natural language constructs (English-like phrases). Because of the English-like structure of .feature files, BDD specifications become an evolving documentation that helps all (even non-technical) stakeholders to understand and contribute to a software project. After specifying a .feature files, developers can use a BDD tool (e.g., Cucumber) to automatically generate test cases and implement the code of the specified functionality. However, maintaining traceability between .feature files and source code requires human efforts. Therefore, .feature files can be out-of-date, reducing the advantages of using BDD. Furthermore, existing research do not attempt to improve the traceability between .feature files and source code files. In this paper, we study the co-changes between .feature files and source code files to improve the traceability between .feature files and source code files. Due to the English-like syntax of .feature files, we use natural language processing to identify co-changes, with an accuracy of 79\%. We study the characteristics of BDD co-changes and build random forest models to predict when a .feature files should be modified before committing a code change. The random forest model obtains an AUC of 0.77. The model can assist developers in identifying when a .feature files should be modified in code commits. Once the traceability is up-to-date, BDD developers can write test code more efficiently and keep the software documentation up-to-date.	traceability;  empirical software engineering;  co-changes;  behavior driven development; traceability, empirical software engineering, co-changes, behavior driven development	Yang, Aidan Z. H.; da Costa, Daniel Alencar; Zou, Ying	MSR '19: Proceedings of the 16th International Conference on Mining Software Repositories	https://doi.org/10.1109/MSR.2019.00080		534-544	"""@inproceedings{10.1109/MSR.2019.00080,
    author = ""Yang, Aidan Z. H. and da Costa, Daniel Alencar and Zou, Ying"",
    title = ""Predicting co-changes between functionality specifications and source code in behavior driven development"",
    year = ""2019"",
    publisher = ""IEEE Press"",
    url = ""https://doi.org/10.1109/MSR.2019.00080"",
    doi = ""10.1109/MSR.2019.00080"",
    abstract = ""Behavior Driven Development (BDD) is an agile approach that uses .feature files to describe the functionalities of a software system using natural language constructs (English-like phrases). Because of the English-like structure of .feature files, BDD specifications become an evolving documentation that helps all (even non-technical) stakeholders to understand and contribute to a software project. After specifying a .feature files, developers can use a BDD tool (e.g., Cucumber) to automatically generate test cases and implement the code of the specified functionality. However, maintaining traceability between .feature files and source code requires human efforts. Therefore, .feature files can be out-of-date, reducing the advantages of using BDD. Furthermore, existing research do not attempt to improve the traceability between .feature files and source code files. In this paper, we study the co-changes between .feature files and source code files to improve the traceability between .feature files and source code files. Due to the English-like syntax of .feature files, we use natural language processing to identify co-changes, with an accuracy of 79\\%. We study the characteristics of BDD co-changes and build random forest models to predict when a .feature files should be modified before committing a code change. The random forest model obtains an AUC of 0.77. The model can assist developers in identifying when a .feature files should be modified in code commits. Once the traceability is up-to-date, BDD developers can write test code more efficiently and keep the software documentation up-to-date."",
    booktitle = ""Proceedings of the 16th International Conference on Mining Software Repositories"",
    pages = ""534-544"",
    numpages = ""11"",
    keywords = ""traceability, empirical software engineering, co-changes, behavior driven development"",
    location = ""Montreal, Quebec, Canada"",
    series = ""MSR '19""
}
"""	Included	Included	new_screen			2	Scopus Signed In		Predicting Co-Changes between Functionality Specifications and Source Code in Behavior Driven Development	https://dl.acm.org/doi/10.1109/MSR.2019.00080	IEEE Press	nan; References
33	Behave	Theoretical verification of test cases for behavior driven development	Behavior Driven Development insists on generation of early test cases during requirements elicitation. These would form the basis for pseudo use cases in TDD. These early test cases for BDD, aka theoretical test cases, are developed using Named Entity Recognition approaches over expanded use cases. This paper proposes the algorithm for theoretical verification of obtaining the original reduced use case sequences from the obtained BDD test cases.	Boolean functions; Computation theory; Computational methods; Dependency graphs; Named entity recognition; Reduced UC Sequence; Requirements elicitation; Test case; Testing; Boolean functions;  Computation theory;  Computational methods;  Dependency graphs;  Named entity recognition;  Reduced UC Sequence;  Requirements elicitation;  Test case;  Testing	Mahalakshmi, G.S.; Vani, V.	Proceedings - 2017 2nd International Conference on Recent Trends and Challenges in Computational Models, ICRTCCM 2017	https://doi.org/10.1109/ICRTCCM.2017.83		309 - 314	"""@CONFERENCE{Mahalakshmi2017309,
    author = ""Mahalakshmi, G.S. and Vani, V."",
    editor = ""L.J., Deborah and P., Vijayakumar"",
    title = ""Theoretical verification of test cases for behavior driven development"",
    year = ""2017"",
    journal = ""Proceedings - 2017 2nd International Conference on Recent Trends and Challenges in Computational Models, ICRTCCM 2017"",
    pages = ""309 - 314"",
    doi = ""10.1109/ICRTCCM.2017.83"",
    url = ""https://www.scopus.com/inward/record.uri?eid=2-s2.0-85034644893\&doi=10.1109\%2fICRTCCM.2017.83\&partnerID=40\&md5=a39e4c607bde6ce6c276ebf24fe6b3ba"",
    affiliations = ""Department of Computer Science and Engineering, Anna University, Chennai, India; Department of Information Technology, Eswari Engineering College, Anna University, Chennai Tamilnadu, India"",
    abstract = ""Behavior Driven Development insists on generation of early test cases during requirements elicitation. These would form the basis for pseudo use cases in TDD. These early test cases for BDD, aka theoretical test cases, are developed using Named Entity Recognition approaches over expanded use cases. This paper proposes the algorithm for theoretical verification of obtaining the original reduced use case sequences from the obtained BDD test cases. (c) 2017 IEEE."",
    author_keywords = ""Reduced UC Sequence; Test cases; Usecase Dependency Graph"",
    keywords = ""Boolean functions; Computation theory; Computational methods; Dependency graphs; Named entity recognition; Reduced UC Sequence; Requirements elicitation; Test case; Testing"",
    publisher = ""Institute of Electrical and Electronics Engineers Inc."",
    isbn = ""978-150904799-4"",
    language = ""English"",
    abbrev_source_title = ""Proc. - Int. Conf. Recent Trends Chall. Comput. Model., ICRTCCM"",
    type = ""Conference paper"",
    publication_stage = ""Final"",
    source = ""Scopus"",
    note = ""Cited by: 2; Conference name: 2nd International Conference on Recent Trends and Challenges in Computational Models, ICRTCCM 2017; Conference date: 3 February 2017 through 4 February 2017; Conference code: 131021""
}
"""	Included	Included	new_screen			2	Scopus Signed In		Theoretical Verification of Test Cases for Behavior Driven Development	https://www.scopus.com/record/display.uri?eid=2-s2.0-85034644893&origin=resultslist&sort=plf-f&src=s&sid=ea5b234fb0a2b77df0b58c15d6b27f3d&sot=b&sdt=b&s=TITLE-ABS-KEY%28theoretical+verification+of+test+cases+for+behavior+driven+development%29&sl=85&sessionSearchId=ea5b234fb0a2b77df0b58c15d6b27f3d&relpos=0	Institute of Electrical and Electronics Engineers Inc	nan; References
34	Behave	A model-driven approach for behavior-driven GUI testing	Behavior-driven development (BDD) brings requirement specifications and their test cases closer together by using a ubiquitous language to describe requirements that are automatically mapped to test methods. Although industry-proven tools support this automated requirement mapping, the test methods need to be implemented manually. The approach presented in this paper transforms BDD-like requirement specifications and low fidelity graphical user interface (GUI) descriptions in the format of wireframes into automatically executable graphical user interface test cases. The requirement descriptions are defined in a domain-specific language (DSL) that obeys the rules of the ubiquitous language enhanced by references to screens and widgets in a graphical user interface model. The paper reports on a controlled AB/BA crossover experiment comparing the efficiency of our approach to the industry-proven JBehave tooling. The results show that the introduced approach on average takes 63\% less time to specify automated tests and thereby diminishes the problem of graphical user interface test cases being expensive to write. The experimental results were supported by experience made applying the approach in three differently sized components at a large Swiss bank.	model-driven engineering;  domain-specific language;  behavior-driven development;  GUI test case generation; model-driven engineering, domain-specific language, behavior-driven development, GUI test case generation	"B\""{u}nder, Hendrik; Kuchen, Herbert"	SAC '19: Proceedings of the 34th ACM/SIGAPP Symposium on Applied Computing	https://doi.org/10.1145/3297280.3297450		1742-1751	"""@inproceedings{10.1145/3297280.3297450,
    author = {B\""{u}nder, Hendrik and Kuchen, Herbert},
    title = ""A model-driven approach for behavior-driven GUI testing"",
    year = ""2019"",
    isbn = ""9781450359337"",
    publisher = ""Association for Computing Machinery"",
    address = ""New York, NY, USA"",
    url = ""https://doi.org/10.1145/3297280.3297450"",
    doi = ""10.1145/3297280.3297450"",
    abstract = ""Behavior-driven development (BDD) brings requirement specifications and their test cases closer together by using a ubiquitous language to describe requirements that are automatically mapped to test methods. Although industry-proven tools support this automated requirement mapping, the test methods need to be implemented manually. The approach presented in this paper transforms BDD-like requirement specifications and low fidelity graphical user interface (GUI) descriptions in the format of wireframes into automatically executable graphical user interface test cases. The requirement descriptions are defined in a domain-specific language (DSL) that obeys the rules of the ubiquitous language enhanced by references to screens and widgets in a graphical user interface model. The paper reports on a controlled AB/BA crossover experiment comparing the efficiency of our approach to the industry-proven JBehave tooling. The results show that the introduced approach on average takes 63\\% less time to specify automated tests and thereby diminishes the problem of graphical user interface test cases being expensive to write. The experimental results were supported by experience made applying the approach in three differently sized components at a large Swiss bank."",
    booktitle = ""Proceedings of the 34th ACM/SIGAPP Symposium on Applied Computing"",
    pages = ""1742-1751"",
    numpages = ""10"",
    keywords = ""model-driven engineering, domain-specific language, behavior-driven development, GUI test case generation"",
    location = ""Limassol, Cyprus"",
    series = ""SAC '19""
}
"""	Included	Included	new_screen			2	Scopus Signed In		A Model-Driven Approach for Behavior-Driven GUI Testing	https://dl.acm.org/doi/10.1145/3297280.3297450	Association for Computing Machinery	nan; References
35	Behave	Evaluating the usage of predefined interactive behaviors for writing user stories: an empirical study with potential product owners	Behavior-driven development (BDD) has gained popularity in agile software development as a means of specifying user requirements through user stories and scenarios for interactive systems under construction. Templates for guiding the writing of such stories are widely employed and can be helpful to ensure that consistent information about the requirements is provided. With the aim of getting preliminary results about how product owners (POs) write their own user stories under a predefined template, we conducted a case study with potential POs at the department in charge of business trips in a French research institute. The participants were invited to write their own user stories to describe a feature they are used to perform. The resultant stories have been analyzed to check their adherence to a template including common interactive behaviors defined by an ontology for interactive systems. Although the participants have followed different specification strategies, we observed an overall high level of adherence to the proposed template (62.26%). The results also pointed out to a wide use of domain-dependent behaviors, with the interactive behaviors defined by the ontology being, to some extent, reproduced by the participants even without prior training in the adopted vocabulary.	Agile manufacturing systems; Boolean functions; Ontology; Software design; Agile software development; Behavior-driven development (BDD); Empirical studies; Interactive behavior; Interactive system; Research institutes; User requirements; User stories; Behavioral research; Agile manufacturing systems;  Boolean functions;  Ontology;  Software design;  Agile software development;  Behavior-driven development (BDD);  Empirical studies;  Interactive behavior;  Interactive system;  Research institutes;  User requirements;  User stories;  Behavioral research	Rocha Silva, Thiago; Winckler, Marco; Bach, Cedric	Cognition, Technology and Work	https://doi.org/10.1007/s10111-019-00566-3	"citation_title=Agile modeling: effective practices for extreme programming and the unified process; citation_publication_date=2002; citation_id=CR1; citation_author=S Ambler; citation_publisher=Wiley; Bano M, Zowghi D (2013) User involvement in software development and system success: a systematic literature review. In: EASE '13: Proceedings of the 17th international conference on evaluation and assessment in software engineering, pp 125-130. 
https://doi.org/10.1145/2460999.2461017; Business Process Model And Notation(tm) (BPMN(tm)) (2011) Object management group. 
http://www.omg.org/spec/BPMN/2.0/

. Accessed 1 Dec 2017; citation_title=The RSpec book: behaviour driven development with RSpec, cucumber, and friends; citation_publication_date=2010; citation_id=CR4; citation_author=D Chelimsky; citation_author=D Astels; citation_author=Z Dennis; citation_author=A Hellesoy; citation_author=B Helmkamp; citation_author=D North; citation_publisher=Pragmatic Bookshelf; citation_title=User stories applied for agile software development; citation_publication_date=2004; citation_id=CR5; citation_author=M Cohn; citation_publisher=Addison-Wesley; Gomez A, Rueda G, Alarcon PP (2010) A systematic and lightweight method to identify dependencies between user stories. In: Agile Processes in Software Engineering and Extreme Programming. XP 2010. Lecture Notes in Business Information Processing, vol 48, pp 190-195. Springer, Berlin, Heidelberg. 
https://doi.org/10.1007/978-3-642-13054-0_17; Kassab M (2015) The changing landscape of requirements engineering practices over the past decade. In: 5th International workshop on empirical requirements engineering, EmpiRE 2015--Proceedings. IEEE. 
https://doi.org/10.1109/empire.2015.7431299; Lucassen G, Dalpiaz F, van der Werf J, Brinkkemper S (2015) Forging high-quality user stories: towards a discipline for agile requirements. In: 2015 IEEE 23rd international requirements engineering conference, RE 2015--Proceedings, pp 126-135. 
https://doi.org/10.1109/re.2015.7320415; citation_title=The use and effectiveness of user stories in practice; citation_inbook_title=Requirements engineering: foundation for software quality; citation_publication_date=2016; citation_pages=205-222; citation_id=CR9; citation_author=G Lucassen; citation_author=F Dalpiaz; citation_author=J Werf; citation_author=S Brinkkemper; citation_publisher=Springer; citation_title=Jobs-to-be-done oriented requirements engineering: a method for defining job stories; citation_inbook_title=Requirements engineering: foundation for software quality. REFSQ 2018. Lecture notes in computer science; citation_publication_date=2018; citation_pages=227-243; citation_id=CR10; citation_author=G Lucassen; citation_author=M Keuken; citation_author=F Dalpiaz; citation_author=S Brinkkemper; citation_author=GW Sloof; citation_author=J Schlingmann; citation_publisher=Springer; citation_journal_title=Cogn Technol Work; citation_title=Scenario-based requirements capture for human factors integration; citation_author=IS MacLeod; citation_volume=10; citation_issue=3; citation_publication_date=2008; citation_pages=191-198; citation_doi=10.1007/s10111-007-0099-3; citation_id=CR11; citation_title=User requirements analysis: a review of supporting methods; citation_inbook_title=In: IFIP World Computer Congress. Usability, IFIP WCC TC13; citation_publication_date=2002; citation_pages=133-148; citation_id=CR12; citation_author=M Maguire; citation_author=N Bevan; citation_publisher=Springer; citation_journal_title=IEEE Softw; citation_title=On formalism in specifications; citation_author=B Meyer; citation_volume=2; citation_issue=1; citation_publication_date=1985; citation_pages=6-26; citation_doi=10.1109/MS.1985.229776; citation_id=CR13; citation_journal_title=Int J Man Mach Stud; citation_title=A virtual protocol model for computer-human interaction; citation_author=J Nielsen; citation_volume=24; citation_issue=3; citation_publication_date=1986; citation_pages=301-312; citation_doi=10.1016/S0020-7373(86)80028-1; citation_id=CR14; North D (2019) What's in a story? 
https://dannorth.net/whats-in-a-story/

. Accessed 1 Jan 2019; citation_title=Agile project management with scrum; citation_publication_date=2004; citation_id=CR16; citation_author=K Schwaber; citation_publisher=Microsoft Press; Silva TR (2016) Definition of a behavior-driven model for requirements specification and testing of interactive systems. In: Proceedings--2016 IEEE 24th International Requirements Engineering Conference, RE 2016, pp 444-449. 
https://doi.org/10.1109/re.2016.12; Silva TR, Winckler MAA (2016) Towards automated requirements checking throughout development processes of interactive systems. In: 2nd Workshop on Continuous Requirements Engineering (CRE), REFSQ 2016, pp 1-2.; Silva TR, Winckler M (2017) A scenario-based approach for checking consistency in user interface design artifacts. In: IHC'17, Proceedings of the 16th Brazilian Symposium on Human Factors in Computing Systems, pp 21-30. 
https://doi.org/10.1145/3160504.3160506; citation_journal_title=Complex Syst Inf Model Q; citation_title=An approach for multi-artifact testing through an ontological perspective for behavior-driven development; citation_author=TR Silva, J-L Hak, M Winckler; citation_volume=7; citation_publication_date=2016; citation_pages=81-107; citation_doi=10.7250/csimq.2016-7.05; citation_id=CR20; Silva TR, Hak J-L, Winckler M (2016b) Testing prototypes and final user interfaces through an ontological perspective for behavior-driven development. In: Proceedings of the 6th International Working Conference on Human-Centred Software Engineering, and 8th International Working Conference on Human Error, Safety, and System Development (HCSE 2016 and HESSD 2016). LNCS, vol 9856, pp 86-107. 
https://doi.org/10.1007/978-3-319-44902-9_7; Silva TR, Hak J-L, Winckler M (2017a) A behavior-based ontology for supporting automated assessment of interactive systems. In: Proceedings--IEEE 11th International Conference on Semantic Computing, ICSC 2017, pp 250-257. 
https://doi.org/10.1109/icsc.2017.73; citation_journal_title=Int J Seman Comput; citation_title=A formal ontology for describing interactive behaviors and supporting automated testing on user interfaces; citation_author=TR Silva, J-L Hak, M Winckler; citation_volume=11; citation_issue=04; citation_publication_date=2017; citation_pages=513-539; citation_doi=10.1142/S1793351X17400219; citation_id=CR23; Trkman M, Mendling J, Krisper M (2016) Using business process models to better understand the dependencies among user stories. In: Information and Software Technology, vol 71. Elsevier B.V., pp 58-76. 
https://doi.org/10.1016/j.infsof.2015.10.006; citation_title=Bridging enterprise and software engineering through an user-centered design perspective; citation_inbook_title=Web Information Systems Engineering - WISE 2016. Lecture Notes in Computer Science; citation_publication_date=2016; citation_pages=349-357; citation_id=CR25; citation_author=P Valente; citation_author=T Silva; citation_author=M Winckler; citation_author=N Nunes; citation_publisher=Springer; citation_title=The goals approach: agile enterprise driven software development; citation_inbook_title=Complexity in Information Systems Development. Lecture Notes in Information Systems and Organisation; citation_publication_date=2017; citation_pages=201-219; citation_id=CR26; citation_author=P Valente; citation_author=T Silva; citation_author=M Winckler; citation_author=N Nunes; citation_publisher=Springer; citation_journal_title=Annu Rev Control; citation_title=Towards increased systems resilience: new challenges based on dissonance control for human reliability in cyber-physical and human systems; citation_author=F Vanderhaegen; citation_volume=44; citation_publication_date=2017; citation_pages=316-322; citation_doi=10.1016/j.arcontrol.2017.09.008; citation_id=CR27; citation_journal_title=Cogni Technol Work; citation_title='Can dissonance engineering improve risk analysis of human-machine systems?; citation_author=F Vanderhaegen, O Carsten; citation_volume=19; citation_issue=1; citation_publication_date=2017; citation_pages=1-12; citation_doi=10.1007/s10111-017-0405-7; citation_id=CR28; citation_title=Unifying and extending user story models; citation_inbook_title=International Conference on Advanced Information Systems Engineering (CAiSE 2014). Lecture Notes in Computer Science; citation_publication_date=2014; citation_pages=211-225; citation_id=CR29; citation_author=Y Wautelet; citation_author=S Heng; citation_author=M Kolp; citation_author=I Mirbel; citation_publisher=Springer; citation_title=On modelers ability to build a visual diagram from a user story set: a goal-oriented approach; citation_inbook_title=International Working Conference on Requirements Engineering: Foundation for Software Quality (REFSQ 2018). Lecture Notes in Computer Science; citation_publication_date=2014; citation_pages=209-226; citation_id=CR30; citation_author=Y Wautelet; citation_author=M Velghe; citation_author=S Heng; citation_author=S Poelmans; citation_author=M Kolp; citation_publisher=Springer"	437 - 457	"""@ARTICLE{RochaSilva2020437,
    author = ""Rocha Silva, Thiago and Winckler, Marco and Bach, Cedric"",
    title = ""Evaluating the usage of predefined interactive behaviors for writing user stories: an empirical study with potential product owners"",
    year = ""2020"",
    journal = ""Cognition, Technology and Work"",
    volume = ""22"",
    number = ""3"",
    pages = ""437 - 457"",
    doi = ""10.1007/s10111-019-00566-3"",
    url = ""https://www.scopus.com/inward/record.uri?eid=2-s2.0-85066046065\&doi=10.1007\%2fs10111-019-00566-3\&partnerID=40\&md5=271f70b73b34f5f20b8b0e97e05e0585"",
    affiliations = ""ICS-IRIT, Universite Toulouse III - Paul Sabatier, Toulouse, France; Department of Computer Science, Norwegian University of Science and Technology (NTNU), Trondheim, Norway; SPARKS-i3S, Universite Nice Sophia Antipolis (Polytech), Sophia Antipolis, France; Human Design Group, HDG, Toulouse, France"",
    abstract = ""Behavior-driven development (BDD) has gained popularity in agile software development as a means of specifying user requirements through user stories and scenarios for interactive systems under construction. Templates for guiding the writing of such stories are widely employed and can be helpful to ensure that consistent information about the requirements is provided. With the aim of getting preliminary results about how product owners (POs) write their own user stories under a predefined template, we conducted a case study with potential POs at the department in charge of business trips in a French research institute. The participants were invited to write their own user stories to describe a feature they are used to perform. The resultant stories have been analyzed to check their adherence to a template including common interactive behaviors defined by an ontology for interactive systems. Although the participants have followed different specification strategies, we observed an overall high level of adherence to the proposed template (62.26\%). The results also pointed out to a wide use of domain-dependent behaviors, with the interactive behaviors defined by the ontology being, to some extent, reproduced by the participants even without prior training in the adopted vocabulary. (c) 2019, Springer-Verlag London Ltd., part of Springer Nature."",
    author_keywords = ""Agile software development; Behavior-driven development (BDD); User requirements; User stories"",
    keywords = ""Agile manufacturing systems; Boolean functions; Ontology; Software design; Agile software development; Behavior-driven development (BDD); Empirical studies; Interactive behavior; Interactive system; Research institutes; User requirements; User stories; Behavioral research"",
    correspondence_address = ""T. Rocha Silva; Department of Computer Science, Norwegian University of Science and Technology (NTNU), Trondheim, Norway; email: thiago.silva@ntnu.no"",
    publisher = ""Springer"",
    issn = ""14355558"",
    language = ""English"",
    abbrev_source_title = ""Cogn. Technol. Work"",
    type = ""Article"",
    publication_stage = ""Final"",
    source = ""Scopus"",
    note = ""Cited by: 17""
}
"""	Included	Included	new_screen			2	Scopus Signed In		Evaluating the usage of predefined interactive behaviors for writing user stories: an empirical study with potential product owners	https://link.springer.com/article/10.1007/s10111-019-00566-3	Springer	
36	Behave	On the empirical evaluation of BDD scenarios quality: Preliminary findings of an empirical study	"Behavior-Driven Development (BDD) is a set of software engineering practices which uses a ubiquitous language, one that business and technical people can understand, to describe and model a system by a series of textual scenarios. However, we believe that the value of those textual scenarios is connected with how well they convey and document the details discussed by the team about the behaviors needed to fulfill customer needs. Thus, there is the need to define what would be a ""good"" BDD scenario and how to evaluate scenarios. On this research design paper, we describe a study designed to understand how known quality attributes from other types of requirements specifications (like use cases or user stories) can be used with BDD scenarios. We also report our preliminary findings after performing it with novice evaluators. Those findings indicate that some of those attributes can be used to support BDD scenarios assessments."	Boolean functions; Requirements engineering; Software engineering; Behavior-driven development; Empirical evaluations; Empirical studies; Quality attributes; Requirements specifications; Research designs; Scenarios assessment; Software engineering practices; Quality control; Boolean functions;  Requirements engineering;  Software engineering;  Behavior-driven development;  Empirical evaluations;  Empirical studies;  Quality attributes;  Requirements specifications;  Research designs;  Scenarios assessment;  Software engineering practices;  Quality control	Oliveira, Gabriel; Marczak, Sabrina	Proceedings - 2017 IEEE 25th International Requirements Engineering Conference Workshops, REW 2017	https://doi.org/10.1109/REW.2017.62		299 - 302	"""@CONFERENCE{Oliveira2017299,
    author = ""Oliveira, Gabriel and Marczak, Sabrina"",
    title = ""On the empirical evaluation of BDD scenarios quality: Preliminary findings of an empirical study"",
    year = ""2017"",
    journal = ""Proceedings - 2017 IEEE 25th International Requirements Engineering Conference Workshops, REW 2017"",
    pages = ""299 - 302"",
    doi = ""10.1109/REW.2017.62"",
    url = ""https://www.scopus.com/inward/record.uri?eid=2-s2.0-85034661005\&doi=10.1109\%2fREW.2017.62\&partnerID=40\&md5=e05cad68558aa8c1c7e41c54a4e9123e"",
    affiliations = ""Computer Science School, PUCRS, Porto Alegre, Brazil"",
    abstract = {Behavior-Driven Development (BDD) is a set of software engineering practices which uses a ubiquitous language, one that business and technical people can understand, to describe and model a system by a series of textual scenarios. However, we believe that the value of those textual scenarios is connected with how well they convey and document the details discussed by the team about the behaviors needed to fulfill customer needs. Thus, there is the need to define what would be a ""good"" BDD scenario and how to evaluate scenarios. On this research design paper, we describe a study designed to understand how known quality attributes from other types of requirements specifications (like use cases or user stories) can be used with BDD scenarios. We also report our preliminary findings after performing it with novice evaluators. Those findings indicate that some of those attributes can be used to support BDD scenarios assessments. (c) 2017 IEEE.},
    author_keywords = ""Behavior-driven development; Documentation evaluation; Documentation quality; Empirical study"",
    keywords = ""Boolean functions; Requirements engineering; Software engineering; Behavior-driven development; Empirical evaluations; Empirical studies; Quality attributes; Requirements specifications; Research designs; Scenarios assessment; Software engineering practices; Quality control"",
    publisher = ""Institute of Electrical and Electronics Engineers Inc."",
    isbn = ""978-153863488-2"",
    language = ""English"",
    abbrev_source_title = ""Proc. - IEEE Int. Requir. Eng. Conf. Workshops, REW"",
    type = ""Conference paper"",
    publication_stage = ""Final"",
    source = ""Scopus"",
    note = ""Cited by: 8; Conference name: 25th IEEE International Requirements Engineering Conference Workshops, REW 2017; Conference date: 4 September 2017 through 8 September 2017; Conference code: 130995""
}
"""	Included	Included	new_screen			2	Scopus Signed In		On the Empirical Evaluation of BDD Scenarios Quality: Preliminary Findings of an Empirical Study	https://www.scopus.com/record/display.uri?eid=2-s2.0-85034661005&origin=resultslist&sort=plf-f&src=s&sid=dfd52977a55f8a538e6a8d16f81616d4&sot=b&sdt=b&s=TITLE-ABS-KEY%28on+the+empirical+evaluation+of+bdd+scenarios+quality+preliminary+findings+of+an+empirical+study%29&sl=110&sessionSearchId=dfd52977a55f8a538e6a8d16f81616d4&relpos=0	Institute of Electrical and Electronics Engineers Inc	nan; References
37	Behave	On the applicability of BDD in a Business Intelligence project: experience report	Behavior-driven development (BDD) is a software development technique that in order to succeed relies heavily on the definition of clear acceptance criteria by software developers in the form of behavioral scenarios, later translated into acceptance tests. The adoption of BDD in Business Intelligence (BI) projects requires developers to have a broad acquaintance to business that often even customers themselves do not possess. This article presents an experience report on the use of BDD in the development of a large public health related BI project. Experience suggests that the use of BDD may not be appropriate for BI projects, especially during the early stages of development, when there is still insufficient clarity about business acceptance criteria. The need for broad maturity towards business understanding makes it complex to adopt the behavioral approach within the development process in projects of this nature.	Software quality;  behavior-driven development;  business intelligence.; Software quality, behavior-driven development, business intelligence.	Mello, Patr\'{\i}cia; Ximenes, Pablo; Lemos, Rousiany; Bessa, Ana Lu\'{\i}za; Cort\'{e}s, Mariela I.; Rocha, Cleilton Lima	SBQS '18: Proceedings of the XVII Brazilian Symposium on Software Quality	https://doi.org/10.1145/3275245.3275276		296-304	"""@inproceedings{10.1145/3275245.3275276,
    author = ""Mello, Patr\'{\i}cia and Ximenes, Pablo and Lemos, Rousiany and Bessa, Ana Lu\'{\i}za and Cort\'{e}s, Mariela I. and Rocha, Cleilton Lima"",
    title = ""On the applicability of BDD in a Business Intelligence project: experience report"",
    year = ""2018"",
    isbn = ""9781450365659"",
    publisher = ""Association for Computing Machinery"",
    address = ""New York, NY, USA"",
    url = ""https://doi.org/10.1145/3275245.3275276"",
    doi = ""10.1145/3275245.3275276"",
    abstract = ""Behavior-driven development (BDD) is a software development technique that in order to succeed relies heavily on the definition of clear acceptance criteria by software developers in the form of behavioral scenarios, later translated into acceptance tests. The adoption of BDD in Business Intelligence (BI) projects requires developers to have a broad acquaintance to business that often even customers themselves do not possess. This article presents an experience report on the use of BDD in the development of a large public health related BI project. Experience suggests that the use of BDD may not be appropriate for BI projects, especially during the early stages of development, when there is still insufficient clarity about business acceptance criteria. The need for broad maturity towards business understanding makes it complex to adopt the behavioral approach within the development process in projects of this nature."",
    booktitle = ""Proceedings of the XVII Brazilian Symposium on Software Quality"",
    pages = ""296-304"",
    numpages = ""9"",
    keywords = ""Software quality, behavior-driven development, business intelligence."",
    location = ""Curitiba, Brazil"",
    series = ""SBQS '18""
}
"""	Included	Included	new_screen			2	Scopus Signed In		On the Applicability of BDD in a Business Intelligence Project: Experience Report	https://dl.acm.org/doi/10.1145/3275245.3275276	Association for Computing Machinery	nan; References
38	Behave	BHive: Behavior-Driven development meets B-Method	"Behavior-Driven Development (BDD) is an ""outside-in"" approach to software development built upon semi-formal mediums for specifying the behavior of a system as it would be observed externally. Through the representation of a system as a collection of user stories and scenarios using BDD's notation, practitioners automate acceptance tests using examples of desired behavior for the envisioned system. A formal model created in concert with BDD tests would provide valuable insight into test validity and enhance the visibility of the problem domain. This work called BHive builds upon the formal underpinnings of BDD scenarios by mapping their ""Given,"" ""When,"" and ""Then"" statements to ""Precondition,"" ""Command,"" and ""Postcondition"" constructs as introduced by Floyd-Hoare logic. We posit that this mapping allows for a B-Method representation to be created and that such a model is useful for exploring system behavior and exposing gaps in requirements and test plans. In this extension of previous work, we outline recent additions to BDD tooling required for the described integration, present a new strategy for test case generation from our approach, and expand on the benefits of the BHive approach to integrating formalism within a BDD project."	Boolean functions; Formal methods; Mapping; Software design; Testing; Agile; B method; Behaviour-Driven development; Floyd-hoare logic; Problem domain; System behaviors; Test case generation; Test generations; Acceptance tests; Boolean functions;  Formal methods;  Mapping;  Software design;  Testing;  Agile;  B method;  Behaviour-Driven development;  Floyd-hoare logic;  Problem domain;  System behaviors;  Test case generation;  Test generations;  Acceptance tests	Carter, John Douglas; Gardner, William Bennett	Advances in Intelligent Systems and Computing	https://doi.org/10.1007/978-3-319-56157-8_11		232 - 255	"""@ARTICLE{Carter2018232,
    author = ""Carter, John Douglas and Gardner, William Bennett"",
    title = ""BHive: Behavior-Driven development meets B-Method"",
    year = ""2018"",
    journal = ""Advances in Intelligent Systems and Computing"",
    volume = ""561"",
    pages = ""232 - 255"",
    doi = ""10.1007/978-3-319-56157-8\_11"",
    url = ""https://www.scopus.com/inward/record.uri?eid=2-s2.0-85027834905\&doi=10.1007\%2f978-3-319-56157-8\_11\&partnerID=40\&md5=cc56ee1095813b94d042d58a10c32fbc"",
    affiliations = ""School of Computer Science, University of Guelph, Guelph, ON, Canada"",
    abstract = ""Behavior-Driven Development (BDD) is an ""outside-in"" approach to software development built upon semi-formal mediums for specifying the behavior of a system as it would be observed externally. Through the representation of a system as a collection of user stories and scenarios using BDD's notation, practitioners automate acceptance tests using examples of desired behavior for the envisioned system. A formal model created in concert with BDD tests would provide valuable insight into test validity and enhance the visibility of the problem domain. This work called BHive builds upon the formal underpinnings of BDD scenarios by mapping their ""Given,"" ""When,"" and ""Then"" statements to ""Precondition,"" ""Command,"" and ""Postcondition"" constructs as introduced by Floyd-Hoare logic. We posit that this mapping allows for a B-Method representation to be created and that such a model is useful for exploring system behavior and exposing gaps in requirements and test plans. In this extension of previous work, we outline recent additions to BDD tooling required for the described integration, present a new strategy for test case generation from our approach, and expand on the benefits of the BHive approach to integrating formalism within a BDD project. (c) 2018, Springer International Publishing AG."",
    author_keywords = ""Agile; B-Method; BDD; Behaviour-Driven development; Test generation"",
    keywords = ""Boolean functions; Formal methods; Mapping; Software design; Testing; Agile; B method; Behaviour-Driven development; Floyd-hoare logic; Problem domain; System behaviors; Test case generation; Test generations; Acceptance tests"",
    correspondence_address = ""J.D. Carter; School of Computer Science, University of Guelph, Guelph, Canada; email: jcarter@uoguelph.ca"",
    publisher = ""Springer Verlag"",
    issn = ""21945357"",
    language = ""English"",
    abbrev_source_title = ""Adv. Intell. Sys. Comput."",
    type = ""Book chapter"",
    publication_stage = ""Final"",
    source = ""Scopus"",
    note = ""Cited by: 1""
}
"""	Included	Included	new_screen			2	Scopus Signed In		BHive: Behavior-Driven development meets B-Method	https://www.scopus.com/record/display.uri?eid=2-s2.0-85027834905&origin=resultslist&sort=plf-f&src=s&sid=445507d9977fa23ce6754b9de7250330&sot=b&sdt=b&s=TITLE-ABS-KEY%28bhive+behavior+driven+development+meets+b+method%29&sl=63&sessionSearchId=445507d9977fa23ce6754b9de7250330&relpos=0	Springer Verlag	nan; References
39	Behave	Automatically generating tests from natural language descriptions of software behavior	"Behavior-Driven Development (BDD) is an emerging agile development approach where all stakeholders (including developers and customers) work together to write user stories in structured natural language to capture a software application's functionality in terms of required ""behaviors."" Developers can then manually write ""glue"" code so that these scenarios can be translated into executable software tests. This glue code represents individual steps within unit and acceptance test cases, and tools exist that automate the mapping from scenario descriptions to manually written code steps (typically using regular expressions). This paper takes the position that, instead of requiring programmers to write manual glue code, it is practical to convert natural language scenario descriptions into executable software tests fully automatically. To show feasibility, this paper presents preliminary results from a tool called Kirby that uses natural language processing techniques to automatically generate executable software tests from structured English scenario descriptions. Kirby relieves the developer from the laborious work of writing code for the individual steps described in scenarios, so that both developers and customers can both focus on the scenarios as pure behavior descriptions (understandable to all, not just programmers). Preliminary results from assessing the performance and accuracy of this technique are presented."	Acceptance tests; Application programs; Automatic test pattern generation; Glues; Gluing; Natural language processing systems; Pattern matching; Software engineering; Tools; Agile methods; Automated code generation; Automated testing; Behavior-driven development; Feature description; NAtural language processing; Probabilistic analysis; Test driven development; Software testing; Acceptance tests;  Application programs;  Automatic test pattern generation;  Glues;  Gluing;  Natural language processing systems;  Pattern matching;  Software engineering;  Tools;  Agile methods;  Automated code generation;  Automated testing;  Behavior-driven development;  Feature description;  NAtural language processing;  Probabilistic analysis;  Test driven development;  Software testing	Kamalakar, Sunil; Edwards, Stephen H.; Dao, Tung M.	ENASE 2013 - Proceedings of the 8th International Conference on Evaluation of Novel Approaches to Software Engineering	https://www.scopus.com/record/display.uri?eid=2-s2.0-84887061776&origin=resultslist&sort=plf-f&src=s&sid=2c169b420f9be7389f07afb2fde8a78a&sot=b&sdt=b&s=TITLE-ABS-KEY%28automatically+generating+tests+from+natural+language+descriptions+of+software+behavior%29&sl=101&sessionSearchId=2c169b420f9be7389f07afb2fde8a78a&relpos=0		238 - 245	"""@CONFERENCE{Kamalakar2013238,
    author = ""Kamalakar, Sunil and Edwards, Stephen H. and Dao, Tung M."",
    title = ""Automatically generating tests from natural language descriptions of software behavior"",
    year = ""2013"",
    journal = ""ENASE 2013 - Proceedings of the 8th International Conference on Evaluation of Novel Approaches to Software Engineering"",
    pages = ""238 - 245"",
    url = ""https://www.scopus.com/inward/record.uri?eid=2-s2.0-84887061776\&partnerID=40\&md5=6159a06fc6995d15a944ba55917b2a55"",
    affiliations = ""Department of Computer Science, Virginia Tech, Blacksburg, VA, 2202 Kraft Drive (0902), United States"",
    abstract = {Behavior-Driven Development (BDD) is an emerging agile development approach where all stakeholders (including developers and customers) work together to write user stories in structured natural language to capture a software application's functionality in terms of required ""behaviors."" Developers can then manually write ""glue"" code so that these scenarios can be translated into executable software tests. This glue code represents individual steps within unit and acceptance test cases, and tools exist that automate the mapping from scenario descriptions to manually written code steps (typically using regular expressions). This paper takes the position that, instead of requiring programmers to write manual glue code, it is practical to convert natural language scenario descriptions into executable software tests fully automatically. To show feasibility, this paper presents preliminary results from a tool called Kirby that uses natural language processing techniques to automatically generate executable software tests from structured English scenario descriptions. Kirby relieves the developer from the laborious work of writing code for the individual steps described in scenarios, so that both developers and customers can both focus on the scenarios as pure behavior descriptions (understandable to all, not just programmers). Preliminary results from assessing the performance and accuracy of this technique are presented. Copyright (c) 2013 SCITEPRESS.},
    author_keywords = ""Agile methods; Automated code generation; Automated testing; Behavior-driven development; Feature description; Natural language processing; Probabilistic analysis; Software testing; Test-driven development"",
    keywords = ""Acceptance tests; Application programs; Automatic test pattern generation; Glues; Gluing; Natural language processing systems; Pattern matching; Software engineering; Tools; Agile methods; Automated code generation; Automated testing; Behavior-driven development; Feature description; NAtural language processing; Probabilistic analysis; Test driven development; Software testing"",
    isbn = ""978-989856562-4"",
    language = ""English"",
    abbrev_source_title = ""ENASE - Proc. Int. Conf. Eval. Novel Approaches Softw. Eng."",
    type = ""Conference paper"",
    publication_stage = ""Final"",
    source = ""Scopus"",
    note = ""Cited by: 9; Conference name: 8th International Conference on Evaluation of Novel Approaches to Software Engineering, ENASE 2013; Conference date: 4 July 2013 through 6 July 2013; Conference code: 100615""
}
"""	Included	Included	new_screen			2	Scopus Signed In		Automatically generating tests from natural language descriptions of software behavior	https://www.scopus.com/record/display.uri?eid=2-s2.0-84887061776&origin=resultslist&sort=plf-f&src=s&sid=2c169b420f9be7389f07afb2fde8a78a&sot=b&sdt=b&s=TITLE-ABS-KEY%28automatically+generating+tests+from+natural+language+descriptions+of+software+behavior%29&sl=101&sessionSearchId=2c169b420f9be7389f07afb2fde8a78a&relpos=0		nan; References; Publisher
40	Behave	On the Understanding of How to Measure the Benefits of Behavior-Driven Development Adoption: Preliminary Literature Results from a Grey Literature Study	Behavior-Driven Development (BDD) is the integration of a ubiquitous language with Test-Driven Development and Automated Testing. From this integration, BDD supports software teams to build and deliver software. Although the perceived arguments of better results and of a more efficient development process, we still have no consolidated evidence of such benefits and how to measure them. Therefore, this long-term research aims to characterize how BDD adoption benefits can be measured. To do so, our research design includes a Multivocal Literature Review, composed of a Grey Literature to explore how industry tackles the topic and a Systematic Review to gather scientific evidences, followed of a Snowballing Review to supplement the search. Next, we will conduct empirical studies to characterize the topic from practice. This paper introduces our research and presents the results from our exploratory Grey Literature. We learned from these preliminary results that there are no models or frameworks defined to measure BDD adoption benefits but that teams indeed perceive improvements in software quality, communication, rework rates, among others. We also found that these teams also perceive that team engagement improves with the adoption of BDD and that although there is a certain cost (e.g., time and financial) involved, the investment pays off in the end. These results will inform the design of our Systematic Review and of our downstream empirical studies.	BDD Adoption;  Behavior-Driven Development;  Benefits;  Grey Literature Review;  Quality Measurement; BDD Adoption, Behavior-Driven Development, Benefits, Grey Literature Review, Quality Measurement	Couto, Thiciane; Marczak, Sabrina; Gomes, Fabio	SBQS '20: Proceedings of the XIX Brazilian Symposium on Software Quality	https://doi.org/10.1145/3439961.3440000		1-7	"""@inproceedings{10.1145/3439961.3440000,
    author = ""Couto, Thiciane and Marczak, Sabrina and Gomes, Fabio"",
    title = ""On the Understanding of How to Measure the Benefits of Behavior-Driven Development Adoption: Preliminary Literature Results from a Grey Literature Study"",
    year = ""2021"",
    isbn = ""9781450389235"",
    publisher = ""Association for Computing Machinery"",
    address = ""New York, NY, USA"",
    url = ""https://doi.org/10.1145/3439961.3440000"",
    doi = ""10.1145/3439961.3440000"",
    abstract = ""Behavior-Driven Development (BDD) is the integration of a ubiquitous language with Test-Driven Development and Automated Testing. From this integration, BDD supports software teams to build and deliver software. Although the perceived arguments of better results and of a more efficient development process, we still have no consolidated evidence of such benefits and how to measure them. Therefore, this long-term research aims to characterize how BDD adoption benefits can be measured. To do so, our research design includes a Multivocal Literature Review, composed of a Grey Literature to explore how industry tackles the topic and a Systematic Review to gather scientific evidences, followed of a Snowballing Review to supplement the search. Next, we will conduct empirical studies to characterize the topic from practice. This paper introduces our research and presents the results from our exploratory Grey Literature. We learned from these preliminary results that there are no models or frameworks defined to measure BDD adoption benefits but that teams indeed perceive improvements in software quality, communication, rework rates, among others. We also found that these teams also perceive that team engagement improves with the adoption of BDD and that although there is a certain cost (e.g., time and financial) involved, the investment pays off in the end. These results will inform the design of our Systematic Review and of our downstream empirical studies."",
    booktitle = ""Proceedings of the XIX Brazilian Symposium on Software Quality"",
    articleno = ""39"",
    numpages = ""7"",
    keywords = ""BDD Adoption, Behavior-Driven Development, Benefits, Grey Literature Review, Quality Measurement"",
    location = ""S\\textasciitilde {a}o Lu\'{\i}s, Brazil"",
    series = ""SBQS '20""
}
"""	Excluded	Excluded	new_screen			2	Scopus Signed In		On the Understanding of How to Measure the Benefits of Behavior-Driven Development Adoption: Preliminary Literature Results from a Grey Literature Study	https://dl.acm.org/doi/10.1145/3439961.3440000	Association for Computing Machinery	nan; References
41	Behave	Behavior-driven development: conference tutorial	Behavior-driven development is a software development technique in which system behaviors are determined and made into test cases before the software itself is written. Benefits can include a richer and deeper understanding of system requirements in addition to making these requirements executable. Moreover, this technique helps guide software developers in knowing what to test as well as knowing how much to test. In this tutorial, we introduce the fundamentals of this approach, a language for expressing system behaviors, and explain how to use this technique effectively in the undergraduate computer science curriculum.		Kart, Michael	J. Comput. Sci. Coll.	https://doi.org/10.5555/2167431.2167445		75	"""@article{10.5555/2167431.2167445,
    author = ""Kart, Michael"",
    title = ""Behavior-driven development: conference tutorial"",
    year = ""2012"",
    issue_date = ""April 2012"",
    publisher = ""Consortium for Computing Sciences in Colleges"",
    address = ""Evansville, IN, USA"",
    volume = ""27"",
    number = ""4"",
    issn = ""1937-4771"",
    abstract = ""Behavior-driven development is a software development technique in which system behaviors are determined and made into test cases before the software itself is written. Benefits can include a richer and deeper understanding of system requirements in addition to making these requirements executable. Moreover, this technique helps guide software developers in knowing what to test as well as knowing how much to test. In this tutorial, we introduce the fundamentals of this approach, a language for expressing system behaviors, and explain how to use this technique effectively in the undergraduate computer science curriculum."",
    journal = ""J. Comput. Sci. Coll."",
    month = ""apr"",
    pages = ""75"",
    numpages = ""1""
}
"""	Excluded	Excluded	new_screen			2	Scopus Signed In		Behavior-Driven Development: Conference Tutorial	https://dl.acm.org/doi/10.5555/2167431.2167445	Consortium for Computing Sciences in Colleges	nan; Keywords; References
42	Behave	A Study of the Characteristics of Behaviour Driven Development	Behaviour Driven Development (BDD) has gained increasing attention as an agile development approach in recent years. However, characteristics that constitute the BDD approach are not clearly defined. In this paper, we present a set of main BDD characteristics identified through an analysis of relevant literature and current BDD toolkits. Our study can provide a basis for understanding BDD, as well as for extending the exisiting BDD toolkits or developing new ones.	Data structures; Boolean functions; Business; Software; Testing; Context; Programming; Conceptual Model; Cucumber; Software Development; Set Of Characteristics; Plaintext; Model Domain; Design Phase; Domain Experts; Acceptance Criteria; Implementation Phase; Testing Tools; Class Assignment; Planning Phase; Regular Expressions; Acceptable Test; Business Value; Refactoring; Mapping Rules; Business Outcomes; Behaviour Driven Development; Test Driven Development; Ubiquitous Language; Automated Acceptance Testing	Carlos Solis; Xiaofeng Wang	2011 37th EUROMICRO Conference on Software Engineering and Advanced Applications	https://doi.org/10.1109/SEAA.2011.76				Included	Included	new_screen			2	IEEE		A Study of the Characteristics of Behaviour Driven Development	https://ieeexplore.ieee.org/document/6068372	IEEE	nan; References; Pages; Year; Bibtex
43	Behave	Behave Nicely! Automatic Generation of Code for Behaviour Driven Development Test Suites	Behaviour driven development (BDD) has gained widespread use in the software industry. System specifications can be expressed as test scenarios, describing the circumstances, actions and expected outcomes. These scenarios are written in a structured natural language (Gherkin), with each step in the scenario associated with a corresponding step implementation function in the underlying programming language. A challenge recognised by industry is ensuring that the natural language scenarios, step implementation functions and underlying system implementation remain consistent with one another, requiring on-going maintenance effort as changes are made to a system. To address this, we have developed behave_nicely, a tool, for automatically generating step implementation functions from structured natural language steps, with the intention of eliminating the need for maintaining step implementation functions. We evaluated our approach on a sample of 20 white box and 50 black box projects using behaviour driven development, drawn from GitHub. Our results show that behave_nicely can generate step implementation functions for 80% of the white box and 17% of black box projects. We conclude that (a) there is significant potential for automating the process of code generation for BDD tests and (b) that the development of guidelines for writing tests in Gherkin would significantly improve the results.	Natural languages;Maintenance engineering;Tools;Software;Testing;Industries;Computer languages;Behaviour driven development;code generation; Natural languages; Maintenance engineering; Tools; Software; Testing; Industries; Computer languages; Behaviour driven development; code generation	Storer, Tim; Bob, Ruxandra	2019 19th International Working Conference on Source Code Analysis and Manipulation (SCAM)	https://doi.org/10.1109/SCAM.2019.00033	"1.Behave nicely repository,  [online]  Available: https://gitlab.com/rbob96/behave_nicely. Google Scholar; 2.Introducing bdd,  [online]  Available: https://dannorth.net/introducing-bdd/. Google Scholar; 3.A. Carrera, C. A. Iglesias and M. Garijo, ""Beast methodology: An agile testing methodology for multi-agent systems based on behaviour driven development"", Information Systems Frontiers, vol. 16, no. 2, pp. 169-182, April 2014. CrossRef  Google Scholar; 4.E. Keogh, ""Bdd: A lean toolkit"", Processings of Lean Software & Systems Conference, 2010. Google Scholar; 5.C. Solis and X. Wang, ""A study of the characteristics of behaviour driven development"", 2011 37th EUROMICRO Conference on Software Engineering and Advanced Applications, pp. 383-387, Aug 2011. View Article  Google Scholar; 6.Behave,  [online]  Available: https://behave.readthedocs.io/en/latest/. Google Scholar; 7.Jbehave,  [online]  Available: https://jbehave.org/. Google Scholar; 8.Cucumber,  [online]  Available: https://docs.cucumber.io/. Google Scholar; 9.SpecFlow,  [online]  Available: https://specflow.org. Google Scholar; 10.CollabNet VersionOne, 13th annual state of agile report, May 2019,  [online]  Available: https://www.stateofagile.com. Google Scholar; 11.L. P. Binamungu, S. M. Embury and N. Konstantinou, ""Maintaining behaviour driven development specifications: Challenges and opportunities"", 2018 IEEE 25th International Conference on Software Analysis Evolution and Reengineering (SANER), pp. 175-184, March 2018. View Article  Google Scholar; 12.R. A. DeMillo, R. J. Lipton and F. G. Sayward, ""Hints on test data selection: Help for the practicing programmer"", IEEE Computer, vol. 11, no. 4, pp. 34-41, 1978. View Article  Google Scholar; 13.S. Kamalakar, Automatically generating tests from natural language descriptions of software behavior, 2013. Google Scholar; 14. [online]  Available: http://github.com.; 15.K. Beck, Test Driven Development by Example ser. Signature, Addison Wesley, November 2002. Google Scholar; 16.J. Dick and A. Faivre, ""Automating the generation and sequencing of test cases from model-based specifications"" in FME '93: Industrial-Strength Formal Methods, Berlin, Heidelberg:Springer Berlin Heidelberg, pp. 268-284, 1993. CrossRef  Google Scholar; 17.Y. G. Kim, H. S. Hong, D. H. Bae and S. D. Cha, ""Test cases generation from uml state diagrams"", IEE Proceedings - Software, vol. 146, no. 4, pp. 187-192, August 1999. CrossRef  Google Scholar; 18.N. Ismail, R. Ibrahim and N. Ibrahim, ""Automatic generation of test cases from use-case diagram"", Proceedings of the International Conference on Electrical Engineering and Informatics Institut Teknologi Bandung, June 17-19, 2007, January 2007. Google Scholar; 19.G. Fink and M. Bishop, ""Property-based testing: A new approach to testing for assurance"", SIGSOFT Softw. Eng. Notes, vol. 22, no. 4, pp. 74-80, Jul. 1997. CrossRef  Google Scholar; 20.Crowdsourced testing,  [online]  Available: https://www.rainforestqa.com/blog/2016-08-17-what-is-crowdsourced-testing/. Google Scholar; 21.A. Fatwanto, ""Software requirements specification analysis using natural language processing technique"", 2013 International Conference on QiR, pp. 105-110, June 2013. View Article  Google Scholar; 22.C. Arora, M. Sabetzadeh, L. Briand and F. Zimmer, ""Automated checking of conformance to requirements templates using natural language processing"", IEEE Transactions on Software Engineering, vol. 41, no. 10, pp. 944-968, October 2015. View Article  Google Scholar; 23.J. Kocerka, M. Krzeslak and A. Galuszka, ""Analysing quality of textual requirements using natural language processing: A literature review"", 23rd International Conference on Methods & Models in Automation & Robotics MMAR 2018, pp. 876-880, August 27-30, 2018. View Article  Google Scholar; 24.E. C. Groen, J. Schowalter, S. Kopczynska, S. Polst and S. Alvani, ""Is there really a need for using NLP to elicit requirements? A benchmarking study to assess scalability of manual analysis"", Joint Proceedings of REFSQ-2018 Workshops Doctoral Symposium Live Studies Track and Poster Track co-located with the 23rd International Conference on Requirements Engineering: Foundation for Software Quality (REFSQ 2018) Utrecht The Netherlands March 19 2018. ser. CEUR Workshop Proceedings, vol. 2075, 2018. Google Scholar; 25.A. Ferrari, ""Natural language requirements processing: From research to practice"", 2018 IEEE/ACM 40th International Conference on Software Engineering: Companion (ICSE-Companion), pp. 536-537, May 2018. CrossRef  Google Scholar; 26.C. Wang, F. Pastore, A. Goknil, L. Briand and Z. Iqbal, ""Automatic generation of system test cases from use case specifications"", Proceedings of the 2015 International Symposium on Software Testing and Analysis ser. ISSTA 2015, pp. 385-396, 2015. CrossRef  Google Scholar; 27.P. M. Duvall, S. Matyas and A. Glover, Continuous Integration: Improving Software Quality ser. Addison Wesley Signature Series, New Jersey:Addison Wesley, June 2007. Google Scholar; 28.Natural language toolkit,  [online]  Available: https://www.nltk.org/. Google Scholar; 29.Allennlp,  [online]  Available: https://allennlp.org/. Google Scholar; 30.T. C. Lethbridge, ""Priorities for the education and training of software engineers"", The Journal of Systems and Software, vol. 53, pp. 53-71, 2000. CrossRef  Google Scholar"	228-237	"""@INPROCEEDINGS{8930836,
    author = ""Storer, Tim and Bob, Ruxandra"",
    booktitle = ""2019 19th International Working Conference on Source Code Analysis and Manipulation (SCAM)"",
    title = ""Behave Nicely! Automatic Generation of Code for Behaviour Driven Development Test Suites"",
    year = ""2019"",
    volume = """",
    number = """",
    pages = ""228-237"",
    abstract = ""Behaviour driven development (BDD) has gained widespread use in the software industry. System specifications can be expressed as test scenarios, describing the circumstances, actions and expected outcomes. These scenarios are written in a structured natural language (Gherkin), with each step in the scenario associated with a corresponding step implementation function in the underlying programming language. A challenge recognised by industry is ensuring that the natural language scenarios, step implementation functions and underlying system implementation remain consistent with one another, requiring on-going maintenance effort as changes are made to a system. To address this, we have developed behave\_nicely, a tool, for automatically generating step implementation functions from structured natural language steps, with the intention of eliminating the need for maintaining step implementation functions. We evaluated our approach on a sample of 20 white box and 50 black box projects using behaviour driven development, drawn from GitHub. Our results show that behave\_nicely can generate step implementation functions for 80\% of the white box and 17\% of black box projects. We conclude that (a) there is significant potential for automating the process of code generation for BDD tests and (b) that the development of guidelines for writing tests in Gherkin would significantly improve the results."",
    keywords = ""Natural languages;Maintenance engineering;Tools;Software;Testing;Industries;Computer languages;Behaviour driven development;code generation"",
    doi = ""10.1109/SCAM.2019.00033"",
    ISSN = ""2470-6892"",
    month = ""Sep.""
}
"""	Included	Included	new_screen			2	Scopus Signed In		Behave nicely! automatic generation of code for behaviour driven development test suites	https://ieeexplore.ieee.org/document/8930836	IEEE	
44	Behave	Characterising the Quality of Behaviour Driven Development Specifications	Behaviour Driven Development (BDD) is an agile testing technique that enables software requirements to be specified as example interactions with the system, using structured natural language. While (in theory) being readable by non-technical stakeholders, the examples can also be executed against the code base to identify behaviours that are not yet correctly implemented. Writing good BDD suites, however, is challenging. A typical suite can contain hundreds of individual scenarios, that must correctly specify the system as a whole as well as individually. Despite much discussion amongst practitioners and in the blogosphere, as yet no formal definition of what makes for a high quality BDD suite has been given. To shed light on this, we surveyed BDD practitioners, asking for their opinions on the quality criteria that are important for BDD suites. We proposed, and asked for opinions on, four quality principles, and gave practitioners the option to add more principles of their own. This paper reports on the results of the survey, and presents an approach to defining BDD suite quality. © The Author(s) 2020.		Binamungu L.P., Embury S.M., Konstantinou N.	Lecture Notes in Business Information Processing	https://doi.org/doi:10.1007/978-3-030-49392-9_6				Included	Included	new_screen			2	Pub Med Central		Characterising the Quality of Behaviour Driven Development Specifications	https://www.ncbi.nlm.nih.gov/pmc/articles/PMC7251619/		nan; Venue; Authors; Abstract; Keywords; References; Pages; Year; Bibtex; Publisher
45	Behave	Behaviour-driven development of foundational UML components	Behaviour-Driven Development (BDD) focuses all development activities on the delivery of behaviours - what a system should do, described such that developers and domain experts speak the same language. BDD frameworks allow users to represent the required system behaviour as executable user stories and the acceptance criteria as executable scenarios attached to user stories. In this paper we define a UML profile that allows users to create executable Foundational UML (fUML) stories and scenarios. In order to easily construct scenarios we introduce a BDD model library which contains fUML activities for testing equalities and inclusions. We also present an Eclipse-based development tool that supports a BDD approach for developing fUML components. The tool provides developers a concrete syntax for defining executable scenarios, and automatically updates the project status based on verified delivered behaviorus.	Specifications; Acceptance criteria; behaviour-driven development; Executable specifications; Executable UML; User stories; Formal logic; Specifications;  Acceptance criteria;  behaviour-driven development;  Executable specifications;  Executable UML;  User stories;  Formal logic	Lazar, Ioan; Motogna, Simona; Parv, Bazil	Electronic Notes in Theoretical Computer Science	https://doi.org/10.1016/j.entcs.2010.07.007		91 - 105	"""@ARTICLE{Lazar201091,
    author = ""Lazar, Ioan and Motogna, Simona and Parv, Bazil"",
    title = ""Behaviour-driven development of foundational UML components"",
    year = ""2010"",
    journal = ""Electronic Notes in Theoretical Computer Science"",
    volume = ""264"",
    number = ""1"",
    pages = ""91 - 105"",
    doi = ""10.1016/j.entcs.2010.07.007"",
    url = ""https://www.scopus.com/inward/record.uri?eid=2-s2.0-77955705236\&doi=10.1016\%2fj.entcs.2010.07.007\&partnerID=40\&md5=f60d0321c5d64335bfed145a66821f27"",
    affiliations = ""Department of Computer Science, Babes-Bolyai University, Cluj-Napoca, Romania"",
    abstract = ""Behaviour-Driven Development (BDD) focuses all development activities on the delivery of behaviours - what a system should do, described such that developers and domain experts speak the same language. BDD frameworks allow users to represent the required system behaviour as executable user stories and the acceptance criteria as executable scenarios attached to user stories. In this paper we define a UML profile that allows users to create executable Foundational UML (fUML) stories and scenarios. In order to easily construct scenarios we introduce a BDD model library which contains fUML activities for testing equalities and inclusions. We also present an Eclipse-based development tool that supports a BDD approach for developing fUML components. The tool provides developers a concrete syntax for defining executable scenarios, and automatically updates the project status based on verified delivered behaviorus. (c) 2010 Elsevier B.V."",
    author_keywords = ""acceptance criteria; behaviour-driven development; executable specification; executable UML; user story"",
    keywords = ""Specifications; Acceptance criteria; behaviour-driven development; Executable specifications; Executable UML; User stories; Formal logic"",
    correspondence_address = ""I. Lazar; Department of Computer Science, Babes-Bolyai University, Cluj-Napoca, Romania; email: ilazar@cs.ubbcluj.ro"",
    issn = ""15710661"",
    language = ""English"",
    abbrev_source_title = ""Electron. Notes Theor. Comput. Sci."",
    type = ""Conference paper"",
    publication_stage = ""Final"",
    source = ""Scopus"",
    note = ""Cited by: 34; All Open Access, Gold Open Access""
}
"""	Included	Included	new_screen			2	Scopus Signed In		Behaviour-Driven Development of Foundational UML Components	https://www.scopus.com/record/display.uri?eid=2-s2.0-77955705236&origin=resultslist&sort=plf-f&src=s&sid=10418915816aa4ee79e237b8c1bc0461&sot=b&sdt=b&s=TITLE-ABS-KEY%28behaviour+driven+development+of+foundational+uml+components%29&sl=74&sessionSearchId=10418915816aa4ee79e237b8c1bc0461&relpos=0		nan; References; Publisher
46	Behave	BHive: Towards Behaviour-Driven Development Supported by B-Method	"Behaviour-Driven Development (BDD) is an ""outside-in"" approach to software development built upon semi-formal mediums for specifying the behaviour of a system as it would be observed externally. Through the representation of a system as a collection of user stories and scenarios using BDD's notation, practitioners automate acceptance tests using examples of desired behaviour for the envisioned system. A formal model created in concert with BDD tests would provide valuable insight into test validity and enhance the visibility of the problem domain. This work called BHive builds upon the formal underpinnings of BDD scenarios by mapping their ""Given,"" ""When,"" and ""Then"" statements to ""Precondition,"" ""Command,"" and ""Postcondition"" constructs as introduced by Floyd-Hoare logic. We posit that this mapping allows for a B-Method representation to be created and that such a model is useful for exploring system behaviour and exposing gaps in requirements. We also outline extensions to BDD tooling required for the described integration and present benefits of the BHive approach to integrating formalism within a BDD project."	Software;Testing;Stakeholders;Shape;Documentation;Conferences;BDD;Behaviour-Driven Development;B-Method;Agile; Software; Testing; Stakeholders; Shape; Documentation; Conferences; BDD; Behaviour-Driven Development; B-Method; Agile	Carter, J.; Gardner, W. B.	2016 IEEE 17th International Conference on Information Reuse and Integration (IRI)	https://doi.org/10.1109/IRI.2016.39	"1.K. Beck, M. Beedle, A. van Bennekum, A. Cockburn, W. Cunningham, M. Fowler, et al., ""Manifesto for Agile Software Development"", 2001,  [online]  Available: http://www.agilemanifesto.org/. Google Scholar; 2.K. Forsberg and H. Mooz, ""The relationship of system engineering to the project cycle"", Proc. of the National Council for Systems Engineering First Annual Conference, pp. 57-61, 1991. CrossRef  Google Scholar; 3.D. North, ""Behavior modification: The evolution of behaviour-driven development"", Better Software Magazine, Mar. 2006. Google Scholar; 4.E. Evans, Domain-Driven Design: Tackling Complexity in the Heart of Software, Boston:Addison-Wesley Longman, 2003. Google Scholar; 5.""Gherkin wiki"", 2016,  [online]  Available: https://github.com/cucumber/cucumber/wiki/Gherkin. Google Scholar; 6.B. Rice, R. Jones and J. Enge, ""Welcome to behave!"", 2014,  [online]  Available: http://pythonhosted.org/behave/. Google Scholar; 7.C. A. R. Hoare, ""An axiomatic basis for computer programming"", Communications of the ACM, vol. 12, no. 10, pp. 576-580, 1969. CrossRef  Google Scholar; 8.J.-R. Abrial, The B-book: Assigning Programs to Meanings, New York:Cambridge University Press, 1996. CrossRef  Google Scholar; 9.J.-R. Abrial, Modeling in Event-B: System and Software Engineering, New York:Cambridge University Press, 2010. CrossRef  Google Scholar; 10.G. Eleftherakis and A. J. Cowling, ""An agile formal development methodology"", Proc. 1st South-East European Workshop on Formal Methods (SEEFM 03), pp. 36-47, 2003. Google Scholar; 11.K. Scott, The Unified Process Explained, Boston:Addison- Wesley Longman, 2002. Google Scholar; 12.J. S. Ostroff, D. Makalsky and R. F. Paige, ""Agile specification-driven development"", Lecture Notes in Computer Science, vol. 3092, pp. 104-112, 2004. CrossRef  Google Scholar; 13.B. Meyer, ""Applying ""Design by Contract"", Computer, vol. 25, pp. 40-51, Oct. 1992. View Article  Google Scholar; 14.K. Beck, Test-Driven Development: By Example, Boston:Addison-Wesley Longman, 2002. Google Scholar; 15.K. Beck and C. Andres, Extreme Programming Explained: Embrace Change, Boston:Addison-Wesley Professional, 2004. Google Scholar; 16.M. Lopez-Nores, J. J. Pazos-Arias, J. Garcia-Duque and B. Barragans-Martinez, ""An agile approach to support incremental development of requirements specifications"", Proc. Australian Software Engineering Conference (ASWEC 06), pp. 9-18, 2006. View Article  Google Scholar; 17.S. Black, P. P. Boca, J. P. Bowen, J. Gorman and M. Hinchey, ""Formal Versus Agile: Survival of the Fittest"", Computer, vol. 42, pp. 37-45, Sep. 2009. View Article  Google Scholar; 18.R. C. Martin, ""The bowling game kata"",  [online]  Available: http://butunclebob.com/ArticleS.UncleBob.TheBowlingGameKata. Google Scholar; 19.M. Leuschel, J. Bendisposto, I. Dobrikov, S. Krings and D. Plagge, ""From animation to data validation: The ProB constraint solver 10 years on"" in Formal Methods Applied to Complex Systems: Implementation of the B Method, Hoboken, NJ:Wiley ISTE, pp. 427-446, 2014. CrossRef  Google Scholar"	249-256	"""@INPROCEEDINGS{7785748,
    author = ""Carter, J. and Gardner, W. B."",
    booktitle = ""2016 IEEE 17th International Conference on Information Reuse and Integration (IRI)"",
    title = ""BHive: Towards Behaviour-Driven Development Supported by B-Method"",
    year = ""2016"",
    volume = """",
    number = """",
    pages = ""249-256"",
    abstract = {Behaviour-Driven Development (BDD) is an ""outside-in"" approach to software development built upon semi-formal mediums for specifying the behaviour of a system as it would be observed externally. Through the representation of a system as a collection of user stories and scenarios using BDD's notation, practitioners automate acceptance tests using examples of desired behaviour for the envisioned system. A formal model created in concert with BDD tests would provide valuable insight into test validity and enhance the visibility of the problem domain. This work called BHive builds upon the formal underpinnings of BDD scenarios by mapping their ""Given,"" ""When,"" and ""Then"" statements to ""Precondition,"" ""Command,"" and ""Postcondition"" constructs as introduced by Floyd-Hoare logic. We posit that this mapping allows for a B-Method representation to be created and that such a model is useful for exploring system behaviour and exposing gaps in requirements. We also outline extensions to BDD tooling required for the described integration and present benefits of the BHive approach to integrating formalism within a BDD project.},
    keywords = ""Software;Testing;Stakeholders;Shape;Documentation;Conferences;BDD;Behaviour-Driven Development;B-Method;Agile"",
    doi = ""10.1109/IRI.2016.39"",
    ISSN = """",
    month = ""July""
}
"""	Included	Included	new_screen			2	Scopus Signed In		BHive: Towards Behaviour-Driven Development Supported by B-Method	https://ieeexplore.ieee.org/document/7785748	IEEE	
47	Behave	Empirical Findings on BDD Story Parsing to Support Consistency Assurance between Requirements and Artifacts	Behaviour-Driven Development (BDD) stories have gained considerable attention in recent years as an effective way to specify and test user requirements in agile software development projects. External testing frameworks also allow developers to automate the execution of BDD stories and check whether a fully functional software system behaves as expected. However, other software artifacts may quite often lose synchronization with the stories, and many inconsistencies can arise with respect to requirements representation. This paper reports on preliminary empirical findings regarding the performance of two existing approaches in the literature intended to support consistency assurance between BDD stories and software artifacts. The first approach involves the parsing of BDD stories in order to identify conceptual elements to automatically generate consistent class diagrams, while the second approach seeks to identify interaction elements to automatically assess the consistency of task models and GUI prototypes. We report on the precision of these approaches when applied to a study with BDD stories previously written by Product Owners (POs). Based on the results, we also identify a set of challenges and opportunities for BDD stories in the consistency assurance of such artifacts.	User Stories;  User Requirements;  Software Artifacts.;  Consistency Assurance;  Behaviour-Driven Development; User Stories, User Requirements, Software Artifacts., Consistency Assurance, Behaviour-Driven Development	Silva, Thiago Rocha; Fitzgerald, Brian	EASE '21: Proceedings of the 25th International Conference on Evaluation and Assessment in Software Engineering	https://doi.org/10.1145/3463274.3463807		266-271	"""@inproceedings{10.1145/3463274.3463807,
    author = ""Silva, Thiago Rocha and Fitzgerald, Brian"",
    title = ""Empirical Findings on BDD Story Parsing to Support Consistency Assurance between Requirements and Artifacts"",
    year = ""2021"",
    isbn = ""9781450390538"",
    publisher = ""Association for Computing Machinery"",
    address = ""New York, NY, USA"",
    url = ""https://doi.org/10.1145/3463274.3463807"",
    doi = ""10.1145/3463274.3463807"",
    abstract = ""Behaviour-Driven Development (BDD) stories have gained considerable attention in recent years as an effective way to specify and test user requirements in agile software development projects. External testing frameworks also allow developers to automate the execution of BDD stories and check whether a fully functional software system behaves as expected. However, other software artifacts may quite often lose synchronization with the stories, and many inconsistencies can arise with respect to requirements representation. This paper reports on preliminary empirical findings regarding the performance of two existing approaches in the literature intended to support consistency assurance between BDD stories and software artifacts. The first approach involves the parsing of BDD stories in order to identify conceptual elements to automatically generate consistent class diagrams, while the second approach seeks to identify interaction elements to automatically assess the consistency of task models and GUI prototypes. We report on the precision of these approaches when applied to a study with BDD stories previously written by Product Owners (POs). Based on the results, we also identify a set of challenges and opportunities for BDD stories in the consistency assurance of such artifacts."",
    booktitle = ""Proceedings of the 25th International Conference on Evaluation and Assessment in Software Engineering"",
    pages = ""266-271"",
    numpages = ""6"",
    keywords = ""User Stories, User Requirements, Software Artifacts., Consistency Assurance, Behaviour-Driven Development"",
    location = ""Trondheim, Norway"",
    series = ""EASE '21""
}
"""	Included	Included	new_screen			2	Scopus Signed In		Empirical Findings on BDD Story Parsing to Support Consistency Assurance between Requirements and Artifacts	https://dl.acm.org/doi/10.1145/3463274.3463807	Association for Computing Machinery	nan; References
48	Behave	Blockchain smart contracts formalization: Approaches and challenges to address vulnerabilities	Blockchain as a distributed computing platform enables users to deploy pieces of software (known as smart contracts) for a wealth of next-generation decentralized applications without involving a trusted third-party. The advantages of smart contracts do, however, come at a price. As with most technologies, there are potential security threats, vulnerabilities and various other issues associated with smart contracts. Writing secure and safe smart contracts can be extremely difficult due to various business logics, as well as platform vulnerabilities and limitations. Formal methods have recently been advocated to mitigate these vulnerabilities. This paper aims to provide a first-time study on current formalization research on all smart contract-related platforms on blockchains, which is scarce in the literature. To this end, a timely and rigorous systematic review to examine the state-of-the-art research and achievements published between 2015 and July 2019 is provided. This study is based on a comprehensive review of a set of 35 research papers that have been extracted from eight major online digital databases. The results indicate that the most common formalization technique is theorem proving, which is most often used to verify security properties relating to smart contracts, while other techniques such as symbolic execution and model checking were also frequently used. These techniques were most commonly used to verify the functional correctness of smart contracts. From the language and automation point of views, there were 12 languages (domain specific/specification/general purpose) proposed or used for the formalization of smart contracts on blockchains, while 15 formal method-specific automated tools/frameworks were identified for mitigating various vulnerabilities of smart contracts. From the results of this work, we further highlight three open issues for future research in this emerging domain including: formal testing, automated verification of smart contracts, and domain specific languages (DSLs) for Ethereum. These issues suggest the need for additional, in-depth research. Our study also provides possible future research directions.	Application programs; Automation; Formal methods; Formal verification; Model checking; Problem oriented languages; Verification; Automated verification; Distributed computing platform; Domain specific languages; Functional correctness; Security properties; Symbolic execution; Systematic Review; Trusted third parties; Blockchain; Application programs;  Automation;  Formal methods;  Formal verification;  Model checking;  Problem oriented languages;  Verification;  Automated verification;  Distributed computing platform;  Domain specific languages;  Functional correctness;  Security properties;  Symbolic execution;  Systematic Review;  Trusted third parties;  Blockchain	Singh, Amritraj; Parizi, Reza M.; Zhang, Qi; Choo, Kim-Kwang Raymond; Dehghantanha, Ali	Computers and Security	https://doi.org/10.1016/j.cose.2019.101654			"""@ARTICLE{Singh2020,
    author = ""Singh, Amritraj and Parizi, Reza M. and Zhang, Qi and Choo, Kim-Kwang Raymond and Dehghantanha, Ali"",
    title = ""Blockchain smart contracts formalization: Approaches and challenges to address vulnerabilities"",
    year = ""2020"",
    journal = ""Computers and Security"",
    volume = ""88"",
    doi = ""10.1016/j.cose.2019.101654"",
    url = ""https://www.scopus.com/inward/record.uri?eid=2-s2.0-85074192785\&doi=10.1016\%2fj.cose.2019.101654\&partnerID=40\&md5=62cd9ec151a449f7acf2b5b06c09e75c"",
    affiliations = ""Department of Software Engineering and Game Development, Kennesaw State University, 30060, GA, United States; IBM Thomas J. Research Center, Yorktown Heights, 10598, NY, United States; Department of Information Systems and Cyber Security, University of Texas at San Antonio, TX, United States; Cyber Science Lab, School of Computer Science, University of Guelph, Ontario, Canada"",
    abstract = ""Blockchain as a distributed computing platform enables users to deploy pieces of software (known as smart contracts) for a wealth of next-generation decentralized applications without involving a trusted third-party. The advantages of smart contracts do, however, come at a price. As with most technologies, there are potential security threats, vulnerabilities and various other issues associated with smart contracts. Writing secure and safe smart contracts can be extremely difficult due to various business logics, as well as platform vulnerabilities and limitations. Formal methods have recently been advocated to mitigate these vulnerabilities. This paper aims to provide a first-time study on current formalization research on all smart contract-related platforms on blockchains, which is scarce in the literature. To this end, a timely and rigorous systematic review to examine the state-of-the-art research and achievements published between 2015 and July 2019 is provided. This study is based on a comprehensive review of a set of 35 research papers that have been extracted from eight major online digital databases. The results indicate that the most common formalization technique is theorem proving, which is most often used to verify security properties relating to smart contracts, while other techniques such as symbolic execution and model checking were also frequently used. These techniques were most commonly used to verify the functional correctness of smart contracts. From the language and automation point of views, there were 12 languages (domain specific/specification/general purpose) proposed or used for the formalization of smart contracts on blockchains, while 15 formal method-specific automated tools/frameworks were identified for mitigating various vulnerabilities of smart contracts. From the results of this work, we further highlight three open issues for future research in this emerging domain including: formal testing, automated verification of smart contracts, and domain specific languages (DSLs) for Ethereum. These issues suggest the need for additional, in-depth research. Our study also provides possible future research directions. (c) 2019"",
    author_keywords = ""Blockchain; Formal methods; Smart contracts; Systematic review; Verification"",
    keywords = ""Application programs; Automation; Formal methods; Formal verification; Model checking; Problem oriented languages; Verification; Automated verification; Distributed computing platform; Domain specific languages; Functional correctness; Security properties; Symbolic execution; Systematic Review; Trusted third parties; Blockchain"",
    correspondence_address = ""K.-K.R. Choo; Department of Information Systems and Cyber Security, University of Texas at San Antonio, United States; email: raymond.choo@fulbrightmail.org"",
    publisher = ""Elsevier Ltd"",
    issn = ""01674048"",
    coden = ""CPSED"",
    language = ""English"",
    abbrev_source_title = ""Comput Secur"",
    type = ""Review"",
    publication_stage = ""Final"",
    source = ""Scopus"",
    note = ""Cited by: 157""
}
"""	Excluded	Excluded	new_screen			2	Scopus Signed In		Blockchain smart contracts formalization: Approaches and challenges to address vulnerabilities	https://www.scopus.com/record/display.uri?eid=2-s2.0-85074192785&origin=resultslist&sort=plf-f&src=s&sid=16841f25098bea10f74ed6fb9a96d753&sot=b&sdt=b&s=TITLE-ABS-KEY%28blockchain+smart+contracts+formalization+approaches+and+challenges+to+address+vulnerabilities%29&sl=108&sessionSearchId=16841f25098bea10f74ed6fb9a96d753&relpos=0	Elsevier Ltd	nan; References; Pages
49	Behave	Survey on blockchain based smart contracts: Applications, opportunities and challenges	Blockchain is one of the disruptive technical innovation in the recent computing paradigm. Many applications already notoriously hard and complex are fortunate to ameliorate the service with the blessings of blockchain and smart contracts. The decentralized and autonomous execution with in-built transparency of blockchain based smart contracts revolutionize most of the applications with optimum and effective functionality. The paper explores the significant applications which already benefited from the smart contracts. We also highlight the future potential of the blockchain based smart contracts in these applications perspective.	Blockchain;  Smart contracts;  Applications;  DLT;  Hyperledger Fabric;  Ethereum;  Corda;  Stellar; Blockchain, Smart contracts, Applications, DLT, Hyperledger Fabric, Ethereum, Corda, Stellar	Hewa, Tharaka; Ylianttila, Mika; Liyanage, Madhusanka	Journal of Network and Computer Applications	https://www.sciencedirect.com/science/article/pii/S1084804520303234		102857	"""@article{HEWA2021102857,
    author = ""Hewa, Tharaka and Ylianttila, Mika and Liyanage, Madhusanka"",
    title = ""Survey on blockchain based smart contracts: Applications, opportunities and challenges"",
    journal = ""Journal of Network and Computer Applications"",
    volume = ""177"",
    pages = ""102857"",
    year = ""2021"",
    issn = ""1084-8045"",
    doi = ""https://doi.org/10.1016/j.jnca.2020.102857"",
    url = ""https://www.sciencedirect.com/science/article/pii/S1084804520303234"",
    keywords = ""Blockchain, Smart contracts, Applications, DLT, Hyperledger Fabric, Ethereum, Corda, Stellar"",
    abstract = ""Blockchain is one of the disruptive technical innovation in the recent computing paradigm. Many applications already notoriously hard and complex are fortunate to ameliorate the service with the blessings of blockchain and smart contracts. The decentralized and autonomous execution with in-built transparency of blockchain based smart contracts revolutionize most of the applications with optimum and effective functionality. The paper explores the significant applications which already benefited from the smart contracts. We also highlight the future potential of the blockchain based smart contracts in these applications perspective.""
}
"""	Excluded	Excluded	new_screen			2	Science Direct		Survey on blockchain based smart contracts: Applications, opportunities and challenges	https://www.sciencedirect.com/science/article/pii/S1084804520303234	Science Direct	nan; References
50	Behave	End-to-end Automatic Business Process Validation	Business Process Testing is the act of validating that end-to-end transactions through enterprise systems continue to work correctly as the underlying packaged applications evolve. End-to-end automatic business process validation can be a challenging task, but an important way to check that business rules continue to work properly and that problems are detected and corrected as soon as possible. This paper presents the design of a test automation platform, ETAP-Pro, to test end-to-end business processes that aims to overcome some challenges in validating business processes.	Software Testing; Business Process Testing; End-to-end Process Testing; Model Based Testing; Software Testing;  Business Process Testing;  End-to-end Process Testing;  Model Based Testing	Paiva, Ana C. R.; Flores, Nuno H.; Faria, Joao P.; Marques, Jose M. G.	9TH INTERNATIONAL CONFERENCE ON AMBIENT SYSTEMS, NETWORKS AND TECHNOLOGIES (ANT 2018) / THE 8TH INTERNATIONAL CONFERENCE ON SUSTAINABLE ENERGY INFORMATION TECHNOLOGY (SEIT-2018) / AFFILIATED WORKSHOPS	https://doi.org/10.1016/j.procs.2018.04.104		999-1004	"""@inproceedings{WOS:000684379100132,
    Author = ""Paiva, Ana C. R. and Flores, Nuno H. and Faria, Joao P. and Marques, Jose M. G."",
    Editor = ""Shakshuki, E and Yasar, A"",
    Title = ""End-to-end Automatic Business Process Validation"",
    Booktitle = ""9TH INTERNATIONAL CONFERENCE ON AMBIENT SYSTEMS, NETWORKS AND TECHNOLOGIES (ANT 2018) / THE 8TH INTERNATIONAL CONFERENCE ON SUSTAINABLE ENERGY INFORMATION TECHNOLOGY (SEIT-2018) / AFFILIATED WORKSHOPS"",
    Series = ""Procedia Computer Science"",
    Year = ""2018"",
    Volume = ""130"",
    Pages = ""999-1004"",
    Note = ""9th International Conference on Ambient Systems, Networks and Technologies (ANT) / 8th International Conference on Sustainable Energy Information Technology (SEIT), Porto, PORTUGAL, MAY 08-11, 2018"",
    Abstract = ""Business Process Testing is the act of validating that end-to-end transactions through enterprise systems continue to work correctly as the underlying packaged applications evolve. End-to-end automatic business process validation can be a challenging task, but an important way to check that business rules continue to work properly and that problems are detected and corrected as soon as possible. This paper presents the design of a test automation platform, ETAP-Pro, to test end-to-end business processes that aims to overcome some challenges in validating business processes. (C) 2018 The Authors. Published by Elsevier B.V."",
    Publisher = ""ELSEVIER SCIENCE BV"",
    Address = ""SARA BURGERHARTSTRAAT 25, PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS"",
    Type = ""Proceedings Paper"",
    Language = ""English"",
    Affiliation = ""Paiva, ACR (Corresponding Author), Univ Porto, Fac Engn, INESC TEC, Rua Dr Roberto Frias S-N, P-4200465 Porto, Portugal. Paiva, Ana C. R.; Flores, Nuno H.; Faria, Joao P., Univ Porto, Fac Engn, INESC TEC, Rua Dr Roberto Frias S-N, P-4200465 Porto, Portugal. Marques, Jose M. G., LINK, Av Duque de Avila 23, P-1000138 Lisbon, Portugal."",
    DOI = ""10.1016/j.procs.2018.04.104"",
    ISSN = ""1877-0509"",
    Keywords = ""Software Testing; Business Process Testing; End-to-end Process Testing; Model Based Testing"",
    Research-Areas = ""Computer Science"",
    Web-of-Science-Categories = ""Computer Science, Artificial Intelligence; Computer Science, Hardware \\& Architecture; Computer Science, Theory \\& Methods"",
    Author-Email = ""apaiva@fe.up.pt"",
    Affiliations = ""INESC TEC; Universidade do Porto"",
    ResearcherID-Numbers = ""Flores, Nuno/D-8782-2015 Paiva, Ana/B-1136-2014 Faria, Joao/B-5496-2012"",
    ORCID-Numbers = ""Flores, Nuno/0000-0002-8258-0226 Paiva, Ana/0000-0003-3431-8060 Faria, Joao/0000-0003-3825-3954"",
    Number-of-Cited-References = ""15"",
    Times-Cited = ""6"",
    Usage-Count-Last-180-days = ""0"",
    Usage-Count-Since-2013 = ""4"",
    Doc-Delivery-Number = ""BS0UE"",
    Web-of-Science-Index = ""Conference Proceedings Citation Index - Science (CPCI-S)"",
    Unique-ID = ""WOS:000684379100132"",
    OA = ""gold"",
    DA = ""2024-10-22""
}
"""	Excluded	Excluded	new_screen			2	Web of Science		End-to-End Automatic Business Process Validation	https://www.webofscience.com/wos/woscc/full-record/WOS:000684379100132	ELSEVIER SCIENCE BV	nan; References
51	Behave	A Reusable Automated Acceptance Testing Architecture for Microservices in Behavior-Driven Development	Cloud Computing and Mobile Cloud Computing are reshaping the way applications are being developed and deployed due to their unique needs such as massive scalability, guaranteed fault tolerance, near zero downtime, etc. and also daunting challenges such as security, reliability, continuous deployment and update capability. Microservices architecture, where application is composed of a set of independently deployable services, is increasingly becoming popular due to its capability to address most of these needs and challenges. In recent years, the Behavior-Driven Development (BDD) has become one of the most popular agile software development processes, and frequently used in microservices development. The key to success of BDD is the executable acceptance tests that describe the expected behavior of a feature and its acceptance criteria in the form of scenarios using simple and business people readable syntax. The reusability, auditability, and maintainability become some of the major concerns when BDD test framework is applied for each microservice repository and no previous research addresses these concerns. In this paper, we present a reusable automated acceptance testing architecture to address all these concerns.	Data structures;Boolean functions;Business;Testing;Software;Maintenance engineering;executable automated acceptance testing; Gherkin; functional testing; behavior-driven development; microservice; Data structures; Boolean functions; Business; Testing; Software; Maintenance engineering; executable automated acceptance testing;  Gherkin;  functional testing;  behavior-driven development;  microservice	Rahman, Mazedur; Gao, Jerry	2015 IEEE Symposium on Service-Oriented System Engineering	https://doi.org/10.1109/SOSE.2015.55	"1.D. North, ""Introducing behaviour driven development"", Sep 2014,  [online]  Available: http://dannorth.net/introducing-bdd/. Google Scholar; 2.K. Beck, ""Test-Driven Development: by Example"" in , Addison Wesley, 2003. Google Scholar; 3.K. Beck and C. Andres, ""Extreme Programming Explained"" in , Addison-Wesley, 2005. Google Scholar; 4.M. Fowler, ""BusinessReadableDSL"", Nov 2014,  [online]  Available: http://martinfowler.com/bliki/BusinessReadableDSL.html. Google Scholar; 5.Gherkin, Nov 2014,  [online]  Available: http://cukes.info/gherkin.html.; 6.Gherkin, Nov 2014,  [online]  Available: https://github.com/cucumber/cucumber/wiki/Gherkin.; 7.Nov 2014,  [online]  Available: http://guide.agilealliance.org/guide/acceptance.html.; 8.M. Fowler, ""Agile Software Development"", Sep 2014,  [online]  Available: http://martinfowler.com/agile.html. Google Scholar; 9.S. Ambler, ""2013 IT Project Success Rates Survey Results"", Sep 2014,  [online]  Available: http://www.ambysoft.com/surveys/success2013.html. Google Scholar; 10.B. Murphy et al., ""Have Agile Techniques been the Silver Bullet for Software Development at Microsoft?"", Empirical Software Engineering and Measurement ACM / IEEE International Symposium (2013), pp. 75-84, 2013. CrossRef  Google Scholar; 11.R. Osherove, ""The art of unit testing: with examples in.NET. Greenwich (Connecticut): Manning"", 2009. Google Scholar; 12.Nov 2014,  [online]  Available: http://guide.agilealliance.org/guide/unittest.html.; 13.M. Fowler, ""Eradicating Non-Determinism in Tests"", Nov 2014,  [online]  Available: http://martinfowler.com/articles/nonDeterminism.html. Google Scholar; 14.R. Borg and M. Kropp, ""Automated acceptance test refactoring"", Proceedings of the 4th Workshop on Refactoring Tools WRT '11, pp. 15-21, 2011. CrossRef  Google Scholar; 15.M. Fowler, ""Microservices"", Nov 2014,  [online]  Available: http://martinfowler.com/articles/microservices.html. Google Scholar; 16.Nov 2014,  [online]  Available: http://microservices.io/patterns/microservices.html.; 17.J. Marciniak, ""Encyclopedia of software engineering"" in , New York:Wiley, 1994. Google Scholar; 18.Nov 2014,  [online]  Available: http://guide.agilealliance.org/guide/mocks.html.; 19. [online]  Available: http://cukes.info/.; 20. [online]  Available: http://docs.behat.org/en/v2.5/.; 21. [online]  Available: http://pythonhosted.orglbehave/."	321-325	"""@INPROCEEDINGS{7133548,
    author = ""Rahman, Mazedur and Gao, Jerry"",
    booktitle = ""2015 IEEE Symposium on Service-Oriented System Engineering"",
    title = ""A Reusable Automated Acceptance Testing Architecture for Microservices in Behavior-Driven Development"",
    year = ""2015"",
    volume = """",
    number = """",
    pages = ""321-325"",
    abstract = ""Cloud Computing and Mobile Cloud Computing are reshaping the way applications are being developed and deployed due to their unique needs such as massive scalability, guaranteed fault tolerance, near zero downtime, etc. and also daunting challenges such as security, reliability, continuous deployment and update capability. Microservices architecture, where application is composed of a set of independently deployable services, is increasingly becoming popular due to its capability to address most of these needs and challenges. In recent years, the Behavior-Driven Development (BDD) has become one of the most popular agile software development processes, and frequently used in microservices development. The key to success of BDD is the executable acceptance tests that describe the expected behavior of a feature and its acceptance criteria in the form of scenarios using simple and business people readable syntax. The reusability, auditability, and maintainability become some of the major concerns when BDD test framework is applied for each microservice repository and no previous research addresses these concerns. In this paper, we present a reusable automated acceptance testing architecture to address all these concerns."",
    keywords = ""Data structures;Boolean functions;Business;Testing;Software;Maintenance engineering;executable automated acceptance testing; Gherkin; functional testing; behavior-driven development; microservice"",
    doi = ""10.1109/SOSE.2015.55"",
    ISSN = """",
    month = ""March""
}
"""	Excluded	Excluded	new_screen			2	Scopus Signed In		A Reusable Automated Acceptance Testing Architecture for Microservices in Behavior-Driven Development	https://ieeexplore.ieee.org/document/7133548	IEEE	
52	Behave	A reusable automated acceptance testing architecture for microservices in behavior-driven development	Cloud Computing and Mobile Cloud Computing are reshaping the way applications are being developed and deployed due to their unique needs such as massive scalability, guaranteed fault tolerance, near zero downtime, etc. and also daunting challenges such as security, reliability, continuous deployment and update capability. Microservices architecture, where application is composed of a set of independently deployable services, is increasingly becoming popular due to its capability to address most of these needs and challenges. In recent years, the Behavior-Driven Development (BDD) has become one of the most popular agile software development processes, and frequently used in microservices development. The key to success of BDD is the executable acceptance tests that describe the expected behavior of a feature and its acceptance criteria in the form of scenarios using simple and business people readable syntax. The reusability, auditability, and maintainability become some of the major concerns when BDD test framework is applied for each microservice repository and no previous research addresses these concerns. In this paper, we present a reusable automated acceptance testing architecture to address all these concerns.	Automation; Boolean functions; Cloud computing; Computer software reusability; Fault tolerance; Mobile cloud computing; Reusability; Software design; Software engineering; Systems engineering; Automated acceptance testing; Behavior-driven development; Functional testing; Gherkin; Microservice; Acceptance tests; Automation;  Boolean functions;  Cloud computing;  Computer software reusability;  Fault tolerance;  Mobile cloud computing;  Reusability;  Software design;  Software engineering;  Systems engineering;  Automated acceptance testing;  Behavior-driven development;  Functional testing;  Gherkin;  Microservice;  Acceptance tests	Rahman, Mazedur; Gao, Jerry	Proceedings - 9th IEEE International Symposium on Service-Oriented System Engineering, IEEE SOSE 2015	https://doi.org/10.1109/SOSE.2015.55		321 - 325	"""@CONFERENCE{Rahman2015321,
    author = ""Rahman, Mazedur and Gao, Jerry"",
    title = ""A reusable automated acceptance testing architecture for microservices in behavior-driven development"",
    year = ""2015"",
    journal = ""Proceedings - 9th IEEE International Symposium on Service-Oriented System Engineering, IEEE SOSE 2015"",
    volume = ""30"",
    pages = ""321 - 325"",
    doi = ""10.1109/SOSE.2015.55"",
    url = ""https://www.scopus.com/inward/record.uri?eid=2-s2.0-84990950599\&doi=10.1109\%2fSOSE.2015.55\&partnerID=40\&md5=fd8ac0b9d3c45d4f7f08aed564876ab2"",
    affiliations = ""San Jose State University, United States"",
    abstract = ""Cloud Computing and Mobile Cloud Computing are reshaping the way applications are being developed and deployed due to their unique needs such as massive scalability, guaranteed fault tolerance, near zero downtime, etc. and also daunting challenges such as security, reliability, continuous deployment and update capability. Microservices architecture, where application is composed of a set of independently deployable services, is increasingly becoming popular due to its capability to address most of these needs and challenges. In recent years, the Behavior-Driven Development (BDD) has become one of the most popular agile software development processes, and frequently used in microservices development. The key to success of BDD is the executable acceptance tests that describe the expected behavior of a feature and its acceptance criteria in the form of scenarios using simple and business people readable syntax. The reusability, auditability, and maintainability become some of the major concerns when BDD test framework is applied for each microservice repository and no previous research addresses these concerns. In this paper, we present a reusable automated acceptance testing architecture to address all these concerns. (c) 2015 IEEE."",
    author_keywords = ""Behavior-driven development; Executable automated acceptance testing; Functional testing; Gherkin; Microservice"",
    keywords = ""Automation; Boolean functions; Cloud computing; Computer software reusability; Fault tolerance; Mobile cloud computing; Reusability; Software design; Software engineering; Systems engineering; Automated acceptance testing; Behavior-driven development; Functional testing; Gherkin; Microservice; Acceptance tests"",
    publisher = ""Institute of Electrical and Electronics Engineers Inc."",
    isbn = ""978-147998355-1"",
    language = ""English"",
    abbrev_source_title = ""Proc. - IEEE Int. Symp. Serv.-Oriented Syst. Eng., IEEE SOSE"",
    type = ""Conference paper"",
    publication_stage = ""Final"",
    source = ""Scopus"",
    note = ""Cited by: 60; Conference name: 9th IEEE International Symposium on Service-Oriented System Engineering, IEEE SOSE 2015; Conference date: 30 March 2015 through 3 April 2015; Conference code: null""
}
"""	Included	Included	new_screen			2	Scopus Signed In		A reusable automated acceptance testing architecture for microservices in behavior-driven development	https://www.scopus.com/record/display.uri?eid=2-s2.0-84990950599&origin=resultslist&sort=plf-f&src=s&sid=9aff1912ed83aec6125ae50b81506cb7&sot=b&sdt=b&s=TITLE-ABS-KEY%28a+reusable+automated+acceptance+testing+architecture+for+microservices+in+behavior+driven+development%29&sl=116&sessionSearchId=9aff1912ed83aec6125ae50b81506cb7&relpos=0	Institute of Electrical and Electronics Engineers Inc	nan; References
53	Behave	Generating educational mobile applications using UIDPs identified by artificial intelligence techniques	Commercial mobile devices vary in brand, size, and functionalities, but they all allow people to interact with educational applications. In software engineering, application development techniques, approaches, methodologies, and processes (e.g., BBD, FDD, RAD, DDD) are often time consuming, costly, or aim at expert developers - which implies that users outside the software development field (e.g., teachers) need great practice to become experienced application developers. This work proposes an artificial-intelligence-based process for generating educational mobile apps from freehand-generated images. The images' design is based on User Interface Design Pattern (UIDP) representations. As a proof of concept, we introduce EduMatic, an application development tool. To test our process, we assessed Wiki-Comp, an application built with EduMatic, along with three other external educational applications: Khan Academy, Wiki encyclopedia, and Kiwix. According to the evaluation results, Wiki-Comp outstands in functionality, usability, and performance aspects.	Application programs; Artificial intelligence; Automatic programming; Cost engineering; Image processing; Software design; Application developers; Application development; Application development tools; Artificial intelligence techniques; Automatic code generations; Educational Applications; Mobile development; User interface design patterns; User interfaces; Application programs;  Artificial intelligence;  Automatic programming;  Cost engineering;  Image processing;  Software design;  Application developers;  Application development;  Application development tools;  Artificial intelligence techniques;  Automatic code generations;  Educational Applications;  Mobile development;  User interface design patterns;  User interfaces	Sanchez-Morales, Laura Nely; Alor-Hernandez, Giner; Rosales-Morales, Viviana Yarel; Cortes-Camarillo, Cesar Augusto; Sanchez-Cervantes, Jose Luis	Computer Standards and Interfaces	https://doi.org/10.1016/j.csi.2019.103407			"""@ARTICLE{Sanchez-Morales2020,
    author = ""Sanchez-Morales, Laura Nely and Alor-Hernandez, Giner and Rosales-Morales, Viviana Yarel and Cortes-Camarillo, Cesar Augusto and Sanchez-Cervantes, Jose Luis"",
    title = ""Generating educational mobile applications using UIDPs identified by artificial intelligence techniques"",
    year = ""2020"",
    journal = ""Computer Standards and Interfaces"",
    volume = ""70"",
    doi = ""10.1016/j.csi.2019.103407"",
    url = ""https://www.scopus.com/inward/record.uri?eid=2-s2.0-85077512434\&doi=10.1016\%2fj.csi.2019.103407\&partnerID=40\&md5=69ec97202b618a7b84c5ed09da7224ed"",
    affiliations = ""Tecnologico Nacional de Mexico/I.T. Orizaba, Oriente 9 \#852 Col. Emiliano Zapata, Orizaba, 94320, Veracruz, Mexico; Centro de Investigacion en Inteligencia Artificial, Universidad Veracruzana, Xalapa, Veracruz, Mexico; CONACYT-Tecnologico Nacional de Mexico/I.T. Orizaba, Mexico"",
    abstract = ""Commercial mobile devices vary in brand, size, and functionalities, but they all allow people to interact with educational applications. In software engineering, application development techniques, approaches, methodologies, and processes (e.g., BBD, FDD, RAD, DDD) are often time consuming, costly, or aim at expert developers - which implies that users outside the software development field (e.g., teachers) need great practice to become experienced application developers. This work proposes an artificial-intelligence-based process for generating educational mobile apps from freehand-generated images. The images' design is based on User Interface Design Pattern (UIDP) representations. As a proof of concept, we introduce EduMatic, an application development tool. To test our process, we assessed Wiki-Comp, an application built with EduMatic, along with three other external educational applications: Khan Academy, Wiki encyclopedia, and Kiwix. According to the evaluation results, Wiki-Comp outstands in functionality, usability, and performance aspects. (c) 2019 Elsevier B.V."",
    author_keywords = ""Automatic code generation; Educational apps; Image processing; Mobile development; User interface design pattern"",
    keywords = ""Application programs; Artificial intelligence; Automatic programming; Cost engineering; Image processing; Software design; Application developers; Application development; Application development tools; Artificial intelligence techniques; Automatic code generations; Educational Applications; Mobile development; User interface design patterns; User interfaces"",
    correspondence_address = ""G. Alor-Hernandez; Tecnologico Nacional de Mexico/I.T. Orizaba, Orizaba, Oriente 9 \#852 Col. Emiliano Zapata, 94320, Mexico; email: galor@ito-depi.edu.mx"",
    publisher = ""Elsevier B.V."",
    issn = ""09205489"",
    coden = ""CSTIE"",
    language = ""English"",
    abbrev_source_title = ""Comput Stand Interfaces"",
    type = ""Article"",
    publication_stage = ""Final"",
    source = ""Scopus"",
    note = ""Cited by: 11""
}
"""	Excluded	Excluded	new_screen			2	Scopus Signed In		Generating educational mobile applications using UIDPs identified by artificial intelligence techniques	https://www.scopus.com/record/display.uri?eid=2-s2.0-85077512434&origin=resultslist&sort=plf-f&src=s&sid=0f5a45986a501fd77d504c7f3a7b4f9c&sot=b&sdt=b&s=TITLE-ABS-KEY%28generating+educational+mobile+applications+using+uidps+identified+by+artificial+intelligence+techniques%29&sl=118&sessionSearchId=0f5a45986a501fd77d504c7f3a7b4f9c&relpos=0	Elsevier B.V	nan; References; Pages
54	Behave	Concurrent development and verification of an all-software baseband for satellite ground operations	Communication systems are adopting all-software architectures, because of their scalability, extensibility, flexibility, and cost-effectiveness. This paper introduces a concurrent approach to the development and verification of baseband systems for satellite ground operations based on the behaviour-driven development methodology. The open-source GNU Radio development kit is used for developing the software-defined radio baseband signal processing, as well as simulating the satellite and realistic channel impairments. The system performance at the end shows deviations of less than 1 dB with respect to the ideal performance and the Green Book standards specified by the Consultative Committee for Space Data Systems.	Analog circuits; C (programming language); Cost effectiveness; Ground operations; Open systems; Radio; Radio receivers; Satellites; Signal processing; Software radio; Verification; Base bands; behaviour-driven development; CCSDS; GNU radio; Software-defined radios; Open source software; Analog circuits;  C (programming language);  Cost effectiveness;  Ground operations;  Open systems;  Radio;  Radio receivers;  Satellites;  Signal processing;  Software radio;  Verification;  Base bands;  behaviour-driven development;  CCSDS;  GNU radio;  Software-defined radios;  Open source software	Mwakyanjala, Moses B.; Nieto-Peroy, Cristobal; Emami, M. Reza; van de Beek, Jaap	International Journal of Satellite Communications and Networking	https://doi.org/10.1002/sat.1336		209 - 227	"""@ARTICLE{Mwakyanjala2020209,
    author = ""Mwakyanjala, Moses B. and Nieto-Peroy, Cristobal and Emami, M. Reza and van de Beek, Jaap"",
    title = ""Concurrent development and verification of an all-software baseband for satellite ground operations"",
    year = ""2020"",
    journal = ""International Journal of Satellite Communications and Networking"",
    volume = ""38"",
    number = ""2"",
    pages = ""209 - 227"",
    doi = ""10.1002/sat.1336"",
    url = ""https://www.scopus.com/inward/record.uri?eid=2-s2.0-85077909388\&doi=10.1002\%2fsat.1336\&partnerID=40\&md5=1bd6c26ba4ded16ceda75297f7ee2bdc"",
    affiliations = ""Onboard Space Systems, Department of Computer Science, Electrical and Space Engineering, Lulea University of Technology, Norrbotten, Sweden; Institute for Aerospace Studies,University of Toronto, ON, Canada; Signals and Systems, Department of Computer Science, Electrical and Space Engineering, Lulea University of Technology, Norrbotten, Sweden"",
    abstract = ""Communication systems are adopting all-software architectures, because of their scalability, extensibility, flexibility, and cost-effectiveness. This paper introduces a concurrent approach to the development and verification of baseband systems for satellite ground operations based on the behaviour-driven development methodology. The open-source GNU Radio development kit is used for developing the software-defined radio baseband signal processing, as well as simulating the satellite and realistic channel impairments. The system performance at the end shows deviations of less than 1 dB with respect to the ideal performance and the Green Book standards specified by the Consultative Committee for Space Data Systems. (c) 2019 John Wiley \& Sons, Ltd."",
    author_keywords = ""baseband; behaviour-driven development; CCSDS; GNU radio; satellite TT\&C; software-defined radio"",
    keywords = ""Analog circuits; C (programming language); Cost effectiveness; Ground operations; Open systems; Radio; Radio receivers; Satellites; Signal processing; Software radio; Verification; Base bands; behaviour-driven development; CCSDS; GNU radio; Software-defined radios; Open source software"",
    correspondence_address = ""M.R. Emami; Onboard Space Systems, Department of Computer Science, Electrical and Space Engineering, Lulea University of Technology, Sweden; email: emami@utias.utoronto.ca"",
    publisher = ""John Wiley and Sons Ltd"",
    issn = ""15420973"",
    language = ""English"",
    abbrev_source_title = ""Int. J. Satell. Commun. Networking"",
    type = ""Article"",
    publication_stage = ""Final"",
    source = ""Scopus"",
    note = ""Cited by: 3""
}
"""	Included	Included	new_screen			2	Scopus Signed In		Concurrent development and verification of an all-software baseband for satellite ground operations	https://www.scopus.com/record/display.uri?eid=2-s2.0-85077909388&origin=resultslist&sort=plf-f&src=s&sid=d8273dd7d69762fd4eb1b403c528d51b&sot=b&sdt=b&s=TITLE-ABS-KEY%28concurrent+development+and+verification+of+an+all+software+baseband+for+satellite+ground+operations%29&sl=114&sessionSearchId=d8273dd7d69762fd4eb1b403c528d51b&relpos=0	John Wiley and Sons Ltd	nan; References
55	Behave	Automation Support for Mobile App Quality Assurance - A Tool Landscape	increased demand for outstanding app quality and user experience. At the same time, reduced time-to-market, decreased budgets and time available for quality assurance, and careful user experience design have to be considered. In response, an enormous market for mobile app quality and user experience measurement tools has grown around the mobile app store ecosystems. Developers following lean and agile development approaches continuously produce new features and ready-to- ship software increments. In those settings, budgets for evaluation and familiarization into new tools are very limited. Currently there are alone more than 28 tools and frameworks for functional test automation and more than 16 different device clouds available. For most of the software developing companies, it is impossible to evaluate and test all of them. In this paper, we present a classification in order to help navigation through the mobile app quality tools landscape for easier selection and more targeted evaluation of tools.	Mobile Applications; Quality; Quality Assurance; User Experience; Mobile Applications;  Quality;  Quality Assurance;  User Experience	Braun, Susanne; Elberzhager, Frank; Holl, Konstantin	Procedia Computer Science	https://doi.org/10.1016/j.procs.2017.06.129	Cohn, M.Succeeding with agile: Software development using Scrum(2010)Pearson Education.Cited 381 times.; Espresso [Online]. [Accessed 22 March 2017]https://google.github.io/android-testing-support-library/docs/espresso/index.html; XCTest [Online]. [Accessed 22 March 2017]https://developer.apple.com/reference/xctest; Selendroid, [Online]. [Accessed 22 March 2017]http://selendroid.io/setup.html; Robotium, [Online]. [Accessed 22 March 2017]https://github.com/RobotiumTech/robotium; XCTest UI, [Online]. [Accessed 22 March 2017]https://developer.apple.com/library/ios/documentation/DeveloperTools/Conceptual/testing_with_xcode/chapters/09-ui_testing.html; Appium, [Online]. [Accessed 22 March 2017]http://appium.io/; Calabash, [Online]. [Accessed 22 March 2017]http://calaba.sh/; Monkeyrunner, [Online]. [Accessed 22 March 2017]https://developer.android.com/studio/test/monkeyrunner/index.html; SeeTestAutomation, [Online]. [Accessed 22 March 2017]https://experitest.com/test-automation-tool-for-mobile-testing-continuous-integration; eggPlant Mobile, [Online]. [Accessed 22 March 2017]http://www.testplant.com/eggplant/testing-tools/eggplant-mobile-eggon/; AWS device farm, [Online]. [Accessed 22 March 2017]https://aws.amazon.com/de/device-farm/; Xamarin Test Cloud, [Online]https://developer.xamarin.com/testcloud/; Xamarin Test Cloud Device List, [Online]. [Accessed 22 March 2017]https://testcloud.xamarin.com/devices; Perfecto Public Device Cloud, [Online]. [Accessed 22 March 2017]https://www.perfectomobile.com/hybrid-cloud/public-shared-cloud; DeviceAnywhere Cloud, [Online]. [Accessed 22 March 2017]http://www.keynote.com/solutions/testing/mobile-testing; TestPlant eggCloud, [Online]. [Accessed 22 March 2017]http://www.testplant.com/eggplant/testing-tools/eggcloud/; Google Analytics, [Online]. [Accessed 22 March 2017]https://www.google.com/analytics/analytics/#?modal_active=none; Piwik, [Online]. [Accessed 22 March 2017]https://piwik.org/what-is-piwik/; Amazon Pinpoint, [Online]. [Accessed 22 March 2017]https://aws.amazon.com/pinpoint/; Apple App Analytics, [Online]. [Accessed 22 March 2017]http://help.apple.com/itc/appanalytics/; Crashlytics, [Online]. [Accessed 22 March 2017]https://try.crashlytics.com/; Acra, [Online]. [Accessed 22 March 2017]https://github.com/ACRA/acra; Fabric Answers, [Online]. [Accessed 22 March 2017]https://answers.io/; fastlane, [Online]. [Accessed 22 March 2017]https://fabric.io/features/distribution; Optimizely, [Online]. [Accessed 22 March 2017]https://www.optimizely.com/de/; (2015)The Statistics Portal..Cited 3 times.Statista, Number of available apps in the Apple App Store from July 2008 to June 2015 [accessed 01/08/2016]http://www.statista.com/statistics/263795/number-of-available-apps-in-the-apple-app-store; (2016)The Statistics Portal.Cited 36 times.Statista, Worldwide mobile app revenues in 2015, 2016 and 2020 [accessed 02/01/2017]https://www.statista.com/statistics/269025/worldwide-mobile-app-revenue-forecast/; Jeremiah, J., Rajani, R., Natarajan, S.Digital Transformation: Disrupting business models for a better customer experience(2016)World Quality Report 2016-17.Cited 2 times.Eighth Edition, Capgemini, HP, Sogeti; LoadUI [Online]. [Accessed 22 March 2017]https://www.loadui.org/; SOASTA Mobile Performance [Online]., [Accessed 22 March 2017]https://www.soasta.com/performance-platform/; TestPlant eggPerformance [Online]., [Accessed 22 March 2017]https://www.testplant.com/eggplant/testing-tools/; Test Coverage Optimizer [Online]., [Accessed 22 March 2017]https://www.perfectomobile.com/solutions/digital-test-coverage; Fitnesse [Online]. [Accessed 22 March 2017]http://www.fitnesse.org/; cucumber [Online]., [Accessed 22 March 2017]https://cucumber.io/; Sobejana, M., Leow, A.Market Guide for Mobile App Test Automation Tools(2016)Gartner Report; Wargo, J.M., Lo Giudice, D.(2016)The Forrester Wave(tm): Mobile Front-End Test Automation Tools	117-124	"""@inproceedings{WOS:000419274600015,
    Author = ""Braun, Susanne and Elberzhager, Frank and Holl, Konstantin"",
    Editor = ""Shakshuki, E and Yasar, A"",
    Title = ""Automation Support for Mobile App Quality Assurance - A Tool Landscape"",
    Booktitle = ""14TH INTERNATIONAL CONFERENCE ON MOBILE SYSTEMS AND PERVASIVE COMPUTING (MOBISPC 2017) / 12TH INTERNATIONAL CONFERENCE ON FUTURE NETWORKS AND COMMUNICATIONS (FNC 2017) / AFFILIATED WORKSHOPS"",
    Series = ""Procedia Computer Science"",
    Year = ""2017"",
    Volume = ""110"",
    Pages = ""117-124"",
    Note = ""14th International Conference on Mobile Systems and Pervasive Computing (MobiSPC) / 12th International Conference on Future Networks and Communications (FNC), Leuven, BELGIUM, JUL 24-26, 2017"",
    Abstract = ""increased demand for outstanding app quality and user experience. At the same time, reduced time-to-market, decreased budgets and time available for quality assurance, and careful user experience design have to be considered. In response, an enormous market for mobile app quality and user experience measurement tools has grown around the mobile app store ecosystems. Developers following lean and agile development approaches continuously produce new features and ready-to- ship software increments. In those settings, budgets for evaluation and familiarization into new tools are very limited. Currently there are alone more than 28 tools and frameworks for functional test automation and more than 16 different device clouds available. For most of the software developing companies, it is impossible to evaluate and test all of them. In this paper, we present a classification in order to help navigation through the mobile app quality tools landscape for easier selection and more targeted evaluation of tools. (C) 2017 The Authors. Published by Elsevier B.V."",
    Publisher = ""ELSEVIER SCIENCE BV"",
    Address = ""SARA BURGERHARTSTRAAT 25, PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS"",
    Type = ""Proceedings Paper"",
    Language = ""English"",
    Affiliation = ""Braun, S (Corresponding Author), Fraunhofer IESE, Fraunhofer Pl 1, D-67663 Kaiserslatuern, Germany. Braun, Susanne; Elberzhager, Frank; Holl, Konstantin, Fraunhofer IESE, Fraunhofer Pl 1, D-67663 Kaiserslatuern, Germany."",
    DOI = ""10.1016/j.procs.2017.06.129"",
    ISSN = ""1877-0509"",
    Keywords = ""Mobile Applications; Quality; Quality Assurance; User Experience"",
    Research-Areas = ""Telecommunications"",
    Web-of-Science-Categories = ""Telecommunications"",
    Author-Email = ""susanne.braun@iese.fraunhofer.de"",
    Funding-Acknowledgement = ""German Federal Ministry of Education and Research (BMBF) {[}02K14A182]"",
    Funding-Text = ""The research described in this paper was performed in the project Opti4Apps (grant no. 02K14A182) of the German Federal Ministry of Education and Research (BMBF)."",
    Number-of-Cited-References = ""6"",
    Times-Cited = ""8"",
    Usage-Count-Last-180-days = ""0"",
    Usage-Count-Since-2013 = ""6"",
    Doc-Delivery-Number = ""BJ2GD"",
    Web-of-Science-Index = ""Conference Proceedings Citation Index - Science (CPCI-S)"",
    Unique-ID = ""WOS:000419274600015"",
    OA = ""gold"",
    DA = ""2024-10-22""
}
"""	Excluded	Excluded	new_screen			2	Web of Science		Automation Support for Mobile App Quality Assurance – A Tool Landscape	https://www.webofscience.com/wos/woscc/full-record/WOS:000419274600015	ELSEVIER SCIENCE BV	
56	Behave	CIaaS - computational intelligence as a service with Athena	Computational Intelligence (CI) is a sub-branch of Artificial Intelligence (Al) that focus on studying adaptive mechanisms to enable intelligent behavior in complex environments. CI techniques have been successful in solving complex problems in many different knowledge areas. However, despite their usefulness, developing solutions based on CI techniques is not a trivial activity, since it involves the codification/adaptation of algorithms to specific context and problems. In this paper, we present and validate through a quasi-experiment a new paradigm to develop Cl-based solutions using a more mature version of Athena (2.0): Computational Intelligence as a Service (ClaaS). Using this tool, both researchers and practitioners can design and evaluate Cl-based solutions by dragging and dropping components in a visual environment, in a cloud-based platform. The results of the quasi-experiment suggest that our approach can help researchers to design and evaluate Cl-based systems in a simple, reliable and fast way.	Computational intelligence; Tool; Visual programming; Computational intelligence;  Tool;  Visual programming	Oliveira, Pedro; Santos Neto, Pedro; Britto, Ricardo; Rabelo, Ricardo; Braga, Ronyerison; Souza, Matheus	COMPUTER LANGUAGES SYSTEMS \& STRUCTURES	https://doi.org/10.1016/j.cl.2018.04.003		95-118	"""@article{WOS:000454970200005,
    Author = ""Oliveira, Pedro and Santos Neto, Pedro and Britto, Ricardo and Rabelo, Ricardo and Braga, Ronyerison and Souza, Matheus"",
    Title = ""CIaaS - computational intelligence as a service with Athena"",
    Journal = ""COMPUTER LANGUAGES SYSTEMS \\& STRUCTURES"",
    Year = ""2018"",
    Volume = ""54"",
    Pages = ""95-118"",
    Month = ""DEC"",
    Abstract = ""Computational Intelligence (CI) is a sub-branch of Artificial Intelligence (Al) that focus on studying adaptive mechanisms to enable intelligent behavior in complex environments. CI techniques have been successful in solving complex problems in many different knowledge areas. However, despite their usefulness, developing solutions based on CI techniques is not a trivial activity, since it involves the codification/adaptation of algorithms to specific context and problems. In this paper, we present and validate through a quasi-experiment a new paradigm to develop Cl-based solutions using a more mature version of Athena (2.0): Computational Intelligence as a Service (ClaaS). Using this tool, both researchers and practitioners can design and evaluate Cl-based solutions by dragging and dropping components in a visual environment, in a cloud-based platform. The results of the quasi-experiment suggest that our approach can help researchers to design and evaluate Cl-based systems in a simple, reliable and fast way. (C) 2018 Elsevier Ltd. All rights reserved."",
    Publisher = ""PERGAMON-ELSEVIER SCIENCE LTD"",
    Address = ""THE BOULEVARD, LANGFORD LANE, KIDLINGTON, OXFORD OX5 1GB, ENGLAND"",
    Type = ""Article"",
    Language = ""English"",
    Affiliation = ""Oliveira, P (Corresponding Author), Fed Inst Maranhao IFMA, BR-65175000 Pedreiras, Brazil. Oliveira, Pedro, Fed Inst Maranhao IFMA, BR-65175000 Pedreiras, Brazil. Santos Neto, Pedro; Britto, Ricardo; Rabelo, Ricardo; Braga, Ronyerison; Souza, Matheus, Univ Fed Piaui, Lab Software Technol, BR-64049550 Teresina, Brazil. Britto, Ricardo, Blekinge Inst Technol, Dept Software Engn, SE-37149 Karlskrona, Sweden. Santos Neto, Pedro, Infoway E Hlth Co, Teresina, Brazil."",
    DOI = ""10.1016/j.cl.2018.04.003"",
    ISSN = ""1477-8424"",
    EISSN = ""1873-6866"",
    Keywords = ""Computational intelligence; Tool; Visual programming"",
    Keywords-Plus = ""GENETIC ALGORITHM; FUZZY-LOGIC; NEURAL-NETWORKS; JAVA FRAMEWORK; DESIGN; LANGUAGE; LIBRARY"",
    Research-Areas = ""Computer Science"",
    Web-of-Science-Categories = ""Computer Science, Software Engineering"",
    Author-Email = ""pedro.oliveira@ifma.edu.br pasn@ufpi.edu.br rbr@bth.se ricardoalr@ufpi.edu.br ronyerisonbraga@gmail.com matheusmmcs@gmail.com"",
    Affiliations = ""Instituto Federal do Maranhao; Universidade Federal do Piaui; Blekinge Institute Technology"",
    ResearcherID-Numbers = ""de Andrade Lira Rabelo, Ricardo/AAN-3551-2020 UFPI, pasn pasn/JXY-0805-2024 Martins de Oliveira, Pedro Almir/P-1884-2018"",
    ORCID-Numbers = ""Rabelo, Ricardo/0000-0003-1482-6404 Martins de Oliveira, Pedro Almir/0000-0002-3067-3076 Santos Neto, Pedro/0000-0002-1554-8445"",
    Funding-Acknowledgement = ""INES; UFPI; CNPq; CAPES"",
    Funding-Text = ""We would like to thank INES, UFPI, CNPq, and CAPES for partially supporting this work. Also, we would like to acknowledge Infoway<SUP>16</SUP> for the important contributions to the research."",
    Number-of-Cited-References = ""74"",
    Times-Cited = ""3"",
    Usage-Count-Last-180-days = ""0"",
    Usage-Count-Since-2013 = ""8"",
    Journal-ISO = ""Comput. Lang. Syst. Struct."",
    Doc-Delivery-Number = ""HG4UJ"",
    Web-of-Science-Index = ""Science Citation Index Expanded (SCI-EXPANDED)"",
    Unique-ID = ""WOS:000454970200005"",
    DA = ""2024-10-22""
}
"""	Excluded	Excluded	new_screen			2	Web of Science		CIaaS - computational intelligence as a service with Athena	https://www.webofscience.com/wos/woscc/full-record/WOS:000454970200005	PERGAMON-ELSEVIER SCIENCE LTD	nan; References
57	Behave	Optimizing stock assessment workflows by applying software development methodology	Considering that stock assessment requires iterative work including exploratory calculations and discussion, efficiency in completing projects is the key to a successful contribution to stock management. However, if the production speed of each process of the project is inconsistent, a faster process may be worse than a slower process because a large amount of information produced by a faster process induces human error. To coordinate the production speed of each process, we applied software development methodology to the whole assessment project, including small important tasks such as scenario selection, debugging, and yearly updates. First, we established a continuously integrated (CI) document system that monitors project files and triggers report generation when they are updated. The system is composed of four cloud services: a code hosting service, a cloud computing service, cloud storage, and a website hosting service. Because of the CI document system, all the following iterative work was reflected in the report without creating any unused output. The workflow benefited not only from the collaboration but also from the maintainability of the project because work progress and the discussion remained visible for all collaborators. We discuss the effectiveness of a workflow by Lean manufacturing that allows us to focus on the essential problem of the assessment project.	Continuous integration;; Lean manufacturing;; Open science;; Reproducible research	Hayashi, Akira; Ichinokawa, Momoko; Kinoshita, Junji; Manabe, Akihiro	Fisheries Research	https://doi.org/10.1016/j.fishres.2021.106108			"""@ARTICLE{Hayashi2021,
    author = ""Hayashi, Akira and Ichinokawa, Momoko and Kinoshita, Junji and Manabe, Akihiro"",
    title = ""Optimizing stock assessment workflows by applying software development methodology"",
    year = ""2021"",
    journal = ""Fisheries Research"",
    volume = ""244"",
    doi = ""10.1016/j.fishres.2021.106108"",
    url = ""https://www.scopus.com/inward/record.uri?eid=2-s2.0-85118781565\&doi=10.1016\%2fj.fishres.2021.106108\&partnerID=40\&md5=2036c71aae79d8808127392e46fcd711"",
    affiliations = ""Fisheries Resources Institute, Japan Fisheries Research and Education Agency, 2-12-4 Fuku-ura, Kanazawa ward Yokohama, Kanagawa, Japan"",
    abstract = ""Considering that stock assessment requires iterative work including exploratory calculations and discussion, efficiency in completing projects is the key to a successful contribution to stock management. However, if the production speed of each process of the project is inconsistent, a faster process may be worse than a slower process because a large amount of information produced by a faster process induces human error. To coordinate the production speed of each process, we applied software development methodology to the whole assessment project, including small important tasks such as scenario selection, debugging, and yearly updates. First, we established a continuously integrated (CI) document system that monitors project files and triggers report generation when they are updated. The system is composed of four cloud services: a code hosting service, a cloud computing service, cloud storage, and a website hosting service. Because of the CI document system, all the following iterative work was reflected in the report without creating any unused output. The workflow benefited not only from the collaboration but also from the maintainability of the project because work progress and the discussion remained visible for all collaborators. We discuss the effectiveness of a workflow by Lean manufacturing that allows us to focus on the essential problem of the assessment project. (c) 2021 Elsevier B.V."",
    author_keywords = ""Continuous integration; Lean manufacturing; Open science; Reproducible research"",
    correspondence_address = ""A. Hayashi; Fisheries Resources Institute, Japan Fisheries Research and Education Agency, Kanazawa ward Yokohama, 2-12-4 Fuku-ura, Japan; email: hayashi@fixpoint.co.jp"",
    publisher = ""Elsevier B.V."",
    issn = ""01657836"",
    coden = ""FISRD"",
    language = ""English"",
    abbrev_source_title = ""Fish. Res."",
    type = ""Article"",
    publication_stage = ""Final"",
    source = ""Scopus"",
    note = ""Cited by: 2""
}
"""	Excluded	Excluded	new_screen			2	Scopus Signed In		Optimizing stock assessment workflows by applying software development methodology	https://www.scopus.com/record/display.uri?eid=2-s2.0-85118781565&origin=resultslist&sort=plf-f&src=s&sid=09de4a8d28b835e0cea1be205a31eaa7&sot=b&sdt=b&s=TITLE-ABS-KEY%28optimizing+stock+assessment+workflows+by+applying+software+development+methodology%29&sl=97&sessionSearchId=09de4a8d28b835e0cea1be205a31eaa7&relpos=0	Elsevier B.V	nan; References; Pages
58	Behave	Architecting with microservices: A systematic mapping study	Context: A microservice architecture is composed of a set of small services, each running in its own process and communicating with lightweight mechanisms. Many aspects on architecting with microservices are still unexplored and existing research is still far from being crispy clear. Objective: We aim at identifying, classifying, and evaluating the state of the art on architecting with microservices from the following perspectives: publication trends, focus of research, and potential for industrial adoption. Method: We apply the systematic mapping methodology. We rigorously selected 103 primary studies and we defined and applied a classification framework to them for extracting key information for subsequent analysis. We synthesized the obtained data and produced a clear overview of the state of the art. Results: This work contributes with (i) a classification framework for research studies on architecting with microservices, (ii) a systematic map of current research of the field, (iii) an evaluation of the potential for industrial adoption of research results, and (iv) a discussion of emerging findings and implications for future research. Conclusion: This study provides a solid, rigorous, and replicable picture of the state of the art on architecting with microservices. Its results can benefit both researchers and practitioners of the field.	Microservices; Software architecture; Systematic mapping study; Microservices;  Software architecture;  Systematic mapping study	Di Francesco, Paolo; Lago, Patricia; Malavolta, Ivano	JOURNAL OF SYSTEMS AND SOFTWARE	https://doi.org/10.1016/j.jss.2019.01.001		77-97	"""@article{WOS:000459363700007,
    Author = ""Di Francesco, Paolo and Lago, Patricia and Malavolta, Ivano"",
    Title = ""Architecting with microservices: A systematic mapping study"",
    Journal = ""JOURNAL OF SYSTEMS AND SOFTWARE"",
    Year = ""2019"",
    Volume = ""150"",
    Pages = ""77-97"",
    Month = ""APR"",
    Abstract = ""Context: A microservice architecture is composed of a set of small services, each running in its own process and communicating with lightweight mechanisms. Many aspects on architecting with microservices are still unexplored and existing research is still far from being crispy clear. Objective: We aim at identifying, classifying, and evaluating the state of the art on architecting with microservices from the following perspectives: publication trends, focus of research, and potential for industrial adoption. Method: We apply the systematic mapping methodology. We rigorously selected 103 primary studies and we defined and applied a classification framework to them for extracting key information for subsequent analysis. We synthesized the obtained data and produced a clear overview of the state of the art. Results: This work contributes with (i) a classification framework for research studies on architecting with microservices, (ii) a systematic map of current research of the field, (iii) an evaluation of the potential for industrial adoption of research results, and (iv) a discussion of emerging findings and implications for future research. Conclusion: This study provides a solid, rigorous, and replicable picture of the state of the art on architecting with microservices. Its results can benefit both researchers and practitioners of the field. (C) 2019 Elsevier Inc. All rights reserved."",
    Publisher = ""ELSEVIER SCIENCE INC"",
    Address = ""STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA"",
    Type = ""Article"",
    Language = ""English"",
    Affiliation = ""Di Francesco, P (Corresponding Author), Gran Sasso Sci Inst, Comp Sci, Laquila, Italy. Di Francesco, Paolo, Gran Sasso Sci Inst, Comp Sci, Laquila, Italy. Lago, Patricia, Vrije Univ Amsterdam, Software Engn, Amsterdam, Netherlands. Lago, Patricia, Vrije Univ Amsterdam, Res Grp S2, Comp Sci Dept, Amsterdam, Netherlands. Malavolta, Ivano, Vrije Univ Amsterdam, Amsterdam, Netherlands."",
    DOI = ""10.1016/j.jss.2019.01.001"",
    ISSN = ""0164-1212"",
    EISSN = ""1873-1228"",
    Keywords = ""Microservices; Software architecture; Systematic mapping study"",
    Research-Areas = ""Computer Science"",
    Web-of-Science-Categories = ""Computer Science, Software Engineering; Computer Science, Theory \\& Methods"",
    Author-Email = ""paolo.difrancesco@gssi.it"",
    Affiliations = ""Gran Sasso Science Institute (GSSI); Vrije Universiteit Amsterdam; Vrije Universiteit Amsterdam; Vrije Universiteit Amsterdam"",
    ResearcherID-Numbers = ""Lago, Patricia/ABH-2308-2020 Malavolta, Ivano/E-9018-2017"",
    ORCID-Numbers = ""Lago, Patricia/0000-0002-2234-0845 Malavolta, Ivano/0000-0001-5773-8346"",
    Number-of-Cited-References = ""39"",
    Times-Cited = ""104"",
    Usage-Count-Last-180-days = ""1"",
    Usage-Count-Since-2013 = ""73"",
    Journal-ISO = ""J. Syst. Softw."",
    Doc-Delivery-Number = ""HM3HF"",
    Web-of-Science-Index = ""Science Citation Index Expanded (SCI-EXPANDED)"",
    Unique-ID = ""WOS:000459363700007"",
    OA = ""Green Published"",
    DA = ""2024-10-22""
}
"""	Excluded	Excluded	new_screen			2	Web of Science		Architecting with microservices: A systematic mapping study	https://www.webofscience.com/wos/woscc/full-record/WOS:000459363700007	ELSEVIER SCIENCE INC	nan; References
59	Behave	Design from detail: Analyzing data from a global day of coderetreat	Context Coderetreats are reflective communities of practice, where participants congregate informally to apply their coding abilities to a clearly defined problem setting with the aim of developing their software design skills. One of these events is the global day of coderetreat (GDCR) involving more than two thousand software developers worldwide. Objective The GDCR provided an opportunity to explore the ways that the coderetreat activity is perceived by its participants as a medium for reflective practice, and to suggest ways that we can enhance the design of coderetreats for improving both the experience and learning outcomes. Method We conducted both quantitative and qualitative surveys from a number of participants in the GDCR to understand how software developers hone their craft in the context of a coderetreat. Results Our study indicates that future coderetreats, particularly those that are likely to attract less experienced developers, should consider providing more structural scaffolding to the initial processes of test driven development. Conclusion We believe that all coderetreats should more explicitly encourage practice and reflection on the four elements of simple design. We suggest a more sustained approach throughout the coderetreat with provision of more structural scaffolding. Accordingly, we have derived a set of recommended practices to make the coderetreat more effective for less experienced developers.	Scaffolds; Surveying; Surveys; Communities of Practice; Global day of coderetreat; Legacy coderetreat; Qualitative surveys; Recommended practice; Reflective practices; Software developer; Test driven development; Software design; Scaffolds;  Surveying;  Surveys;  Communities of Practice;  Global day of coderetreat;  Legacy coderetreat;  Qualitative surveys;  Recommended practice;  Reflective practices;  Software developer;  Test driven development;  Software design	Parsons, David; Susnjak, Teo; Mathrani, Anuradha	Information and Software Technology	https://doi.org/10.1016/j.infsof.2016.03.005		39 - 55	"""@ARTICLE{Parsons201639,
    author = ""Parsons, David and Susnjak, Teo and Mathrani, Anuradha"",
    title = ""Design from detail: Analyzing data from a global day of coderetreat"",
    year = ""2016"",
    journal = ""Information and Software Technology"",
    volume = ""75"",
    pages = ""39 - 55"",
    doi = ""10.1016/j.infsof.2016.03.005"",
    url = ""https://www.scopus.com/inward/record.uri?eid=2-s2.0-84963972098\&doi=10.1016\%2fj.infsof.2016.03.005\&partnerID=40\&md5=e7999355a83fff09750d1b76bd06ffe0"",
    affiliations = ""Mind Lab by Unitec, 69 Carlton Gore Road, Auckland, 1023, New Zealand; School of Engineering and Advanced Technology, Massey University, Auckland, 102904, New Zealand"",
    abstract = ""Context Coderetreats are reflective communities of practice, where participants congregate informally to apply their coding abilities to a clearly defined problem setting with the aim of developing their software design skills. One of these events is the global day of coderetreat (GDCR) involving more than two thousand software developers worldwide. Objective The GDCR provided an opportunity to explore the ways that the coderetreat activity is perceived by its participants as a medium for reflective practice, and to suggest ways that we can enhance the design of coderetreats for improving both the experience and learning outcomes. Method We conducted both quantitative and qualitative surveys from a number of participants in the GDCR to understand how software developers hone their craft in the context of a coderetreat. Results Our study indicates that future coderetreats, particularly those that are likely to attract less experienced developers, should consider providing more structural scaffolding to the initial processes of test driven development. Conclusion We believe that all coderetreats should more explicitly encourage practice and reflection on the four elements of simple design. We suggest a more sustained approach throughout the coderetreat with provision of more structural scaffolding. Accordingly, we have derived a set of recommended practices to make the coderetreat more effective for less experienced developers. (c) 2016 Published by Elsevier B.V."",
    author_keywords = ""Global day of coderetreat; Legacy coderetreat; Simple design; Survey; Test driven development"",
    keywords = ""Scaffolds; Surveying; Surveys; Communities of Practice; Global day of coderetreat; Legacy coderetreat; Qualitative surveys; Recommended practice; Reflective practices; Software developer; Test driven development; Software design"",
    correspondence_address = ""A. Mathrani; School of Engineering and Advanced Technology, Massey University, Auckland, 102904, New Zealand; email: A.S.Mathrani@massey.ac.nz"",
    publisher = ""Elsevier B.V."",
    issn = ""09505849"",
    coden = ""ISOTE"",
    language = ""English"",
    abbrev_source_title = ""Inf Software Technol"",
    type = ""Article"",
    publication_stage = ""Final"",
    source = ""Scopus"",
    note = ""Cited by: 3""
}
"""	Excluded	Excluded	new_screen			2	Scopus Signed In		Design from detail: Analyzing data from a global day of coderetreat	https://www.scopus.com/record/display.uri?eid=2-s2.0-84963972098&origin=resultslist&sort=plf-f&src=s&sid=dd4306a4b0a56472e548146a01d3ed52&sot=b&sdt=b&s=TITLE-ABS-KEY%28design+from+detail+analyzing+data+from+a+global+day+of+coderetreat%29&sl=81&sessionSearchId=dd4306a4b0a56472e548146a01d3ed52&relpos=0	Elsevier B.V	nan; References
60	Behave	A multi-case study of agile requirements engineering and the use of test cases as requirements	Context: It is an enigma that agile projects can succeed `without requirements' when weak requirements engineering is a known cause for project failures. While agile development projects often manage well without extensive requirements test cases are commonly viewed as requirements and detailed requirements are documented as test cases. Objective: We have investigated this agile practice of using test cases as requirements to understand how test cases can support the main requirements activities, and how this practice varies. Method: We performed an iterative case study at three companies and collected data through 14 interviews and two focus groups. Results: The use of test cases as requirements poses both benefits and challenges when eliciting, validating, verifying, and managing requirements, and when used as a documented agreement. We have identified five variants of the test-cases-as-requirements practice, namely de facto, behaviour-driven, story-test driven, stand-alone strict and stand-alone manual for which the application of the practice varies concerning the time frame of requirements documentation, the requirements format, the extent to which the test cases are a machine executable specification and the use of tools which provide specific support for the practice of using test cases as requirements. Conclusions: The findings provide empirical insight into how agile development projects manage and communicate requirements. The identified variants of the practice of using test cases as requirements can be used to perform in-depth investigations into agile requirements engineering. Practitioners can use the provided recommendations as a guide in designing and improving their agile requirements practices based on project characteristics such as number of stakeholders and rate of change.	Agile development; Requirements; Testing; Test-first development; Test-driven development; Behaviour-driven development; Acceptance test; Case study; Empirical software engineering; Agile development;  Requirements;  Testing;  Test-first development;  Test-driven development;  Behaviour-driven development;  Acceptance test;  Case study;  Empirical software engineering	Bjarnason, Elizabeth; Unterkalmsteiner, Michael; Borg, Markus; Engstrom, Emelie	INFORMATION AND SOFTWARE TECHNOLOGY	https://doi.org/10.1016/j.infsof.2016.03.008		61-79	"""@article{WOS:000379271000005,
    Author = ""Bjarnason, Elizabeth and Unterkalmsteiner, Michael and Borg, Markus and Engstrom, Emelie"",
    Title = ""A multi-case study of agile requirements engineering and the use of test cases as requirements"",
    Journal = ""INFORMATION AND SOFTWARE TECHNOLOGY"",
    Year = ""2016"",
    Volume = ""77"",
    Pages = ""61-79"",
    Month = ""SEP"",
    Abstract = ""Context: It is an enigma that agile projects can succeed `without requirements' when weak requirements engineering is a known cause for project failures. While agile development projects often manage well without extensive requirements test cases are commonly viewed as requirements and detailed requirements are documented as test cases. Objective: We have investigated this agile practice of using test cases as requirements to understand how test cases can support the main requirements activities, and how this practice varies. Method: We performed an iterative case study at three companies and collected data through 14 interviews and two focus groups. Results: The use of test cases as requirements poses both benefits and challenges when eliciting, validating, verifying, and managing requirements, and when used as a documented agreement. We have identified five variants of the test-cases-as-requirements practice, namely de facto, behaviour-driven, story-test driven, stand-alone strict and stand-alone manual for which the application of the practice varies concerning the time frame of requirements documentation, the requirements format, the extent to which the test cases are a machine executable specification and the use of tools which provide specific support for the practice of using test cases as requirements. Conclusions: The findings provide empirical insight into how agile development projects manage and communicate requirements. The identified variants of the practice of using test cases as requirements can be used to perform in-depth investigations into agile requirements engineering. Practitioners can use the provided recommendations as a guide in designing and improving their agile requirements practices based on project characteristics such as number of stakeholders and rate of change. (C) 2016 Elsevier B.V. All rights reserved."",
    Publisher = ""ELSEVIER"",
    Address = ""RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS"",
    Type = ""Article"",
    Language = ""English"",
    Affiliation = ""Bjarnason, E (Corresponding Author), Lund Univ, SE-22100 Lund, Sweden. Bjarnason, Elizabeth; Borg, Markus; Engstrom, Emelie, Lund Univ, SE-22100 Lund, Sweden. Unterkalmsteiner, Michael, Blekinge Inst Technol, SE-37179 Karlskrona, Sweden."",
    DOI = ""10.1016/j.infsof.2016.03.008"",
    ISSN = ""0950-5849"",
    EISSN = ""1873-6025"",
    Keywords = ""Agile development; Requirements; Testing; Test-first development; Test-driven development; Behaviour-driven development; Acceptance test; Case study; Empirical software engineering"",
    Keywords-Plus = ""SOFTWARE; CHALLENGES"",
    Research-Areas = ""Computer Science"",
    Web-of-Science-Categories = ""Computer Science, Information Systems; Computer Science, Software Engineering"",
    Author-Email = ""elizabeth.bjarnason@cs.lth.se mun@bth.se markus.borg@cs.lth.se emelie.engstrom@cs.lth.se"",
    Affiliations = ""Lund University; Blekinge Institute Technology"",
    ResearcherID-Numbers = ""Engstrom, Emelie/AAG-7808-2019 Borg, Markus/F-3609-2010"",
    ORCID-Numbers = ""Bjarnason, Elizabeth/0000-0001-9070-0008 Engstrom, Emelie/0000-0001-6736-9425 Unterkalmsteiner, Michael/0000-0003-4118-0952 Borg, Markus/0000-0001-7879-4371"",
    Number-of-Cited-References = ""50"",
    Times-Cited = ""34"",
    Usage-Count-Last-180-days = ""0"",
    Usage-Count-Since-2013 = ""46"",
    Journal-ISO = ""Inf. Softw. Technol."",
    Doc-Delivery-Number = ""DQ5UQ"",
    Web-of-Science-Index = ""Science Citation Index Expanded (SCI-EXPANDED)"",
    Unique-ID = ""WOS:000379271000005"",
    OA = ""Green Accepted, Green Submitted"",
    DA = ""2024-10-22""
}
"""	Excluded	Excluded	new_screen			2	Web of Science		A multi-case study of agile requirements engineering and the use of test cases as requirements	https://www.webofscience.com/wos/woscc/full-record/WOS:000379271000005	ELSEVIER	nan; References
61	Behave	NLP-assisted software testing: A systematic mapping of the literature	"Context: To reduce manual effort of extracting test cases from natural-language requirements, many approaches based on Natural Language Processing (NLP) have been proposed in the literature. Given the large amount of approaches in this area, and since many practitioners are eager to utilize such techniques, it is important to synthesize and provide an overview of the state-of-the-art in this area. Objective: Our objective is to summarize the state-of-the-art in NLP-assisted software testing which could benefit practitioners to potentially utilize those NLP-based techniques. Moreover, this can benefit researchers in providing an overview of the research landscape. Method: To address the above need, we conducted a survey in the form of a systematic literature mapping (classification). After compiling an initial pool of 95 papers, we conducted a systematic voting, and our final pool included 67 technical papers. Results: This review paper provides an overview of the contribution types presented in the papers, types of NLP approaches used to assist software testing, types of required input requirements, and a review of tool support in this area. Some key results we have detected are: (1) only four of the 38 tools (11%) presented in the papers are available for download; (2) a larger ratio of the papers (30 of 67) provided a shallow exposure to the NLP aspects (almost no details). Conclusion: This paper would benefit both practitioners and researchers by serving as an ""index"" to the body of knowledge in this area. The results could help practitioners utilizing the existing NLP-based techniques; this in turn reduces the cost of test-case design and decreases the amount of human resources spent on test activities. After sharing this review with some of our industrial collaborators, initial insights show that this review can indeed be useful and beneficial to practitioners."	Mapping; Natural language processing systems; Body of knowledge; Industrial collaborators; Large amounts; NAtural language processing; Natural language requirements; Review papers; State of the art; Systematic mapping; Software testing; Mapping;  Natural language processing systems;  Body of knowledge;  Industrial collaborators;  Large amounts;  NAtural language processing;  Natural language requirements;  Review papers;  State of the art;  Systematic mapping;  Software testing	Garousi, Vahid; Bauer, Sara; Felderer, Michael	Information and Software Technology	https://doi.org/10.1016/j.infsof.2020.106321			"""@ARTICLE{Garousi2020,
    author = ""Garousi, Vahid and Bauer, Sara and Felderer, Michael"",
    title = ""NLP-assisted software testing: A systematic mapping of the literature"",
    year = ""2020"",
    journal = ""Information and Software Technology"",
    volume = ""126"",
    doi = ""10.1016/j.infsof.2020.106321"",
    url = ""https://www.scopus.com/inward/record.uri?eid=2-s2.0-85084949953\&doi=10.1016\%2fj.infsof.2020.106321\&partnerID=40\&md5=0ff581bcf04c671a8156eb239a1d8a58"",
    affiliations = ""Queen's University Belfast, Northern Ireland, United Kingdom; University of Innsbruck, Austria; Blekinge Institute of Technology, Sweden"",
    abstract = ""Context: To reduce manual effort of extracting test cases from natural-language requirements, many approaches based on Natural Language Processing (NLP) have been proposed in the literature. Given the large amount of approaches in this area, and since many practitioners are eager to utilize such techniques, it is important to synthesize and provide an overview of the state-of-the-art in this area. Objective: Our objective is to summarize the state-of-the-art in NLP-assisted software testing which could benefit practitioners to potentially utilize those NLP-based techniques. Moreover, this can benefit researchers in providing an overview of the research landscape. Method: To address the above need, we conducted a survey in the form of a systematic literature mapping (classification). After compiling an initial pool of 95 papers, we conducted a systematic voting, and our final pool included 67 technical papers. Results: This review paper provides an overview of the contribution types presented in the papers, types of NLP approaches used to assist software testing, types of required input requirements, and a review of tool support in this area. Some key results we have detected are: (1) only four of the 38 tools (11\%) presented in the papers are available for download; (2) a larger ratio of the papers (30 of 67) provided a shallow exposure to the NLP aspects (almost no details). Conclusion: This paper would benefit both practitioners and researchers by serving as an ""index"" to the body of knowledge in this area. The results could help practitioners utilizing the existing NLP-based techniques; this in turn reduces the cost of test-case design and decreases the amount of human resources spent on test activities. After sharing this review with some of our industrial collaborators, initial insights show that this review can indeed be useful and beneficial to practitioners. (c) 2020 Elsevier B.V."",
    author_keywords = ""Natural Language Processing (NLP); Software testing; Systematic literature mapping; Systematic literature review"",
    keywords = ""Mapping; Natural language processing systems; Body of knowledge; Industrial collaborators; Large amounts; NAtural language processing; Natural language requirements; Review papers; State of the art; Systematic mapping; Software testing"",
    correspondence_address = ""V. Garousi; Queen's University Belfast, Northern Ireland, United Kingdom; email: v.garousi@qub.ac.uk"",
    publisher = ""Elsevier B.V."",
    issn = ""09505849"",
    coden = ""ISOTE"",
    language = ""English"",
    abbrev_source_title = ""Inf Software Technol"",
    type = ""Review"",
    publication_stage = ""Final"",
    source = ""Scopus"",
    note = ""Cited by: 48; All Open Access, Green Open Access""
}
"""	Excluded	Excluded	new_screen			2	Scopus Signed In		NLP-assisted software testing: A systematic mapping of the literature	https://www.scopus.com/record/display.uri?eid=2-s2.0-85084949953&origin=resultslist&sort=plf-f&src=s&sid=4d5f1a59e5352a20571f1e9e7ead15ad&sot=b&sdt=b&s=TITLE-ABS-KEY%28nlp+assisted+software+testing+a+systematic+mapping+of+the+literature%29&sl=83&sessionSearchId=4d5f1a59e5352a20571f1e9e7ead15ad&relpos=0	Elsevier B.V	nan; References; Pages
62	Behave	Speed up BDD for safety verification in agile development: a partially replicated controlled experiment	Context: Agile development has aroused interest in developing safety-critical systems. Problem statement: However, an increasingly changing architecture makes traditional safety assurance, especially safety analysis and verification, difficult to work. Recently, we proposed STPA-BDD (System-Theoretic Process Analysis-Behaviour Driven Development) for safety analysis and verification in agile development. It showed a good communication effectiveness in a controlled experiment with 44 undergraduate students. However, productivity, test thoroughness and fault detection effectiveness show no statistically significant difference in comparison with UAT (User Acceptance Testing). Objective: In this article, we aim to speed up STPA-BDD through improving productivity, test thoroughness and fault detection effectiveness of STPA-BDD. We develop a semi-automated tool to speed up BDD for safety verification. Method: We evaluate the semi-automated tool concerning productivity, test thoroughness and fault detection effectiveness in a replicated experiment with 11 additional undergraduate students by comparing them with the results from 22 students in the original experiment. Results: The results turn out that productivity is more than 7 times greater, while test thoroughness is more than 1.5 times greater and fault detection effectiveness is more than 2 times greater by using this semi-automated tool than without using it. Conclusion: BDD for safety verification has beed sped up by using this semi-automated tool. Using professionals instead of students as subjects might provide a clearer impact.	agile development;  controlled experiment;  safety verification; agile development, controlled experiment, safety verification	Wang, Yang; Degutis, Daniel Ryan; Wagner, Stefan	XP '18: Proceedings of the 19th International Conference on Agile Software Development: Companion	https://doi.org/10.1145/3234152.3234181		1-8	"""@inproceedings{10.1145/3234152.3234181,
    author = ""Wang, Yang and Degutis, Daniel Ryan and Wagner, Stefan"",
    title = ""Speed up BDD for safety verification in agile development: a partially replicated controlled experiment"",
    year = ""2018"",
    isbn = ""9781450364225"",
    publisher = ""Association for Computing Machinery"",
    address = ""New York, NY, USA"",
    url = ""https://doi.org/10.1145/3234152.3234181"",
    doi = ""10.1145/3234152.3234181"",
    abstract = ""Context: Agile development has aroused interest in developing safety-critical systems. Problem statement: However, an increasingly changing architecture makes traditional safety assurance, especially safety analysis and verification, difficult to work. Recently, we proposed STPA-BDD (System-Theoretic Process Analysis-Behaviour Driven Development) for safety analysis and verification in agile development. It showed a good communication effectiveness in a controlled experiment with 44 undergraduate students. However, productivity, test thoroughness and fault detection effectiveness show no statistically significant difference in comparison with UAT (User Acceptance Testing). Objective: In this article, we aim to speed up STPA-BDD through improving productivity, test thoroughness and fault detection effectiveness of STPA-BDD. We develop a semi-automated tool to speed up BDD for safety verification. Method: We evaluate the semi-automated tool concerning productivity, test thoroughness and fault detection effectiveness in a replicated experiment with 11 additional undergraduate students by comparing them with the results from 22 students in the original experiment. Results: The results turn out that productivity is more than 7 times greater, while test thoroughness is more than 1.5 times greater and fault detection effectiveness is more than 2 times greater by using this semi-automated tool than without using it. Conclusion: BDD for safety verification has beed sped up by using this semi-automated tool. Using professionals instead of students as subjects might provide a clearer impact."",
    booktitle = ""Proceedings of the 19th International Conference on Agile Software Development: Companion"",
    articleno = ""12"",
    numpages = ""8"",
    keywords = ""agile development, controlled experiment, safety verification"",
    location = ""Porto, Portugal"",
    series = ""XP '18""
}
"""	Included	Included	new_screen			2	Scopus Signed In		Speed up BDD for Safety Verification in Agile Development: A Partially Replicated Controlled Experiment	https://dl.acm.org/doi/10.1145/3234152.3234181	Association for Computing Machinery	nan; References
63	Behave	Combining STPA and BDD for safety analysis and verification in agile development	Agile development is in widespread use, even in safety-critical domains. However, there is a lack of an appropriate safety analysis and verification method in agile development. In this poster, we propose the use of Behavior Driven Development for safety verification with System-Theoretic Process Analysis for safety analysis in agile development. It shows a good capability on communication effectiveness through a preliminary controlled experiment.	agile development;  safety verification;  safety-critical systems; agile development, safety verification, safety-critical systems	Wang, Yang; Wagner, Stefan	ICSE '18: Proceedings of the 40th International Conference on Software Engineering: Companion Proceeedings	https://doi.org/10.1145/3183440.3194973		286-287	"""@inproceedings{10.1145/3183440.3194973,
    author = ""Wang, Yang and Wagner, Stefan"",
    title = ""Combining STPA and BDD for safety analysis and verification in agile development"",
    year = ""2018"",
    isbn = ""9781450356633"",
    publisher = ""Association for Computing Machinery"",
    address = ""New York, NY, USA"",
    url = ""https://doi.org/10.1145/3183440.3194973"",
    doi = ""10.1145/3183440.3194973"",
    abstract = ""Agile development is in widespread use, even in safety-critical domains. However, there is a lack of an appropriate safety analysis and verification method in agile development. In this poster, we propose the use of Behavior Driven Development for safety verification with System-Theoretic Process Analysis for safety analysis in agile development. It shows a good capability on communication effectiveness through a preliminary controlled experiment."",
    booktitle = ""Proceedings of the 40th International Conference on Software Engineering: Companion Proceeedings"",
    pages = ""286-287"",
    numpages = ""2"",
    keywords = ""agile development, safety verification, safety-critical systems"",
    location = ""Gothenburg, Sweden"",
    series = ""ICSE '18""
}
"""	Included	Included	new_screen			2	Scopus Signed In		Combining STPA and BDD for safety analysis and verification in agile development: A controlled experiment	https://dl.acm.org/doi/10.1145/3183440.3194973	Association for Computing Machinery	nan; References
64	Behave	Is business domain language support beneficial for creating test case specifications: A controlled experiment	Context: Behavior Driven Development (BDD), widely used in modern software development, enables easy creation of acceptance test case specifications and serves as a communication basis between business- and technical-oriented stakeholders. BDD is largely facilitated through simple domain specific languages (DSL) and usually restricted to technical test domain concepts. Integrating business domain concepts to implement a ubiquitous language for all members of the development team is an appealing test language improvement issue. But the integration of business domain concepts into BDD toolkits has so far not been investigated. Objective: The objective of the study presented in this paper is to examine whether supporting the ubiquitous language features inside a DSL, by extending a DSL with business domain concepts, is beneficial over using a DSL without those concepts. In the context of the study, benefit is measured in terms of perceived quality, creation time and length of the created test case specifications. In addition, we analyze if participants feel supported when using predefined business domain concepts. Method: We investigate the creation of test case specifications, similar to BDD, in a controlled student experiment performed with graduate students based on a novel platform for DSL experimentation. The experiment was carried out by two groups, each solving a similar comparable test case, one with the simple DSL, the other one with the DSL that includes business domain concepts. A crossover design was chosen for evaluating the perceived quality of the resulting specifications. Results: Our experiment indicates that a business domain aware language allows significant faster creation of documents without lowering the perceived quality. Subjects felt better supported by the DSL with business concepts. Conclusion: Based on our findings we propose that existing BDD toolkits could be further improved by integrating business domain concepts.	Boolean functions; Computer programming languages; Problem oriented languages; Software design; Software testing; Specifications; Students; Testing; Behavior driven development; Controlled experiment; Development teams; Domain specific languages; Language features; Perceived quality; Student experiments; Test case specifications; Acceptance tests; Boolean functions;  Computer programming languages;  Problem oriented languages;  Software design;  Software testing;  Specifications;  Students;  Testing;  Behavior driven development;  Controlled experiment;  Development teams;  Domain specific languages;  Language features;  Perceived quality;  Student experiments;  Test case specifications;  Acceptance tests	Haser, Florian; Felderer, Michael; Breu, Ruth	Information and Software Technology	https://doi.org/10.1016/j.infsof.2016.07.001		52 - 62	"""@ARTICLE{Haser201652,
    author = ""Haser, Florian and Felderer, Michael and Breu, Ruth"",
    title = ""Is business domain language support beneficial for creating test case specifications: A controlled experiment"",
    year = ""2016"",
    journal = ""Information and Software Technology"",
    volume = ""79"",
    pages = ""52 - 62"",
    doi = ""10.1016/j.infsof.2016.07.001"",
    url = ""https://www.scopus.com/inward/record.uri?eid=2-s2.0-84990036753\&doi=10.1016\%2fj.infsof.2016.07.001\&partnerID=40\&md5=23042425f7a84d0ada295d7b9e0547d3"",
    affiliations = ""University of Innsbruck, Technikerstr. 21a, A-6020 Innsbruck, Austria"",
    abstract = ""Context: Behavior Driven Development (BDD), widely used in modern software development, enables easy creation of acceptance test case specifications and serves as a communication basis between business- and technical-oriented stakeholders. BDD is largely facilitated through simple domain specific languages (DSL) and usually restricted to technical test domain concepts. Integrating business domain concepts to implement a ubiquitous language for all members of the development team is an appealing test language improvement issue. But the integration of business domain concepts into BDD toolkits has so far not been investigated. Objective: The objective of the study presented in this paper is to examine whether supporting the ubiquitous language features inside a DSL, by extending a DSL with business domain concepts, is beneficial over using a DSL without those concepts. In the context of the study, benefit is measured in terms of perceived quality, creation time and length of the created test case specifications. In addition, we analyze if participants feel supported when using predefined business domain concepts. Method: We investigate the creation of test case specifications, similar to BDD, in a controlled student experiment performed with graduate students based on a novel platform for DSL experimentation. The experiment was carried out by two groups, each solving a similar comparable test case, one with the simple DSL, the other one with the DSL that includes business domain concepts. A crossover design was chosen for evaluating the perceived quality of the resulting specifications. Results: Our experiment indicates that a business domain aware language allows significant faster creation of documents without lowering the perceived quality. Subjects felt better supported by the DSL with business concepts. Conclusion: Based on our findings we propose that existing BDD toolkits could be further improved by integrating business domain concepts. (c) 2016 Elsevier B.V."",
    author_keywords = ""Behavior driven development; Controlled experiment; Domain Specific Languages (DSL); Software testing; Student experiment"",
    keywords = ""Boolean functions; Computer programming languages; Problem oriented languages; Software design; Software testing; Specifications; Students; Testing; Behavior driven development; Controlled experiment; Development teams; Domain specific languages; Language features; Perceived quality; Student experiments; Test case specifications; Acceptance tests"",
    correspondence_address = ""F. Haser; University of Innsbruck, Technikerstr. 21a, A-6020 Innsbruck, Austria; email: florian.haeser@uibk.ac.at"",
    publisher = ""Elsevier B.V."",
    issn = ""09505849"",
    coden = ""ISOTE"",
    language = ""English"",
    abbrev_source_title = ""Inf Software Technol"",
    type = ""Article"",
    publication_stage = ""Final"",
    source = ""Scopus"",
    note = ""Cited by: 20""
}
"""	Included	Included	new_screen			2	Scopus Signed In		Is business domain language support beneficial for creating test case specifications: A controlled experiment	https://www.scopus.com/record/display.uri?eid=2-s2.0-84990036753&origin=resultslist&sort=plf-f&src=s&sid=37678de4fe1a574ec5170c2037ac93b1&sot=b&sdt=b&s=TITLE-ABS-KEY%28is+business+domain+language+support+beneficial+for+creating+test+case+specifications+a+controlled+experiment%29&sl=123&sessionSearchId=37678de4fe1a574ec5170c2037ac93b1&relpos=0	Elsevier B.V	nan; References
65	Behave	Supporting refactoring of BDD specifications--An empirical study	Context: Behavior-driven development (BDD) is a variant of test-driven development where specifications are described in a structured domain-specific natural language. Although refactoring is a crucial activity of BDD, little research is available on the topic. Objective: To support practitioners in refactoring BDD specifications by (1) proposing semi-automated approaches to identify refactoring candidates; (2) defining refactoring techniques for BDD specifications; and (3) evaluating the proposed identification approaches in an industry context. Method: Using Action Research, we have developed an approach for identifying refactoring candidates in BDD specifications based on two measures of similarity and applied the approach in two projects of a large software organization. The accuracy of the measures for identifying refactoring candidates was then evaluated against an approach based on machine learning and a manual approach based on practitioner perception. Results: We proposed two measures of similarity to support the identification of refactoring candidates in a BDD specification base; (1) normalized compression similarity (NCS) and (2) similarity ratio (SR). A semi-automated approach based on NCS and SR was developed and applied to two industrial cases to identify refactoring candidates. Our results show that our approach can identify candidates for refactoring 6o times faster than a manual approach. Our results furthermore showed that our measures accurately identified refactoring candidates compared with a manual identification by software practitioners and outperformed an ML-based text classification approach. We also described four types of refactoring techniques applicable to BDD specifications; merging candidates, restructuring candidates, deleting duplicates, and renaming specification titles. Conclusion: Our results show that NCS and SR can help practitioners in accurately identifying BDD specifications that are suitable candidates for refactoring, which also decreases the time for identifying refactoring candidates.	Automation; Boolean functions; Classification (of information); Natural language processing systems; Text processing; Automated approach; Empirical studies; Identification approach; Manual identification; Software organization; Software practitioners; Test driven development; Text classification; Specifications; Automation;  Boolean functions;  Classification (of information);  Natural language processing systems;  Text processing;  Automated approach;  Empirical studies;  Identification approach;  Manual identification;  Software organization;  Software practitioners;  Test driven development;  Text classification;  Specifications	Irshad, Mohsin; Borstler, Jurgen; Petersen, Kai	Information and Software Technology	https://doi.org/10.1016/j.infsof.2021.106717			"""@ARTICLE{Irshad2022,
    author = ""Irshad, Mohsin and Borstler, Jurgen and Petersen, Kai"",
    title = ""Supporting refactoring of BDD specifications--An empirical study"",
    year = ""2022"",
    journal = ""Information and Software Technology"",
    volume = ""141"",
    doi = ""10.1016/j.infsof.2021.106717"",
    url = ""https://www.scopus.com/inward/record.uri?eid=2-s2.0-85113689195\&doi=10.1016\%2fj.infsof.2021.106717\&partnerID=40\&md5=239cf67a7d78813f33693a1702143169"",
    affiliations = ""Blekinge Institute of Technology, Karlskrona, Sweden; Ericsson AB, Karlskrona, Sweden"",
    abstract = ""Context: Behavior-driven development (BDD) is a variant of test-driven development where specifications are described in a structured domain-specific natural language. Although refactoring is a crucial activity of BDD, little research is available on the topic. Objective: To support practitioners in refactoring BDD specifications by (1) proposing semi-automated approaches to identify refactoring candidates; (2) defining refactoring techniques for BDD specifications; and (3) evaluating the proposed identification approaches in an industry context. Method: Using Action Research, we have developed an approach for identifying refactoring candidates in BDD specifications based on two measures of similarity and applied the approach in two projects of a large software organization. The accuracy of the measures for identifying refactoring candidates was then evaluated against an approach based on machine learning and a manual approach based on practitioner perception. Results: We proposed two measures of similarity to support the identification of refactoring candidates in a BDD specification base; (1) normalized compression similarity (NCS) and (2) similarity ratio (SR). A semi-automated approach based on NCS and SR was developed and applied to two industrial cases to identify refactoring candidates. Our results show that our approach can identify candidates for refactoring 6o times faster than a manual approach. Our results furthermore showed that our measures accurately identified refactoring candidates compared with a manual identification by software practitioners and outperformed an ML-based text classification approach. We also described four types of refactoring techniques applicable to BDD specifications; merging candidates, restructuring candidates, deleting duplicates, and renaming specification titles. Conclusion: Our results show that NCS and SR can help practitioners in accurately identifying BDD specifications that are suitable candidates for refactoring, which also decreases the time for identifying refactoring candidates. (c) 2021 The Authors"",
    author_keywords = ""BDD; Behavior-driven development; Normalized Compression Distance (NCD); Normalized Compression Similarity (NCS); Refactoring; Reuse; Similarity ratio (SR); Specifications; Testing"",
    keywords = ""Automation; Boolean functions; Classification (of information); Natural language processing systems; Text processing; Automated approach; Empirical studies; Identification approach; Manual identification; Software organization; Software practitioners; Test driven development; Text classification; Specifications"",
    correspondence_address = ""M. Irshad; Blekinge Institute of Technology, Karlskrona, Sweden; email: mohsin.irshad@bth.se"",
    publisher = ""Elsevier B.V."",
    issn = ""09505849"",
    coden = ""ISOTE"",
    language = ""English"",
    abbrev_source_title = ""Inf Software Technol"",
    type = ""Article"",
    publication_stage = ""Final"",
    source = ""Scopus"",
    note = ""Cited by: 4; All Open Access, Green Open Access, Hybrid Gold Open Access""
}
"""	Excluded	Excluded	new_screen			2	Scopus Signed In		Supporting refactoring of BDD specifications—An empirical study	https://doi.org/10.1016/j.infsof.2021.106717	Elsevier B.V	nan; References; Pages; Link
66	Behave	B-Refactoring: Automatic test code refactoring to improve dynamic analysis	Context: Developers design test suites to verify that software meets its expected behaviors. Many dynamic analysis techniques are performed on the exploitation of execution traces from test cases. In practice, one test case may imply various behaviors. However, the execution of a test case only yields one trace, which can hide the others. Objective: In this article, we propose a new technique of test code refactoring, called B-Refactoring. The idea behind B-Refactoring is to split a test case into small test fragments, which cover a simpler part of the control flow to provide better support for dynamic analysis. Method: For a given dynamic analysis technique, B-Refactoring monitors the execution of test cases and constructs small test cases without loss of the testability. We apply B-Refactoring to assist two existing analysis tasks: automatic repair of if-condition bugs and automatic analysis of exception contracts. Results: Experimental results show that B-Refactoring can effectively improve the execution traces of the test suite. Real-world bugs that could not be previously fixed with the original test suites are fixed after applying B-Refactoring; meanwhile, exception contracts are better verified via applying B-Refactoring to original test suites. Conclusions: We conclude that applying B-Refactoring improves the execution traces of test cases for dynamic analysis. This improvement can enhance existing dynamic analysis tasks.	Information systems; Software engineering; Automatic analysis; Control flows; Design tests; Dynamic analysis techniques; Execution trace; Real-world; Refactorings; Testability; Software testing; Information systems;  Software engineering;  Automatic analysis;  Control flows;  Design tests;  Dynamic analysis techniques;  Execution trace;  Real-world;  Refactorings;  Testability;  Software testing	Xuan, Jifeng; Cornu, Benoit; Martinez, Matias; Baudry, Benoit; Seinturier, Lionel; Monperrus, Martin	Information and Software Technology	https://doi.org/10.1016/j.infsof.2016.04.016		65 - 80	"""@ARTICLE{Xuan201665,
    author = ""Xuan, Jifeng and Cornu, Benoit and Martinez, Matias and Baudry, Benoit and Seinturier, Lionel and Monperrus, Martin"",
    title = ""B-Refactoring: Automatic test code refactoring to improve dynamic analysis"",
    year = ""2016"",
    journal = ""Information and Software Technology"",
    volume = ""76"",
    pages = ""65 - 80"",
    doi = ""10.1016/j.infsof.2016.04.016"",
    url = ""https://www.scopus.com/inward/record.uri?eid=2-s2.0-84965136564\&doi=10.1016\%2fj.infsof.2016.04.016\&partnerID=40\&md5=7f80f2bb795e4b7ba2c1f6d6e0978c89"",
    affiliations = ""State Key Lab. of Software Engineering, Wuhan University, China; University of Lille, France; INRIA, France"",
    abstract = ""Context: Developers design test suites to verify that software meets its expected behaviors. Many dynamic analysis techniques are performed on the exploitation of execution traces from test cases. In practice, one test case may imply various behaviors. However, the execution of a test case only yields one trace, which can hide the others. Objective: In this article, we propose a new technique of test code refactoring, called B-Refactoring. The idea behind B-Refactoring is to split a test case into small test fragments, which cover a simpler part of the control flow to provide better support for dynamic analysis. Method: For a given dynamic analysis technique, B-Refactoring monitors the execution of test cases and constructs small test cases without loss of the testability. We apply B-Refactoring to assist two existing analysis tasks: automatic repair of if-condition bugs and automatic analysis of exception contracts. Results: Experimental results show that B-Refactoring can effectively improve the execution traces of the test suite. Real-world bugs that could not be previously fixed with the original test suites are fixed after applying B-Refactoring; meanwhile, exception contracts are better verified via applying B-Refactoring to original test suites. Conclusions: We conclude that applying B-Refactoring improves the execution traces of test cases for dynamic analysis. This improvement can enhance existing dynamic analysis tasks. (c) 2016 Elsevier B.V. All rights reserved."",
    keywords = ""Information systems; Software engineering; Automatic analysis; Control flows; Design tests; Dynamic analysis techniques; Execution trace; Real-world; Refactorings; Testability; Software testing"",
    correspondence_address = ""J. Xuan; State Key Lab. of Software Engineering, Wuhan University, China; email: jxuan@whu.edu.cn"",
    publisher = ""Elsevier B.V."",
    issn = ""09505849"",
    coden = ""ISOTE"",
    language = ""English"",
    abbrev_source_title = ""Inf Software Technol"",
    type = ""Article"",
    publication_stage = ""Final"",
    source = ""Scopus"",
    note = ""Cited by: 25; All Open Access, Green Open Access""
}
"""	Excluded	Excluded	new_screen			2	Scopus Signed In		B-Refactoring: Automatic test code refactoring to improve dynamic analysis	https://www.scopus.com/record/display.uri?eid=2-s2.0-84965136564&origin=resultslist&sort=plf-f&src=s&sid=e44c89f0100bb61b0dae9e79737701ae&sot=b&sdt=b&s=TITLE-ABS-KEY%28b+refactoring+automatic+test+code+refactoring+to+improve+dynamic+analysis%29&sl=88&sessionSearchId=e44c89f0100bb61b0dae9e79737701ae&relpos=0	Elsevier B.V	nan; References
67	Behave	Adapting Behavior Driven Development (BDD) for large-scale software systems	Context: Large-scale software projects require interaction between many stakeholders. Behavior driven development (BDD) facilitates collaboration between stakeholders, and an adapted BDD process can help improve cooperation in a large-scale project. Objective: The objective of this study is to propose and empirically evaluate a BDD based process adapted for large-scale projects. Method: A technology transfer model was used to propose a BDD based process for large-scale projects. We conducted six workshop sessions to understand the challenges and benefits of BDD. Later, an industrial evaluation was performed for the process with the help of practitioners. Results: From our investigations, understanding of a business aspect of requirements, their improved quality, a guide to system-level use-cases, reuse of artifacts, and help for test organization are found as benefits of BDD. Practitioners identified the following challenges: specification and ownership of behaviors, adoption of new tools, the software projects-scale, and versioning of behaviors. We proposed a process to address these challenges and evaluated the process with the help of practitioners. Conclusion: The evaluation proved that BDD could be adapted and used to facilitate interaction in large-scale software projects in the software industry. The feedback from the practitioners helped in improving the proposed process.	Behavior-driven; Large-scale; BDD; Software processes; System of systems; Behavior-driven;  Large-scale;  BDD;  Software processes;  System of systems	Irshad, Mohsin; Britto, Ricard; Petersen, Kai	JOURNAL OF SYSTEMS AND SOFTWARE	https://doi.org/10.1016/j.jss.2021.110944			"""@article{WOS:000641355800005,
    Author = ""Irshad, Mohsin and Britto, Ricard and Petersen, Kai"",
    Title = ""Adapting Behavior Driven Development (BDD) for large-scale software systems"",
    Journal = ""JOURNAL OF SYSTEMS AND SOFTWARE"",
    Year = ""2021"",
    Volume = ""177"",
    Month = ""JUL"",
    Abstract = ""Context: Large-scale software projects require interaction between many stakeholders. Behavior driven development (BDD) facilitates collaboration between stakeholders, and an adapted BDD process can help improve cooperation in a large-scale project. Objective: The objective of this study is to propose and empirically evaluate a BDD based process adapted for large-scale projects. Method: A technology transfer model was used to propose a BDD based process for large-scale projects. We conducted six workshop sessions to understand the challenges and benefits of BDD. Later, an industrial evaluation was performed for the process with the help of practitioners. Results: From our investigations, understanding of a business aspect of requirements, their improved quality, a guide to system-level use-cases, reuse of artifacts, and help for test organization are found as benefits of BDD. Practitioners identified the following challenges: specification and ownership of behaviors, adoption of new tools, the software projects-scale, and versioning of behaviors. We proposed a process to address these challenges and evaluated the process with the help of practitioners. Conclusion: The evaluation proved that BDD could be adapted and used to facilitate interaction in large-scale software projects in the software industry. The feedback from the practitioners helped in improving the proposed process. (C) 2021 The Author(s). Published by Elsevier Inc. This is an open access article under the CC BY license (http://creativecommons.org/licenses/by/4.0/)."",
    Publisher = ""ELSEVIER SCIENCE INC"",
    Address = ""STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA"",
    Type = ""Article"",
    Language = ""English"",
    Affiliation = ""Irshad, M (Corresponding Author), Blekinge Inst Technol, Software Engn Res Lab, Valhallavagen 1, S-37141 Karlskrona, Sweden. Irshad, Mohsin; Britto, Ricard, Ericsson AB, Stockholm, Sweden. Irshad, Mohsin; Britto, Ricard; Petersen, Kai, Blekinge Inst Technol, Karlskrona, Sweden."",
    DOI = ""10.1016/j.jss.2021.110944"",
    EarlyAccessDate = ""MAR 2021"",
    Article-Number = ""110944"",
    ISSN = ""0164-1212"",
    EISSN = ""1873-1228"",
    Keywords = ""Behavior-driven; Large-scale; BDD; Software processes; System of systems"",
    Keywords-Plus = ""AGILE METHODS; ENGINEERS"",
    Research-Areas = ""Computer Science"",
    Web-of-Science-Categories = ""Computer Science, Software Engineering; Computer Science, Theory \\& Methods"",
    Author-Email = ""mohsin.irshad@bth.se ricardo.britto@bth.se kai.petersen@bth.se"",
    Affiliations = ""Ericsson; Blekinge Institute Technology"",
    Number-of-Cited-References = ""78"",
    Times-Cited = ""9"",
    Usage-Count-Last-180-days = ""1"",
    Usage-Count-Since-2013 = ""12"",
    Journal-ISO = ""J. Syst. Softw."",
    Doc-Delivery-Number = ""RO9JQ"",
    Web-of-Science-Index = ""Science Citation Index Expanded (SCI-EXPANDED)"",
    Unique-ID = ""WOS:000641355800005"",
    OA = ""Green Published, hybrid"",
    DA = ""2024-10-22""
}
"""	Included	Included	new_screen			2	Web of Science		Adapting Behavior Driven Development (BDD) for large-scale software systems	https://www.webofscience.com/wos/woscc/full-record/WOS:000641355800005	ELSEVIER SCIENCE INC	nan; References; Pages
68	Behave	Design, monitoring, and testing of microservices systems: The practitioners' perspective	Context: Microservices Architecture (MSA) has received significant attention in the software industry. However, little empirical evidence exists on design, monitoring, and testing of microservices systems. Objective: This research aims to gain a deep understanding of how microservices systems are designed, monitored, and tested in the industry. Methods: A mixed-methods study was conducted with 106 survey responses and 6 interviews from microservices practitioners. Results: The main findings are: (1) a combination of domain-driven design and business capability is the most used strategy to decompose an application into microservices, (2) over half of the participants used architecture evaluation and architecture implementation when designing microservices systems, (3) API gateway and Backend for frontend patterns are the most used MSA patterns, (4) resource usage and load balancing as monitoring metrics, log management and exception tracking as monitoring practices are widely used, (5) unit and end-to-end testing are the most used testing strategies, and (6) the complexity of microservices systems poses challenges for their design, monitoring, and testing, for which there are no dedicated solutions. Conclusions: Our findings reveal that more research is needed to (1) deal with microservices complexity at the design level, (2) handle security in microservices systems, and (3) address the monitoring and testing challenges through dedicated solutions.	Application programming interfaces (API); Software engineering; Architecture evaluation; Design levels; Domain-driven designs; Log managements; Monitoring metrics; Resource usage; Software industry; Testing strategies; Monitoring; Application programming interfaces (API);  Software engineering;  Architecture evaluation;  Design levels;  Domain-driven designs;  Log managements;  Monitoring metrics;  Resource usage;  Software industry;  Testing strategies;  Monitoring	Waseem, Muhammad; Liang, Peng; Shahin, Mojtaba; Di Salle, Amleto; Marquez, Gaston	Journal of Systems and Software	https://doi.org/10.1016/j.jss.2021.111061			"""@ARTICLE{Waseem2021,
    author = ""Waseem, Muhammad and Liang, Peng and Shahin, Mojtaba and Di Salle, Amleto and Marquez, Gaston"",
    title = ""Design, monitoring, and testing of microservices systems: The practitioners' perspective"",
    year = ""2021"",
    journal = ""Journal of Systems and Software"",
    volume = ""182"",
    doi = ""10.1016/j.jss.2021.111061"",
    url = ""https://www.scopus.com/inward/record.uri?eid=2-s2.0-85114322403\&doi=10.1016\%2fj.jss.2021.111061\&partnerID=40\&md5=5bf38769ad133522debb4edb71725408"",
    affiliations = ""School of Computer Science, Wuhan University, Wuhan, 430072, China; Department of Software Systems and Cybersecurity, Faculty of Information Technology, Monash University, Melbourne, 3800, Australia; Department of Information Engineering, Computer Science and Mathematics, University of L'Aquila, I-67100 L'Aquila, Italy; Department of Electronics and Informatics, Federico Santa Maria Technical University, 4030000 Concepcion, Chile"",
    abstract = ""Context: Microservices Architecture (MSA) has received significant attention in the software industry. However, little empirical evidence exists on design, monitoring, and testing of microservices systems. Objective: This research aims to gain a deep understanding of how microservices systems are designed, monitored, and tested in the industry. Methods: A mixed-methods study was conducted with 106 survey responses and 6 interviews from microservices practitioners. Results: The main findings are: (1) a combination of domain-driven design and business capability is the most used strategy to decompose an application into microservices, (2) over half of the participants used architecture evaluation and architecture implementation when designing microservices systems, (3) API gateway and Backend for frontend patterns are the most used MSA patterns, (4) resource usage and load balancing as monitoring metrics, log management and exception tracking as monitoring practices are widely used, (5) unit and end-to-end testing are the most used testing strategies, and (6) the complexity of microservices systems poses challenges for their design, monitoring, and testing, for which there are no dedicated solutions. Conclusions: Our findings reveal that more research is needed to (1) deal with microservices complexity at the design level, (2) handle security in microservices systems, and (3) address the monitoring and testing challenges through dedicated solutions. (c) 2021 Elsevier Inc."",
    author_keywords = ""Design; Industrial survey; Microservices architecture; Monitoring; Testing"",
    keywords = ""Application programming interfaces (API); Software engineering; Architecture evaluation; Design levels; Domain-driven designs; Log managements; Monitoring metrics; Resource usage; Software industry; Testing strategies; Monitoring"",
    correspondence_address = ""P. Liang; School of Computer Science, Wuhan University, China; email: liangp@whu.edu.cn"",
    publisher = ""Elsevier Inc."",
    issn = ""01641212"",
    coden = ""JSSOD"",
    language = ""English"",
    abbrev_source_title = ""J Syst Software"",
    type = ""Article"",
    publication_stage = ""Final"",
    source = ""Scopus"",
    note = ""Cited by: 62; All Open Access, Green Open Access""
}
"""	Excluded	Excluded	new_screen			2	Scopus Signed In		Design, monitoring, and testing of microservices systems: The practitioners’ perspective	https://doi.org/10.1016/j.jss.2021.111061	Elsevier Inc	nan; References; Pages; Link
69	Behave	Big Data analytics in Agile software development: A systematic mapping study	Context: Over the last decade, Agile methods have changed the software development process in an unparalleled way and with the increasing popularity of Big Data, optimizing development cycles through data analytics is becoming a commodity. Objective: Although a myriad of research exists on software analytics as well as on Agile software development (ASD) practice on itself, there exists no systematic overview of the research done on ASD from a data analytics perspective. Therefore, the objective of this work is to make progress by linking ASD with Big Data analytics (BDA). Method: As the primary method to find relevant literature on the topic, we performed manual search and snowballing on papers published between 2011 and 2019. Results: In total, 88 primary studies were selected and analyzed. Our results show that BDA is employed throughout the whole ASD lifecycle. The results reveal that data-driven software development is focused on the following areas: code repository analytics, defects/bug fixing, testing, project management analytics, and application usage analytics. Conclusions: As BDA and ASD are fast-developing areas, improving the productivity of software development teams is one of the most important objectives BDA is facing in the industry. This study provides scholars with information about the state of software analytics research and the current trends as well as applications in the business environment. Whereas, thanks to this literature review, practitioners should be able to understand better how to obtain actionable insights from their software artifacts and on which aspects of data analytics to focus when investing in such initiatives.	Advanced Analytics; Application programs; Big data; Data Analytics; Life cycle; Project management; Software testing; Agile software development; Business environments; Development cycle; Literature reviews; Software artifacts; Software development process; Software development teams; Systematic mapping studies; Software design; Advanced Analytics;  Application programs;  Big data;  Data Analytics;  Life cycle;  Project management;  Software testing;  Agile software development;  Business environments;  Development cycle;  Literature reviews;  Software artifacts;  Software development process;  Software development teams;  Systematic mapping studies;  Software design	Biesialska, Katarzyna; Franch, Xavier; Muntes-Mulero, Victor	Information and Software Technology	https://doi.org/10.1016/j.infsof.2020.106448			"""@ARTICLE{Biesialska2021,
    author = ""Biesialska, Katarzyna and Franch, Xavier and Muntes-Mulero, Victor"",
    title = ""Big Data analytics in Agile software development: A systematic mapping study"",
    year = ""2021"",
    journal = ""Information and Software Technology"",
    volume = ""132"",
    doi = ""10.1016/j.infsof.2020.106448"",
    url = ""https://www.scopus.com/inward/record.uri?eid=2-s2.0-85095581407\&doi=10.1016\%2fj.infsof.2020.106448\&partnerID=40\&md5=606562623febf85aeca120d861b6ae20"",
    affiliations = ""Universitat Politecnica de Catalunya, Barcelona, Spain; Beawre Digital S.L., Barcelona, Spain"",
    abstract = ""Context: Over the last decade, Agile methods have changed the software development process in an unparalleled way and with the increasing popularity of Big Data, optimizing development cycles through data analytics is becoming a commodity. Objective: Although a myriad of research exists on software analytics as well as on Agile software development (ASD) practice on itself, there exists no systematic overview of the research done on ASD from a data analytics perspective. Therefore, the objective of this work is to make progress by linking ASD with Big Data analytics (BDA). Method: As the primary method to find relevant literature on the topic, we performed manual search and snowballing on papers published between 2011 and 2019. Results: In total, 88 primary studies were selected and analyzed. Our results show that BDA is employed throughout the whole ASD lifecycle. The results reveal that data-driven software development is focused on the following areas: code repository analytics, defects/bug fixing, testing, project management analytics, and application usage analytics. Conclusions: As BDA and ASD are fast-developing areas, improving the productivity of software development teams is one of the most important objectives BDA is facing in the industry. This study provides scholars with information about the state of software analytics research and the current trends as well as applications in the business environment. Whereas, thanks to this literature review, practitioners should be able to understand better how to obtain actionable insights from their software artifacts and on which aspects of data analytics to focus when investing in such initiatives. (c) 2020 Elsevier B.V."",
    author_keywords = ""Agile software development; Artificial intelligence; Data analytics; Literature review; Machine learning; Software analytics"",
    keywords = ""Advanced Analytics; Application programs; Big data; Data Analytics; Life cycle; Project management; Software testing; Agile software development; Business environments; Development cycle; Literature reviews; Software artifacts; Software development process; Software development teams; Systematic mapping studies; Software design"",
    correspondence_address = ""K. Biesialska; Universitat Politecnica de Catalunya, Barcelona, Spain; email: katarzyna.biesialska@upc.edu"",
    publisher = ""Elsevier B.V."",
    issn = ""09505849"",
    coden = ""ISOTE"",
    language = ""English"",
    abbrev_source_title = ""Inf Software Technol"",
    type = ""Review"",
    publication_stage = ""Final"",
    source = ""Scopus"",
    note = ""Cited by: 30; All Open Access, Green Open Access""
}
"""	Excluded	Excluded	new_screen			2	Scopus Signed In		Big Data analytics in Agile software development: A systematic mapping study	https://www.scopus.com/record/display.uri?eid=2-s2.0-85095581407&origin=resultslist&sort=plf-f&src=s&sid=2e12d08689a0ccba346941cc65fe0cc8&sot=b&sdt=b&s=TITLE-ABS-KEY%28big+data+analytics+in+agile+software+development+a+systematic+mapping+study%29&sl=90&sessionSearchId=2e12d08689a0ccba346941cc65fe0cc8&relpos=0	Elsevier B.V	nan; References; Pages
70	Behave	Documentation of Quality Requirements in Agile Software Development	Context: Quality requirements (QRs) have a significant role in the success of software projects. In agile software development (ASD), where working software is valued over comprehensive documentation, QRs are often under-specified or not documented. Consequently, they may be handled improperly and result in degraded software quality and increased maintenance costs. Investigating the documentation of QRs in ASD, would provide evidence on existing practices, tools and aspects considered in ASD that other practitioners might utilize to improve documentation and management of QRs in ASD. Although there are some studies examining documentation in ASD, those that specifically investigate the documentation of QRs in depth are lacking.	Quality requirement; agile software development; documentation; non-functional requirements	Woubshet Behutiye; Pertti Seppanen; Pilar Rodriguez; Markku Oivo	EASE '20: Proceedings of the 24th International Conference on Evaluation and Assessment in Software Engineering	https://doi.org/10.1145/3383219.3383245		250-259		Excluded	Excluded	new_screen			2	ACM		Documentation of Quality Requirements in Agile Software Development	https://dl.acm.org/doi/10.1145/3383219.3383245	Association for Computing Machinery	nan; References; Year; Bibtex
71	Behave	Improving the delivery cycle: A multiple-case study of the toolchains in Finnish software intensive enterprises	Context: Software companies seek to gain benefit from agile development approaches in order to meet evolving market needs without losing their innovative edge. Agile practices emphasize frequent releases with the help of an automated toolchain from code to delivery. Objective: We investigate, which tools are used in software delivery, what are the reasons omitting certain parts of the toolchain and what implications toolchains have on how rapidly software gets delivered to customers. Method: We present a multiple-case study of the toolchains currently in use in Finnish software-intensive organizations interested in improving their delivery frequency. We conducted qualitative semi-structured interviews in 18 case organizations from various software domains. The interviewees were key representatives of their organization, considering delivery activities. Results: Commodity tools, such as version control and continuous integration, were used in almost every organization. Modestly used tools, such as UI testing and performance testing, were more distinctly missing from some organizations. Uncommon tools, such as artifact repository and acceptance testing, were used only in a minority of the organizations. Tool usage is affected by the state of current workflows, manual work and relevancy of tools. Organizations whose toolchains were more automated and contained fewer manual steps were able to deploy software more rapidly. Conclusions: There is variety in the need for tool support in different development steps as there are domain-specific differences in the goals of the case organizations. Still, a well-founded toolchain supports speedy delivery of new software.	Acceptance tests; Agile software development; Artifact repositories; Continuous deliveries; Continuous deployment; Continuous integrations; Performance testing; Semi structured interviews; Software development tools; Software design; Acceptance tests;  Agile software development;  Artifact repositories;  Continuous deliveries;  Continuous deployment;  Continuous integrations;  Performance testing;  Semi structured interviews;  Software development tools;  Software design	Makinen, Simo; Leppanen, Marko; Kilamo, Terhi; Mattila, Anna-Liisa; Laukkanen, Eero; Pagels, Max; Mannisto, Tomi	Information and Software Technology	https://doi.org/10.1016/j.infsof.2016.09.001		175 - 194	"""@ARTICLE{Makinen2016175,
    author = ""Makinen, Simo and Leppanen, Marko and Kilamo, Terhi and Mattila, Anna-Liisa and Laukkanen, Eero and Pagels, Max and Mannisto, Tomi"",
    title = ""Improving the delivery cycle: A multiple-case study of the toolchains in Finnish software intensive enterprises"",
    year = ""2016"",
    journal = ""Information and Software Technology"",
    volume = ""80"",
    pages = ""175 - 194"",
    doi = ""10.1016/j.infsof.2016.09.001"",
    url = ""https://www.scopus.com/inward/record.uri?eid=2-s2.0-84988001567\&doi=10.1016\%2fj.infsof.2016.09.001\&partnerID=40\&md5=c5f6390da014c8c6a3455288a0bb279a"",
    affiliations = ""Department of Computer Science, University of Helsinki, P.O. 68 (Gustaf Hallstromin katu 2b), FI-00014 University of Helsinki, Finland; Department of Pervasive Computing, Tampere University of Technology, Korkeakoulunkatu 1, FI-33720 Tampere, Finland; Department of Computer Science and Engineering, Aalto University School of Science, P.O. Box 19210, FI-00076 Aalto, Finland"",
    abstract = ""Context: Software companies seek to gain benefit from agile development approaches in order to meet evolving market needs without losing their innovative edge. Agile practices emphasize frequent releases with the help of an automated toolchain from code to delivery. Objective: We investigate, which tools are used in software delivery, what are the reasons omitting certain parts of the toolchain and what implications toolchains have on how rapidly software gets delivered to customers. Method: We present a multiple-case study of the toolchains currently in use in Finnish software-intensive organizations interested in improving their delivery frequency. We conducted qualitative semi-structured interviews in 18 case organizations from various software domains. The interviewees were key representatives of their organization, considering delivery activities. Results: Commodity tools, such as version control and continuous integration, were used in almost every organization. Modestly used tools, such as UI testing and performance testing, were more distinctly missing from some organizations. Uncommon tools, such as artifact repository and acceptance testing, were used only in a minority of the organizations. Tool usage is affected by the state of current workflows, manual work and relevancy of tools. Organizations whose toolchains were more automated and contained fewer manual steps were able to deploy software more rapidly. Conclusions: There is variety in the need for tool support in different development steps as there are domain-specific differences in the goals of the case organizations. Still, a well-founded toolchain supports speedy delivery of new software. (c) 2016 Elsevier B.V."",
    author_keywords = ""Agile software development; Continuous delivery; Continuous deployment; Deployment pipeline; Software development tools"",
    keywords = ""Acceptance tests; Agile software development; Artifact repositories; Continuous deliveries; Continuous deployment; Continuous integrations; Performance testing; Semi structured interviews; Software development tools; Software design"",
    correspondence_address = ""S. Makinen; Department of Computer Science, University of Helsinki, P.O. 68 (Gustaf Hallstromin katu 2b), FI-00014 University of Helsinki, Finland; email: simo.v.makinen@helsinki.fi"",
    publisher = ""Elsevier B.V."",
    issn = ""09505849"",
    coden = ""ISOTE"",
    language = ""English"",
    abbrev_source_title = ""Inf Software Technol"",
    type = ""Article"",
    publication_stage = ""Final"",
    source = ""Scopus"",
    note = ""Cited by: 29""
}
"""	Excluded	Excluded	new_screen			2	Scopus Signed In		Improving the delivery cycle: A multiple-case study of the toolchains in Finnish software intensive enterprises	https://www.scopus.com/record/display.uri?eid=2-s2.0-84988001567&origin=resultslist&sort=plf-f&src=s&sid=19277feddfbb1bf364e78ff5470efc8f&sot=b&sdt=b&s=TITLE-ABS-KEY%28improving+the+delivery+cycle+a+multiple+case+study+of+the+toolchains+in+finnish+software+intensive+enterprises%29&sl=125&sessionSearchId=19277feddfbb1bf364e78ff5470efc8f&relpos=0	Elsevier B.V	nan; References
72	Behave	Demystifying the adoption of behavior-driven development in open source projects	Context: Behavior-Driven Development (BDD) features the capability, through appropriate domain-specific languages, of specifying acceptance test cases and making them executable. The availability of frameworks such as Cucumber or RSpec makes the application of BDD possible in practice. However, it is unclear to what extent developers use such frameworks, and whether they use them for actually performing BDD, or, instead, for other purposes such as unit testing. Objective: In this paper, we conduct an empirical investigation about the use of BDD tools in open source, and how, when a BDD tool is in place, BDD specifications co-evolve with source code. Method: Our investigation includes three different phases: (i) a large-scale analysis to understand the extent to which BDD frameworks are used in 50,000 popular open-source projects written in five programming languages; (H) a study on the co-evolution of scenarios, fixtures and production code in a sample of 20 Ruby projects, through the Granger's causality test, and (Hi) a survey with 31 developers to understand how they use BDD frameworks. Results: Results of the study indicate that similar or equal to 27\% of the sampled projects use BDD frameworks, with a prevalence in Ruby projects (68\%). In about 37\% of the cases, we found a co-evolution between scenarios/fixtures and production code. Specifically, changes to scenarios and fixtures often happen together or after changes to source code. Moreover, survey respondents indicate that, while they understand the intended purpose of BDD frameworks, most of them write tests while/after coding rather than strictly applying BDD. Conclusions: Even if the BDD frameworks usage is widespread among open source projects, in many cases they are used for different purposes such as unit testing activities. This mainly happens because developers felt BDD remains quite effort-prone, and its application goes beyond the simple adoption of a BDD framework.	Behavior-driven development; Acceptance testing; Empirical study; Co-evolution; Behavior-driven development;  Acceptance testing;  Empirical study;  Co-evolution	Zampetti, Fiorella; Di Sorbo, Andrea; Visaggio, Corrado Aaron; Canfora, Gerardo; Di Penta, Massimiliano	INFORMATION AND SOFTWARE TECHNOLOGY	https://doi.org/10.1016/j.infsof.2020.106311			"""@article{WOS:000530651200008,
    Author = ""Zampetti, Fiorella and Di Sorbo, Andrea and Visaggio, Corrado Aaron and Canfora, Gerardo and Di Penta, Massimiliano"",
    Title = ""Demystifying the adoption of behavior-driven development in open source projects"",
    Journal = ""INFORMATION AND SOFTWARE TECHNOLOGY"",
    Year = ""2020"",
    Volume = ""123"",
    Month = ""JUL"",
    Abstract = ""Context: Behavior-Driven Development (BDD) features the capability, through appropriate domain-specific languages, of specifying acceptance test cases and making them executable. The availability of frameworks such as Cucumber or RSpec makes the application of BDD possible in practice. However, it is unclear to what extent developers use such frameworks, and whether they use them for actually performing BDD, or, instead, for other purposes such as unit testing. Objective: In this paper, we conduct an empirical investigation about the use of BDD tools in open source, and how, when a BDD tool is in place, BDD specifications co-evolve with source code. Method: Our investigation includes three different phases: (i) a large-scale analysis to understand the extent to which BDD frameworks are used in 50,000 popular open-source projects written in five programming languages; (H) a study on the co-evolution of scenarios, fixtures and production code in a sample of 20 Ruby projects, through the Granger's causality test, and (Hi) a survey with 31 developers to understand how they use BDD frameworks. Results: Results of the study indicate that similar or equal to 27\\% of the sampled projects use BDD frameworks, with a prevalence in Ruby projects (68\\%). In about 37\\% of the cases, we found a co-evolution between scenarios/fixtures and production code. Specifically, changes to scenarios and fixtures often happen together or after changes to source code. Moreover, survey respondents indicate that, while they understand the intended purpose of BDD frameworks, most of them write tests while/after coding rather than strictly applying BDD. Conclusions: Even if the BDD frameworks usage is widespread among open source projects, in many cases they are used for different purposes such as unit testing activities. This mainly happens because developers felt BDD remains quite effort-prone, and its application goes beyond the simple adoption of a BDD framework."",
    Publisher = ""ELSEVIER"",
    Address = ""RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS"",
    Type = ""Article"",
    Language = ""English"",
    Affiliation = ""Di Penta, M (Corresponding Author), Univ Sannio, Dept Engn, Benevento, Italy. Zampetti, Fiorella; Di Sorbo, Andrea; Visaggio, Corrado Aaron; Canfora, Gerardo; Di Penta, Massimiliano, Univ Sannio, Dept Engn, Benevento, Italy."",
    DOI = ""10.1016/j.infsof.2020.106311"",
    Article-Number = ""106311"",
    ISSN = ""0950-5849"",
    EISSN = ""1873-6025"",
    Keywords = ""Behavior-driven development; Acceptance testing; Empirical study; Co-evolution"",
    Keywords-Plus = ""ACCEPTANCE TESTS; REQUIREMENTS; MODELS"",
    Research-Areas = ""Computer Science"",
    Web-of-Science-Categories = ""Computer Science, Information Systems; Computer Science, Software Engineering"",
    Author-Email = ""dipenta@unisannio.it"",
    Affiliations = ""University of Sannio"",
    ResearcherID-Numbers = ""Di Penta, Massimiliano/AAF-9656-2021"",
    ORCID-Numbers = ""Di Sorbo, Andrea/0000-0002-3192-739X Di Penta, Massimiliano/0000-0002-0340-9747"",
    Number-of-Cited-References = ""45"",
    Times-Cited = ""9"",
    Usage-Count-Last-180-days = ""0"",
    Usage-Count-Since-2013 = ""3"",
    Journal-ISO = ""Inf. Softw. Technol."",
    Doc-Delivery-Number = ""LK1XD"",
    Web-of-Science-Index = ""Science Citation Index Expanded (SCI-EXPANDED)"",
    Unique-ID = ""WOS:000530651200008"",
    DA = ""2024-10-22""
}
"""	Included	Included	new_screen			2	Web of Science		Demystifying the adoption of behavior-driven development in open source projects	https://www.webofscience.com/wos/woscc/full-record/WOS:000530651200008	ELSEVIER	nan; References; Pages
73	Behave	A multi-case study of agile requirements engineering and the use of test cases as requirements	Context It is an enigma that agile projects can succeed 'without requirements' when weak requirements engineering is a known cause for project failures. While agile development projects often manage well without extensive requirements test cases are commonly viewed as requirements and detailed requirements are documented as test cases. Objective We have investigated this agile practice of using test cases as requirements to understand how test cases can support the main requirements activities, and how this practice varies. Method We performed an iterative case study at three companies and collected data through 14 interviews and two focus groups. Results The use of test cases as requirements poses both benefits and challenges when eliciting, validating, verifying, and managing requirements, and when used as a documented agreement. We have identified five variants of the test-cases-as-requirements practice, namely de facto, behaviour-driven, story-test driven, stand-alone strict and stand-alone manual for which the application of the practice varies concerning the time frame of requirements documentation, the requirements format, the extent to which the test cases are a machine executable specification and the use of tools which provide specific support for the practice of using test cases as requirements. Conclusions The findings provide empirical insight into how agile development projects manage and communicate requirements. The identified variants of the practice of using test cases as requirements can be used to perform in-depth investigations into agile requirements engineering. Practitioners can use the provided recommendations as a guide in designing and improving their agile requirements practices based on project characteristics such as number of stakeholders and rate of change.	Agile development;  Requirements;  Testing;  Test-first development;  Test-driven development;  Behaviour-driven development;  Acceptance test;  Case study;  Empirical software engineering; Agile development, Requirements, Testing, Test-first development, Test-driven development, Behaviour-driven development, Acceptance test, Case study, Empirical software engineering	Bjarnason, Elizabeth; Unterkalmsteiner, Michael; Borg, Markus; Engstrom, Emelie	Information and Software Technology	https://www.sciencedirect.com/science/article/pii/S0950584916300544		61-79	"""@article{BJARNASON201661,
    author = ""Bjarnason, Elizabeth and Unterkalmsteiner, Michael and Borg, Markus and Engstrom, Emelie"",
    title = ""A multi-case study of agile requirements engineering and the use of test cases as requirements"",
    journal = ""Information and Software Technology"",
    volume = ""77"",
    pages = ""61-79"",
    year = ""2016"",
    issn = ""0950-5849"",
    doi = ""https://doi.org/10.1016/j.infsof.2016.03.008"",
    url = ""https://www.sciencedirect.com/science/article/pii/S0950584916300544"",
    keywords = ""Agile development, Requirements, Testing, Test-first development, Test-driven development, Behaviour-driven development, Acceptance test, Case study, Empirical software engineering"",
    abstract = ""Context It is an enigma that agile projects can succeed 'without requirements' when weak requirements engineering is a known cause for project failures. While agile development projects often manage well without extensive requirements test cases are commonly viewed as requirements and detailed requirements are documented as test cases. Objective We have investigated this agile practice of using test cases as requirements to understand how test cases can support the main requirements activities, and how this practice varies. Method We performed an iterative case study at three companies and collected data through 14 interviews and two focus groups. Results The use of test cases as requirements poses both benefits and challenges when eliciting, validating, verifying, and managing requirements, and when used as a documented agreement. We have identified five variants of the test-cases-as-requirements practice, namely de facto, behaviour-driven, story-test driven, stand-alone strict and stand-alone manual for which the application of the practice varies concerning the time frame of requirements documentation, the requirements format, the extent to which the test cases are a machine executable specification and the use of tools which provide specific support for the practice of using test cases as requirements. Conclusions The findings provide empirical insight into how agile development projects manage and communicate requirements. The identified variants of the practice of using test cases as requirements can be used to perform in-depth investigations into agile requirements engineering. Practitioners can use the provided recommendations as a guide in designing and improving their agile requirements practices based on project characteristics such as number of stakeholders and rate of change.""
}
"""	Included	Included	new_screen			2	Science Direct		A Multi-Case Study of Agile Requirements Engineering and the Use of Test Cases as Requirements	https://www.sciencedirect.com/science/article/pii/S0950584916300544	Science Direct	nan; References
74	Behave	Continuous Delivery: Overcoming adoption challenges	Continuous Delivery (CD) is a relatively new software development approach. Companies that have adopted CD have reported significant benefits. Motivated by these benefits, many companies would like to adopt CD. However, adopting CD can be very challenging for a number of reasons, such as obtaining buy-in from a wide range of stakeholders whose goals may seemingly be different from or even conflict with our own; gaining sustained support in a dynamic complex enterprise environment; maintaining an application development team's momentum when their application's migration to CD requires an additional strenuous effort over a long period of time; and so on. To help overcome the adoption challenges, I present six strategies: (1) selling CD as a painkiller; (2) establishing a dedicated team with multi-disciplinary members; (3) continuous delivery of continuous delivery; (4) starting with the easy but important applications; (5) visual CD pipeline skeleton; (6) expert drop. These strategies were derived from four years of experience in implementing CD at a multi-billion-euro company. Additionally, our experience led to the identification of eight further challenges for research. The information contributes toward building a body of knowledge for CD adoption.	Agile Software Development; Continuous Delivery; Continuous Deployment; Continuous Software Engineering; DevOps; Adoption; Agile Software Development;  Continuous Delivery;  Continuous Deployment;  Continuous Software Engineering;  DevOps;  Adoption	Chen, Lianping	JOURNAL OF SYSTEMS AND SOFTWARE	https://doi.org/10.1016/j.jss.2017.02.013		72-86	"""@article{WOS:000401675000005,
    Author = ""Chen, Lianping"",
    Title = ""Continuous Delivery: Overcoming adoption challenges"",
    Journal = ""JOURNAL OF SYSTEMS AND SOFTWARE"",
    Year = ""2017"",
    Volume = ""128"",
    Pages = ""72-86"",
    Month = ""JUN"",
    Abstract = ""Continuous Delivery (CD) is a relatively new software development approach. Companies that have adopted CD have reported significant benefits. Motivated by these benefits, many companies would like to adopt CD. However, adopting CD can be very challenging for a number of reasons, such as obtaining buy-in from a wide range of stakeholders whose goals may seemingly be different from or even conflict with our own; gaining sustained support in a dynamic complex enterprise environment; maintaining an application development team's momentum when their application's migration to CD requires an additional strenuous effort over a long period of time; and so on. To help overcome the adoption challenges, I present six strategies: (1) selling CD as a painkiller; (2) establishing a dedicated team with multi-disciplinary members; (3) continuous delivery of continuous delivery; (4) starting with the easy but important applications; (5) visual CD pipeline skeleton; (6) expert drop. These strategies were derived from four years of experience in implementing CD at a multi-billion-euro company. Additionally, our experience led to the identification of eight further challenges for research. The information contributes toward building a body of knowledge for CD adoption. (C) 2017 The Author. Published by Elsevier Inc."",
    Publisher = ""ELSEVIER SCIENCE INC"",
    Address = ""STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA"",
    Type = ""Article"",
    Language = ""English"",
    Affiliation = ""Chen, LP (Corresponding Author), Lianping Chen Ltd, Dublin, Ireland. Chen, Lianping, Lianping Chen Ltd, Dublin, Ireland."",
    DOI = ""10.1016/j.jss.2017.02.013"",
    ISSN = ""0164-1212"",
    EISSN = ""1873-1228"",
    Keywords = ""Agile Software Development; Continuous Delivery; Continuous Deployment; Continuous Software Engineering; DevOps; Adoption"",
    Keywords-Plus = ""DEPLOYMENT"",
    Research-Areas = ""Computer Science"",
    Web-of-Science-Categories = ""Computer Science, Software Engineering; Computer Science, Theory \\& Methods"",
    Author-Email = ""lianping.chen@outlook.com"",
    Number-of-Cited-References = ""42"",
    Times-Cited = ""54"",
    Usage-Count-Last-180-days = ""0"",
    Usage-Count-Since-2013 = ""33"",
    Journal-ISO = ""J. Syst. Softw."",
    Doc-Delivery-Number = ""EV3QU"",
    Web-of-Science-Index = ""Science Citation Index Expanded (SCI-EXPANDED)"",
    Unique-ID = ""WOS:000401675000005"",
    OA = ""hybrid"",
    DA = ""2024-10-22""
}
"""	Excluded	Excluded	new_screen			2	Web of Science		Continuous Delivery: Overcoming adoption challenges	https://www.webofscience.com/wos/woscc/full-record/WOS:000401675000005	ELSEVIER SCIENCE INC	nan; References
75	Behave	Transition towards continuous delivery in the healthcare domain	Continuous Delivery is meanwhile well-established in many parts of the software industry. In a transition towards continuous delivery in the healthcare domain, there are a number of additional challenges that should be addressed. We present how we have addressed some of these challenges and highlight some potential research topics that could be addressed in this space to make further progress in this important area. Although our focus is on the healthcare domain, the approach and the research topics are applicable also to a broad range of other application domains.	agile; behavior-driven development; continuous delivery; deployment pipeline; domain-driven design; pair-programming; test automation; test-driven development	Fabio Giorgi; Frances Paulisch	ICSE-SEIP '19: Proceedings of the 41st International Conference on Software Engineering: Software Engineering in Practice	https://doi.org/10.1109/ICSE-SEIP.2019.00035		253-254		Excluded	Excluded	new_screen			2	ACM		Transition towards Continuous Delivery in the Healthcare Domain	https://dl.acm.org/doi/10.1109/ICSE-SEIP.2019.00035	IEEE Press	nan; References; Year; Bibtex
76	Behave	Transition towards continuous delivery in the healthcare domain	Continuous Delivery is meanwhile well-established in many parts of the software industry. In a transition towards continuous delivery in the healthcare domain, there are a number of additional challenges that should be addressed. We present how we have addressed some of these challenges and highlight some potential research topics that could be addressed in this space to make further progress in this important area. Although our focus is on the healthcare domain, the approach and the research topics are applicable also to a broad range of other application domains.	agile;  behavior-driven development;  continuous delivery;  deployment pipeline;  domain-driven design;  pair-programming;  test automation;  test-driven development; agile, behavior-driven development, continuous delivery, deployment pipeline, domain-driven design, pair-programming, test automation, test-driven development	Giorgi, Fabio; Paulisch, Frances	ICSE-SEIP '19: Proceedings of the 41st International Conference on Software Engineering: Software Engineering in Practice	https://doi.org/10.1109/ICSE-SEIP.2019.00035		253-254	"""@inproceedings{10.1109/ICSE-SEIP.2019.00035,
    author = ""Giorgi, Fabio and Paulisch, Frances"",
    title = ""Transition towards continuous delivery in the healthcare domain"",
    year = ""2019"",
    publisher = ""IEEE Press"",
    url = ""https://doi.org/10.1109/ICSE-SEIP.2019.00035"",
    doi = ""10.1109/ICSE-SEIP.2019.00035"",
    abstract = ""Continuous Delivery is meanwhile well-established in many parts of the software industry. In a transition towards continuous delivery in the healthcare domain, there are a number of additional challenges that should be addressed. We present how we have addressed some of these challenges and highlight some potential research topics that could be addressed in this space to make further progress in this important area. Although our focus is on the healthcare domain, the approach and the research topics are applicable also to a broad range of other application domains."",
    booktitle = ""Proceedings of the 41st International Conference on Software Engineering: Software Engineering in Practice"",
    pages = ""253-254"",
    numpages = ""2"",
    keywords = ""agile, behavior-driven development, continuous delivery, deployment pipeline, domain-driven design, pair-programming, test automation, test-driven development"",
    location = ""Montreal, Quebec, Canada"",
    series = ""ICSE-SEIP '19""
}
"""	Included	Included	new_screen			2	ACM		Transition Towards Continuous Delivery in the Healthcare Domain	https://dl.acm.org/doi/10.1109/ICSE-SEIP.2019.00035	IEEE Press	nan; References
77	Behave	Learning Behavior-Driven Development with JavaScript	This book is ideal for any JavaScript developer who is interested in producing well-tested code. If you have no prior experience with testing, Node.js, or any other tool, do not worry, as they will be explained from scratch.		Enrique Amodeo	Community experience distilled	https://books.google.ca/books?id=Fru9BgAAQBAJ&dq=Learning+Behavior-Driven+Development+with+JavaScript&lr=&source=gbs_navlinks_s		392	"""nan"""	Excluded	Excluded	new_screen			2	Google Scholar		Learning Behavior-Driven Development with JavaScript	https://books.google.ca/books?id=Fru9BgAAQBAJ&dq=Learning+Behavior-Driven+Development+with+JavaScript&lr=&source=gbs_navlinks_s	Packt Publishing Ltd	
78	Behave	SS-BDD:Automated Acceptance Testing for Spreadsheets	Current Spreadsheet Applications, such as Excel and Google Sheets, provide innumerous built-in facilities, including arithmetic, financial and statistical operations, as well as conditional expressions. Thus, users with little or no formal training in programming can use Spreadsheet Applications to implement their own Spreadsheet Programs. In fact, Spreadsheet Applications have become one of the most popular end-user programming environments nowadays. However, these applications also ease the introduction of errors in Spreadsheet Programs. Minor mistakes in formulas can mislead decisionmaking processes, resulting in uncountable costs to organizations. In general, end-user programmers are unaware of the potential risks that the uncontrolled construction of Spreadsheet Programs can cause. Therefore, a major focus of this paper is to offer an automated approach that makes programmers aware of introduced faults, so that they can build high quality Spreadsheet Programs. In particular, we propose SS-BDD, a framework for building and running Spreadsheets test scenarios, which relies on the use of Behavior Driven Development (BDD). We used SS-BDD to test three different Spreadsheet Programs. Our experience shows that SS-BDD can be used to build end-user friendly test scenarios which can achieve high fault-detection effectiveness.	Behavior Driven Development; Software Testing Tool; Spreadsheet Testing	Lara Almeida; Elder Cirilo; Eiji Adachi Barbosa	SAST '16: Proceedings of the 1st Brazilian Symposium on Systematic and Automated Software Testing	https://doi.org/10.1145/2993288.2993296		1-10		Included	Included	new_screen			2	ACM		SS-BDD: Automated Acceptance Testing for Spreadsheets	https://dl.acm.org/doi/10.1145/2993288.2993296	Association for Computing Machinery	nan; References; Year; Bibtex
79	Behave	BMT: Behavior Driven Development-based Metamorphic Testing for Autonomous Driving Models	Deep Neural Network based models are widely used for perception and control in autonomous driving. Recent work leverages metamorphic testing to improve defect detection but is limited to using only an equality-based metamorphic relation. Thus, it does not provide sufficient expressiveness for users to define custom metamorphic relations nor means to automatically generate meaningful inputs based on such expressive metamorphic relations that reflect real-world traffic behaviors. In this paper, we preliminarily design and evaluate a declarative Behaviour-Driven Development (BDD)-based metamorphic testing framework BMT, which enables domain experts to specify custom traffic behaviors--a car shall decelerate by x% when a bicycle is in front, etc. It then automatically translates a human-written behavior to a corresponding metamorphic relation and synthesizes meaningful test inputs using a variety of image and graphics processing techniques. Our preliminary evaluation shows that BMT can detect a significant number of erroneous predictions of three driving models for speed predictions. These detected erroneous predictions are manually examined and confirmed by six human judges as meaningful traffic violations. By automating test generation from custom behaviors, BMT enables experts to easily express domain-specific constraints and finds violations of such constraints.	Graphics; Conferences; Neural networks; Bicycles; Predictive models; Test pattern generators; Automobiles; Autonomous Vehicles; Metamorphic Testing; Image Processing; Deep Neural Network; Domain Experts; Diverse Images; Speed Prediction; Erroneous Predictions; Traffic Violations; Traffic Behavior; Meaningful Input; Convolutional Neural Network; Pedestrian; Generative Adversarial Networks; Source Images; Original Input; Variational Autoencoder; Image Transformation; Semantic Map; Domain-specific Languages; Road Test; Steering Angle; Metamorphic Testing; Autonomous Driving; Deep Learning Models; Software Testing and Verification	Yao Deng; Guannan Lou; Xi Zheng; Tianyi Zhang; Miryung Kim; Huai Liu; Chen Wang; Tsong Yueh Chen	2021 IEEE/ACM 6th International Workshop on Metamorphic Testing (MET)	https://doi.org/10.1109/MET52542.2021.00012				Included	Included	new_screen			2	IEEE		BMT: Behavior Driven Development-based Metamorphic Testing for Autonomous Driving Models	https://ieeexplore.ieee.org/document/9477683	IEEE	nan; References; Pages; Year; Bibtex
80	Behave	3DEvent: A framework using event-sourcing approach for 3D web-based collaborative design in P2P	Despite recent advances, especially in web-based Collaborative Virtual Environments (CVEs) using real-Time 3D content, Web technology still requires an efficient way to distribute and stream large-scale 3D data. In this paper, we present 3DEvent: An eventdriven framework to collaboratively manipulate predesigned 3D content in real-Time on a web-based platform. This work introduces a new approach in achieving 3D object manipulation tasks during collaborative design stages using event-sourcing. Usually, a clientserver architecture supports updates to the 3D environment state. Peer-To-peer (P2P) allows direct communication between teammates reducing response times during collaboration and decreasing server load, reducing the costs of providers. 3DEvent enables P2Passisted delivery of 3D dynamic content in a web browser viaWeb-RTC. By combining concepts from distributed event-processing and mesh-processing, 3D independent rendering and event-based synchronization, we present 3DEvent framework and potential uses associated that support history-Aware 3D applications into a unified distributed processing solution for 3D web-based CVEs.	Distributed computer systems; Virtual reality; Web services; Websites; Client-server architectures; Collaborative manipulation; Collaborative virtual environment; Distributed applications; Distributed event processing; Event-based synchronization; Event-driven architectures; WebRTC; Three dimensional computer graphics; Distributed computer systems;  Virtual reality;  Web services;  Websites;  Client-server architectures;  Collaborative manipulation;  Collaborative virtual environment;  Distributed applications;  Distributed event processing;  Event-based synchronization;  Event-driven architectures;  WebRTC;  Three dimensional computer graphics	Desprat, Caroline; Jessel, Jean-Pierre; Luga, Herve	Proceedings of the 21st International Conference on Web3D Technology, Web3D 2016	https://doi.org/10.1145/2945292.2945310		73 - 76	"""@CONFERENCE{Desprat201673,
    author = ""Desprat, Caroline and Jessel, Jean-Pierre and Luga, Herve"",
    title = ""3DEvent: A framework using event-sourcing approach for 3D web-based collaborative design in P2P"",
    year = ""2016"",
    journal = ""Proceedings of the 21st International Conference on Web3D Technology, Web3D 2016"",
    pages = ""73 - 76"",
    doi = ""10.1145/2945292.2945310"",
    url = ""https://www.scopus.com/inward/record.uri?eid=2-s2.0-84983542219\&doi=10.1145\%2f2945292.2945310\&partnerID=40\&md5=260dc9d827d285fedc41364b0c2d0853"",
    affiliations = ""University of Toulouse, France"",
    abstract = ""Despite recent advances, especially in web-based Collaborative Virtual Environments (CVEs) using real-Time 3D content, Web technology still requires an efficient way to distribute and stream large-scale 3D data. In this paper, we present 3DEvent: An eventdriven framework to collaboratively manipulate predesigned 3D content in real-Time on a web-based platform. This work introduces a new approach in achieving 3D object manipulation tasks during collaborative design stages using event-sourcing. Usually, a clientserver architecture supports updates to the 3D environment state. Peer-To-peer (P2P) allows direct communication between teammates reducing response times during collaboration and decreasing server load, reducing the costs of providers. 3DEvent enables P2Passisted delivery of 3D dynamic content in a web browser viaWeb-RTC. By combining concepts from distributed event-processing and mesh-processing, 3D independent rendering and event-based synchronization, we present 3DEvent framework and potential uses associated that support history-Aware 3D applications into a unified distributed processing solution for 3D web-based CVEs. (c) 2016 ACM."",
    author_keywords = ""Collaborative manipulation; Distributed application; Event-driven architecture; Web 3D; WebRTC"",
    keywords = ""Distributed computer systems; Virtual reality; Web services; Websites; Client-server architectures; Collaborative manipulation; Collaborative virtual environment; Distributed applications; Distributed event processing; Event-based synchronization; Event-driven architectures; WebRTC; Three dimensional computer graphics"",
    publisher = ""Association for Computing Machinery, Inc"",
    isbn = ""978-145034428-9"",
    language = ""English"",
    abbrev_source_title = ""Proc. Int. Conf. Web3D Technol., Web3D"",
    type = ""Conference paper"",
    publication_stage = ""Final"",
    source = ""Scopus"",
    note = ""Cited by: 4; Conference name: 21st International Conference on Web3D Technology, Web3D 2016; Conference date: 22 July 2016 through 24 July 2016; Conference code: 122890; All Open Access, Green Open Access""
}
"""	Excluded	Excluded	new_screen			2	Scopus Signed In		3DEvent: A Framework Using Event-Sourcing Approach for 3D Web-Based Collaborative Design in P2P	https://www.scopus.com/record/display.uri?eid=2-s2.0-84983542219&origin=resultslist&sort=plf-f&src=s&sid=6bd7ededde3224e0f6a0d736ed5972d5&sot=b&sdt=b&s=TITLE-ABS-KEY%283devent+a+framework+using+event+sourcing+approach+for+3d+web+based+collaborative+design+in+p2p%29&sl=109&sessionSearchId=6bd7ededde3224e0f6a0d736ed5972d5&relpos=0	Association for Computing Machinery, Inc	nan; References
81	Behave	Test-driven development of relational databases	Developers can use a test-driven development with database schema just as they use it with application code. Implementing test-driven database development (TDDD) involves three relatively simple steps: database refactoring, database regression testing, and continuous database integration. In database refactoring, developers make a simple change to a database to improve the design without changing its semantics. In database regression testing, they run a comprehensive test suite that validates the database regularly-ideally, whenever developers change the database schema or access the database in a different way. In continuous database integration, developers rebuild and retest the database schema whenever it changes. From a technical viewpoint, TDDD is straightforward. However, cultural challenges can make it difficult to adopt.	Software design; Software engineering; Software testing; Database refactoring; Database testing; Test-driven database design; Test-driven development; Relational database systems; Software design;  Software engineering;  Software testing;  Database refactoring;  Database testing;  Test-driven database design;  Test-driven development;  Relational database systems	Ambler, Scott W.	IEEE Software	https://doi.org/10.1109/MS.2007.91	Astels, D.(2003)Test Driven Development: A Practical Guide.Cited 162 times.Prentice Hall; Beck, K.(2003)Test Driven Development: By Example.Cited 1665 times.Addison-Wesley; Fowler, M.(1999)Refactoring: Improving the Design of Existing Code.Cited 5129 times.Addison-Wesley Longman; (2007)Behavior Driven Development, Marwww.behaviour-driven.org; Ambler, S.W.(2003)Agile Database Techniques: Effective Strategies for the Agile Software Developer.Cited 163 times.John Wiley & Sons; Ambler, S.W.(2006)Database Regression Testing.Cited 2 times.www.agiledata.org/ essays/databaseTesting.html; Becker, S.A., Berkemeyer, A.The Application of a Software Testing Technique to Uncover Errors in Database Systems [Proc. 20th Pacific Northwest Software Quality Conf](1999) , pp. 173-183.PNSQC/Pacific Agenda; Swiderski, F., Snyder, W.(2004)Threat Modeling.Cited 357 times.Microsoft Press; Ambler, S.W., Sadalage, P.(2006)Refactoring Databases: Evolutionary Database Design.Cited 131 times.Addison-Wesley; Fowler, M., Sadalage, P.(2003)Evolutionary Database Design.Cited 7 times.www.martinfowler.com/articles/evodb.html; Ambler, S.W.(2002)Development Sandboxes: An Agile Best Practicewww.agiledata.org/essays/sandboxes.html	37 - 43	"""@ARTICLE{Ambler200737,
    author = ""Ambler, Scott W."",
    title = ""Test-driven development of relational databases"",
    year = ""2007"",
    journal = ""IEEE Software"",
    volume = ""24"",
    number = ""3"",
    pages = ""37 - 43"",
    doi = ""10.1109/MS.2007.91"",
    url = ""https://www.scopus.com/inward/record.uri?eid=2-s2.0-34248398098\&doi=10.1109\%2fMS.2007.91\&partnerID=40\&md5=8675bb529407120e991378e8d4ce24b5"",
    affiliations = ""IBM"",
    abstract = ""Developers can use a test-driven development with database schema just as they use it with application code. Implementing test-driven database development (TDDD) involves three relatively simple steps: database refactoring, database regression testing, and continuous database integration. In database refactoring, developers make a simple change to a database to improve the design without changing its semantics. In database regression testing, they run a comprehensive test suite that validates the database regularly-ideally, whenever developers change the database schema or access the database in a different way. In continuous database integration, developers rebuild and retest the database schema whenever it changes. From a technical viewpoint, TDDD is straightforward. However, cultural challenges can make it difficult to adopt. (c) 2007 IEEE."",
    author_keywords = ""BDD; Behavior-driven development; Database refactoring; Database testing; Relational database; TDD; Test-driven database design; Test-driven development"",
    keywords = ""Software design; Software engineering; Software testing; Database refactoring; Database testing; Test-driven database design; Test-driven development; Relational database systems"",
    correspondence_address = ""S.W. Ambler; IBM; email: scott\_ambler@ca.ibm.com"",
    issn = ""07407459"",
    coden = ""IESOE"",
    language = ""English"",
    abbrev_source_title = ""IEEE Software"",
    type = ""Article"",
    publication_stage = ""Final"",
    source = ""Scopus"",
    note = ""Cited by: 18""
}
"""	Excluded	Excluded	new_screen			2	Scopus Signed In		Test-Driven Development of Relational Databases	https://www.webofscience.com/wos/woscc/full-record/WOS:000246152300012	IEEE COMPUTER SOC	
82	Behave	Automatic production of end user documentation for DSLs	Domain-specific languages (DSL) are developed for answering specific problems by leveraging the expertise of domain stakeholders. The development of DSLs requires a significant software engineering effort: editors, code generators, etc, must be developed to make a DSL usable. Documenting a DSL is also a major and time-consuming task required to promote it and address its learning curve. Recent research work in software language engineering focus on easing the development of DSLs. This work focuses on easing the production of documentation of textual DSLs. The API documentation domain identified challenges we adapted to DSL documentation. Based on these challenges we propose a model-driven approach that relies on DSL artifacts to extract information required to build documentation. Our implementation, called Docywood, targets two platforms: Markdown documentation for static web sites and Xtext code fragments for live documentation while modeling. We used Docywood on two DSLs, namely ThingML and Target Platform Definition. Feedback from end users and language designers exhibits qualitative benefits of the proposal with regard to the DSL documentation challenges. End user experiments conducted on ThingML and Target Platform Definition show benefits on the correctness of the created models when using Docywood on ThingML.	Software documentation;  Domain-specific language;  Model slicing; Software documentation, Domain-specific language, Model slicing	{Le Moulec}, Gwendal; Blouin, Arnaud; Gouranton, Valerie; Arnaldi, Bruno	Computer Languages, Systems & Structures	https://www.sciencedirect.com/science/article/pii/S1477842417301811		337-357	"""@article{LEMOULEC2018337,
    author = ""{Le Moulec}, Gwendal and Blouin, Arnaud and Gouranton, Valerie and Arnaldi, Bruno"",
    title = ""Automatic production of end user documentation for DSLs"",
    journal = ""Computer Languages, Systems \& Structures"",
    volume = ""54"",
    pages = ""337-357"",
    year = ""2018"",
    issn = ""1477-8424"",
    doi = ""https://doi.org/10.1016/j.cl.2018.07.006"",
    url = ""https://www.sciencedirect.com/science/article/pii/S1477842417301811"",
    keywords = ""Software documentation, Domain-specific language, Model slicing"",
    abstract = ""Domain-specific languages (DSL) are developed for answering specific problems by leveraging the expertise of domain stakeholders. The development of DSLs requires a significant software engineering effort: editors, code generators, etc, must be developed to make a DSL usable. Documenting a DSL is also a major and time-consuming task required to promote it and address its learning curve. Recent research work in software language engineering focus on easing the development of DSLs. This work focuses on easing the production of documentation of textual DSLs. The API documentation domain identified challenges we adapted to DSL documentation. Based on these challenges we propose a model-driven approach that relies on DSL artifacts to extract information required to build documentation. Our implementation, called Docywood, targets two platforms: Markdown documentation for static web sites and Xtext code fragments for live documentation while modeling. We used Docywood on two DSLs, namely ThingML and Target Platform Definition. Feedback from end users and language designers exhibits qualitative benefits of the proposal with regard to the DSL documentation challenges. End user experiments conducted on ThingML and Target Platform Definition show benefits on the correctness of the created models when using Docywood on ThingML.""
}
"""	Excluded	Excluded	new_screen			2	Science Direct		Automatic production of end user documentation for DSLs	https://www.sciencedirect.com/science/article/pii/S1477842417301811	Elsevier Ltd	nan; References
83	Behave	A Process for Evidence-Based Engineering of Domain-Specific Languages	Domain-specific languages (DSLs) are mainly designed ad-hoc and gut feeling resulting in languages that are often not well suited for their users and engineers. In this paper we develop a process for evidence-based language engineering to design domain-specific languages based on empirical evidence to support decision in language engineering. The developed process comprises an iterative execution of the phases DSL engineering, issue identification, data collection and evidence appraisal. We exemplify the concept by designing a DSL for Gherkin, a language test-driven acceptance testing in Xtext. The required evidence is derived by mining and analyzing all GitHub projects until July 1, 2017 that apply Gherkin.	DSL engineering; domain-specific languages; empirical research; evidence-based software engineering; repository mining	Michael Felderer; Fabian Jeschko	EASE '18: Proceedings of the 22nd International Conference on Evaluation and Assessment in Software Engineering 2018	https://doi.org/10.1145/3210459.3210479		169-174		Excluded	Excluded	new_screen			2	ACM		A Process for Evidence-Based Engineering of Domain-Specific Languages	https://dl.acm.org/doi/10.1145/3210459.3210479	Association for Computing Machinery	nan; References; Year; Bibtex
84	Behave	Reproducing failures based on semiformal failure scenario descriptions	Due to the increasing size and complexity of software systems, it becomes hard to test these systems exhaustively. As a result, some faults can be left undetected. Undetected faults can lead to failures in deployed systems. Such failures are usually reported by the users from the field or test engineers back to developers. It requires considerable time and effort to analyze and reproduce the reported failures because their descriptions are not always complete, structured and formal. In this paper, we introduce a novel approach for automatically reproducing failures to aid their debugging. Our approach relies on semi-structured failure scenario descriptions that employ a set of keywords. These descriptions are preprocessed and mapped to a set of predefined test case templates with valid input sets. Then, test cases are generated and executed to reproduce the reported failure scenarios. The approach is evaluated with an industrial case study performed in a company from the telecommunications domain. Several failures were successfully reproduced. The approach is also adopted in the quality assurance process of the company. After one-time preparation of reusable test case templates and training of test engineers, 24.9 % of the reported failures (and 40 % of those that were manually reproducible) could be reproduced without any manual effort.	Personnel training; Quality assurance; Testing; Automated test case generation; Behavior-driven development; Deployed systems; Failure scenarios; Industrial case study; Quality assurance process; Reusable test case; Software systems; Software testing; Personnel training;  Quality assurance;  Testing;  Automated test case generation;  Behavior-driven development;  Deployed systems;  Failure scenarios;  Industrial case study;  Quality assurance process;  Reusable test case;  Software systems;  Software testing	Karagoz, Gun; Sozer, Hasan	Software Quality Journal	https://doi.org/10.1007/s11219-016-9310-1		111 - 129	"""@ARTICLE{Karagoz2017111,
    author = ""Karagoz, Gun and Sozer, Hasan"",
    title = ""Reproducing failures based on semiformal failure scenario descriptions"",
    year = ""2017"",
    journal = ""Software Quality Journal"",
    volume = ""25"",
    number = ""1"",
    pages = ""111 - 129"",
    doi = ""10.1007/s11219-016-9310-1"",
    url = ""https://www.scopus.com/inward/record.uri?eid=2-s2.0-84957658578\&doi=10.1007\%2fs11219-016-9310-1\&partnerID=40\&md5=00a2b80a254a1785452411a0d6442c65"",
    affiliations = ""P.I.Works HQ, Teknopark Istanbul Sanayi Mah. Teknopark Bul. No: 1/3A 103, Pendik, Istanbul, 34906, Turkey; School of Engineering, Ozyegin University, Nisantepe Mah. Orman Sk. No: 34-36, Alemdag, Cekmekoy, Istanbul, 34794, Turkey"",
    abstract = ""Due to the increasing size and complexity of software systems, it becomes hard to test these systems exhaustively. As a result, some faults can be left undetected. Undetected faults can lead to failures in deployed systems. Such failures are usually reported by the users from the field or test engineers back to developers. It requires considerable time and effort to analyze and reproduce the reported failures because their descriptions are not always complete, structured and formal. In this paper, we introduce a novel approach for automatically reproducing failures to aid their debugging. Our approach relies on semi-structured failure scenario descriptions that employ a set of keywords. These descriptions are preprocessed and mapped to a set of predefined test case templates with valid input sets. Then, test cases are generated and executed to reproduce the reported failure scenarios. The approach is evaluated with an industrial case study performed in a company from the telecommunications domain. Several failures were successfully reproduced. The approach is also adopted in the quality assurance process of the company. After one-time preparation of reusable test case templates and training of test engineers, 24.9 \% of the reported failures (and 40 \% of those that were manually reproducible) could be reproduced without any manual effort. (c) 2016, Springer Science+Business Media New York."",
    author_keywords = ""Automated test case generation; Behavior-driven development; Failure reproduction; Industrial case study"",
    keywords = ""Personnel training; Quality assurance; Testing; Automated test case generation; Behavior-driven development; Deployed systems; Failure scenarios; Industrial case study; Quality assurance process; Reusable test case; Software systems; Software testing"",
    correspondence_address = ""G. Karagoz; P.I.Works HQ, Pendik, Istanbul, Teknopark Istanbul Sanayi Mah. Teknopark Bul. No: 1/3A 103, 34906, Turkey; email: gun.karagoz@piworks.net"",
    publisher = ""Springer New York LLC"",
    issn = ""09639314"",
    language = ""English"",
    abbrev_source_title = ""Softw. Qual. J."",
    type = ""Article"",
    publication_stage = ""Final"",
    source = ""Scopus"",
    note = ""Cited by: 5""
}
"""	Included	Included	new_screen			2	Scopus Signed In		Reproducing Failures Based on Semiformal Failure Scenario Descriptions	https://www.scopus.com/record/display.uri?eid=2-s2.0-84957658578&origin=resultslist&sort=plf-f&src=s&sid=907d09d38f360cf3eeb56afe04a84652&sot=b&sdt=b&s=TITLE-ABS-KEY%28reproducing+failures+based+on+semiformal+failure+scenario+descriptions%29&sl=85&sessionSearchId=907d09d38f360cf3eeb56afe04a84652&relpos=0	Springer New York LLC	nan; References
85	Behave	Behaviour-Driven Requirements Engineering for Agile Product Line Engineering	Due to the need of the software development community to integrate the flexibility and the high responsiveness of agile software development with the economic advantages, of reuse and mass customisation, offered by product lines, agile product line engineering has been gaining a momentum of attention from both researchers and practitioners. Developing and managing the different requirements engineering phases of product lines present is a dilemma that the efforts done in the literature was not able to effectively and efficiently resolve. To realise the full potential of agile product line engineering in practice, a complete, consistent, correct, and unambiguous user requirements must be produced without investing that huge amount of time in the upfront domain engineering phase of a traditional software product line. In this proposal, a behaviour-driven cloud-based framework is introduced to develop and maintain software product lines in an agile-based environment. The approach relies on upfront automated testing to derive and manage core assets and variations of an agile-based software product line. The model is validated through an empirical study and the preliminary results are very promising.	agile product line engineering; requirements engineering; behaviour-driven development; cloud computing; empirical study; agile product line engineering;  requirements engineering;  behaviour-driven development;  cloud computing;  empirical study	Elshandidy, Heba	2019 27TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE (RE 2019)	https://doi.org/10.1109/RE.2019.00058		434-439	"""@inproceedings{WOS:000533929400051,
    Author = ""Elshandidy, Heba"",
    Editor = ""Damian, D and Perini, A and Lee, SW"",
    Title = ""Behaviour-Driven Requirements Engineering for Agile Product Line Engineering"",
    Booktitle = ""2019 27TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE (RE 2019)"",
    Series = ""International Requirements Engineering Conference"",
    Year = ""2019"",
    Pages = ""434-439"",
    Note = ""IEEE 27th International Requirements Engineering Conference (RE), SOUTH KOREA, SEP 23-27, 2019"",
    Organization = ""IEEE; IEEE Comp Soc; Ajou Univ; IBM; Intel; ESG; Dahan Tech; TmaxData; Solutionlink; NSE Technol; IREB; SCK; Springer"",
    Abstract = ""Due to the need of the software development community to integrate the flexibility and the high responsiveness of agile software development with the economic advantages, of reuse and mass customisation, offered by product lines, agile product line engineering has been gaining a momentum of attention from both researchers and practitioners. Developing and managing the different requirements engineering phases of product lines present is a dilemma that the efforts done in the literature was not able to effectively and efficiently resolve. To realise the full potential of agile product line engineering in practice, a complete, consistent, correct, and unambiguous user requirements must be produced without investing that huge amount of time in the upfront domain engineering phase of a traditional software product line. In this proposal, a behaviour-driven cloud-based framework is introduced to develop and maintain software product lines in an agile-based environment. The approach relies on upfront automated testing to derive and manage core assets and variations of an agile-based software product line. The model is validated through an empirical study and the preliminary results are very promising."",
    Publisher = ""IEEE COMPUTER SOC"",
    Address = ""10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1264 USA"",
    Type = ""Proceedings Paper"",
    Language = ""English"",
    Affiliation = ""Elshandidy, H (Corresponding Author), Cairo Univ, Fac Comp \\& Informat, Cairo, Egypt. Elshandidy, Heba, Cairo Univ, Fac Comp \\& Informat, Cairo, Egypt."",
    DOI = ""10.1109/RE.2019.00058"",
    ISSN = ""2332-6441"",
    ISBN = ""978-1-7281-3912-8"",
    Keywords = ""agile product line engineering; requirements engineering; behaviour-driven development; cloud computing; empirical study"",
    Research-Areas = ""Computer Science"",
    Web-of-Science-Categories = ""Computer Science, Information Systems; Computer Science, Software Engineering"",
    Author-Email = ""helshandidy@gmail.com"",
    Affiliations = ""Egyptian Knowledge Bank (EKB); Cairo University"",
    Number-of-Cited-References = ""32"",
    Times-Cited = ""3"",
    Usage-Count-Last-180-days = ""0"",
    Usage-Count-Since-2013 = ""4"",
    Doc-Delivery-Number = ""BP0EJ"",
    Web-of-Science-Index = ""Conference Proceedings Citation Index - Science (CPCI-S)"",
    Unique-ID = ""WOS:000533929400051"",
    DA = ""2024-10-22""
}
"""	Included	Included	new_screen			2	Web of Science		Behaviour-driven requirements engineering for agile product line engineering	https://www.webofscience.com/wos/woscc/full-record/WOS:000533929400051	IEEE COMPUTER SOC	nan; References
86	Behave	From requirements to source code: a Model-Driven Engineering approach for RESTful web services	During the last few years, the REST architectural style has drastically changed the way web services are developed. Due to its transparent resource-oriented model, the RESTful paradigm has been incorporated into several development frameworks that allow rapid development and aspire to automate parts of the development process. However, most of the frameworks lack automation of essential web service functionality, such as authentication or database searching, while the end product is usually not fully compliant to REST. Furthermore, most frameworks rely heavily on domain specific modeling and require developers to be familiar with the employed modeling technologies. In this paper, we present a Model-Driven Engineering (MDE) engine that supports fast design and implementation of web services with advanced functionality. Our engine provides a front-end interface that allows developers to design their envisioned system through software requirements in multimodal formats. Input in the form of textual requirements and graphical storyboards is analyzed using natural language processing techniques and semantics, to semi-automatically construct the input model for the MDE engine. The engine subsequently applies model-to-model transformations to produce a RESTful, ready-to-deploy web service. The procedure is traceable, ensuring that changes in software requirements propagate to the underlying software artefacts and models. Upon assessing our methodology through a case study and measuring the effort reduction of using our tools, we conclude that our system can be effective for the fast design and implementation of web services, while it allows easy wrapping of services that have been engineered with traditional methods to the MDE realm.	Design; Engines; Natural language processing systems; Requirements engineering; Search engines; Semantics; Software engineering; Websites; World Wide Web; Development frameworks; Domain specific modeling; Model to model transformation; Model-driven Engineering; NAtural language processing; RESTful Web services; Service functionalities; Software requirements; Web services; Design;  Engines;  Natural language processing systems;  Requirements engineering;  Search engines;  Semantics;  Software engineering;  Websites;  World Wide Web;  Development frameworks;  Domain specific modeling;  Model to model transformation;  Model-driven Engineering;  NAtural language processing;  RESTful Web services;  Service functionalities;  Software requirements;  Web services	Zolotas, Christoforos; Diamantopoulos, Themistoklis; Chatzidimitriou, Kyriakos C.; Symeonidis, Andreas L.	Automated Software Engineering	https://doi.org/10.1007/s10515-016-0206-x		791 - 838	"""@ARTICLE{Zolotas2017791,
    author = ""Zolotas, Christoforos and Diamantopoulos, Themistoklis and Chatzidimitriou, Kyriakos C. and Symeonidis, Andreas L."",
    title = ""From requirements to source code: a Model-Driven Engineering approach for RESTful web services"",
    year = ""2017"",
    journal = ""Automated Software Engineering"",
    volume = ""24"",
    number = ""4"",
    pages = ""791 - 838"",
    doi = ""10.1007/s10515-016-0206-x"",
    url = ""https://www.scopus.com/inward/record.uri?eid=2-s2.0-84984844780\&doi=10.1007\%2fs10515-016-0206-x\&partnerID=40\&md5=8bd9650aa74d0c817f0c41b23e2e3cd0"",
    affiliations = ""Electrical and Computer Engineering Department, Aristotle University of Thessaloniki, Thessaloniki, GR54124, Greece"",
    abstract = ""During the last few years, the REST architectural style has drastically changed the way web services are developed. Due to its transparent resource-oriented model, the RESTful paradigm has been incorporated into several development frameworks that allow rapid development and aspire to automate parts of the development process. However, most of the frameworks lack automation of essential web service functionality, such as authentication or database searching, while the end product is usually not fully compliant to REST. Furthermore, most frameworks rely heavily on domain specific modeling and require developers to be familiar with the employed modeling technologies. In this paper, we present a Model-Driven Engineering (MDE) engine that supports fast design and implementation of web services with advanced functionality. Our engine provides a front-end interface that allows developers to design their envisioned system through software requirements in multimodal formats. Input in the form of textual requirements and graphical storyboards is analyzed using natural language processing techniques and semantics, to semi-automatically construct the input model for the MDE engine. The engine subsequently applies model-to-model transformations to produce a RESTful, ready-to-deploy web service. The procedure is traceable, ensuring that changes in software requirements propagate to the underlying software artefacts and models. Upon assessing our methodology through a case study and measuring the effort reduction of using our tools, we conclude that our system can be effective for the fast design and implementation of web services, while it allows easy wrapping of services that have been engineered with traditional methods to the MDE realm. (c) 2016, Springer Science+Business Media New York."",
    author_keywords = ""Automated Software Engineering; Model-Driven Engineering; RESTful web services; Software requirements"",
    keywords = ""Design; Engines; Natural language processing systems; Requirements engineering; Search engines; Semantics; Software engineering; Websites; World Wide Web; Development frameworks; Domain specific modeling; Model to model transformation; Model-driven Engineering; NAtural language processing; RESTful Web services; Service functionalities; Software requirements; Web services"",
    correspondence_address = ""T. Diamantopoulos; Electrical and Computer Engineering Department, Aristotle University of Thessaloniki, Thessaloniki, GR54124, Greece; email: thdiaman@issel.ee.auth.gr"",
    publisher = ""Springer New York LLC"",
    issn = ""09288910"",
    coden = ""ASOEE"",
    language = ""English"",
    abbrev_source_title = ""Autom Software Eng"",
    type = ""Article"",
    publication_stage = ""Final"",
    source = ""Scopus"",
    note = ""Cited by: 19""
}
"""	Excluded	Excluded	new_screen			2	Scopus Signed In		From Requirements to Source Code: A Model-Driven Engineering Approach for RESTful Web Services	https://www.scopus.com/record/display.uri?eid=2-s2.0-84984844780&origin=resultslist&sort=plf-f&src=s&sid=d3da343f905bdf4ab2041ef9451e5516&sot=b&sdt=b&s=TITLE-ABS-KEY%28from+requirements+to+source+code+a+model+driven+engineering+approach+for+restful+web+services%29&sl=108&sessionSearchId=d3da343f905bdf4ab2041ef9451e5516&relpos=0	Springer New York LLC	nan; References
87	Behave	Analysing Requirements Communication Using Use Case Specification and User stories	Effective requirements communication is essential in software development projects due to the importance of understanding the requirements throughout the software development cycle. Software requirements can be specified in different formats, for instance using free texts or more structured forms, such as use cases and user stories used in Behavior Driven Development (BDD). We present a comparative analysis on the requirements communication dynamics using use case specification and user stories as the basis for mockups creation. We carried out an exploratory empirical study involving 16 students. The study comprised 3 steps: requirements specification, mockups construction, and inspection to investigate whether the mockups were in accordance with the specifications. Results show that there is no significant difference in using use case specification or user stories to communicate software requirements. Our findings suggest that different specification formats can provide similar results while communicating requirements, nonetheless the human factor should not be neglected.	Behavior Driven Development; Requirements communication; experimental study; requirements specification; use case	Ana Carolina Oran; Elizamary Nascimento; Gleison Santos; Tayana Conte	SBES '17: Proceedings of the XXXI Brazilian Symposium on Software Engineering	https://doi.org/10.1145/3131151.3131166		214-223		Included	Included	new_screen			2	ACM		Analysing Requirements Communication Using Use Case Specification and User Stories	https://dl.acm.org/doi/10.1145/3131151.3131166	Association for Computing Machinery	nan; References; Year; Bibtex
88	Behave	Generating Testing Codes for Behavior-Driven Development from Problem Diagrams: A Tool-Based Approach	Eliciting requirements in their real-world contexts and creating and transforming visual models which can help lead to early designs of software is a challenging and time-consuming step in software engineering processes. In order to support the creation of these models and generate artifacts useful for software designs, we have developed the Problem-to-Design tool (PROD) based on Jackson's Problem Frames approach. The tool has been inspired by the work in the behavior-driven development community, which recommends that testing codes be generated as early as in the requirements engineering phase. The tool provides an open portal where multiple stakeholders can draw their own problem diagrams online, which can be used to generate use case narratives and testing codes for further behavior-driven development.	Codes (symbols); Requirements engineering; Software engineering; behavior-driven development; Development community; Multiple stakeholders; Problem Frames; Problem Frames approach; Problem progression; Software engineering process; Testing codes; Software design; Codes (symbols);  Requirements engineering;  Software engineering;  behavior-driven development;  Development community;  Multiple stakeholders;  Problem Frames;  Problem Frames approach;  Problem progression;  Software engineering process;  Testing codes;  Software design	Gao, Ning; Li, Zhi	Proceedings - 2016 IEEE 24th International Requirements Engineering Conference, RE 2016	https://doi.org/10.1109/RE.2016.54		399 - 400	"""@CONFERENCE{Gao2016399,
    author = ""Gao, Ning and Li, Zhi"",
    title = ""Generating Testing Codes for Behavior-Driven Development from Problem Diagrams: A Tool-Based Approach"",
    year = ""2016"",
    journal = ""Proceedings - 2016 IEEE 24th International Requirements Engineering Conference, RE 2016"",
    pages = ""399 - 400"",
    doi = ""10.1109/RE.2016.54"",
    url = ""https://www.scopus.com/inward/record.uri?eid=2-s2.0-85007170291\&doi=10.1109\%2fRE.2016.54\&partnerID=40\&md5=60b91fda6611567dbeebf5d74548fbe1"",
    affiliations = ""Dept. of Software Engineering, College of Computer Science and Information Technology, No. 15 YuCai Road, Guilin, Guangxi, 541004, China"",
    abstract = ""Eliciting requirements in their real-world contexts and creating and transforming visual models which can help lead to early designs of software is a challenging and time-consuming step in software engineering processes. In order to support the creation of these models and generate artifacts useful for software designs, we have developed the Problem-to-Design tool (PROD) based on Jackson's Problem Frames approach. The tool has been inspired by the work in the behavior-driven development community, which recommends that testing codes be generated as early as in the requirements engineering phase. The tool provides an open portal where multiple stakeholders can draw their own problem diagrams online, which can be used to generate use case narratives and testing codes for further behavior-driven development. (c) 2016 IEEE."",
    author_keywords = ""behavior-driven development; Problem Frames; problem progression"",
    keywords = ""Codes (symbols); Requirements engineering; Software engineering; behavior-driven development; Development community; Multiple stakeholders; Problem Frames; Problem Frames approach; Problem progression; Software engineering process; Testing codes; Software design"",
    correspondence_address = ""Z. Li; Dept. of Software Engineering, College of Computer Science and Information Technology, Guilin, Guangxi, No. 15 YuCai Road, 541004, China; email: zhili@gxnu.edu.cn"",
    publisher = ""Institute of Electrical and Electronics Engineers Inc."",
    isbn = ""978-150904121-3"",
    language = ""English"",
    abbrev_source_title = ""Proc. - IEEE Int. Requir. Eng. Conf., RE"",
    type = ""Conference paper"",
    publication_stage = ""Final"",
    source = ""Scopus"",
    note = ""Cited by: 3; Conference name: 24th IEEE International Requirements Engineering Conference, RE 2016; Conference date: 12 September 2016 through 16 September 2016; Conference code: 125191""
}
"""	Included	Included	new_screen			2	Scopus Signed In		Generating Testing Codes for Behavior-Driven Development from Problem Diagrams: A Tool-Based Approach	https://www.scopus.com/record/display.uri?eid=2-s2.0-85007170291&origin=resultslist&sort=plf-f&src=s&sid=38fa4d68f434cab6feb96bef53650e5d&sot=b&sdt=b&s=TITLE-ABS-KEY%28generating+testing+codes+for+behavior+driven+development+from+problem+diagrams+a+tool+based+approach%29&sl=115&sessionSearchId=38fa4d68f434cab6feb96bef53650e5d&relpos=0	Institute of Electrical and Electronics Engineers Inc	nan; References
89	Behave	Behavior-driven Development for Real-time Embedded Systems	Embedded systems are a class of computer systems that are typically characterized by a tight interaction with the physical environment. Various methodologies have been adopted for the development of such systems, ranging from traditional waterfall to modern agile techniques. One of the agile techniques that has recently attracted increasing attention is Behavior-Driven Development (BDD). BDD promotes the engagement of all stakeholders in every development iteration to minimize the misunderstanding between technical and non-technical stakeholders and, consequently, to speed up the development process and lower the costs. In this paper, we investigate the application of BDD to the development of embedded systems, especially focusing on the testing of timing requirements for real-time embedded software. In particular, we extend BDD with time-related concepts and propose an approach to generate test code for the verification of timing behavior of real-time embedded systems. Our approach offers more automation for the development of test code compared to existing BDD tools, thus minimizing the risk of timing faults and reducing development costs and time-to-market.		Nezhad, Amir Soltani; Lukkien, Johan J.; Mak, Rudolf. H.	2018 IEEE 23RD INTERNATIONAL CONFERENCE ON EMERGING TECHNOLOGIES AND FACTORY AUTOMATION (ETFA)	https://www.webofscience.com/wos/woscc/full-record/WOS:000449334500006		59-66	"""@inproceedings{WOS:000449334500006,
    Author = ""Nezhad, Amir Soltani and Lukkien, Johan J. and Mak, Rudolf. H."",
    Book-Group-Author = ""IEEE"",
    Title = ""Behavior-driven Development for Real-time Embedded Systems"",
    Booktitle = ""2018 IEEE 23RD INTERNATIONAL CONFERENCE ON EMERGING TECHNOLOGIES AND FACTORY AUTOMATION (ETFA)"",
    Series = ""IEEE International Conference on Emerging Technologies and Factory Automation-ETFA"",
    Year = ""2018"",
    Pages = ""59-66"",
    Note = ""23rd IEEE International Conference on Emerging Technologies and Factory Automation (ETFA), Politecnico Torino, Torino, ITALY, SEP 04-07, 2018"",
    Organization = ""Inst Elect \\& Elect Engineers; Inst Elect \\& Elect Engineers Ind Elect Soc; Natl Res Council Italy, Inst Elect Comp \\& Telecommunicat Engn"",
    Abstract = ""Embedded systems are a class of computer systems that are typically characterized by a tight interaction with the physical environment. Various methodologies have been adopted for the development of such systems, ranging from traditional waterfall to modern agile techniques. One of the agile techniques that has recently attracted increasing attention is Behavior-Driven Development (BDD). BDD promotes the engagement of all stakeholders in every development iteration to minimize the misunderstanding between technical and non-technical stakeholders and, consequently, to speed up the development process and lower the costs. In this paper, we investigate the application of BDD to the development of embedded systems, especially focusing on the testing of timing requirements for real-time embedded software. In particular, we extend BDD with time-related concepts and propose an approach to generate test code for the verification of timing behavior of real-time embedded systems. Our approach offers more automation for the development of test code compared to existing BDD tools, thus minimizing the risk of timing faults and reducing development costs and time-to-market."",
    Publisher = ""IEEE"",
    Address = ""345 E 47TH ST, NEW YORK, NY 10017 USA"",
    Type = ""Proceedings Paper"",
    Language = ""English"",
    Affiliation = ""Nezhad, AS (Corresponding Author), Eindhoven Univ Technol, Sch Math \\& Comp Sci, Eindhoven, Netherlands. Nezhad, Amir Soltani; Lukkien, Johan J.; Mak, Rudolf. H., Eindhoven Univ Technol, Sch Math \\& Comp Sci, Eindhoven, Netherlands."",
    ISSN = ""1946-0740"",
    ISBN = ""978-1-5386-7108-5"",
    Keywords-Plus = ""EFFICIENT DETECTION; TIMING CONSTRAINTS"",
    Research-Areas = ""Automation \\& Control Systems"",
    Web-of-Science-Categories = ""Automation \\& Control Systems"",
    Author-Email = ""a.soltaninezhad@tue.nl"",
    Affiliations = ""Eindhoven University of Technology"",
    Number-of-Cited-References = ""17"",
    Times-Cited = ""2"",
    Usage-Count-Last-180-days = ""0"",
    Usage-Count-Since-2013 = ""0"",
    Doc-Delivery-Number = ""BL2UC"",
    Web-of-Science-Index = ""Conference Proceedings Citation Index - Science (CPCI-S)"",
    Unique-ID = ""WOS:000449334500006"",
    DA = ""2024-10-22""
}
"""	Included	Included	new_screen			2	Web of Science		Behavior-driven Development for Real-time Embedded Systems	https://www.webofscience.com/wos/woscc/full-record/WOS:000449334500006	IEEE	nan; Keywords; References
90	Behave	Benchmark driven framework for development of emotion sensing support systems	Emotion sensing support system to assist human decision making during interview scenario is a developing research field. This paper presents a new framework for the development of emotion sensing support systems that is a complete, easily extendible, flexible, and configurable environment with intensive benchmark capabilities. The design of the framework was inspired by behavior-driven development, agile software development technique. It provides: 1) effective collaboration platform between technological and psychological researches, and 2) intensive benchmarking capabilities to test the performance of the entire system as well as individual algorithms.	Information science; Software engineering; affect; Agile software development; behavior-driven development; Collaboration platforms; Emotion detection; Entire system; Human decision making; Psychological research; Research fields; Sensor fusion; Support systems; Benchmarking; Information science;  Software engineering;  affect;  Agile software development;  behavior-driven development;  Collaboration platforms;  Emotion detection;  Entire system;  Human decision making;  Psychological research;  Research fields;  Sensor fusion;  Support systems;  Benchmarking	Polikovsky, Senya; Quiros-Ramirez, Maria Alejandra; Kameda, Yoshinori; Ohta, Yuichi; Burgoon, Judee	Proceedings - 2012 European Intelligence and Security Informatics Conference, EISIC 2012	https://doi.org/10.1109/EISIC.2012.27		353 - 355	"""@CONFERENCE{Polikovsky2012353,
    author = ""Polikovsky, Senya and Quiros-Ramirez, Maria Alejandra and Kameda, Yoshinori and Ohta, Yuichi and Burgoon, Judee"",
    title = ""Benchmark driven framework for development of emotion sensing support systems"",
    year = ""2012"",
    journal = ""Proceedings - 2012 European Intelligence and Security Informatics Conference, EISIC 2012"",
    pages = ""353 - 355"",
    doi = ""10.1109/EISIC.2012.27"",
    url = ""https://www.scopus.com/inward/record.uri?eid=2-s2.0-84868521452\&doi=10.1109\%2fEISIC.2012.27\&partnerID=40\&md5=0a38b46344f884118c54a8583c41e21e"",
    affiliations = ""Department of Intelligent Interaction Technologies, University of Tsukuba, Japan; Eller College of Management, University of Arizona, United States"",
    abstract = ""Emotion sensing support system to assist human decision making during interview scenario is a developing research field. This paper presents a new framework for the development of emotion sensing support systems that is a complete, easily extendible, flexible, and configurable environment with intensive benchmark capabilities. The design of the framework was inspired by behavior-driven development, agile software development technique. It provides: 1) effective collaboration platform between technological and psychological researches, and 2) intensive benchmarking capabilities to test the performance of the entire system as well as individual algorithms. (c) 2012 IEEE."",
    author_keywords = ""affect; behavior-driven development; emotion detection; sensor fusion"",
    keywords = ""Information science; Software engineering; affect; Agile software development; behavior-driven development; Collaboration platforms; Emotion detection; Entire system; Human decision making; Psychological research; Research fields; Sensor fusion; Support systems; Benchmarking"",
    correspondence_address = ""S. Polikovsky; Department of Intelligent Interaction Technologies, University of Tsukuba, Japan; email: senya@image.iit.tsukuba.ac.jp"",
    language = ""English"",
    abbrev_source_title = ""Proc. - Eur. Intell. Secur. Informatics Conf., EISIC"",
    type = ""Conference paper"",
    publication_stage = ""Final"",
    source = ""Scopus"",
    note = ""Cited by: 0; Conference name: 2012 European Intelligence and Security Informatics Conference, EISIC 2012; Conference date: 22 August 2012 through 24 August 2012; Conference code: 93470""
}
"""	Excluded	Excluded	new_screen			2	Scopus Signed In		Benchmark Driven Framework for Development of Emotion Sensing Support Systems	https://www.scopus.com/record/display.uri?eid=2-s2.0-84868521452&origin=resultslist&sort=plf-f&src=s&sid=677d7d29867a4efb48ad7e3c3280d1e6&sot=b&sdt=b&s=TITLE-ABS-KEY%28benchmark+driven+framework+for+development+of+emotion+sensing+support+systems%29&sl=92&sessionSearchId=677d7d29867a4efb48ad7e3c3280d1e6&relpos=0		nan; References; Publisher
91	Behave	Benchmark driven framework for development of emotion sensing support systems	Emotion sensing support system to assist human decision making during interview scenario is a developing research field. This paper presents a new framework for the development of emotion sensing support systems that is a complete, easily extendible, flexible, and configurable environment with intensive benchmark capabilities. The design of the framework was inspired by behavior-driven development, agile software development technique. It provides: 1) effective collaboration platform between technological and psychological researches, and 2) intensive benchmarking capabilities to test the performance of the entire system as well as individual algorithms.	Information science; Software engineering; affect; Agile software development; behavior-driven development; Collaboration platforms; Emotion detection; Entire system; Human decision making; Psychological research; Research fields; Sensor fusion; Support systems; Benchmarking; Information science;  Software engineering;  affect;  Agile software development;  behavior-driven development;  Collaboration platforms;  Emotion detection;  Entire system;  Human decision making;  Psychological research;  Research fields;  Sensor fusion;  Support systems;  Benchmarking	Polikovsky, Senya; Quiros-Ramirez, Maria Alejandra; Kameda, Yoshinori; Ohta, Yuichi; Burgoon, Judee	Proceedings - 2012 European Intelligence and Security Informatics Conference, EISIC 2012	https://doi.org/10.1109/EISIC.2012.27		353 - 355	"""@CONFERENCE{Polikovsky2012353,
    author = ""Polikovsky, Senya and Quiros-Ramirez, Maria Alejandra and Kameda, Yoshinori and Ohta, Yuichi and Burgoon, Judee"",
    title = ""Benchmark driven framework for development of emotion sensing support systems"",
    year = ""2012"",
    journal = ""Proceedings - 2012 European Intelligence and Security Informatics Conference, EISIC 2012"",
    pages = ""353 - 355"",
    doi = ""10.1109/EISIC.2012.27"",
    url = ""https://www.scopus.com/inward/record.uri?eid=2-s2.0-84868521452\&doi=10.1109\%2fEISIC.2012.27\&partnerID=40\&md5=0a38b46344f884118c54a8583c41e21e"",
    affiliations = ""Department of Intelligent Interaction Technologies, University of Tsukuba, Japan; Eller College of Management, University of Arizona, United States"",
    abstract = ""Emotion sensing support system to assist human decision making during interview scenario is a developing research field. This paper presents a new framework for the development of emotion sensing support systems that is a complete, easily extendible, flexible, and configurable environment with intensive benchmark capabilities. The design of the framework was inspired by behavior-driven development, agile software development technique. It provides: 1) effective collaboration platform between technological and psychological researches, and 2) intensive benchmarking capabilities to test the performance of the entire system as well as individual algorithms. (c) 2012 IEEE."",
    author_keywords = ""affect; behavior-driven development; emotion detection; sensor fusion"",
    keywords = ""Information science; Software engineering; affect; Agile software development; behavior-driven development; Collaboration platforms; Emotion detection; Entire system; Human decision making; Psychological research; Research fields; Sensor fusion; Support systems; Benchmarking"",
    correspondence_address = ""S. Polikovsky; Department of Intelligent Interaction Technologies, University of Tsukuba, Japan; email: senya@image.iit.tsukuba.ac.jp"",
    language = ""English"",
    abbrev_source_title = ""Proc. - Eur. Intell. Secur. Informatics Conf., EISIC"",
    type = ""Conference paper"",
    publication_stage = ""Final"",
    source = ""Scopus"",
    note = ""Cited by: 0; Conference name: 2012 European Intelligence and Security Informatics Conference, EISIC 2012; Conference date: 22 August 2012 through 24 August 2012; Conference code: 93470""
}
"""	Excluded	Excluded	new_screen			2	Scopus Signed In		Benchmark Driven Framework for Development of Emotion Sensing Support Systems	https://www.scopus.com/record/display.uri?eid=2-s2.0-84868521452&origin=resultslist&sort=plf-f&src=s&sid=677d7d29867a4efb48ad7e3c3280d1e6&sot=b&sdt=b&s=TITLE-ABS-KEY%28benchmark+driven+framework+for+development+of+emotion+sensing+support+systems%29&sl=92&sessionSearchId=677d7d29867a4efb48ad7e3c3280d1e6&relpos=0		nan; References; Publisher
92	Behave	Beyond Page Objects: Testing Web Applications with State Objects:Use states to drive your tests	End-to-end testing of Web applications typically involves tricky interactions with Web pages by means of a framework such as Selenium WebDriver. The recommended method for hiding such Web-page intricacies is to use page objects, but there are questions to answer first: Which page objects should you create when testing Web applications? What actions should you include in a page object? Which test scenarios should you specify, given your page objects?		Arie van Deursen	Queue	https://doi.org/10.1145/2791301.2793039		20-37		Excluded	Excluded	new_screen			2	ACM		Beyond Page Objects: Testing Web Applications with State Objects: Use States to Drive Your Tests	https://dl.acm.org/doi/10.1145/2791301.2793039	Association for Computing Machinery	nan; Keywords; References; Year; Bibtex
93	Behave	Ensuring the Consistency Between User Requirements and Graphical User Interfaces: A Behavior-Based Automated Approach	Ensuring the consistency between Graphical User Interfaces (GUIs) and user requirements is a critical aspect of the design process since it is through the GUIs that users perceive the system and experience the available features in order to achieve their goals. This paper presents an approach based on Behavior-Driven Development (BDD) which employs an ontology in order to provide automated assessment for web GUIs. The approach has been evaluated by exploiting user requirements described by a group of experts in the flight tickets e-commerce domain. Such requirements gave rise to a set of User Stories that have been used to automatically assess the GUIs of an existing web system for booking business trips. The results have shown our approach was able to identify different types of inconsistencies in the set of GUIs analyzed, allowing to build an effective correspondence between user requirements and their representation on the GUI.	Behavior-Driven Development (BDD); User Stories; Graphical User Interfaces; User Requirements Assessment	Thiago Rocha Silva; Marco Winckler; Hallvard Traetteberg	International Conference on Computational Science and Its Applications	https://doi.org/10.1007/978-3-030-24289-3_46		616-632		Included	Included	new_screen			2	Springer Link		Ensuring the Consistency Between User Requirements and Graphical User Interfaces: A Behavior-Based Automated Approach	https://link.springer.com/chapter/10.1007/978-3-030-24289-3_46	Springer, Cham	nan; References; Year; Bibtex
94	Behave	A practical method for API testing in the context of continuous delivery and behavior driven development	Enterprises are increasingly adopting an API-first approach to connect and expose software services. Saxo Bank is no exception to this.Crafting test suites for such APIs can seem straight forward due to the headless nature, but our experience shows that test suites often have two problems. The first problem is that execution of tests tends to fail and pass in seemingly nondeterministic ways (tests are flaky). The second problem is that functional coverage is not clearly documented.We have found that both problems stem from a lack of explicit focus on initial context (IC), a concept from behavior driven development. When a test is flaky it is often because actual IC in the test environment is not as required by the test. When functional coverage is not clear, it is most often because a systematic analysis involving IC was not performed.We propose a method for test analysis in which we include IC in the input space when analyzing functional coverage for an API, thereby including anything which can influence the outcome of test cases.Establishing IC is in general a hard problem. We have found that focus on the bounded context, a concept from domain driven design, of the system under test is a practical way to establish relevant IC.Experience with Saxo Bank's Open API shows that this method allows testers and developers to cooperate continuously, producing test plan documents which include the reasoning behind functional coverage. Explicit focus on IC in automated test case implementations turns flaky tests into tests which report on required IC in a test environment. The method easily generalizes to all levels of API tests.	Integrated circuits; Testing; Verification; Automated test; Domain-driven designs; Functional coverage; Practical method; Software services; System under test; Systematic analysis; Test Environment; Software testing; Integrated circuits;  Testing;  Verification;  Automated test;  Domain-driven designs;  Functional coverage;  Practical method;  Software services;  System under test;  Systematic analysis;  Test Environment;  Software testing	Bennett, Brian Elgaard	Proceedings - 2021 IEEE 14th International Conference on Software Testing, Verification and Validation Workshops, ICSTW 2021	https://doi.org/10.1109/ICSTW52544.2021.00020		44 - 47	"""@CONFERENCE{Bennett202144,
    author = ""Bennett, Brian Elgaard"",
    title = ""A practical method for API testing in the context of continuous delivery and behavior driven development"",
    year = ""2021"",
    journal = ""Proceedings - 2021 IEEE 14th International Conference on Software Testing, Verification and Validation Workshops, ICSTW 2021"",
    pages = ""44 - 47"",
    doi = ""10.1109/ICSTW52544.2021.00020"",
    url = ""https://www.scopus.com/inward/record.uri?eid=2-s2.0-85108022218\&doi=10.1109\%2fICSTW52544.2021.00020\&partnerID=40\&md5=9398710261263e5ca74b55f2bfb9e216"",
    affiliations = ""OpenAPI Product Team, Saxo Bank A/S, Hellerup, Denmark"",
    abstract = ""Enterprises are increasingly adopting an API-first approach to connect and expose software services. Saxo Bank is no exception to this.Crafting test suites for such APIs can seem straight forward due to the headless nature, but our experience shows that test suites often have two problems. The first problem is that execution of tests tends to fail and pass in seemingly nondeterministic ways (tests are flaky). The second problem is that functional coverage is not clearly documented.We have found that both problems stem from a lack of explicit focus on initial context (IC), a concept from behavior driven development. When a test is flaky it is often because actual IC in the test environment is not as required by the test. When functional coverage is not clear, it is most often because a systematic analysis involving IC was not performed.We propose a method for test analysis in which we include IC in the input space when analyzing functional coverage for an API, thereby including anything which can influence the outcome of test cases.Establishing IC is in general a hard problem. We have found that focus on the bounded context, a concept from domain driven design, of the system under test is a practical way to establish relevant IC.Experience with Saxo Bank's Open API shows that this method allows testers and developers to cooperate continuously, producing test plan documents which include the reasoning behind functional coverage. Explicit focus on IC in automated test case implementations turns flaky tests into tests which report on required IC in a test environment. The method easily generalizes to all levels of API tests. (c) 2021 IEEE."",
    author_keywords = ""API Testing; Application; Behavior Driven Development; Combinatorial Testing; Continuous Delivery; Domain Driven Design; Industry"",
    keywords = ""Integrated circuits; Testing; Verification; Automated test; Domain-driven designs; Functional coverage; Practical method; Software services; System under test; Systematic analysis; Test Environment; Software testing"",
    correspondence_address = ""B.E. Bennett; OpenAPI Product Team, Saxo Bank A/S, Hellerup, Denmark; email: bb@saxobank.com"",
    publisher = ""Institute of Electrical and Electronics Engineers Inc."",
    isbn = ""978-166544456-9"",
    language = ""English"",
    abbrev_source_title = ""Proc. - IEEE Int. Conf. Softw. Test., Verif. Valid. Workshops, ICSTW"",
    type = ""Conference paper"",
    publication_stage = ""Final"",
    source = ""Scopus"",
    note = ""Cited by: 3; Conference name: 14th IEEE International Conference on Software Testing, Verification and Validation Workshops, ICSTW 2021; Conference date: 12 April 2021 through 16 April 2021; Conference code: 169220""
}
"""	Excluded	Excluded	new_screen			2	Scopus Signed In		A Practical Method for API Testing in the Context of Continuous Delivery and Behavior Driven Development	https://www.scopus.com/record/display.uri?eid=2-s2.0-85108022218&origin=resultslist&sort=plf-f&src=s&sid=e7863b3e7004a101942fff140468ecac&sot=b&sdt=b&s=TITLE-ABS-KEY%28a+practical+method+for+api+testing+in+the+context+of+continuous+delivery+and+behavior+driven+development%29&sl=119&sessionSearchId=e7863b3e7004a101942fff140468ecac&relpos=0	Institute of Electrical and Electronics Engineers Inc	nan; References
95	Behave	Ensuring the Consistency between User Requirements and Task Models: A Behavior-Based Automated Approach	Evaluating and ensuring the consistency between user requirements and modeling artifacts is a long-time issue for model-based software design. Conflicts in requirements specifications can lead to many design errors and have a decisive impact on the quality of systems under development. This article presents an approach based on Behavior-Driven Development (BDD) to provide automated assessment for task models, which are intended to model the flow of user and system tasks in an interactive system. The approach has been evaluated by exploiting user requirements described by a group of experts in the domain of business trips. Such requirements gave rise to a set of BDD stories that have been used to automatically assess scenarios extracted from task models that were reengineered from an existing web system for booking business trips. The results have shown our approach, by performing a static analysis of the source files, was able to identify different types of inconsistencies between the user requirements and the set of task models analyzed.	user stories;  task models;  behavior-driven development (BDD);  automated requirements assessment; user stories, task models, behavior-driven development (BDD), automated requirements assessment	Rocha Silva, Thiago; Winckler, Marco; Tr\ae{}tteberg, Hallvard	Proc. ACM Hum.-Comput. Interact.	https://doi.org/10.1145/3394979			"""@article{10.1145/3394979,
    author = ""Rocha Silva, Thiago and Winckler, Marco and Tr\ae{}tteberg, Hallvard"",
    title = ""Ensuring the Consistency between User Requirements and Task Models: A Behavior-Based Automated Approach"",
    year = ""2020"",
    issue_date = ""June 2020"",
    publisher = ""Association for Computing Machinery"",
    address = ""New York, NY, USA"",
    volume = ""4"",
    number = ""EICS"",
    url = ""https://doi.org/10.1145/3394979"",
    doi = ""10.1145/3394979"",
    abstract = ""Evaluating and ensuring the consistency between user requirements and modeling artifacts is a long-time issue for model-based software design. Conflicts in requirements specifications can lead to many design errors and have a decisive impact on the quality of systems under development. This article presents an approach based on Behavior-Driven Development (BDD) to provide automated assessment for task models, which are intended to model the flow of user and system tasks in an interactive system. The approach has been evaluated by exploiting user requirements described by a group of experts in the domain of business trips. Such requirements gave rise to a set of BDD stories that have been used to automatically assess scenarios extracted from task models that were reengineered from an existing web system for booking business trips. The results have shown our approach, by performing a static analysis of the source files, was able to identify different types of inconsistencies between the user requirements and the set of task models analyzed."",
    journal = ""Proc. ACM Hum.-Comput. Interact."",
    month = ""June"",
    articleno = ""77"",
    numpages = ""32"",
    keywords = ""user stories, task models, behavior-driven development (BDD), automated requirements assessment""
}
"""	Included	Included	new_screen			2	ACM		Ensuring the Consistency between User Requirements and Task Models: A Behavior-Based Automated Approach	https://dl.acm.org/doi/10.1145/3394979	Association for Computing Machinery	nan; References; Pages
96	Behave	Ensuring the Consistency between User Requirements and Task Models: A Behavior-Based Automated Approach	Evaluating and ensuring the consistency between user requirements and modeling artifacts is a long-time issue for model-based software design. Conflicts in requirements specifications can lead to many design errors and have a decisive impact on the quality of systems under development. This article presents an approach based on Behavior-Driven Development (BDD) to provide automated assessment for task models, which are intended to model the flow of user and system tasks in an interactive system. The approach has been evaluated by exploiting user requirements described by a group of experts in the domain of business trips. Such requirements gave rise to a set of BDD stories that have been used to automatically assess scenarios extracted from task models that were reengineered from an existing web system for booking business trips. The results have shown our approach, by performing a static analysis of the source files, was able to identify different types of inconsistencies between the user requirements and the set of task models analyzed.	user stories;  task models;  behavior-driven development (BDD);  automated requirements assessment; user stories, task models, behavior-driven development (BDD), automated requirements assessment	Rocha Silva, Thiago; Winckler, Marco; Tr\ae{}tteberg, Hallvard	Proc. ACM Hum.-Comput. Interact.	https://doi.org/10.1145/3394979			"""@article{10.1145/3394979,
    author = ""Rocha Silva, Thiago and Winckler, Marco and Tr\ae{}tteberg, Hallvard"",
    title = ""Ensuring the Consistency between User Requirements and Task Models: A Behavior-Based Automated Approach"",
    year = ""2020"",
    issue_date = ""June 2020"",
    publisher = ""Association for Computing Machinery"",
    address = ""New York, NY, USA"",
    volume = ""4"",
    number = ""EICS"",
    url = ""https://doi.org/10.1145/3394979"",
    doi = ""10.1145/3394979"",
    abstract = ""Evaluating and ensuring the consistency between user requirements and modeling artifacts is a long-time issue for model-based software design. Conflicts in requirements specifications can lead to many design errors and have a decisive impact on the quality of systems under development. This article presents an approach based on Behavior-Driven Development (BDD) to provide automated assessment for task models, which are intended to model the flow of user and system tasks in an interactive system. The approach has been evaluated by exploiting user requirements described by a group of experts in the domain of business trips. Such requirements gave rise to a set of BDD stories that have been used to automatically assess scenarios extracted from task models that were reengineered from an existing web system for booking business trips. The results have shown our approach, by performing a static analysis of the source files, was able to identify different types of inconsistencies between the user requirements and the set of task models analyzed."",
    journal = ""Proc. ACM Hum.-Comput. Interact."",
    month = ""June"",
    articleno = ""77"",
    numpages = ""32"",
    keywords = ""user stories, task models, behavior-driven development (BDD), automated requirements assessment""
}
"""	Included	Included	new_screen			2	ACM		Ensuring the Consistency between User Requirements and Task Models: A Behavior-Based Automated Approach	https://dl.acm.org/doi/10.1145/3394979	Association for Computing Machinery	nan; References; Pages
97	Behave	A study of value in agile software development organizations	The Agile manifesto focuses on the delivery of valuable software. In Lean, the principles emphasise value, where every activity that does not add value is seen as waste. Despite the strong focus on value, and that the primary critical success factor for software intensive product development lies in the value domain, no empirical study has investigated specifically what value is. This paper presents an empirical study that investigates how value is interpreted and prioritised, and how value is assured and measured. Data was collected through semi-structured interviews with 23 participants from 14 agile software development organisations. The contribution of this study is fourfold. First, it examines how value is perceived amongst agile software development organisations. Second, it compares the perceptions and priorities of the perceived values by domains and roles. Third, it includes an examination of what practices are used to achieve value in industry, and what hinders the achievement of value. Fourth, it characterises what measurements are used to assure, and evaluate value-creation activities.	Value; Agile software development; Empirical; Value;  Agile software development;  Empirical	Alahyari, Hiva; Svensson, Richard Berntsson; Gorschek, Tony	JOURNAL OF SYSTEMS AND SOFTWARE	https://doi.org/10.1016/j.jss.2016.12.007		271-288	"""@article{WOS:000395359500017,
    Author = ""Alahyari, Hiva and Svensson, Richard Berntsson and Gorschek, Tony"",
    Title = ""A study of value in agile software development organizations"",
    Journal = ""JOURNAL OF SYSTEMS AND SOFTWARE"",
    Year = ""2017"",
    Volume = ""125"",
    Pages = ""271-288"",
    Month = ""MAR"",
    Abstract = ""The Agile manifesto focuses on the delivery of valuable software. In Lean, the principles emphasise value, where every activity that does not add value is seen as waste. Despite the strong focus on value, and that the primary critical success factor for software intensive product development lies in the value domain, no empirical study has investigated specifically what value is. This paper presents an empirical study that investigates how value is interpreted and prioritised, and how value is assured and measured. Data was collected through semi-structured interviews with 23 participants from 14 agile software development organisations. The contribution of this study is fourfold. First, it examines how value is perceived amongst agile software development organisations. Second, it compares the perceptions and priorities of the perceived values by domains and roles. Third, it includes an examination of what practices are used to achieve value in industry, and what hinders the achievement of value. Fourth, it characterises what measurements are used to assure, and evaluate value-creation activities. (C) 2016 Elsevier Inc. All rights reserved."",
    Publisher = ""ELSEVIER SCIENCE INC"",
    Address = ""STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA"",
    Type = ""Article"",
    Language = ""English"",
    Affiliation = ""Svensson, RB (Corresponding Author), Blekinge Inst Technol, Dept Software Engn, Karlskrona, Sweden. Alahyari, Hiva, Chalmers Univ Gothenburg, Dept Comp Sci \\& Engn, Gothenburg, Sweden. Svensson, Richard Berntsson; Gorschek, Tony, Blekinge Inst Technol, Dept Software Engn, Karlskrona, Sweden."",
    DOI = ""10.1016/j.jss.2016.12.007"",
    ISSN = ""0164-1212"",
    EISSN = ""1873-1228"",
    Keywords = ""Value; Agile software development; Empirical"",
    Keywords-Plus = ""QUALITY; DRIVEN"",
    Research-Areas = ""Computer Science"",
    Web-of-Science-Categories = ""Computer Science, Software Engineering; Computer Science, Theory \\& Methods"",
    Author-Email = ""hiva@chalmers.se richard.berntsson.svensson@bth.se tony.gorschek@bth.se"",
    Affiliations = ""Chalmers University of Technology; Blekinge Institute Technology"",
    ResearcherID-Numbers = ""Gorschek, Tony/E-3445-2013"",
    Number-of-Cited-References = ""64"",
    Times-Cited = ""52"",
    Usage-Count-Last-180-days = ""4"",
    Usage-Count-Since-2013 = ""65"",
    Journal-ISO = ""J. Syst. Softw."",
    Doc-Delivery-Number = ""EM5NX"",
    Web-of-Science-Index = ""Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)"",
    Unique-ID = ""WOS:000395359500017"",
    DA = ""2024-10-22""
}
"""	Excluded	Excluded	new_screen			2	Web of Science		A Study of Value in Agile Software Development Organizations	https://www.webofscience.com/wos/woscc/full-record/WOS:000395359500017	ELSEVIER SCIENCE INC	nan; References
98	Behave	Domain-Specific Scenarios for Refinement-Based Methods	Formal methods use abstraction and rigorously verified refinement to manage the design of complex systems, ensuring that they satisfy important invariant properties. However, formal verification is not sufficient: models must also be tested to ensure that they behave according to the informal requirements and validated by domain experts who may not be expert in formal modelling. This can be satisfied by scenarios that complement the requirements specification. The model can be animated to check that the scenario is feasible in the model and that the model reaches states expected in the scenario. However, there are two problems with this approach. (1) The provided scenarios are at the most concrete level corresponding to the full requirements and cannot be used until all the refinements have been completed in the model. (2) The natural language used to describe the scenarios is often verbose, ambiguous and therefore difficult to understand; especially if the modeller is not a domain expert. In this paper we propose a method of abstracting scenarios from concrete ones so that they can be used to test early refinements of the model. We also show by example how a precise and concise domain specific language can be used for writing these abstract scenarios in a style that can be easily understood by the domain expert (for validation purposes) as well as the modeller (for behavioural verification). We base our approach on the Cucumber framework for scenarios and the Event-B modelling language and tool set. We illustrate the proposed methods on the ERTMS/ETCS Hybrid Level 3 specification for railway controls (The example model and scenario scripts supporting this paper are openly available athttps://doi.org/10.5258/SOTON/D1026).	Event-B; Cucumber; Validation; Domain specific language	Colin Snook; Thai Son Hoang; Dana Dghaym; Michael Butler	International Conference on Model and Data Engineering	https://doi.org/10.1007/978-3-030-32213-7_2		18-31		Excluded	Excluded	new_screen			2	Springer Link		Domain-specific scenarios for refinement-based methods	https://link.springer.com/chapter/10.1007/978-3-030-32213-7_2	Springer, Cham	nan; References; Year; Bibtex
99	Behave	Behaviour-Driven Formal Model Development of the ETCS Hybrid Level 3	Behaviour driven formal model development (BDFMD) enables domain engineers to influence and validate mathematically precise and verified specifications. In previous work we proposed a process where manually authored scenarios are used initially to support the requirements and help the modeller. The same scenarios are used to verify behavioural properties of the model. The model is then mutated to automatically generate scenarios that have a more complete coverage than the manual ones. These automatically generated scenarios are used to animate the model in a final acceptance stage. In this paper, we discuss lessons learned from applying this BDFMD process to a real-life specification: The European Train Control Systems (ETCS) Hybrid Level 3. During the case study, we have developed our understanding of the process, modifying the way we do some stages and developing improved tool support to make the process more efficient. We discuss (1) the need for abstract scenarios during incremental model development and verification, (2) tools and techniques developed to make the running of scenarios more efficient, and (3) improvements to tools that generate new test cases to improve coverage.	Unified modeling language; Object oriented modeling; Tools; Visualization; Mathematical model; Testing; Computational modeling; Model Formulation; Automatic Generation; State Model; Cucumber; Domain Experts; External Events; Test Suite; Implementation Steps; Acceptable Test; Verification And Validation; Use Of Scenarios; Model Checking; Additional Scenarios; Output Of Step; Round Of Experiments; Movement Training; Formal Verification; Scenario Generation; Refinement Strategy; Test Case Generation; Refinement Level; Graphical Elements; Manual Observation; Regression Test; Filtering Effect; Partial Order; Continuous Integration; Environmental Changes; Event-B, UML-B, MoMuT, BDFMD, Scenario, ETCS Hybrid Level 3	Michael Butler; Dana Dghaym; Thai Son Hoang; Tope Omitola; Colin Snook; Andreas Fellner; Rupert Schlick; Thorsten Tarrach; Tomas Fischer; Peter Tummeltshammer	2019 24th International Conference on Engineering of Complex Computer Systems (ICECCS)	https://doi.org/10.1109/ICECCS.2019.00018	"1.Jean-Raymond Abrial, Modeling in Event-B: System and Software Engineering, Cambridge University Press, 2010. CrossRef  Google Scholar; 2.Jean-Raymond Abrial, Michael Butler Stefan Hallerstede, Thai Son Hoang, Farhad Mehta and Laurent Voisin, ""Rodin: An open toolset for modelling and reasoning in Event-B"", Software Tools for Technology Transfer, vol. 12, no. 6, pp. 447-466, November 2010. CrossRef  Google Scholar; 3.RJR Back and Kaisa Sere, ""Stepwise refinement of action systems"", International Conference on Mathematics of Program Construction, pp. 115-138, 1989. CrossRef  Google Scholar; 4.Dana Dghaym Michael Poppleton and Colin Snook, ""Diagram-led formal modelling using iUMLB for Hybrid ERTMS Level 3"" in Abstract State Machines Alloy B TLA VDM and Z: Abz 2018, Springer, vol. 10817, pp. 338-352, May 2018. Google Scholar; 5.Edsger W Dijkstra, ""Guarded commands nondeterminacy and formal derivation of programs"", Communications of the ACM, vol. 18, no. 8, pp. 453-457, 1975. CrossRef  Google Scholar; 6.Principles: Hybrid ERTMS/ETCS Level 3. Ref 16E042 Version 1A., pp. 2018-03, July 2017. Google Scholar; 7.Andreas Fellner Willibald Krenn, Rupert Schlick, Thorsten Tarrach and Georg Weissenbacher, ""Model-based mutation-driven test case generation via heuristic-guided branching search"", Proceedings of the 15th ACM-IEEE International Conference on Formal Methods and Models for System Design, pp. 56-66, 2017. CrossRef  Google Scholar; 8.Tomas Fischer, Cucumber for Event-B and iUML-B, 2018,  [online]  Available: https://github.com/tofisoho/cucumber-cvent-b. Google Scholar; 9.Thai Son Hoang, ""An introduction to the Event-B modelling method"" in Industrial Deployment of System Engineering Methods, Springer-Verlag, pp. 211-236, 2013. Google Scholar; 10.""The hybrid ERTMS/ETCS level 3 case study"" in Abstract State Machines Alloy B TLA VDM and Z, Springer International Publishing, pp. 251-261, 2018. CrossRef  Google Scholar; 11.Willibald Krenn, Rupert Schlick and Bernhard K Aichernig, ""Mapping UML to labeled transition systems for test-case generation"" in Formal Methods for Components and Objects, Springer, pp. 186-207, 2010. CrossRef  Google Scholar; 12.Lukas Ladenberger, Jens Bendisposto and Michael Leuschel, ""Visualising Event-B models with B-Motion Studio"", Proceedings of FMICS 2009, vol. 5825, pp. 202-204, 2009. CrossRef  Google Scholar; 13.Michael Leuschel and Michael Butler, ""ProB: An automated analysis toolset for the B method"", Software Tools for Technology Transfer (STTT), vol. 10, no. 2, pp. 185-203, 2008. CrossRef  Google Scholar; 14.Dan North, ""Introducing BDD"", Better Software Magazine, March 2006. Google Scholar; 15.Mar Yah Said, Michael Butler and Colin Snook, ""A method of refinement in UML-B"", Softw. Syst. Model., vol. 14, no. 4, pp. 1557-1580, October 2015. CrossRef  Google Scholar; 16.Vitaly Savicks, Michael Butler and John Colley, ""Co-simulating Event-B and continuous models via FMI"", Proceedings of the 2014 Summer Simulation Multiconference SummerSim '14, pp. 37:1-37:8, 2014. Google Scholar; 17.J. F. Smart, BDD in Action: Behavior-Driven Development for the Whole Software Life cycle, Manning Publications Company, 2014. Google Scholar; 18.Colin Snook, ""iUML-B statemachines"", Proceedings of the Rodin Workshop 2014, pp. 29-30, 2014. Google Scholar; 19.Colin Snook and Michael Butler, ""UML-B: Formal modeling and design aided by UML"", ACM Trans. Softw. Eng. Methodol., vol. 15, no. 1, pp. 92-122, January 2006. CrossRef  Google Scholar; 20.""Behaviour-driven formal model development"", Formal Methods and Software Engineering - 20th International Conference on Formal Engineering Methods ICFEM 2018 Gold Coast QLD, vol. 11232, pp. 21-36, November 12-16, 2018. CrossRef  Google Scholar; 21.Matt Wynne and Aslak Hellesoy, The Cucumber Book: Behaviour-Driven Development for Testers and Developers, Pragmatic Programmers, LLC, 2012. Google Scholar"			Included	Included	new_screen			2	IEEE		Behaviour-driven formal model development	https://ieeexplore.ieee.org/document/8882769	IEEE	nan; Pages; Year; Bibtex
100	Behave	The Merb Way	Thousands of Ruby and Rails developers are discovering the extraordinary scalability, agility, flexibility, and performance offered by the new Merb MVC framework. The Merb Way is the first comprehensive guide to using, extending, and deploying Merb. Like the bestseller The Rails Way (Addison-Wesley, 2008), this book can either be read cover-to-cover as a tutorial or used for modular coverage that makes it an ideal task reference. Foy Savas systematically covers everything developers need to know to build production-quality Merb applications, offering detailed code examples for jumpstarting virtually any project.  Savas is not only involved in the Merb project as an open source contributor: He uses Merb every day as a professional developer. Drawing on his extensive practical expertise, he delves deeply into the Merb framework's architecture and source code, revealing its elegance and offering powerful best practices for using it. To maximize this book's practical value, he also covers the tools most widely used alongside Merb, including the DataMapper ORM, the RSpec tester (and associated behavior-driven development techniques), and several leading Merb plugins.		Foy Savas	Addison-Wesley Professional Ruby Series	https://books.google.ca/books?id=Vcl8sul1rKEC&dq=The+Merb+Way&lr=&source=gbs_navlinks_s		384	"""nan"""	Excluded	Excluded	new_screen			2	Google Scholar		The Merb Way	https://books.google.ca/books?id=Vcl8sul1rKEC&dq=The+Merb+Way&lr=&source=gbs_navlinks_s	Pearson Education	
101	Behave	"""BDD Assemble!"": A Paper-Based Game Proposal for Behavior Driven Development Design Learning"	"Game-based learning represents a promising alternative to teach computing in higher education. This paper presents ""BDD Assemble!"", a paper-based game proposal for teaching Behavior Driven Development (BDD) competences. For this, the proposed game and the evaluation approach with software engineering students are described. As a result, a simple, interactive and colaborative game was provided, able to teach BDD concepts in a practical, competitive and fun way."	Boolean functions; Software engineering; Behavior Driven Development; Development designs; Educational game; Evaluation approach; Game-based Learning; Higher education; Software engineering students; Serious games; Boolean functions;  Software engineering;  Behavior Driven Development;  Development designs;  Educational game;  Evaluation approach;  Game-based Learning;  Higher education;  Software engineering students;  Serious games	Sarinho, Victor T.	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)	https://doi.org/10.1007/978-3-030-34644-7_41	de Carvalho, R.A., Manhaes, R.S.(2010)Mapping Business Process Modeling Constructs to Behavior Driven Development Ubiquitous Language.Cited 13 times.; Dalpiaz, F., Cooper, K.M.Games for requirements engineers: Analysis and directions(2018)IEEE Software.Cited 4 times.; Hermann, A.C.(2016)BDD Warriors & Other GamesDecember, Accessed 31 May 2019https://pt.slideshare.net/inovacaoDBServer/bdd-warriors-and-other-games; Hindsight: Try Our BDD Gamehttps://www.hindsightsoftware.com/bdd-game; Kudryashov, K.(2015)The beginner's Guide to BDD.Cited 2 times.Dan North Q & Ahttps://inviqa.com/blog/bdd-guide; Lombriser, P., Dalpiaz, F., Lucassen, G., Brinkkemper, S.; Lund, A.M.Measuring usability with the use questionnaire12(2001)Usability Interface, 8 (2), pp. 3-6.Cited 1007 times.; North, D.Introducing(2006)BDD.Cited 2 times.March, Accessed 31 May 2019https://dannorth.net/introducing-bdd/; Rahman, M., Gao, J.; Solis, C., Wang, X.	431 - 435	"""@ARTICLE{Sarinho2019431,
    author = ""Sarinho, Victor T."",
    editor = ""van der Spek E. and S., Gobel and E., Do and E., Clua and J., Baalsrud Hauge"",
    title = """"BDD Assemble!"": A Paper-Based Game Proposal for Behavior Driven Development Design Learning"",
    year = ""2019"",
    journal = ""Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)"",
    volume = ""11863 LNCS"",
    pages = ""431 - 435"",
    doi = ""10.1007/978-3-030-34644-7\_41"",
    url = ""https://www.scopus.com/inward/record.uri?eid=2-s2.0-85076955587\&doi=10.1007\%2f978-3-030-34644-7\_41\&partnerID=40\&md5=bb3285eb5155fe4140cf6abbc54713c9"",
    affiliations = ""Laboratorio de Entretenimento Digital Aplicado (LEnDA), State University of Feira de Santana, Av. Transnordestina, s/n, Novo Horizonte, Feira de Santana, Bahia, Brazil"",
    abstract = ""Game-based learning represents a promising alternative to teach computing in higher education. This paper presents ""BDD Assemble!"", a paper-based game proposal for teaching Behavior Driven Development (BDD) competences. For this, the proposed game and the evaluation approach with software engineering students are described. As a result, a simple, interactive and colaborative game was provided, able to teach BDD concepts in a practical, competitive and fun way. (c) IFIP International Federation for Information Processing, 2019."",
    author_keywords = ""Behavior Driven Development; Educational game; Paper-based game"",
    keywords = ""Boolean functions; Software engineering; Behavior Driven Development; Development designs; Educational game; Evaluation approach; Game-based Learning; Higher education; Software engineering students; Serious games"",
    correspondence_address = ""V.T. Sarinho; Laboratorio de Entretenimento Digital Aplicado (LEnDA), State University of Feira de Santana, Novo Horizonte, Feira de Santana, Av. Transnordestina, s/n, Brazil; email: vsarinho@uefs.br"",
    publisher = ""Springer"",
    issn = ""03029743"",
    isbn = ""978-303034643-0"",
    language = ""English"",
    abbrev_source_title = ""Lect. Notes Comput. Sci."",
    type = ""Conference paper"",
    publication_stage = ""Final"",
    source = ""Scopus"",
    note = ""Cited by: 1; Conference name: 1st IFIP TC 14 Joint International Conference on Entertainment Computing and Serious Games, ICEC-JCSG 2019; Conference date: 11 November 2019 through 15 November 2019; Conference code: 234589""
}
"""	Excluded	Excluded	new_screen			2	Scopus Signed In		“BDD Assemble!”: A Paper-Based Game Proposal for Behavior Driven Development Design Learning	https://doi.org/10.1007/978-3-030-34644-7_41	Springer	nan; Link
102	Behave	JavaScript Testing with Jasmine: JavaScript Behavior-Driven Development	Get a concise introduction to Jasmine, the popular behavior-driven testing framework for JavaScript. This practical guide shows you how to write unit tests with Jasmine that automatically check for bugs in your application. If you have JavaScript experience--with knowledge of some advanced features--you'll learn how to write specifications for individual components, and then use those specs to test the code you write.  Throughout the book, author Evan Hahn focuses primarily on methods for testing browser-based JavaScript applications, but you'll also discover how to use Jasmine with CoffeeScript, Node.js, Ruby on Rails, and Ruby without Rails. You won't find a more in-depth source for Jasmine anywhere.		Front Cover Evan Hahn		https://books.google.ca/books?id=QlbljtaXtg4C&dq=JavaScript+Testing+with+Jasmine:+JavaScript+Behavior-Driven+Development&lr=&source=gbs_navlinks_s		52	"""nan"""	Excluded	Excluded	new_screen			2	Google Scholar		JavaScript Testing with Jasmine: JavaScript Behavior-Driven Development	https://books.google.ca/books?id=QlbljtaXtg4C&dq=JavaScript+Testing+with+Jasmine:+JavaScript+Behavior-Driven+Development&lr=&source=gbs_navlinks_s	O'Reilly Media, Inc.	
103	Behave	A real-life application of multi-agent systems for fault diagnosis in the provision of an Internet business service	Given that telecommunications networks are constantly groing in complexity and heterogeneity, management systems have to ork ith incomplete data, handle uncertain situations and deal ith dynamic environments. In addition, the high competitiveness in the telecommunications market requires cost cutting and customer retention by providing reliable systems. Thus, improving fault diagnosis systems and reducing the mean time to repair ith automatic systems is an important area of research for telecommunications companies. This paper presents a Fault Diagnosis Multi-Agent System (MAS) applied for the management of a business service of Telefonica Czech Republic. The proposed MAS is based on an extended Belief-Desire-Intention (BDI) model that combines heterogeneous reasoning processes, ontology-based reasoning and Bayesian reasoning. This hybrid diagnostic technique is described in detail in the paper. The system has been evaluated ith data collected during one and a half years of system operation on a live network. The main benefits of the system have been a significant reduction in both the average incident solution time and the mean diagnosis time.	Agents; Bayesian networks; Complex networks; Diagnosis; Multi agent systems; Repair; BDI; Belief-desire-intention models; Fault diagnosis systems; Heterogeneous reasoning; Real-life applications; Telecommunications markets; Telecommunications networks; Uncertainty; Information management; Agents;  Bayesian networks;  Complex networks;  Diagnosis;  Multi agent systems;  Repair;  BDI;  Belief-desire-intention models;  Fault diagnosis systems;  Heterogeneous reasoning;  Real-life applications;  Telecommunications markets;  Telecommunications networks;  Uncertainty;  Information management	Carrera, Alvaro; Iglesias, Carlos A.; Garcia-Algarra, Javier; Kolarik, Dusan	Journal of Network and Computer Applications	https://doi.org/10.1016/j.jnca.2012.11.004		146 - 154	"""@ARTICLE{Carrera2014146,
    author = ""Carrera, Alvaro and Iglesias, Carlos A. and Garcia-Algarra, Javier and Kolarik, Dusan"",
    title = ""A real-life application of multi-agent systems for fault diagnosis in the provision of an Internet business service"",
    year = ""2014"",
    journal = ""Journal of Network and Computer Applications"",
    volume = ""37"",
    number = ""1"",
    pages = ""146 - 154"",
    doi = ""10.1016/j.jnca.2012.11.004"",
    url = ""https://www.scopus.com/inward/record.uri?eid=2-s2.0-84890440026\&doi=10.1016\%2fj.jnca.2012.11.004\&partnerID=40\&md5=c02588feadfa1a138164a0a16ccc365c"",
    affiliations = ""Department of Telematic Engineering Systems, Universidad Politecnica de Madrid, ETSI Telecomunicacion, 28040 Madrid, Av. Complutense 30, Spain; Telefonica Investigacion y Desarrollo, 28050 Madrid, Ronda de la Comunicacion s/n, Spain; IP Netork and Services, Telefonica Czech Republic, 130 00 Praha, Olsanska 6, Czech Republic"",
    abstract = ""Given that telecommunications networks are constantly groing in complexity and heterogeneity, management systems have to ork ith incomplete data, handle uncertain situations and deal ith dynamic environments. In addition, the high competitiveness in the telecommunications market requires cost cutting and customer retention by providing reliable systems. Thus, improving fault diagnosis systems and reducing the mean time to repair ith automatic systems is an important area of research for telecommunications companies. This paper presents a Fault Diagnosis Multi-Agent System (MAS) applied for the management of a business service of Telefonica Czech Republic. The proposed MAS is based on an extended Belief-Desire-Intention (BDI) model that combines heterogeneous reasoning processes, ontology-based reasoning and Bayesian reasoning. This hybrid diagnostic technique is described in detail in the paper. The system has been evaluated ith data collected during one and a half years of system operation on a live network. The main benefits of the system have been a significant reduction in both the average incident solution time and the mean diagnosis time. (c) 2012 Elsevier Ltd."",
    author_keywords = ""Agent; Bayesian network; BDI; Diagnosis; Netork management; Uncertainty"",
    keywords = ""Agents; Bayesian networks; Complex networks; Diagnosis; Multi agent systems; Repair; BDI; Belief-desire-intention models; Fault diagnosis systems; Heterogeneous reasoning; Real-life applications; Telecommunications markets; Telecommunications networks; Uncertainty; Information management"",
    correspondence_address = ""A. Carrera; Department of Telematic Engineering Systems, Universidad Politecnica de Madrid, ETSI Telecomunicacion, 28040 Madrid, Av. Complutense 30, Spain; email: a.carrera@dit.upm.es"",
    issn = ""10958592"",
    language = ""English"",
    abbrev_source_title = ""J Network Comput Appl"",
    type = ""Article"",
    publication_stage = ""Final"",
    source = ""Scopus"",
    note = ""Cited by: 19""
}
"""	Excluded	Excluded	new_screen			2	Scopus Signed In		A real-life application of multi-agent systems for fault diagnosis in the provision of an Internet business service	https://www.scopus.com/record/display.uri?eid=2-s2.0-84890440026&origin=resultslist&sort=plf-f&src=s&sid=ca6f7b61ec7d3d0397052adf79993853&sot=b&sdt=b&s=TITLE-ABS-KEY%28a+real+life+application+of+multi+agent+systems+for+fault+diagnosis+in+the+provision+of+an+internet+business+service%29&sl=130&sessionSearchId=ca6f7b61ec7d3d0397052adf79993853&relpos=0		nan; References; Publisher
104	Behave	Behavior-driven development (BDD) Cucumber Katalon for Automation GUI testing case CURA and Swag Labs	Graphical user interface (GUI) is widely used in software applications. About 50% of the application code is for GUI implementation. Because labor costs are high and demands for high-quality software are increasing, automation GUI testing will be a good investment for any software company. We will apply the Behavior-driven development (BDD) method for automation GUI testing with the Cucumber framework on the CURA and Swag Labs web applications. The BDD methodology used is based on the NLP (natural language program) concept. Where the information of semi-automatically produce a step definition and code framework. The scenarios are given on the natural language and then applied to Software Testing. Class diagrams and sequence diagrams are also applied to each represent a code framework automatically. The author uses Katalon Studio software. It was found that the results of the test case automation GUI testing on the CURA website with 210 steps passed, 3 step warnings with average responses times in the test case were 1.92 minutes. The results of the test case automation GUI testing on the Swag Labs web with 87 where 36 steps failed, 4 step warning and 44 step passed with an average responses times in the test case are 2,122 minutes.	Software testing; Automation; Multimedia systems; Natural languages; Software; Graphical user interfaces; Testing; Cucumber; Graphical User Interface; Graphical User Interface Testing; Behavior Driven Development; Response Time; Testing Results; Natural Language; Labor Costs; Web Application; Software Applications; Software Testing; Sequence Diagram; Class Diagram; Software Development; Testing Tools; Test Suite; Implementation Of Testing; Acceptable Test; Manual Testing; Average Response Time; Agile Development; Empirical Software Engineering; Software Testing Automation; GUI Testing; Behavior-driven Development; Cucumber	Rizal Broer Bahaweres; Elda Oktaviani; Luh Kesuma Wardhani; Irman Hermadi; ArifImam Suroso; Indra Permana Solihin; Yandra Arkeman	2020 International Conference on Informatics, Multimedia, Cyber and Information System (ICIMCIS)	https://doi.org/10.1109/ICIMCIS51567.2020.9354325	"1.L. Wang, GUI test automation for Qt application, 2015. Google Scholar; 2.T. D. Hellmann, Automated GUI Testing for Agile Development Environments, 2015. Google Scholar; 3.D. Kumar and K. K. Mishra, ""The Impacts of Test Automation on Software's Cost Quality and Time to Market"", Procedia Comput. Sci., vol. 79, pp. 8-15, 2016. CrossRef  Google Scholar; 4.M. Rahman and J. Gao, ""A reusable automated acceptance testing architecture for microservices in behavior-driven development"", Proc. - 9th IEEE Int. Symp. Serv. Syst. Eng. IEEE SOSE 2015, vol. 30, pp. 321-325, 2015. View Article  Google Scholar; 5.R. M. Sharma, Quantitative Analysis of Automation and Manual Testing, vol. 4, no. 1, pp. 252-257, 2014. Google Scholar; 6.L. Raed and M. Besse, Use BDD To Make Your Software Development Project More Successful, vol. 1, no. 617, pp. 1-9, 2015. Google Scholar; 7.J. Ferguson and D. North, Behavior Driven Development for the whole software lifecycle, 2014. Google Scholar; 8.TDD vs BDD or Why BDD is the New Black, 2016. Google Scholar; 9.M. Soeken, R. Wille and R. Drechsler, ""Assisted behavior driven development using natural language processing"", Lect. Notes Comput. Sci. (including Subser. Lect. Notes Artif. Intell. Lect. Notes Bioinformatics), vol. 7304 LNCS, pp. 269-287, 2012. CrossRef  Google Scholar; 10.S. T. Help, Selenium Vs Katalon Studio: How To Simplify Selenium Tests In Katalon Studio,  [online]  Available: https://www.softwaretestinghelp.com/selenium-vs-katalon-studio/. Google Scholar; 11.M. M. Muhtadi, M. D. Friyadi and A. Rahmani, ""Analisis GUI Testing pada Aplikasi E-Commerce menggunakan Katalon"", Pros. Ind. Res. Work. Natl. Semin., vol. 10, no. 1, pp. 1387-1393, 2019. Google Scholar; 12.H. Herlinda, D. Katarina, E. W. Ambarsari and M. Kom, ""Automation Testing Tool dalam Pengujian Aplikasi Belajar Tajwid pada Platform Android"", STRING (Satuan Tulisan Ris. dan Inov. Teknol., vol. 4, no. 2, pp. 205, 2019. CrossRef  Google Scholar; 13.H. Naik, ""Behavior Driven Development: An Effective Technical Practice to Develop Good Software"", Int. J. Comput. Appl., vol. 149, no. 5, pp. 23-27, 2016. CrossRef  Google Scholar; 14.V. Garousi and E. Yildirim, ""Introducing automated GUI testing and observing its benefits: An industrial case study in the context of law-practice management software"", Proc. - 2018 IEEE 11th Int. Conf. Softw. Testing Verif. Valid. Work. ICSTW 2018, pp. 138-145, July 2018. View Article  Google Scholar; 15.N. Cruz Quental, C. de Albuquerque Siebra, J. Peixoto Quintino, F. Florentin, F. Queda Bueno da Silva and A. L. de Medeiros Santos, Automating GUI Response Time Measurements in Mobile and Web Applications, pp. 35-41, 2019. View Article  Google Scholar; 16.R. B. Bahaweres, K. Zawawi, D. Khairani and N. Hakiem, Software Testing With Genetic Algorithm, pp. 19-21, September 2017. Google Scholar; 17.M. A. Umar and Z. Chen, A Study of Automated Software Testing: Automation Tools and Frameworks, December 2019. Google Scholar; 18.S. Rose, M. Wynne and A. Hellesoy, The Cucumber For Java Book, 2015. Google Scholar"			Included	Included	new_screen			2	IEEE		Behavior-driven development (BDD) Cucumber Katalon for Automation GUI testing case CURA and Swag Labs	https://ieeexplore.ieee.org/document/9354325	IEEE	nan; Pages; Year; Bibtex
105	Behave	Behaviour driven development for hardware design	Hardware verification requires a lot of effort. A recent study showed that on average, there are more verification engineers working on a project than design engineers. Hence, one of the biggest challenges in design and verification today is to find new ways to increase the productivity. For software development the agile methodology as an incremental approach has been proposed and is heavily used. Behavior Driven Development (BDD) as an agile technique additionally enables a direct link to natural language based testing. In this article, we show how BDD can be extended to make it viable for hardware design. In addition, we present a two-fold strategy which allows to specify textual acceptance tests and textual formal properties. Finally, this strategy is complemented by methods to generalize tests to properties, and to enhance design understanding by presenting debug and witness scenarios in natural language.	Acceptance tests; Boolean functions; Hardware; Specifications; Behaviour driven development; Design understanding; Hardware verification; Incremental approach; Property generation; Test driven development; Test generations; Verification engineers; Software design; Acceptance tests;  Boolean functions;  Hardware;  Specifications;  Behaviour driven development;  Design understanding;  Hardware verification;  Incremental approach;  Property generation;  Test driven development;  Test generations;  Verification engineers;  Software design	Diepenbeck, Melanie; Kuhne, Ulrich; Soeken, Mathias; Grosse, Daniel; Drechsler, Rolf	IPSJ Transactions on System LSI Design Methodology	https://doi.org/10.2197/ipsjtsldm.11.29		29 - 45	"""@ARTICLE{Diepenbeck201829,
    author = ""Diepenbeck, Melanie and Kuhne, Ulrich and Soeken, Mathias and Grosse, Daniel and Drechsler, Rolf"",
    title = ""Behaviour driven development for hardware design"",
    year = ""2018"",
    journal = ""IPSJ Transactions on System LSI Design Methodology"",
    volume = ""11"",
    pages = ""29 - 45"",
    doi = ""10.2197/ipsjtsldm.11.29"",
    url = ""https://www.scopus.com/inward/record.uri?eid=2-s2.0-85057097547\&doi=10.2197\%2fipsjtsldm.11.29\&partnerID=40\&md5=6892209c61ea35df3d2c9bbd14431b47"",
    affiliations = ""Group of Computer Architecture, University of Bremen, Germany; LTCI, Telecom ParisTech, Universite Paris-Saclay, Paris, France; Integrated Systems Laboratory, EPFL, Lausanne, Switzerland; CPS, DFKI Bremen, Germany"",
    abstract = ""Hardware verification requires a lot of effort. A recent study showed that on average, there are more verification engineers working on a project than design engineers. Hence, one of the biggest challenges in design and verification today is to find new ways to increase the productivity. For software development the agile methodology as an incremental approach has been proposed and is heavily used. Behavior Driven Development (BDD) as an agile technique additionally enables a direct link to natural language based testing. In this article, we show how BDD can be extended to make it viable for hardware design. In addition, we present a two-fold strategy which allows to specify textual acceptance tests and textual formal properties. Finally, this strategy is complemented by methods to generalize tests to properties, and to enhance design understanding by presenting debug and witness scenarios in natural language. (c) 2018 Information Processing Society of Japan."",
    author_keywords = ""Behaviour driven development; Property generation; Specification; Test driven development; Test generation"",
    keywords = ""Acceptance tests; Boolean functions; Hardware; Specifications; Behaviour driven development; Design understanding; Hardware verification; Incremental approach; Property generation; Test driven development; Test generations; Verification engineers; Software design"",
    publisher = ""Information Processing Society of Japan"",
    issn = ""18826687"",
    language = ""English"",
    abbrev_source_title = ""IPSJ Trans. Syst. LSI Des. Methodol."",
    type = ""Conference paper"",
    publication_stage = ""Final"",
    source = ""Scopus"",
    note = ""Cited by: 1; All Open Access, Gold Open Access""
}
"""	Included	Included	new_screen			2	Scopus Signed In		Behaviour driven development for hardware design	https://www.scopus.com/record/display.uri?eid=2-s2.0-85057097547&origin=resultslist&sort=r-f&src=s&sid=221c8e1b7ac230d227ec27103e4abfdb&sot=b&sdt=b&s=TITLE%28behaviour+driven+development+for+hardware+design%29&sl=55&sessionSearchId=221c8e1b7ac230d227ec27103e4abfdb&relpos=0	Information Processing Society of Japan	nan; References
106	Behave	Using acceptance tests to predict files changed by programming tasks	In a collaborative development context, conflicting code changes might compromise software quality and developers productivity. To reduce conflicts, one could avoid the parallel execution of potentially conflicting tasks. Although hopeful, this strategy is challenging because it relies on the prediction of the required file changes to complete a task. As predicting such file changes is hard, we investigate its feasibility for BDD (Behaviour-Driven Development) projects, which write automated acceptance tests before implementing features. We develop a tool that, for a given task, statically analyzes Cucumber tests and infers test-based interfaces (files that could be executed by the tests), approximating files that would be changed by the task. To assess the accuracy of this approximation, we measure precision and recall of test-based interfaces of 513 tasks from 18 Rails projects on GitHub. We also compare such interfaces with randomly defined interfaces, interfaces obtained by textual similarity of test specifications with past tasks, and interfaces computed by executing tests. Our results give evidence that, in the specific context of BDD, Cucumber tests might help to predict files changed by tasks. We find that the better the test coverage, the better the predictive power. A hybrid approach for computing test-based interfaces is promising.	Collaborative development; Task scheduling; Behaviour-driven development; File change prediction; Collaborative development;  Task scheduling;  Behaviour-driven development;  File change prediction	Rocha, Thais; Borba, Paulo; Santos, Joao Pedro	JOURNAL OF SYSTEMS AND SOFTWARE	https://doi.org/10.1016/j.jss.2019.04.060		176-195	"""@article{WOS:000470943300012,
    Author = ""Rocha, Thais and Borba, Paulo and Santos, Joao Pedro"",
    Title = ""Using acceptance tests to predict files changed by programming tasks"",
    Journal = ""JOURNAL OF SYSTEMS AND SOFTWARE"",
    Year = ""2019"",
    Volume = ""154"",
    Pages = ""176-195"",
    Month = ""AUG"",
    Abstract = ""In a collaborative development context, conflicting code changes might compromise software quality and developers productivity. To reduce conflicts, one could avoid the parallel execution of potentially conflicting tasks. Although hopeful, this strategy is challenging because it relies on the prediction of the required file changes to complete a task. As predicting such file changes is hard, we investigate its feasibility for BDD (Behaviour-Driven Development) projects, which write automated acceptance tests before implementing features. We develop a tool that, for a given task, statically analyzes Cucumber tests and infers test-based interfaces (files that could be executed by the tests), approximating files that would be changed by the task. To assess the accuracy of this approximation, we measure precision and recall of test-based interfaces of 513 tasks from 18 Rails projects on GitHub. We also compare such interfaces with randomly defined interfaces, interfaces obtained by textual similarity of test specifications with past tasks, and interfaces computed by executing tests. Our results give evidence that, in the specific context of BDD, Cucumber tests might help to predict files changed by tasks. We find that the better the test coverage, the better the predictive power. A hybrid approach for computing test-based interfaces is promising. (C) 2019 Elsevier Inc. All rights reserved."",
    Publisher = ""ELSEVIER SCIENCE INC"",
    Address = ""STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA"",
    Type = ""Article"",
    Language = ""English"",
    Affiliation = ""Rocha, T (Corresponding Author), Univ Fed Pernambuco, Informat Ctr, Recife, PE, Brazil. Rocha, Thais; Borba, Paulo; Santos, Joao Pedro, Univ Fed Pernambuco, Informat Ctr, Recife, PE, Brazil."",
    DOI = ""10.1016/j.jss.2019.04.060"",
    ISSN = ""0164-1212"",
    EISSN = ""1873-1228"",
    Keywords = ""Collaborative development; Task scheduling; Behaviour-driven development; File change prediction"",
    Keywords-Plus = ""SOFTWARE; CODE"",
    Research-Areas = ""Computer Science"",
    Web-of-Science-Categories = ""Computer Science, Software Engineering; Computer Science, Theory \\& Methods"",
    Author-Email = ""tabr@cin.ufpe.br phmb@cin.ufpe.br jpms2@cin.ufpe.br"",
    Affiliations = ""Universidade Federal de Pernambuco"",
    ResearcherID-Numbers = ""Borba, Paulo/C-5617-2013"",
    ORCID-Numbers = ""Borba, Paulo/0000-0002-0381-2843"",
    Funding-Acknowledgement = ""INES (National Software Engineering Institute); CNPq {[}309741/2013-0]; FACEPE {[}IBPG-0546-1.03/15, APQ/0388-1.03/14]; CAPES"",
    Funding-Text = ""For partially supporting this work, we would like to thank INES (National Software Engineering Institute) and the Brazilian research funding agencies CNPq (grant 309741/2013-0), FACEPE (grants IBPG-0546-1.03/15 and APQ/0388-1.03/14), and CAPES."",
    Number-of-Cited-References = ""46"",
    Times-Cited = ""10"",
    Usage-Count-Last-180-days = ""0"",
    Usage-Count-Since-2013 = ""5"",
    Journal-ISO = ""J. Syst. Softw."",
    Doc-Delivery-Number = ""IC4NT"",
    Web-of-Science-Index = ""Science Citation Index Expanded (SCI-EXPANDED)"",
    Unique-ID = ""WOS:000470943300012"",
    DA = ""2024-10-22""
}
"""	Included	Included	new_screen			2	Web of Science		Using acceptance tests to predict files changed by programming tasks	https://www.webofscience.com/wos/woscc/full-record/WOS:000470943300012	ELSEVIER SCIENCE INC	nan; References
107	Behave	Ensuring the Consistency Between User Requirements and GUI Prototypes: A Behavior-Based Automated Approach	In a user-centered design process, graphical user interface (GUI) prototypes may be seen as an important early artifact to design and validate user requirements before making strong commitments with a full-fledged version of the user interface. Ensuring the consistency of GUI prototypes with other representations of the user requirements is then a critical aspect of the design process. This paper presents an approach which extends Behavior-Driven Development (BDD) by employing an ontology in order to provide automated assessment for GUI prototypes as design artifacts. The approach has been evaluated by exploiting user requirements described by a group of experts in the flight tickets e-commerce domain. Such requirements gave rise to a set of User Stories that have been used to automatically check the consistency of Balsamiq prototypes which were reengineered from an existing web system for booking business trips. The results have shown our approach was able to identify different types of inconsistencies in the set of analyzed artifacts, allowing to build an effective correspondence between user requirements and their representation in GUI prototypes.	Boolean functions; Graphical user interfaces; Human computer interaction; Software design; Automated assessment; Behavior-Driven Development (BDD); E-commerce domains; Graphical user interfaces (GUI); Gui prototype; User requirements; User stories; User-centered design process; User centered design; Boolean functions;  Graphical user interfaces;  Human computer interaction;  Software design;  Automated assessment;  Behavior-Driven Development (BDD);  E-commerce domains;  Graphical user interfaces (GUI);  Gui prototype;  User requirements;  User stories;  User-centered design process;  User centered design	Rocha Silva, Thiago; Winckler, Marco; Tr{\ae}tteberg, Hallvard	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)	https://doi.org/10.1007/978-3-030-29381-9_39		644--665	"""@InProceedings{10.1007/978-3-030-29381-9_39,
    author = ""Rocha Silva, Thiago and Winckler, Marco and Tr{\ae}tteberg, Hallvard"",
    editor = ""Lamas, David and Loizides, Fernando and Nacke, Lennart and Petrie, Helen and Winckler, Marco and Zaphiris, Panayiotis"",
    title = ""Ensuring the Consistency Between User Requirements and GUI Prototypes: A Behavior-Based Automated Approach"",
    booktitle = ""Human-Computer Interaction -- INTERACT 2019"",
    year = ""2019"",
    publisher = ""Springer International Publishing"",
    address = ""Cham"",
    pages = ""644--665"",
    abstract = ""In a user-centered design process, graphical user interface (GUI) prototypes may be seen as an important early artifact to design and validate user requirements before making strong commitments with a full-fledged version of the user interface. Ensuring the consistency of GUI prototypes with other representations of the user requirements is then a critical aspect of the design process. This paper presents an approach which extends Behavior-Driven Development (BDD) by employing an ontology in order to provide automated assessment for GUI prototypes as design artifacts. The approach has been evaluated by exploiting user requirements described by a group of experts in the flight tickets e-commerce domain. Such requirements gave rise to a set of User Stories that have been used to automatically check the consistency of Balsamiq prototypes which were reengineered from an existing web system for booking business trips. The results have shown our approach was able to identify different types of inconsistencies in the set of analyzed artifacts, allowing to build an effective correspondence between user requirements and their representation in GUI prototypes."",
    isbn = ""978-3-030-29381-9""
}
"""	Included	Included	new_screen			2	Springer Link		Ensuring the Consistency Between User Requirements and GUI Prototypes: A Behavior-Based Automated Approach	https://link.springer.com/chapter/10.1007/978-3-030-29381-9_39	Springer International Publishing	nan; References
108	Behave	Definition of a Behavior-Driven Model for Requirements Specification and Testing of Interactive Systems	In a user-centered development process, artifacts are aimed to evolve in iterative cycles until they meet users' requirements and then become the final product. Every cycle gives the opportunity to revise the design and to introduce new requirements which might affect the specification of artifacts that have been set in former development phases. Testing the consistency of multiple artifacts used to develop interactive systems every time that a new requirement is introduced it is a cumbersome and time consuming activity, especially if it should be done manually. For that we propose an approach based on Behavior-Driven Development (BDD) to support the automated assessment of artifacts along the development process of interactive systems. In order to prevent that test should be written to every type of artifact, we investigate the use of ontologies for specifying the test once and then run it in all artifacts sharing the ontological concepts.	Ontology; Requirements engineering; Software prototyping; Automated assessment; Automated Requirements Checking; Behavior-Driven Development; Development process; Interactive system; Ontological modeling; Requirements specifications; User-centered development; Specifications; Ontology;  Requirements engineering;  Software prototyping;  Automated assessment;  Automated Requirements Checking;  Behavior-Driven Development;  Development process;  Interactive system;  Ontological modeling;  Requirements specifications;  User-centered development;  Specifications	Silva, Thiago Rocha	Proceedings - 2016 IEEE 24th International Requirements Engineering Conference, RE 2016	https://doi.org/10.1109/RE.2016.12		444 - 449	"""@CONFERENCE{Silva2016444,
    author = ""Silva, Thiago Rocha"",
    title = ""Definition of a Behavior-Driven Model for Requirements Specification and Testing of Interactive Systems"",
    year = ""2016"",
    journal = ""Proceedings - 2016 IEEE 24th International Requirements Engineering Conference, RE 2016"",
    pages = ""444 - 449"",
    doi = ""10.1109/RE.2016.12"",
    url = ""https://www.scopus.com/inward/record.uri?eid=2-s2.0-85007236127\&doi=10.1109\%2fRE.2016.12\&partnerID=40\&md5=d3927e222108577ce820f94d2282ce7f"",
    affiliations = ""ICS-IRIT, Universite Paul Sabatier - Toulouse III, Toulouse, France"",
    abstract = ""In a user-centered development process, artifacts are aimed to evolve in iterative cycles until they meet users' requirements and then become the final product. Every cycle gives the opportunity to revise the design and to introduce new requirements which might affect the specification of artifacts that have been set in former development phases. Testing the consistency of multiple artifacts used to develop interactive systems every time that a new requirement is introduced it is a cumbersome and time consuming activity, especially if it should be done manually. For that we propose an approach based on Behavior-Driven Development (BDD) to support the automated assessment of artifacts along the development process of interactive systems. In order to prevent that test should be written to every type of artifact, we investigate the use of ontologies for specifying the test once and then run it in all artifacts sharing the ontological concepts. (c) 2016 IEEE."",
    author_keywords = ""Automated Requirements Checking; Behavior-Driven Development; Multi-Artifact Testing; Ontological Modeling; Prototyping"",
    keywords = ""Ontology; Requirements engineering; Software prototyping; Automated assessment; Automated Requirements Checking; Behavior-Driven Development; Development process; Interactive system; Ontological modeling; Requirements specifications; User-centered development; Specifications"",
    correspondence_address = ""T.R. Silva; ICS-IRIT, Universite Paul Sabatier - Toulouse III, Toulouse, France; email: rocha@irit.fr"",
    publisher = ""Institute of Electrical and Electronics Engineers Inc."",
    isbn = ""978-150904121-3"",
    language = ""English"",
    abbrev_source_title = ""Proc. - IEEE Int. Requir. Eng. Conf., RE"",
    type = ""Conference paper"",
    publication_stage = ""Final"",
    source = ""Scopus"",
    note = ""Cited by: 9; Conference name: 24th IEEE International Requirements Engineering Conference, RE 2016; Conference date: 12 September 2016 through 16 September 2016; Conference code: 125191; All Open Access, Green Open Access""
}
"""	Excluded	Excluded	new_screen			2	Scopus Signed In		Definition of a Behavior-Driven Model for Requirements Specification and Testing of Interactive Systems	https://www.scopus.com/record/display.uri?eid=2-s2.0-85007236127&origin=resultslist&sort=plf-f&src=s&sid=25e0d50dc4ea41c299cd174b495bde06&sot=b&sdt=b&s=TITLE-ABS-KEY%28definition+of+a+behavior+driven+model+for+requirements+specification+and+testing+of+interactive+systems%29&sl=118&sessionSearchId=25e0d50dc4ea41c299cd174b495bde06&relpos=0	Institute of Electrical and Electronics Engineers Inc	nan; References
109	Behave	Testing Prototypes and Final User Interfaces Through an Ontological Perspective for Behavior-Driven Development	In a user-centered development process, prototypes evolve in iterative cycles until they meet users' requirements and then become the final product. Every cycle gives the opportunity to revise the design and to introduce new requirements which might affect the specification of artifacts that have been set in former development phases. Testing the consistency of multiple artifacts used to develop interactive systems every time that a new requirement is introduced is a cumbersome activity, especially if it is done manually. This paper proposes an approach based on Behavior-Driven Development (BDD) to support the automated assessment of artifacts along the development process of interactive systems. The paper uses an ontology for specifying tests that can run over multiple artifacts sharing similar concepts. A case study testing Prototypes and Final User Interfaces is presented to demonstrate the feasibility of this approach in early phases of the design process, providing a continuous quality assurance of requirements, and helping clients and development teams to identify potential problems and inconsistencies before commitments with software implementation.	Automated requirements checking; Behavior-Driven Development; Ontological modeling; Prototyping; Multi-artifact testing	Silva, Thiago Rocha; Hak, Jean-Luc; Winckler, Marco	International Working Conference on Human Error, Safety, and System Development	https://doi.org/10.1007/978-3-319-44902-9_7		86--107	"""@InProceedings{10.1007/978-3-319-44902-9_7,
    author = ""Silva, Thiago Rocha and Hak, Jean-Luc and Winckler, Marco"",
    editor = ""Bogdan, Cristian and Gulliksen, Jan and Sauer, Stefan and Forbrig, Peter and Winckler, Marco and Johnson, Chris and Palanque, Philippe and Bernhaupt, Regina and Kis, Filip"",
    title = ""Testing Prototypes and Final User Interfaces Through an Ontological Perspective for Behavior-Driven Development"",
    booktitle = ""Human-Centered and Error-Resilient Systems Development"",
    year = ""2016"",
    publisher = ""Springer International Publishing"",
    address = ""Cham"",
    pages = ""86--107"",
    abstract = ""In a user-centered development process, prototypes evolve in iterative cycles until they meet users' requirements and then become the final product. Every cycle gives the opportunity to revise the design and to introduce new requirements which might affect the specification of artifacts that have been set in former development phases. Testing the consistency of multiple artifacts used to develop interactive systems every time that a new requirement is introduced is a cumbersome activity, especially if it is done manually. This paper proposes an approach based on Behavior-Driven Development (BDD) to support the automated assessment of artifacts along the development process of interactive systems. The paper uses an ontology for specifying tests that can run over multiple artifacts sharing similar concepts. A case study testing Prototypes and Final User Interfaces is presented to demonstrate the feasibility of this approach in early phases of the design process, providing a continuous quality assurance of requirements, and helping clients and development teams to identify potential problems and inconsistencies before commitments with software implementation."",
    isbn = ""978-3-319-44902-9""
}
"""	Included	Included	new_screen			2	Springer Link		Testing prototypes and final user interfaces through an ontological perspective for behavior-driven development	https://link.springer.com/chapter/10.1007/978-3-319-44902-9_7	Springer International Publishing	nan; References
110	Behave	A Domain Specific Test Language for Systems Integration	In avionic context, systems are complex, embedded, critical, reactive and real time. In this context, testing activities are predominant in a V development process. We propose to bring in some features coming from agile methods. System integration testing that means systems are tested individually and together in order to ensure that they all operate correctly. We focus on functional and system integration testing just before the ground testing phase. Nowadays, test procedures and test plans we studied are described in textual manner and are executed manually. We aim to provide a common specific language that improves communications for the team of test designers and between test designers and test performers. In the same manner as agile test frameworks, this language allows to structure the test procedures. Moreover, this language tends to facilitate the automatic execution of some parts of the procedures. We choose a domain specific language approach to design a first domain specific test language dedicated to networks system integration.	Domain Specific Language; Test procedure; Test system	Robin Bussenot; Herve Leblanc; Christian Percebois	XP '16 Workshops: Proceedings of the Scientific Workshop Proceedings of XP2016	https://doi.org/10.1145/2962695.2962711		1-10		Excluded	Excluded	new_screen			2	ACM		A Domain Specific Test Language for Systems Integration	https://dl.acm.org/doi/10.1145/2962695.2962711	Association for Computing Machinery	nan; References; Year; Bibtex
111	Behave	Assisted Behavior Driven Development Using Natural Language Processing	In Behavior Driven Development (BDD), acceptance tests provide the starting point for the software design flow and serve as a basis for the communication between designers and stakeholders. In this agile software development technique, acceptance tests are written in natural language in order to ensure a common understanding between all members of the project. As a consequence, mapping the sentences to actual source code is the first step of the design flow, which is usually done manually. However, the scenarios described by the acceptance tests provide enough information in order to automatize the extraction of both the structure of the implementation and the test cases. In this work, we propose an assisted flow for BDD where the user enters into a dialog with the computer which suggests code pieces extracted from the sentences. For this purpose, natural language processing techniques are exploited. This allows for a semi-automatic transformation from acceptance tests to source code stubs and thus provides a first step towards an automatization of BDD.		Soeken, Mathias; Wille, Robert; Drechsler, Rolf	OBJECTS, MODELS, COMPONENTS, PATTERNS, TOOLS 2012	https://www.webofscience.com/wos/woscc/full-record/WOS:000320619000019		269-287	"""@inproceedings{WOS:000320619000019,
    Author = ""Soeken, Mathias and Wille, Robert and Drechsler, Rolf"",
    Editor = ""Furia, CA and Nanz, S"",
    Title = ""Assisted Behavior Driven Development Using Natural Language Processing"",
    Booktitle = ""OBJECTS, MODELS, COMPONENTS, PATTERNS, TOOLS 2012"",
    Series = ""Lecture Notes in Computer Science"",
    Year = ""2012"",
    Volume = ""7304"",
    Pages = ""269-287"",
    Note = ""50th International Conference on Objects, Models, Components, Patterns (TOOLS), Prague, CZECH REPUBLIC, MAY 29-31, 2012"",
    Organization = ""Microsoft Res; European Assoc Programming Languages \\& Syst"",
    Abstract = ""In Behavior Driven Development (BDD), acceptance tests provide the starting point for the software design flow and serve as a basis for the communication between designers and stakeholders. In this agile software development technique, acceptance tests are written in natural language in order to ensure a common understanding between all members of the project. As a consequence, mapping the sentences to actual source code is the first step of the design flow, which is usually done manually. However, the scenarios described by the acceptance tests provide enough information in order to automatize the extraction of both the structure of the implementation and the test cases. In this work, we propose an assisted flow for BDD where the user enters into a dialog with the computer which suggests code pieces extracted from the sentences. For this purpose, natural language processing techniques are exploited. This allows for a semi-automatic transformation from acceptance tests to source code stubs and thus provides a first step towards an automatization of BDD."",
    Publisher = ""SPRINGER-VERLAG BERLIN"",
    Address = ""HEIDELBERGER PLATZ 3, D-14197 BERLIN, GERMANY"",
    Type = ""Proceedings Paper"",
    Language = ""English"",
    Affiliation = ""Soeken, M (Corresponding Author), Univ Bremen, Inst Comp Sci, Grp Comp Architecture, D-28359 Bremen, Germany. Soeken, Mathias; Wille, Robert; Drechsler, Rolf, Univ Bremen, Inst Comp Sci, Grp Comp Architecture, D-28359 Bremen, Germany."",
    ISSN = ""0302-9743"",
    EISSN = ""1611-3349"",
    ISBN = ""978-3-642-30561-0"",
    Research-Areas = ""Computer Science"",
    Web-of-Science-Categories = ""Computer Science, Software Engineering"",
    Author-Email = ""msoeken@informatik.uni-bremen.de rwille@informatik.uni-bremen.de drechsle@informatik.uni-bremen.de"",
    Affiliations = ""University of Bremen"",
    ResearcherID-Numbers = ""Soeken, Mathias/M-2666-2013 Drechsler, Rolf/K-2508-2014 Wille, Robert/D-9055-2013"",
    ORCID-Numbers = ""Soeken, Mathias/0000-0002-0229-8766 Drechsler, Rolf/0000-0002-9872-1740 Wille, Robert/0000-0002-4993-7860"",
    Number-of-Cited-References = ""17"",
    Times-Cited = ""44"",
    Usage-Count-Last-180-days = ""0"",
    Usage-Count-Since-2013 = ""9"",
    Doc-Delivery-Number = ""BFN43"",
    Web-of-Science-Index = ""Conference Proceedings Citation Index - Science (CPCI-S)"",
    Unique-ID = ""WOS:000320619000019"",
    DA = ""2024-10-22""
}
"""	Included	Included	new_screen			2	Web of Science		Assisted Behavior Driven Development Using Natural Language Processing	https://www.webofscience.com/wos/woscc/full-record/WOS:000320619000019	SPRINGER-VERLAG BERLIN	nan; Keywords; References
112	Behave	Maintaining behaviour driven development specifications: Challenges and opportunities	In Behaviour-Driven Development (BDD) the behaviour of a software system is specified as a set of example interactions with the system using a 'Given-When-Then' structure. These examples are expressed in high level domain-specific terms, and are executable. They thus act both as a specification of requirements and as tests that can verify whether the current system implementation provides the desired behaviour or not. This approach has many advantages but also presents some problems. When the number of examples grows, BDD specifications can become costly to maintain and extend. Some teams find that parts of the system are effectively frozen due to the challenges of finding and modifying the examples associated with them. We surveyed 75 BDD practitioners from 26 countries to understand the extent of BDD use, its benefits and challenges, and specifically the challenges of maintaining BDD specifications in practice. We found that BDD is in active use amongst respondents, and that the use of domain specific terms, improving communication among stakeholders, the executable nature of BDD specifications, and facilitating comprehension of code intentions are the main benefits of BDD. The results also showed that BDD specifications suffer the same maintenance challenges found in automated test suites more generally. We map the survey results to the literature, and propose 10 research opportunities in this area.	Reengineering; Specifications; Surveys; Automated test; behaviour-driven development; Domain specific; High-level domain; Research opportunities; Software systems; System implementation; Test suites; Boolean functions; Reengineering;  Specifications;  Surveys;  Automated test;  behaviour-driven development;  Domain specific;  High-level domain;  Research opportunities;  Software systems;  System implementation;  Test suites;  Boolean functions	Binamungu, Leonard Peter; Embury, Suzanne M.; Konstantinou, Nikolaos	25th IEEE International Conference on Software Analysis, Evolution and Reengineering, SANER 2018 - Proceedings	https://doi.org/10.1109/SANER.2018.8330207		175 - 184	"""@CONFERENCE{Binamungu2018175,
    author = ""Binamungu, Leonard Peter and Embury, Suzanne M. and Konstantinou, Nikolaos"",
    title = ""Maintaining behaviour driven development specifications: Challenges and opportunities"",
    year = ""2018"",
    journal = ""25th IEEE International Conference on Software Analysis, Evolution and Reengineering, SANER 2018 - Proceedings"",
    volume = ""2018-March"",
    pages = ""175 - 184"",
    doi = ""10.1109/SANER.2018.8330207"",
    url = ""https://www.scopus.com/inward/record.uri?eid=2-s2.0-85051037084\&doi=10.1109\%2fSANER.2018.8330207\&partnerID=40\&md5=ecd970534150c2cf0a2a95b3019ee91e"",
    affiliations = ""School of Computer Science, University of Manchester, Manchester, United Kingdom"",
    abstract = ""In Behaviour-Driven Development (BDD) the behaviour of a software system is specified as a set of example interactions with the system using a 'Given-When-Then' structure. These examples are expressed in high level domain-specific terms, and are executable. They thus act both as a specification of requirements and as tests that can verify whether the current system implementation provides the desired behaviour or not. This approach has many advantages but also presents some problems. When the number of examples grows, BDD specifications can become costly to maintain and extend. Some teams find that parts of the system are effectively frozen due to the challenges of finding and modifying the examples associated with them. We surveyed 75 BDD practitioners from 26 countries to understand the extent of BDD use, its benefits and challenges, and specifically the challenges of maintaining BDD specifications in practice. We found that BDD is in active use amongst respondents, and that the use of domain specific terms, improving communication among stakeholders, the executable nature of BDD specifications, and facilitating comprehension of code intentions are the main benefits of BDD. The results also showed that BDD specifications suffer the same maintenance challenges found in automated test suites more generally. We map the survey results to the literature, and propose 10 research opportunities in this area. (c) 2018 IEEE."",
    author_keywords = ""behaviour-driven development; test suite evolution; test suite maintenance"",
    keywords = ""Reengineering; Specifications; Surveys; Automated test; behaviour-driven development; Domain specific; High-level domain; Research opportunities; Software systems; System implementation; Test suites; Boolean functions"",
    correspondence_address = ""L.P. Binamungu; School of Computer Science, University of Manchester, Manchester, United Kingdom; email: leonardpeter.binamungu@manchester.ac.uk"",
    publisher = ""Institute of Electrical and Electronics Engineers Inc."",
    isbn = ""978-153864969-5"",
    language = ""English"",
    abbrev_source_title = ""IEEE Int. Conf. Softw. Anal., Evol. Reengineering, SANER - Proc."",
    type = ""Conference paper"",
    publication_stage = ""Final"",
    source = ""Scopus"",
    note = ""Cited by: 18; Conference name: 25th IEEE International Conference on Software Analysis, Evolution and Reengineering, SANER 2018; Conference date: 20 March 2018 through 23 March 2018; Conference code: 135723; All Open Access, Green Open Access""
}
"""	Included	Included	new_screen			2	Scopus Signed In		Maintaining behaviour driven development specifications: Challenges and opportunities	https://www.scopus.com/record/display.uri?eid=2-s2.0-85051037084&origin=resultslist&sort=plf-f&src=s&sid=846059c0a2311614eff4ccbcc61ff5c9&sot=b&sdt=b&s=TITLE-ABS-KEY%28maintaining+behaviour+driven+development+specifications+challenges+and+opportunities%29&sl=99&sessionSearchId=846059c0a2311614eff4ccbcc61ff5c9&relpos=0	Institute of Electrical and Electronics Engineers Inc	nan; References
113	Behave	Detecting duplicate examples in behaviour driven development specifications	In Behaviour-Driven Development (BDD), the behaviour of the software to be built is specified as a set of example interactions with the system, expressed using a 'Given-When-Then' structure. The examples are written using customer language, and are readable by end-users. They are also executable, and act as tests that determine whether the implementation matches the desired behaviour or not. This approach can be effective in building a common understanding of the requirements, but it can also face problems. When the suites of examples grow large, they can be difficult and expensive to change. Duplication can creep in, and can be challenging to detect manually. Current tools for detecting duplication in code are also not effective for BDD examples. Moreover, human concerns of readability and clarity can rise. We present an approach for detecting duplication in BDD suites that is based around dynamic tracing, and describe an evaluation based on three open source systems.	Boolean functions; Open source software; Software testing; Behaviour-driven development; Duplication detection; End users; In-buildings; Open source system; Open systems; Boolean functions;  Open source software;  Software testing;  Behaviour-driven development;  Duplication detection;  End users;  In-buildings;  Open source system;  Open systems	Binamungu, Leonard Peter; Embury, Suzanne M.; Konstantinou, Nikolaos	2018 IEEE 2nd International Workshop on Validation, Analysis and Evolution of Software Tests, VST 2018 - Proceedings	https://doi.org/10.1109/VST.2018.8327149		6 - 10	"""@CONFERENCE{Binamungu20186,
    author = ""Binamungu, Leonard Peter and Embury, Suzanne M. and Konstantinou, Nikolaos"",
    title = ""Detecting duplicate examples in behaviour driven development specifications"",
    year = ""2018"",
    journal = ""2018 IEEE 2nd International Workshop on Validation, Analysis and Evolution of Software Tests, VST 2018 - Proceedings"",
    volume = ""2018-March"",
    pages = ""6 - 10"",
    doi = ""10.1109/VST.2018.8327149"",
    url = ""https://www.scopus.com/inward/record.uri?eid=2-s2.0-85051002229\&doi=10.1109\%2fVST.2018.8327149\&partnerID=40\&md5=83750c109eb712ae38b32d237b14dafc"",
    affiliations = ""School of Computer Science, University of Manchester, Manchester, United Kingdom"",
    abstract = ""In Behaviour-Driven Development (BDD), the behaviour of the software to be built is specified as a set of example interactions with the system, expressed using a 'Given-When-Then' structure. The examples are written using customer language, and are readable by end-users. They are also executable, and act as tests that determine whether the implementation matches the desired behaviour or not. This approach can be effective in building a common understanding of the requirements, but it can also face problems. When the suites of examples grow large, they can be difficult and expensive to change. Duplication can creep in, and can be challenging to detect manually. Current tools for detecting duplication in code are also not effective for BDD examples. Moreover, human concerns of readability and clarity can rise. We present an approach for detecting duplication in BDD suites that is based around dynamic tracing, and describe an evaluation based on three open source systems. (c) 2018 IEEE."",
    author_keywords = ""Behaviour-driven development; Duplication detection; Dynamic tracing"",
    keywords = ""Boolean functions; Open source software; Software testing; Behaviour-driven development; Duplication detection; End users; In-buildings; Open source system; Open systems"",
    publisher = ""Institute of Electrical and Electronics Engineers Inc."",
    isbn = ""978-153866492-6"",
    language = ""English"",
    abbrev_source_title = ""IEEE Int. Workshop Valid., Anal. Evol. Softw. Tests, VST - Proc."",
    type = ""Conference paper"",
    publication_stage = ""Final"",
    source = ""Scopus"",
    note = ""Cited by: 9; Conference name: 2nd IEEE International Workshop on Validation, Analysis and Evolution of Software Tests, VST 2018; Conference date: 20 March 2018; Conference code: 135603""
}
"""	Included	Included	new_screen			2	Scopus Signed In		Detecting duplicate examples in behaviour driven development specifications	https://www.scopus.com/record/display.uri?eid=2-s2.0-85051002229&origin=resultslist&sort=plf-f&src=s&sid=2a64eb24fadad1f09b29454e497d661d&sot=b&sdt=b&s=TITLE-ABS-KEY%28detecting+duplicate+examples+in+behaviour+driven+development+specifications%29&sl=90&sessionSearchId=2a64eb24fadad1f09b29454e497d661d&relpos=0	Institute of Electrical and Electronics Engineers Inc	nan; References
114	Behave	Integrating behavior driven development and programming by contract to improve correctness in computer programs	"In many professional development settings, Test Driven Development (TDD), and its evolutionary descendent, Behavior Driven Development (BDD) are increasingly used to improve code quality and reducing error rates. While valuable, they are considerably less rigorous than formal methodologies of program correctness via formal logic. A less rigorous methodology utilizing the ideas of formal methods but without requiring an actual full proof is also in use called ""Design by Contract"" (DBC) or ""Programming by Contract."" (PBC) This thesis will examine extending and combining the ideas behind TDD, BDD and PBC to improve the overall stability and quality of a system. It will examine using both TDD/BDD (hereinafter referred to as TDD) and PBC to enhance the quality of development throughout the software development life cycle, while aiding in the development and stabilization of sound architecture. A result of this examination is a tool that attempts to derive unit tests automatically by analyzing human written specifications for preconditions and post-conditions when coupled with data definitions. These results will be used to generate code to be run by a unit testing framework before deployment, either as part of a continuous integration environment or by individual developers. The tool will also attempt to generate wireframe classes implementing pre and post- conditions within the code and using runtime contract analysis to generate v information when an exception occurs, thereby helping to automate verification of bug fixes. Ultimately, the tool produced would be useful in a non-academic environment as a utility to extend the benefit of design by contract combined with TDD to the agile space."		Schoeneman, Larry	Bradley University ProQuest Dissertations & Theses	https://www.proquest.com/docview/1313769827?pq-origsite=gscholar&fromopenview=true&sourcetype=Dissertations%20&%20Theses		253	"""nan"""	Excluded	Excluded	new_screen			2	Google Scholar		Integrating Behavior Driven Development and Programming by Contract to Improve Correctness in Computer Programs	https://www.proquest.com/docview/1313769827?pq-origsite=gscholar&fromopenview=true&sourcetype=Dissertations%20&%20Theses	Bradley University ProQuest Dissertations & Theses	
115	Behave	Leveraging natural-language requirements for deriving better acceptance criteria from models	In many software and systems development projects, analysts specify requirements using a combination of modeling and natural language (NL). In such situations, systematic acceptance testing poses a challenge because defining the acceptance criteria (AC) to be met by the system under test has to account not only for the information in the (requirements) model but also that in the NL requirements. In other words, neither models nor NL requirements per se provide a complete picture of the information content relevant to AC. Our work in this paper is prompted by the observation that a reconciliation of the information content in NL requirements and models is necessary for obtaining precise AC. We perform such reconciliation by devising an approach that automatically extracts AC-related information from NL requirements and helps modelers enrich their model with the extracted information. An existing AC derivation technique is then applied to the model that has now been enriched by the information extracted from NL requirements.	UML; acceptance criteria; acceptance testing; controlled natural language; gherkin; requirements validation and verification	Alvaro Veizaga; Mauricio Alferez; Damiano Torre; Mehrdad Sabetzadeh; Lionel Briand; Elene Pitskhelauri	MODELS '20: Proceedings of the 23rd ACM/IEEE International Conference on Model Driven Engineering Languages and Systems	https://doi.org/10.1145/3365438.3410953		218-228		Excluded	Excluded	new_screen			2	ACM		Leveraging Natural-Language Requirements for Deriving Better Acceptance Criteria from Models	https://dl.acm.org/doi/10.1145/3365438.3410953	Association for Computing Machinery	nan; References; Year; Bibtex
116	Behave	Toward A Service Platform for Developing Smart Contracts on Blockchain in BDD and TDD Styles	In recent years, Blockchain technology has been highly valued, and the related applications have begun to be developed in large numbers. A smart contract is a software component encompass business logics and transactions that run on a blockchain. Thus, verifying whether the contract logics fully reflect the business requirements are one of the most important software engineering issues in blockchain application development. Currently, developing smart contracts is still a challenging task even for experienced programmers due to the lacking of an integrated tool for developing and testing. In response to this challenge, this paper presents a service platform that supports BDD-style (Behavior-Driven Development) smart contract development, testing, and deployment for the Ethereum-based blockchains. This platform focuses on providing and resolving the cross-cutting concerns across the life-cycle of smart contract development. The feasibility of this platform is shown by demonstrating how an application scenario, namely, loyalty points exchange, can be implemented using the proposed platform. Our experiences indicate that the burdens of developers when developing smart contracts can be effectively reduced and thus increases the quality of contracts.	Contracts; Testing; Software; Tools; Writing; Software engineering; Smart Contracts; Smart Contract Development; Test-driven Development; Behavior Driven Development; Software Engineering; Software Components; Business Logic; Blockchain Applications; Programming Language; Exchange Rate; Internet Of Things; Cucumber; Domain Experts; JavaScript; Testing Program; Testing Tools; Platform Design; Agile Development; Unit Tests; Implementation Of Platforms; Contract Management; Blockchain; Smart contract; Behavior-Driven Development; Test-Driven Development	Chun-Feng Liao; Ching-Ju Cheng; Kung Chen; Chen-Ho Lai; Tien Chiu; Chi Wu-Lee	2017 IEEE 10th Conference on Service-Oriented Computing and Applications (SOCA)	https://doi.org/10.1109/SOCA.2017.26	"1.S. Nakamoto, Bitcoin: A peer-to-peer electronic cash system, 2008. Google Scholar; 2.N. Szabo, ""Formalizing and securing relationships on public networks"", First Monday, vol. 2, no. 9. CrossRef  Google Scholar; 3.G. Wood, ""Ethereum: A secure decentralised generalised transaction ledger"", Ethereum Project Yellow Paper, vol. 151, 2014. Google Scholar; 4.C. Cachin, ""Architecture of the hyperledger blockchain fabric"", Workshop on Distributed Cryptocurrencies and Consensus Ledgers, 2016. Google Scholar; 5.K. Christidis and M. Devetsikiotis, ""Blockchains and smart contracts for the internet of things"", IEEE Access, vol. 4, pp. 2292-2303, 2016. View Article  Google Scholar; 6.M. Swan, ""O'Reilly Media Inc"", Blockchain: Blueprint for a new economy, 2015. Google Scholar; 7.S. Porru, A. Pinna, M. Marchesi and R. Tonelli, ""Blockchain-oriented software engineering: challenges and new directions"", Proceedings of the 39th International Conference on Software Engineering Companion, pp. 169-171, 2017. View Article  Google Scholar; 8.C. Dannen, Introducing ethereum and solidity: Foundations of crypto currency and blockchain programming for beginners, 2017. Google Scholar; 9.K. Beck, Test-driven development: by example, Addison-Wesley Professional, 2003. Google Scholar; 10.J. F. Smart, BDD in Action, Manning, 2014. Google Scholar; 11.D. Mamnani, ""Testing of smart contracts in the blockchain world"", Blog post, 2017. Google Scholar; 12.L. Crispin and J. Gregory, Agile testing: A practical guide for testers and agile teams, Pearson Education, 2009. Google Scholar; 13.M. Gartner, ATDD by example: a practical guide to acceptance test-driven development, Addison-Wesley, 2012. Google Scholar; 14.M. Huttermann, ""Specification by example"", DevOps for Developers, pp. 157-170, 2012. CrossRef  Google Scholar; 15.W. Trumler and F. Paulisch, ""How specification by example and test-driven development help to avoid technial debt"", Managing Technical Debt (MTD) 2016 IEEE 8th International Workshop, pp. 1-8, 2016. View Article  Google Scholar; 16.C. Matts and G. Adzic, Feature injection: three steps to success, 2011. Google Scholar; 17.M. Wynne and A. Hellesoy, The cucumber book: behaviour-driven development for testers and developers, Pragmatic Bookshelf, 2012. Google Scholar; 18.R. Lawrence and P. Rayner, Behavior-Driven Development with Cucumber, 2016. Google Scholar; 19.N. Li, A. Escalona and T. Kamal, ""Skyfire: Model-based testing with cucumber"", Software Testing Verification and Validation (ICST) 2016 IEEE International Conference, pp. 393-400, 2016. CrossRef  Google Scholar; 20.M. Rahman and J. Gao, ""A reusable automated acceptance testing architecture for microservices in behavior-driven development"", Service-Oriented System Engineering (SOSE) 2015 IEEE Symposium, pp. 321-325, 2015. CrossRef  Google Scholar; 21.S. Sivanandan et al., ""Agile development cycle: Approach to design an effective model based testing with behaviour driven automation framework"", Advanced Computing and Communications (ADCOM) 2014 20th Annual International Conference, pp. 22-25, 2014. View Article  Google Scholar; 22.L. Richardson, M. Amundsen and S. Ruby, RESTful Web APls: Services for a Changing World, O'Reilly Media, 2013. Google Scholar"			Included	Included	new_screen			2	IEEE		Toward A Service Platform for Developing Smart Contracts on Blockchain in BDD and TDD Styles	https://ieeexplore.ieee.org/document/8241535	IEEE	nan; Pages; Year; Bibtex
117	Behave	Proposing regulatory-driven automated test suites for electronic health record systems	In regulated domains such as finance and health care, failure to comply with regulation can lead to financial, civil and criminal penalties. While systems vary from organization to organization, regulations apply across organizations. We propose the use of Behavior-Driven-Development (BDD) scenarios as the basis of an automated compliance test suite for standards such as regulation and interoperability. Such test suites could become a shared asset for use by all systems subject to these regulations and standards. Each system, then, need only create their own system-specific test driver code to automate their compliance checks. The goal of this research is to enable organizations to compare their systems to regulation in a repeatable and traceable way through the use of BDD. To evaluate our proposal, we developed an abbreviated HIPAA test suite and applied it to three open-source electronic health record systems. The scenarios covered all security behavior defined by the selected regulation. The system-specific test driver code covered all security behavior defined in the scenarios, and identified where the tested system lacked such behavior.	behavior-driven-development; healthcare it; regulatory compliance; security; software engineering; software testing	Patrick Morrison; Casper Holmgreen; Aaron Massey; Laurie Williams	SEHC '13: Proceedings of the 5th International Workshop on Software Engineering in Health Care	https://doi.org/10.5555/2663575.2663588		46-49		Included	Included	new_screen			2	ACM		Proposing Regulatory-Driven Automated Test Suites for Electronic Health Record Systems	https://dl.acm.org/doi/10.5555/2663575.2663588	IEEE Press	nan; References; Year; Bibtex
118	Behave	Proposing regulatory-driven automated test suites for electronic health record systems	In regulated domains such as finance and health care, failure to comply with regulation can lead to financial, civil and criminal penalties. While systems vary from organization to organization, regulations apply across organizations. We propose the use of Behavior-Driven-Development (BDD) scenarios as the basis of an automated compliance test suite for standards such as regulation and interoperability. Such test suites could become a shared asset for use by all systems subject to these regulations and standards. Each system, then, need only create their own system-specific test driver code to automate their compliance checks. The goal of this research is to enable organizations to compare their systems to regulation in a repeatable and traceable way through the use of BDD. To evaluate our proposal, we developed an abbreviated HIPAA test suite and applied it to three open-source electronic health record systems. The scenarios covered all security behavior defined by the selected regulation. The system-specific test driver code covered all security behavior defined in the scenarios, and identified where the tested system lacked such behavior.	behavior-driven-development; healthcare it; regulatory compliance; security; software engineering; software testing	Patrick Morrison; Casper Holmgreen; Aaron Massey; Laurie Williams	SEHC '13: Proceedings of the 5th International Workshop on Software Engineering in Health Care	https://doi.org/10.5555/2663575.2663588		46-49		Included	Included	new_screen			2	ACM		Proposing Regulatory-Driven Automated Test Suites	https://dl.acm.org/doi/10.5555/2663575.2663588	IEEE Press	nan; References; Year; Bibtex
119	Behave	Combining IID with BDD to Enhance the Critical Quality of Security Functional Requirements	In software system, functional requirements are primary system requirements. Client cannot explicitly depicted security requirements and the development team is hard to understand security requirements, makes security requirements difficult to specific implant software system. In software system development process, security requirements often neglected and ignored. However, the cost of correcting security flaws in maintenance phase is over 100 times in requirements phase. Can't effectively improve the system security, enterprises loss is bound to continue to expand. In order to enhance the security of software system, this paper combines the popular software development methodology IID (Interactive and Incremental Development) with BDD (Behavior Driven Development), institutionalized requires functional requirements must be integrated into security requirements. And, using BDD process features to evaluate the major quality of security functional requirements. Timely identifies and modifies the quality defects of security functional requirements item, effectively enhance the security of software systems.	Security; Data structures; Boolean functions; Software systems; Q-factor; Complexity theory; Critical Features; Functional Requirements; Behavior Driven Development; Development Process; Development Of System; System Software; Cybersecurity; Software Development; Processing Software; Development Team; Security Requirements; Incremental Development; Quality Defects; Popular Methodology; High-quality; Developed Model; Quality Measures; Low Complexity; Quality Factor; Scenario Description; Security Vulnerabilities; Agile Development; Refactoring; Non-functional Requirements; Acceptable Test; High Modularity; Quality Items; Quality Of Communication; Common Recognition; BDD; IID; security requirements; functional requirements; security functional requirements	Sen-Tarng Lai; Fang-Yie Leu; William Cheng-Chung Chu	2014 Ninth International Conference on Broadband and Wireless Computing, Communication and Applications	https://doi.org/10.1109/BWCCA.2014.78	"1.Meftah, B., ""Business Software Assurance: Identifying and Reducing Software Risk in the Enterprise,"" 9th Semi-Annual Software Assurance Forum, Gaithersburg, MD, October 2008. https://buildsecurityin.us-cert.gov/swa/downloads/Meftah.pdf. Google Scholar; 2.Tondel, I.A.;Jaatun, M.G.; Meland, P.H. ""Security Requirements for the Rest of Us: A Survey"", IEEE Software,vol. 25, no.1, 2008, pp.20-27. View Article  Google Scholar; 3.Pressman, R. S. ""Software Engineering: A Practitioner's Approach,"" McGraw-Hill, New York, 2010. Google Scholar; 4.Larman C. and Basili, V.R.""Iterative and incremental development: A brief history"", IEEE Computer, June 2003, pp.47-56. View Article  Google Scholar; 5.Bellware, Scott, Behavior-Driven Development, Code Magazine, June 2008. (Retrieved 10 May 2012) Google Scholar; 6.Keogh, L., Translating TDD to BDD, 2009, by (http://lizkeogh.com/2009/11/06/translating-tdd-to-bdd/) Google Scholar; 7.Solis, C. and Xiaofeng Wang, A Study of the Characteristics of Behaviour Driven Development, Software Engineering and Advanced Applications (SEAA), 2011 37th EUROMICRO Conference, pp. 383-387. Google Scholar; 8.CERT/CChttp://www.cert.org/stats/cert-stats.html (2008/12); 9.The Top Cyber Security Risks (http://www.sans.org/top-cybersecurity-risks/) (2010/5); 10.OWASP Top 10 (https://www.owasp.org/index.php/Top-10-2013-Top-10) (2013/7); 11.McGraw, G. Software Security-Building Security In, Addison-Wesley, 2006. View Article  Google Scholar; 12.Viega, J., McGraw, G., Building Secure Software, Addison-Wesley 2004. Google Scholar; 13.N. Davis, W. Humphrey, Jr. S. T. Redwine, G. Zibulski, and G. McGraw, ""Processes for Producing Secure Software,"" IEEE Security & Privacy, vol. 2, no. 3, 2004, pp. 18-25. View Article  Google Scholar; 14.Beck, K., Beedle, M., van Bennekum, A., Cockburn, A., Cunningham, W., Fowler, M., Thomas, D. (2001). Manifesto for agile software development Retrieved 17 February, 2003, from http://www.agilemanifesto.org. Google Scholar; 15.Szalvay, V. ""An Introduction to Agile Software Development,"" Danube Technologies Inc., 2004. Google Scholar; 16.Schach, S. R., ""Object-Oriented Software Engineering,"" McGraw-Hill Companies, 2010. Google Scholar; 17.North, Dan, Introducing BDD, Available at: http://dannorth.net/introducing-bdd, March 2006. (Accessed June 13, 2014]); 18.Firesmith, D, ""Engineering Security Requirements,"" Journal of Object Technology, vol. 2, no.1, 2003, pp.53-68. CrossRef  Google Scholar; 19.Sindre G. and Opdahl, A.L. (2005) ""Eliciting Security Requirements with Misuse Cases,"" Requirements Eng., vol. 10, no. 1, pp. 34-44.) CrossRef  Google Scholar; 20.McDermott J. and Fox, C. (1999) ""Using Abuse Case Models for Security Requirements Analysis,"" Proc. Computer Security Applications Conf., IEEE CS Press, pp. 55-64. View Article  Google Scholar; 21.Firesmith, D., ""Security Use Cases,"" Journal of Object Technology, vol. 2, no. 3, 2003, pp. 53-64. CrossRef  Google Scholar; 22.Fenton,. N. E. Software Metrics-A Rigorous Approach, Chapman & Hall1991. Google Scholar; 23.Conte, S. D. ,Dunsmore, H. E., and Shen,V. Y., Software Engineering Metrics and Models,Benjamin/Cummings, Menlo Park, 1986. Google Scholar; 24.Daniel Galin, Software Quality Assurance, Addison-Wesley, 2004. Google Scholar; 25.Boehm, B. W., Software Engineering Economics, Prentice-Hall, New Jersey, 1981. Google Scholar; 26.Lai, S. T. and Yang, C. C., ""A Software Metric Combination Model for Software Reuse,"" Proc. of 1998Asia-Pacific Software Engineering Conference (APSEC'98), 1998, pp. 70-77. Google Scholar"			Included	Included	new_screen			2	IEEE		Combining IID with BDD to Enhance the Critical Quality of Security Functional Requirements	https://ieeexplore.ieee.org/document/7016084	IEEE	nan; Pages; Year; Bibtex
120	Behave	Test-driven development of relational databases	Developers can use a test-driven development with database schema just as they use it with application code. Implementing test-driven database development (TDDD) involves three relatively simple steps: database refactoring, database regression testing, and continuous database integration. In database refactoring, developers make a simple change to a database to improve the design without changing its semantics. In database regression testing, they run a comprehensive test suite that validates the database regularly-ideally, whenever developers change the database schema or access the database in a different way. In continuous database integration, developers rebuild and retest the database schema whenever it changes. From a technical viewpoint, TDDD is straightforward. However, cultural challenges can make it difficult to adopt.	Software design; Software engineering; Software testing; Database refactoring; Database testing; Test-driven database design; Test-driven development; Relational database systems; Software design;  Software engineering;  Software testing;  Database refactoring;  Database testing;  Test-driven database design;  Test-driven development;  Relational database systems	Ambler, Scott W.	IEEE Software	https://doi.org/10.1109/MS.2007.91	Astels, D.(2003)Test Driven Development: A Practical Guide.Cited 162 times.Prentice Hall; Beck, K.(2003)Test Driven Development: By Example.Cited 1665 times.Addison-Wesley; Fowler, M.(1999)Refactoring: Improving the Design of Existing Code.Cited 5129 times.Addison-Wesley Longman; (2007)Behavior Driven Development, Marwww.behaviour-driven.org; Ambler, S.W.(2003)Agile Database Techniques: Effective Strategies for the Agile Software Developer.Cited 163 times.John Wiley & Sons; Ambler, S.W.(2006)Database Regression Testing.Cited 2 times.www.agiledata.org/ essays/databaseTesting.html; Becker, S.A., Berkemeyer, A.The Application of a Software Testing Technique to Uncover Errors in Database Systems [Proc. 20th Pacific Northwest Software Quality Conf](1999) , pp. 173-183.PNSQC/Pacific Agenda; Swiderski, F., Snyder, W.(2004)Threat Modeling.Cited 357 times.Microsoft Press; Ambler, S.W., Sadalage, P.(2006)Refactoring Databases: Evolutionary Database Design.Cited 131 times.Addison-Wesley; Fowler, M., Sadalage, P.(2003)Evolutionary Database Design.Cited 7 times.www.martinfowler.com/articles/evodb.html; Ambler, S.W.(2002)Development Sandboxes: An Agile Best Practicewww.agiledata.org/essays/sandboxes.html	37 - 43	"""@ARTICLE{Ambler200737,
    author = ""Ambler, Scott W."",
    title = ""Test-driven development of relational databases"",
    year = ""2007"",
    journal = ""IEEE Software"",
    volume = ""24"",
    number = ""3"",
    pages = ""37 - 43"",
    doi = ""10.1109/MS.2007.91"",
    url = ""https://www.scopus.com/inward/record.uri?eid=2-s2.0-34248398098\&doi=10.1109\%2fMS.2007.91\&partnerID=40\&md5=8675bb529407120e991378e8d4ce24b5"",
    affiliations = ""IBM"",
    abstract = ""Developers can use a test-driven development with database schema just as they use it with application code. Implementing test-driven database development (TDDD) involves three relatively simple steps: database refactoring, database regression testing, and continuous database integration. In database refactoring, developers make a simple change to a database to improve the design without changing its semantics. In database regression testing, they run a comprehensive test suite that validates the database regularly-ideally, whenever developers change the database schema or access the database in a different way. In continuous database integration, developers rebuild and retest the database schema whenever it changes. From a technical viewpoint, TDDD is straightforward. However, cultural challenges can make it difficult to adopt. (c) 2007 IEEE."",
    author_keywords = ""BDD; Behavior-driven development; Database refactoring; Database testing; Relational database; TDD; Test-driven database design; Test-driven development"",
    keywords = ""Software design; Software engineering; Software testing; Database refactoring; Database testing; Test-driven database design; Test-driven development; Relational database systems"",
    correspondence_address = ""S.W. Ambler; IBM; email: scott\_ambler@ca.ibm.com"",
    issn = ""07407459"",
    coden = ""IESOE"",
    language = ""English"",
    abbrev_source_title = ""IEEE Software"",
    type = ""Article"",
    publication_stage = ""Final"",
    source = ""Scopus"",
    note = ""Cited by: 18""
}
"""	Excluded	Excluded	new_screen			2	Scopus Signed In		Test-Driven Development of Relational Databases	https://www.webofscience.com/wos/woscc/full-record/WOS:000246152300012	IEEE COMPUTER SOC	
121	Behave	Notice of Violation of IEEE Publication Principles: Mobile Application Development: Automated Test Input Generation Via Model Inference based on User Story and Acceptance Criteria	"Notice of Violation of IEEE Publication Principles  ""Mobile Application Development: Automated Test Input Generation Via Model Inference based on User Story and Acceptance Criteria""  by Hena Iqbal  in the Proceedings of the International Conference on Digitization (ICD), November 2019, pp. 92-103  After careful and considered review of the content and authorship of this paper by a duly constituted expert committee, this paper has been found to be in violation of IEEE's Publication Principles.  This paper is a near duplication of the original text from the paper cited below. The original text was copied without attribution (including appropriate references to the original author(s) and/or paper title) and without permission.  Due to the nature of this violation, reasonable effort should be made to remove all past references to this paper, and future references should be made to the following article:  ""Automated Test Input Generation via Model Inference Based on User Story and Acceptance Criteria for Mobile Application Development""  by Duc-Man Nguyen, Quyet-Thang Huynh, Nhu-Hang Ha and Thanh-Hung Nguyen  in the International Journal of Software Engineering and Knowledge Engineering, Vol. 30, No. 3 2020, pp. 399-425    In the past few years, there has been observed explosive growth in the development of Mobile Applications across Android and iOS operating system which has led to the direct impact towards mobile app development. In order to design and propose quality-oriented apps, it is the primary responsibility of the developers to devote time and sufficient efforts towards testing to make the Apps bug free and operational in the hands of end users without any hiccup. In order to test the mobile apps, manual testing procedures takes prolonged amount of time in writing test cases and even the full testing requirements are not met. In addition to this, lack of sufficient knowledge by the tester also impacts overall quality and assurance that app is bug free. To overco..."	Mobile App; Acceptance Criteria; Testing Tools; User Acceptance; User Stories; Test Input Generation; Test Data; Black Box; Natural Language; Manual Testing; Sequence Of Events; Data Generation; Cucumber; Software Development; Bootstrap Resampling; Specific Language; Functional Requirements; Formal Language; Test Scenarios; Binary String; Domain-specific Languages; Test Case Generation; Mobile Testing; Set Of Statements; Agile Development; Unit Tests; Constraint Satisfaction Problem; Testing Coverage; Future Scope; Android Apps	Hena Iqbal	2019 International Conference on Digitization (ICD)	https://doi.org/10.1109/ICD47981.2019.9105761	"1.A. Annie, ""App Annie mobile app forecast: The path to \$100 billion"", App Annie, 2016. Google Scholar; 2.Niklas Heuveldop, Ericssson Mobility Report, 2017. Google Scholar; 3.Bostjan Arzensek and Marjan Hericko, ""Criteria for Selecting Mobile Application Testing Tools"", Third Workshop on Software Quality Analysis Monitoring Improvement and Applications SQAMIA 2014, 2014. Google Scholar; 4.M. J. Rajasekaran, ""Challenges in Mobile Application Testing: A Survey"", IJCTA, vol. 9, no. 27, pp. 159-163, 2016. Google Scholar; 5.M. Akour, A. A. Al-zyoud, B. Falah, S. Bouriat and K. Alemerien, ""Mobile Software Testing: Thoughts Strategies Challenges and Experimental Study"", Int. J. Adv. Comput. Sci. Appl., vol. 7, no. 6, pp. 12-19, 2016. CrossRef  Google Scholar; 6.L. A. Oubelli, J. Mottu and C. Attiogb, ""Test Cases Evolution of Mobile Applications: Model Driven Approach"", [Research Report] Universit e de Nantes, 2015. Google Scholar; 7.H. Kim, H. Yeo, H. J. Hwang and C. Ramos, ""Effective Mobile Applications Testing Strategies"", Adv. Sci. Technol. Lett., vol. 139, pp. 246-251, 2016. CrossRef  Google Scholar; 8.C. Johnson, SPEST - A Tool for Specification-Based Testing, California Polytechnic State University, 2016. Google Scholar; 9.H. Flora, X. Wang and S. V. Chande, ""Adopting an Agile Approach for the Development of Mobile Applications"", Int. J. Comput. Appl., vol. 94, no. 17, 2014. Google Scholar; 10.Kaleel Shakira Banu and Ssowjanya Harishankar, ""Applying agile methodology in mobile software engineering: Android application development and its challenges"", Computer Science Technical Reports, pp. 1-11, 2013. Google Scholar; 11.G. P. P, R. Hamsini and G. R. Smitha, ""Agile Development Methodology and Testing for Mobile Applications - A Survey"", Int. J. New Technol. Res., vol. 2, no. 9, pp. 98101, 2016. Google Scholar; 12.P. Bhuarya, ""Mobile Application Testing: Tools ; Challenges"", Int. J. Eng. Comput. Sci., vol. 5, no. 10, pp. 18679-18681, 2016. CrossRef  Google Scholar; 13.M. E. Joorabchi, ""Real Challenges in Mobile App Development"", 2013 ACM / IEEE Int. Symp. Empir. Softw. Eng. Meas., pp. 15-24, 2013. View Article  Google Scholar; 14.Ravi Ramchandra Nimbalkar, ""Mobile application testing and challenges"", International Journal of Science and Research (IJSR), vol. 2, no. 7, pp. 56-58, 2013. Google Scholar; 15.N. Mirzaei, ""Automated Input Generation Techniques for Testing Android Applications"", George Mason University, 2016. Google Scholar; 16.S. Anand et al., ""An orchestrated survey of methodologies for automated software test case generation"", Journal of Systems and Software, vol. 86, no. 8, 2013. CrossRef  Google Scholar; 17.R. Tahiliani Machiry and M. Naik, ""Dynodroid: An Input Generation System for Android Apps"", Proc. 2013 9th Jt. Meet. Found. Softw. Eng., pp. 224-234, 2013. CrossRef  Google Scholar; 18.M. Cohn, User Stories Applied for Agile Software Development, Addison Wesley, 2004. Google Scholar; 19.L. De Moura and N. Bjrner, Z3: An -EffiCient SMT Solver, pp. 337-340, 2008. Google Scholar; 20.Q. S. Phan and P. Malacaria, ""All-solution satisfiability modulo theories: Applications algorithms and benchmarks"", Proc. - 10th Int. Conf. Availability Reliab. Secur., pp. 100-109, 2015. View Article  Google Scholar; 21.M. Cristi and C. Frydman, ""Applying SMT Solvers to the Test Template Framework"", Electron. Proc. Theor. Comput. Sci., vol. 80, no. Mbt, pp. 28-42, 2012. CrossRef  Google Scholar; 22.M. Fowler, Domain Specific language, Addison-Wesley Professional, 2010. Google Scholar; 23.Sommerville Software Engineering, Addison-Wesley, 2011. Google Scholar; 24.A. Van Lamsweerde, ""Formal Specification: a Roadmap"", Proceedings of the Conference on the Future of Software Engineering, pp. 147-159, 2000. CrossRef  Google Scholar; 25.R. M. Hierons et al., ""Using formal specifications to support testing"", ACM Computing Survey, vol. 41, no. 2, pp. 176, 2009. CrossRef  Google Scholar; 26.J. Dicks Thoms and T. Kutz, ""Language Workbench Challenge 2013"", Xtext Submission, 2013. Google Scholar; 27.Xtext Documentation, 2014. Google Scholar; 28.S. Wierckx, Behavior Driven Testing with Cucumber demystified, 2013. Google Scholar; 29.A.H. Ian, Dees Matt and Wynne Cucumber, ""Recipes -Automate Anything with BDD Tools and Techniques"", The Pragmatic Programmers LLC., 2013. Google Scholar; 30.M. Wallner, Specification by Example of the Broadcast Mechanism of Catrobat, 2014. Google Scholar"			Included	Included	new_screen			2	IEEE		Mobile Application Development: Automated Test Input Generation Via Model Inference based on User Story and Acceptance Criteria	https://ieeexplore.ieee.org/document/9105761	IEEE	nan; Pages; Year; Bibtex
122	Behave	Notice of Violation of IEEE Publication Principles: Mobile Application Development: Automated Test Input Generation Via Model Inference based on User Story and Acceptance Criteria	"Notice of Violation of IEEE Publication Principles  ""Mobile Application Development: Automated Test Input Generation Via Model Inference based on User Story and Acceptance Criteria""  by Hena Iqbal  in the Proceedings of the International Conference on Digitization (ICD), November 2019, pp. 92-103  After careful and considered review of the content and authorship of this paper by a duly constituted expert committee, this paper has been found to be in violation of IEEE's Publication Principles.  This paper is a near duplication of the original text from the paper cited below. The original text was copied without attribution (including appropriate references to the original author(s) and/or paper title) and without permission.  Due to the nature of this violation, reasonable effort should be made to remove all past references to this paper, and future references should be made to the following article:  ""Automated Test Input Generation via Model Inference Based on User Story and Acceptance Criteria for Mobile Application Development""  by Duc-Man Nguyen, Quyet-Thang Huynh, Nhu-Hang Ha and Thanh-Hung Nguyen  in the International Journal of Software Engineering and Knowledge Engineering, Vol. 30, No. 3 2020, pp. 399-425    In the past few years, there has been observed explosive growth in the development of Mobile Applications across Android and iOS operating system which has led to the direct impact towards mobile app development. In order to design and propose quality-oriented apps, it is the primary responsibility of the developers to devote time and sufficient efforts towards testing to make the Apps bug free and operational in the hands of end users without any hiccup. In order to test the mobile apps, manual testing procedures takes prolonged amount of time in writing test cases and even the full testing requirements are not met. In addition to this, lack of sufficient knowledge by the tester also impacts overall quality and assurance that app is bug free. To overco..."	Mobile App; Acceptance Criteria; Testing Tools; User Acceptance; User Stories; Test Input Generation; Test Data; Black Box; Natural Language; Manual Testing; Sequence Of Events; Data Generation; Cucumber; Software Development; Bootstrap Resampling; Specific Language; Functional Requirements; Formal Language; Test Scenarios; Binary String; Domain-specific Languages; Test Case Generation; Mobile Testing; Set Of Statements; Agile Development; Unit Tests; Constraint Satisfaction Problem; Testing Coverage; Future Scope; Android Apps	Hena Iqbal	2019 International Conference on Digitization (ICD)	https://doi.org/10.1109/ICD47981.2019.9105761	"1.A. Annie, ""App Annie mobile app forecast: The path to \$100 billion"", App Annie, 2016. Google Scholar; 2.Niklas Heuveldop, Ericssson Mobility Report, 2017. Google Scholar; 3.Bostjan Arzensek and Marjan Hericko, ""Criteria for Selecting Mobile Application Testing Tools"", Third Workshop on Software Quality Analysis Monitoring Improvement and Applications SQAMIA 2014, 2014. Google Scholar; 4.M. J. Rajasekaran, ""Challenges in Mobile Application Testing: A Survey"", IJCTA, vol. 9, no. 27, pp. 159-163, 2016. Google Scholar; 5.M. Akour, A. A. Al-zyoud, B. Falah, S. Bouriat and K. Alemerien, ""Mobile Software Testing: Thoughts Strategies Challenges and Experimental Study"", Int. J. Adv. Comput. Sci. Appl., vol. 7, no. 6, pp. 12-19, 2016. CrossRef  Google Scholar; 6.L. A. Oubelli, J. Mottu and C. Attiogb, ""Test Cases Evolution of Mobile Applications: Model Driven Approach"", [Research Report] Universit e de Nantes, 2015. Google Scholar; 7.H. Kim, H. Yeo, H. J. Hwang and C. Ramos, ""Effective Mobile Applications Testing Strategies"", Adv. Sci. Technol. Lett., vol. 139, pp. 246-251, 2016. CrossRef  Google Scholar; 8.C. Johnson, SPEST - A Tool for Specification-Based Testing, California Polytechnic State University, 2016. Google Scholar; 9.H. Flora, X. Wang and S. V. Chande, ""Adopting an Agile Approach for the Development of Mobile Applications"", Int. J. Comput. Appl., vol. 94, no. 17, 2014. Google Scholar; 10.Kaleel Shakira Banu and Ssowjanya Harishankar, ""Applying agile methodology in mobile software engineering: Android application development and its challenges"", Computer Science Technical Reports, pp. 1-11, 2013. Google Scholar; 11.G. P. P, R. Hamsini and G. R. Smitha, ""Agile Development Methodology and Testing for Mobile Applications - A Survey"", Int. J. New Technol. Res., vol. 2, no. 9, pp. 98101, 2016. Google Scholar; 12.P. Bhuarya, ""Mobile Application Testing: Tools ; Challenges"", Int. J. Eng. Comput. Sci., vol. 5, no. 10, pp. 18679-18681, 2016. CrossRef  Google Scholar; 13.M. E. Joorabchi, ""Real Challenges in Mobile App Development"", 2013 ACM / IEEE Int. Symp. Empir. Softw. Eng. Meas., pp. 15-24, 2013. View Article  Google Scholar; 14.Ravi Ramchandra Nimbalkar, ""Mobile application testing and challenges"", International Journal of Science and Research (IJSR), vol. 2, no. 7, pp. 56-58, 2013. Google Scholar; 15.N. Mirzaei, ""Automated Input Generation Techniques for Testing Android Applications"", George Mason University, 2016. Google Scholar; 16.S. Anand et al., ""An orchestrated survey of methodologies for automated software test case generation"", Journal of Systems and Software, vol. 86, no. 8, 2013. CrossRef  Google Scholar; 17.R. Tahiliani Machiry and M. Naik, ""Dynodroid: An Input Generation System for Android Apps"", Proc. 2013 9th Jt. Meet. Found. Softw. Eng., pp. 224-234, 2013. CrossRef  Google Scholar; 18.M. Cohn, User Stories Applied for Agile Software Development, Addison Wesley, 2004. Google Scholar; 19.L. De Moura and N. Bjrner, Z3: An -EffiCient SMT Solver, pp. 337-340, 2008. Google Scholar; 20.Q. S. Phan and P. Malacaria, ""All-solution satisfiability modulo theories: Applications algorithms and benchmarks"", Proc. - 10th Int. Conf. Availability Reliab. Secur., pp. 100-109, 2015. View Article  Google Scholar; 21.M. Cristi and C. Frydman, ""Applying SMT Solvers to the Test Template Framework"", Electron. Proc. Theor. Comput. Sci., vol. 80, no. Mbt, pp. 28-42, 2012. CrossRef  Google Scholar; 22.M. Fowler, Domain Specific language, Addison-Wesley Professional, 2010. Google Scholar; 23.Sommerville Software Engineering, Addison-Wesley, 2011. Google Scholar; 24.A. Van Lamsweerde, ""Formal Specification: a Roadmap"", Proceedings of the Conference on the Future of Software Engineering, pp. 147-159, 2000. CrossRef  Google Scholar; 25.R. M. Hierons et al., ""Using formal specifications to support testing"", ACM Computing Survey, vol. 41, no. 2, pp. 176, 2009. CrossRef  Google Scholar; 26.J. Dicks Thoms and T. Kutz, ""Language Workbench Challenge 2013"", Xtext Submission, 2013. Google Scholar; 27.Xtext Documentation, 2014. Google Scholar; 28.S. Wierckx, Behavior Driven Testing with Cucumber demystified, 2013. Google Scholar; 29.A.H. Ian, Dees Matt and Wynne Cucumber, ""Recipes -Automate Anything with BDD Tools and Techniques"", The Pragmatic Programmers LLC., 2013. Google Scholar; 30.M. Wallner, Specification by Example of the Broadcast Mechanism of Catrobat, 2014. Google Scholar"			Excluded	Excluded	new_screen			2	IEEE		Notice of Violation of IEEE Publication Principles: Mobile Application Development: Automated Test Input Generation Via Model Inference based on User Story and Acceptance Criteria	https://ieeexplore.ieee.org/document/9105761	IEEE	nan; Pages; Year; Bibtex
123	Behave	Combination of Test-Driven Development and Behavior-Driven Development for Improving Backend Testing Performance	In the process of software development, a testing phase is an important step for detecting the errors. In order to produce a reliable application, this paper discusses the utilization of a combination from two different testing methods, Test-Driven Development (TDD) and Behavior Driven Development (BDD). TDD testing method is a process with a high percentage of code which is tested automatically. However, it could lead to an error when the parameters of the features are changed. Meanwhile, the BDD testing method is a testing method that could perform successfully despite changes to the parameters of the features. This paper discusses the combination of TDD and BDD testing methods, which is called as T-BDD method. By implementing T-BDD into the Vixio backend system, this paper successfully shows that it could be performed to achieve a high percentage of test-coverage while it could also adapt when the parameters of the features were changed. This paper also shows that the T-BDD testing method performed better compared to using the TDD testing method only.	Unit Test; Test-Driven Development (TDD); Behavior-Driven Development(BDD); Backend; Web Application; Unit Test;  Test-Driven Development (TDD);  Behavior-Driven Development(BDD);  Backend;  Web Application	Manuaba, Ida Bagus Kerthyayana	4TH INTERNATIONAL CONFERENCE ON COMPUTER SCIENCE AND COMPUTATIONAL INTELLIGENCE (ICCSCI 2019) : ENABLING COLLABORATION TO ESCALATE IMPACT OF RESEARCH RESULTS FOR SOCIETY	https://doi.org/10.1016/j.procs.2019.08.144		79-86	"""@inproceedings{WOS:000610366100010,
    Author = ""Manuaba, Ida Bagus Kerthyayana"",
    Editor = ""Budiharto, W"",
    Title = ""Combination of Test-Driven Development and Behavior-Driven Development for Improving Backend Testing Performance"",
    Booktitle = ""4TH INTERNATIONAL CONFERENCE ON COMPUTER SCIENCE AND COMPUTATIONAL INTELLIGENCE (ICCSCI 2019) : ENABLING COLLABORATION TO ESCALATE IMPACT OF RESEARCH RESULTS FOR SOCIETY"",
    Series = ""Procedia Computer Science"",
    Year = ""2019"",
    Volume = ""157"",
    Pages = ""79-86"",
    Note = ""4th International Conference on Computer Science and Computational Intelligence (ICCSCI) - Enabling Collaboration to Escalate Impact of Research Results for Society, Yogyakarta, INDONESIA, SEP 12-13, 2019"",
    Abstract = ""In the process of software development, a testing phase is an important step for detecting the errors. In order to produce a reliable application, this paper discusses the utilization of a combination from two different testing methods, Test-Driven Development (TDD) and Behavior Driven Development (BDD). TDD testing method is a process with a high percentage of code which is tested automatically. However, it could lead to an error when the parameters of the features are changed. Meanwhile, the BDD testing method is a testing method that could perform successfully despite changes to the parameters of the features. This paper discusses the combination of TDD and BDD testing methods, which is called as T-BDD method. By implementing T-BDD into the Vixio backend system, this paper successfully shows that it could be performed to achieve a high percentage of test-coverage while it could also adapt when the parameters of the features were changed. This paper also shows that the T-BDD testing method performed better compared to using the TDD testing method only. (C) 2019 The Authors. Published by Elsevier B.V."",
    Publisher = ""ELSEVIER SCIENCE BV"",
    Address = ""SARA BURGERHARTSTRAAT 25, PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS"",
    Type = ""Proceedings Paper"",
    Language = ""English"",
    Affiliation = ""Manuaba, IBK (Corresponding Author), Bina Nusantara Univ, Fac Comp \\& Media, Comp Sci Program, Jakarta, Indonesia. Manuaba, Ida Bagus Kerthyayana, Bina Nusantara Univ, Fac Comp \\& Media, Comp Sci Program, Jakarta, Indonesia."",
    DOI = ""10.1016/j.procs.2019.08.144"",
    ISSN = ""1877-0509"",
    Keywords = ""Unit Test; Test-Driven Development (TDD); Behavior-Driven Development(BDD); Backend; Web Application"",
    Research-Areas = ""Computer Science"",
    Web-of-Science-Categories = ""Computer Science, Artificial Intelligence; Computer Science, Theory \\& Methods"",
    Author-Email = ""bagus.manuaba@binus.ac.id"",
    Affiliations = ""Universitas Bina Nusantara"",
    ResearcherID-Numbers = ""Manuaba, Ida/AAB-8060-2021"",
    Funding-Acknowledgement = ""Bina Nusantara University"",
    Funding-Text = ""This work has been supported by Bina Nusantara University. I personally would like to thank my former student Ieuan Ignatius for his work and contribution in building and testing the backend system."",
    Number-of-Cited-References = ""19"",
    Times-Cited = ""6"",
    Usage-Count-Last-180-days = ""0"",
    Usage-Count-Since-2013 = ""4"",
    Doc-Delivery-Number = ""BQ6AQ"",
    Web-of-Science-Index = ""Conference Proceedings Citation Index - Science (CPCI-S)"",
    Unique-ID = ""WOS:000610366100010"",
    OA = ""gold"",
    DA = ""2024-10-22""
}
"""	Included	Included	new_screen			2	Web of Science		Combination of Test-Driven Development and Behavior-Driven Development for Improving Backend Testing Performance	https://www.webofscience.com/wos/woscc/full-record/WOS:000610366100010	ELSEVIER SCIENCE BV	nan; References
124	Behave	Requirements Behaviour Analysis for Ontology Testing	In the software engineering field, every software product is delivered with its pertinent associated tests which verify its correct behaviour. Besides, there are several approaches which, integrated in the software development process, deal with software testing, such as unit testing or behaviour-driven development. However, in the ontology engineering field there is a lack of clearly defined testing processes that can be integrated into the ontology development process. In this paper we propose a testing framework composed by a set of activities (i.e., test design, implementation and execution), with the goal of checking whether the requirements identified are satisfied by the formalization and analysis of their expected behaviour. This testing framework can be used in different types of ontology development life-cycles, or concerning other goals such as conformance testing between ontologies. In addition to this, we propose an RDF vocabulary to store, publish and reuse these test cases and their results, in order to allow traceability between the ontology, the test cases and their requirements. We validate our approach by integrating the testing framework into an ontology engineering process where an ontology network has been developed following agile principles.	Ontology testing; Ontology requirements; Ontology development	Alba Fernandez-Izquierdo; Raul Garcia-Castro	European Knowledge Acquisition Workshop	https://doi.org/10.1007/978-3-030-03667-6_8		114-130		Excluded	Excluded	new_screen			2	Springer Link		Requirements behaviour analysis for ontology testing	https://link.springer.com/chapter/10.1007/978-3-030-03667-6_8	Springer, Cham	nan; References; Year; Bibtex
125	Behave	Skyfire: Model-Based Testing with Cucumber	In the software industry, a Behavior-Driven Development (BDD) tool, Cucumber, has been widely used by practitioners. Usually product analysts, developers, and testers manually write BDD test scenarios that describe system behaviors. Testers write implementation for the BDD scenarios by hand and execute the Cucumber tests. Cucumber provides transparency about what test scenarios are covered and how the test scenarios are mapped to executable tests. One drawback of the Cucumber BDD approach is that test scenarios are generated manually. Thus, the test scenarios are usually weak. More importantly, practitioners do not have a metric to measure test coverage. In this paper, we present a Model-Based Testing (MBT) tool, skyfire. Skyfire can automatically generate effective Cucumber test scenarios to replace manually generated test scenarios. Skyfire reads a behavioral UML diagram (e.g., a state machine diagram), identifies all necessary elements (e.g., transitions) of the diagram, generates effective tests to satisfy various graph coverage criteria, and converts the tests into Cucumber scenarios. Then testers write Cucumber mappings for the generated scenarios. Skyfire does not only generate effective tests but is also completely compatible with the existing agile development and continuous integration (CI) rhythm. We present the design architecture and implementation of skyfire, as well as an industrial case study to show how skyfire is used in practice.	Unified modeling language; Data structures; Boolean functions; Testing; Concrete; Software; Cucumber; Model-based Testing; State Machine; Testing Tools; Test Scenarios; Unified Modeling Language; Continuous Integration; Agile Development; State Diagram; Software Industry; Coverage Criteria; Food And Drug Administration; Behavioral Model; Development Environment; Nodes In The Graph; Specific Language; Static Analysis; Inference Rules; Map Information; Composition State; Hadoop Distributed File System; Final Node; Distinct Steps; Papyrus; Starting State; Visual Diagram	Nan Li; Anthony Escalona; Tariq Kamal	2016 IEEE International Conference on Software Testing, Verification and Validation (ICST)	https://doi.org/10.1109/ICST.2016.41	"1.A. Hellessoy, ""Cucumber"", 2008,  [online]  Available: https://cucumber.io/. Google Scholar; 2.N. Li, ""Skyfire"", 2015,  [online]  Available: https://github.com/mdsol/skyfire. Google Scholar; 3.M. Veanes, C. Campbell, W. Grieskamp, W. Schulte and N. Tillmann, ""Microsoft SpecExplorer"", 2002,  [online]  Available: http://research.microsoft.com/en-us/projects/specexplorer/. Google Scholar; 4.J. Jacky and M. Veanes, ""NModel"", 2006,  [online]  Available: http://nmodel.codeplex.com/. Google Scholar; 5.L. Briand and Y. Labiche, ""A UML-based approach to system testing"", Proceedings of the 4th International Conference on The Unified Modeling Language Modeling Languages Concepts and Tools ser. UML99, pp. 194-208, 2001. CrossRef  Google Scholar; 6.C. Nebut, F. Fleurey, Y. L. Traon and J.-M. Jezequel, ""Automatic test generation: a use case driven approach"", IEEE Transaction on Software Engineering, vol. 32, no. 3, pp. 140-155, March 2006. View Article  Google Scholar; 7.N. Li and J. Offutt, ""A test automation language framwork for behavioral models"", The 11th Workshop on Advances in Model Based Testing ser. A-MOST 2015, April 2015. Google Scholar; 8.N. Li, ""The structured test automation language framework"", 2013,  [online]  Available: http://cs.gmu.edu/nlil/stale/. Google Scholar; 9.A. S. Foundation, ""Apache maven"", 2004,  [online]  Available: https://maven.apache.org/. Google Scholar; 10.T. C. Community, ""Travis-CI"", 2011,  [online]  Available: https://travis-ci.org/. Google Scholar; 11.M. Hoffmann, B. Janiczak, E. Mandrikov and M. Friedenhagen, ""Ja-coco code coverage tool"", 2009,  [online]  Available: http://eclemma.org/jacoco/. Google Scholar; 12.O. Burn, ""Checkstyle"", 2001,  [online]  Available: http://checkstyle.sourceforge.net/. Google Scholar; 13.E. Foundation, ""Eclipse modeling framework"", 2008,  [online]  Available: http://www.eclipse.org/modeling/emf/. Google Scholar; 14.P. Ammann and J. Offutt, Introduction to Software Testing, Cambridge, UK:Cambridge University Press, 2008. CrossRef  Google Scholar; 15.N. Li, F. Li and J. Offutt, ""Better algorithms to minimize the cost of test paths"", Proceedings of IEEE 5th International Conference on Software Testing Verification and Validation ser. ICST12, April 2012. View Article  Google Scholar; 16.E. Foundation, ""Papyrus"", 2008,  [online]  Available: www.eclipse.org/papyrus/. Google Scholar; 17.Obeo, ""Uml designer"", 2012,  [online]  Available: http://www.umldesigner.org/. Google Scholar; 18.A. Danial, ""CLOC"", 2006,  [online]  Available: https://github.com/A1Danial/cloc. Google Scholar; 19.K. Kawaguchi, ""Jenkins"", 2011,  [online]  Available: https://jenkins-ci.org/. Google Scholar; 20.M. Diepenbeck, M. Soeken, D. Grosse and R. Drechsler, ""Towards automatic scenario generation from coverage information"", 2013 8th International Workshop on Automation of Software Test (AST), pp. 82-88, May 2013. View Article  Google Scholar"			Included	Included	new_screen			2	IEEE		Skyfire: Model-Based Testing with Cucumber	https://ieeexplore.ieee.org/document/7515497	IEEE	nan; Pages; Year; Bibtex
126	Behave	Systematic Verification and Testing	In this chapter, we present a process pattern for model based specification, verification and testing. It combines concepts of behaviour driven development (BDD), graphical and formal, mathematical modelling, formal verification techniques, acceptance testing and model based testing. The rigorous approach helps to ensure that for highly dependable systems, dependability (e.g. safety) requirements are fulfilled and both the specified and the implemented behaviour are as desired. It helps bridging the gap between natural language or semi-formal requirements and mathematical abstraction. Furthermore, it addresses the issue that formal modelling expertise and domain knowledge are rarely held by the same set of people.		Dana Dghaym; Tomas Fischer; Thai Son Hoang; Klaus Reichl; Colin Snook; Rupert Schlick; Peter Tummeltshammer	Validation and Verification of Automated Systems	https://doi.org/10.1007/978-3-030-14628-3_9		89-104		Excluded	Excluded	new_screen			2	Springer Link		Systematic verification and testing	https://link.springer.com/chapter/10.1007/978-3-030-14628-3_9	Springer, Cham	nan; Keywords; References; Year; Bibtex
127	Behave	BDD by example:Russian bylina written in Gherkin language	"In this paper is presented the User Stories technique within the Behaviour-Driven Development process by example of the famous Russian bylina (epic poem) ""Three trips of Ilya Muromets"" written in Gherkin language. In the first part are given explanations about the choice of the bylina as a good example for presentation of this technique and about the choice of GitHub as a good environment for this presentation. In the second part is placed the text of the presentation divided by the stages of the Story development and fitted with the links to the corresponding commits and file versions in the educational repository. A distinct advantage of this presentation is that it reflects a Story in its evolution, as a process. It reflects a more complex and changeable behaviour than in static trivial examples, which are usually used. Also, there are presented the main features of using the User Stories technique in Russian language, which have not been previously covered nowhere. Besides that, the using of the educational repository can significantly increase the possibilities for further spreading and development of the example."	Agile; Gherkin; GitHub; JBehave; Scrum; behaviour-driven development; byliny; cucumber; epic poetry; examples; extreme programming; user stories	Vadim Mustyatsa	CEE-SECR '15: Proceedings of the 11th Central & Eastern European Software Engineering Conference in Russia	https://doi.org/10.1145/2855667.2855678		1-15		Excluded	Excluded	new_screen			2	ACM		BDD by Example: Russian Bylina Written in Gherkin Language	https://dl.acm.org/doi/10.1145/2855667.2855678	Association for Computing Machinery	nan; References; Year; Bibtex
128	Behave	Satisfaction and its correlates in agile software development	In this paper we address the topic of software development team members satisfaction with their development process. We present an in-depth analysis of the results of a nationwide survey about software development in Switzerland. We wanted to find out if satisfaction relates to the applied development method, and to the use of various practices, and impacts on business, team and software issues. We found that higher satisfaction is reported more by those using Agile development than with plan-driven processes. We explored the different perspectives of developers and those with a management role and found a high consistency of satisfaction between Agile developers and Agile management, and differences with those using working plan-driven methods. We found that certain practices and impacts have high correlations to satisfaction, and that collaborative processes are closely related to satisfaction. We then explored the relationship between satisfaction and various other perspectives. Our results in this analysis are principally descriptive, but we think they can be a relevant contribution to understand the challenges for everyone involved in Agile development.		Kropp, Martin; Meier, Andreas; Anslow, Craig; Biddle, Robert	JOURNAL OF SYSTEMS AND SOFTWARE	https://doi.org/10.1016/j.jss.2020.110544			"""@article{WOS:000527289100003,
    Author = ""Kropp, Martin and Meier, Andreas and Anslow, Craig and Biddle, Robert"",
    Title = ""Satisfaction and its correlates in agile software development"",
    Journal = ""JOURNAL OF SYSTEMS AND SOFTWARE"",
    Year = ""2020"",
    Volume = ""164"",
    Month = ""JUN"",
    Abstract = ""In this paper we address the topic of software development team members satisfaction with their development process. We present an in-depth analysis of the results of a nationwide survey about software development in Switzerland. We wanted to find out if satisfaction relates to the applied development method, and to the use of various practices, and impacts on business, team and software issues. We found that higher satisfaction is reported more by those using Agile development than with plan-driven processes. We explored the different perspectives of developers and those with a management role and found a high consistency of satisfaction between Agile developers and Agile management, and differences with those using working plan-driven methods. We found that certain practices and impacts have high correlations to satisfaction, and that collaborative processes are closely related to satisfaction. We then explored the relationship between satisfaction and various other perspectives. Our results in this analysis are principally descriptive, but we think they can be a relevant contribution to understand the challenges for everyone involved in Agile development. (C) 2020 Elsevier Inc. All rights reserved."",
    Publisher = ""ELSEVIER SCIENCE INC"",
    Address = ""STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA"",
    Type = ""Article"",
    Language = ""English"",
    Affiliation = ""Biddle, R (Corresponding Author), Carleton Univ, Ottawa, ON, Canada. Kropp, Martin, Univ Appl Sci Northwestern Switzerland, Windisch, Switzerland. Meier, Andreas, Zurich Univ Appl Sci, Winterthur, Switzerland. Anslow, Craig, Victoria Univ Wellington, Wellington, New Zealand. Biddle, Robert, Carleton Univ, Ottawa, ON, Canada."",
    DOI = ""10.1016/j.jss.2020.110544"",
    Article-Number = ""110544"",
    ISSN = ""0164-1212"",
    EISSN = ""1873-1228"",
    Keywords-Plus = ""JOB-SATISFACTION; TEAMWORK QUALITY; SUCCESS"",
    Research-Areas = ""Computer Science"",
    Web-of-Science-Categories = ""Computer Science, Software Engineering; Computer Science, Theory \\& Methods"",
    Author-Email = ""martin.kropp@fhnw.ch meea@zhaw.ch craig@ecs.vuw.ac.nz robert.biddle@carleton.ca"",
    Affiliations = ""FHNW University of Applied Sciences \\& Arts Northwestern Switzerland; Zurich University of Applied Sciences; Victoria University Wellington; Carleton University"",
    Funding-Acknowledgement = ""Swiss IT organizations swiss ICT; SWEN"",
    Funding-Text = ""We especially thank the study participants for their most valuable answers, the anonymous referees of this paper, and the Swiss IT organizations swiss ICT and SWEN for supporting and funding the study."",
    Number-of-Cited-References = ""32"",
    Times-Cited = ""13"",
    Usage-Count-Last-180-days = ""0"",
    Usage-Count-Since-2013 = ""19"",
    Journal-ISO = ""J. Syst. Softw."",
    Doc-Delivery-Number = ""LF2YS"",
    Web-of-Science-Index = ""Science Citation Index Expanded (SCI-EXPANDED)"",
    Unique-ID = ""WOS:000527289100003"",
    DA = ""2024-10-22""
}
"""	Excluded	Excluded	new_screen			2	Web of Science		Satisfaction and its correlates in agile software development	https://www.webofscience.com/wos/woscc/full-record/WOS:000527289100003	ELSEVIER SCIENCE INC	nan; Keywords; References; Pages
129	Behave	Compliance checking on building models with the Gherkin language and Continuous Integration	In this paper we document our approach on applying Behaviour-Driven Development (BDD) and Continuous Integration (CI) from the software industry to the construction sector. We have provided a freely available open software toolset for the application of rules in the Gherkin syntax to an IFC building model. A prominent aspect of BDD and contrary to mvdXML, the formalization of rules in plain-test human-readable scenarios provides a basis for collaborative formalization of rules among stakeholders. At the same time our approach includes imperative program code that is fully extensible to incorporate for example external data sources and geometrical reasoning. Runnings test on every model revision (the CI concept) as opposed to, for example, upon model delivery ensures a proactive approach to compliance. Reusing existing open source frameworks allowed us to build a comprehensive solution for continuous and automated model checking, visualization and reporting in several hundred lines of program code.		Dion Moult; T.F. Krijnen	Proceedings of the EG-ICE 2020 Workshop on Intelligent Computing in Engineering	https://research.tudelft.nl/en/publications/compliance-checking-on-building-models-with-the-gherkin-language-		294-303	"""nan"""	Included	Included	new_screen			2	Google Scholar		Compliance checking on building models with the gherkin language and continuous integration	https://research.tudelft.nl/en/publications/compliance-checking-on-building-models-with-the-gherkin-language-	Technische Universitat Berlin	
130	Behave	Improving Agile Software Development with Domain Ontologies	In this paper we propose to apply domain ontologies in agile software development to reduce the ambiguity caused by using natural language as ubiquitous language to report user stories. To justify and demonstrate our approach, we present a case study that combines Scrum and Behaviour-Driven Development (BDD) in the development of an educational support system, which was built to support the activities of the Medicine Programme of Federal University of S{\~a}o Carlos (UFSCar) in Brazil. Starting from a reference ontology for the Higher Education domain, we gradually specialized this ontology for this programme. Since we selected the Evaluation Management module of this system for our case study, we applied the Evaluation Process Ontology to that programme, and defined user stories to identify the feature set to be implemented. For evaluation and validation purposes, we assessed the quality of all ontologies used in this work according to structural and functional dimensions.	Ontology; PBL; LMS; Scrum; BDD	de Souza, Pedro Lopes; do Prado, Antonio Francisco; de Souza, Wanderley Lopes; dos Santos Forghieri Pereira, Sissi Marilia; Pires, Lu{\'i}s Ferreira	Information Technology - New Generations	https://doi.org/10.1007/978-3-319-77028-4_37		267--274	"""@InProceedings{10.1007/978-3-319-77028-4_37,
    author = ""de Souza, Pedro Lopes and do Prado, Antonio Francisco and de Souza, Wanderley Lopes and dos Santos Forghieri Pereira, Sissi Marilia and Pires, Lu{\'i}s Ferreira"",
    editor = ""Latifi, Shahram"",
    title = ""Improving Agile Software Development with Domain Ontologies"",
    booktitle = ""Information Technology - New Generations"",
    year = ""2018"",
    publisher = ""Springer International Publishing"",
    address = ""Cham"",
    pages = ""267--274"",
    abstract = ""In this paper we propose to apply domain ontologies in agile software development to reduce the ambiguity caused by using natural language as ubiquitous language to report user stories. To justify and demonstrate our approach, we present a case study that combines Scrum and Behaviour-Driven Development (BDD) in the development of an educational support system, which was built to support the activities of the Medicine Programme of Federal University of S{\\textasciitilde a}o Carlos (UFSCar) in Brazil. Starting from a reference ontology for the Higher Education domain, we gradually specialized this ontology for this programme. Since we selected the Evaluation Management module of this system for our case study, we applied the Evaluation Process Ontology to that programme, and defined user stories to identify the feature set to be implemented. For evaluation and validation purposes, we assessed the quality of all ontologies used in this work according to structural and functional dimensions."",
    isbn = ""978-3-319-77028-4""
}
"""	Included	Included	new_screen			2	Springer Link		Improving Agile Software Development with Domain Ontologies	https://link.springer.com/chapter/10.1007/978-3-319-77028-4_37	Springer International Publishing	nan; References
131	Behave	Agile testing practices in software quality: State of the art review	In this paper you can find a review of articles related to agile testing practices in software quality, looking for theoretical information and real cases applied to testing inside a modern context, comparing them with the standard procedures taking into account their advantages and relevant features. As final result, we determine that agile practices in software quality have wide acceptance and many companies have chosen their use for all their benefits and impact on development software processes in several real applications, not necessarily IT governance ones, since other kind of technical applications have shown excellent results on testing.	Agile testing software;; Automation test software;; Behavior driven development test software;; Kanban agile testing software;; Scrum agile testing software;; Test driven development agile test software	Gil, Cesar; Diaz, Jorge; Orozco, Mario; de la Hoz, Alexis; de la Hoz, Eduardo; Morales, Roberto	Journal of Theoretical and Applied Information Technology	https://www.scopus.com/record/display.uri?eid=2-s2.0-84991594262&origin=resultslist&sort=r-f&src=s&sid=429af9e1b4374d39e2b103cf37b1c683&sot=b&sdt=b&s=TITLE%28agile+testing+practices+in+software+quality+state+of+the+art+review%29&sl=74&sessionSearchId=429af9e1b4374d39e2b103cf37b1c683&relpos=0	"Janzen, D.S., Saiedian, H.; Hoffmann, L.F.S., De Vasconcelos, L.E.G., Lamas, E., Da Cunha, A.M., Dias, L.A.V.; Park, S., Maurer, F.; Suranto, B.; Korosec, R., Pfarrhofer, R.; Van Schooenderwoert, N., Morsicato, R.; Dos Santos, A.M., Karlsson, B.F., Cavalcante, A.M., Correia, I.B., Silva, E.; Di Bernardo, R., Castor, F., Soares, S.; Lei, H., Ganjeizadeh, F., Jayachandran, P.K., Ozcan, P.A statistical analysis of the effects of Scrum and Kanban on software development projects(2015)Robot. Comput. Integr. Manuf., pp. 1-9.Cited 4 times.; Vlaanderen, K., Jansen, S., Brinkkemper, S., Jaspers, E.; Bissi, W., Serra Seca Neto, A.G., Emer, M.C.F.P.; Collins, E., Vicente, V.F., De Lucena, A.; Myers, G.(2004)The Art of Software Testing.Cited 2985 times.John Wiley & Sons, Inc., Hoboken, New Jersey; Talby, D., Keren, A., Hazzan, O., Dubinsky, Y.Agile software testing in a large-scale project,""IEEE Software, 23 (4), pp. 30-37.Cited 69 times.July-Aug. 2006; Beck, K., Fowler, M.(2001)Planning Extreme Programming.Cited 324 times.Boston: Addison-Wesley; Beck, K.(1999)Extreme Programming Explained: Embrace Change.Cited 5354 times.Reading, Addison Wesley; Beck, K., Beedle, M., Bennekum, A.V., Cockburn, A.(2001)Agile Manifesto.Cited 1003 times.http://agilemanifesto.org/; Unterkalmsteiner, M., Gorschek, T., Feldt, R., Klotins, E.; Fagerholm, F., Ikonen, M., Kettunen, P., Munch, J., Roto, V., Abrahamsson, P.; Yang, C., Liang, P., Avgeriou, P.; (2016)C. (c). 2. E. B.V, <> Elsevierhttps://www.scopus.com; Sunil, K., Priya, S.(2015)Applying FLOOT Testing to Agile MethodologyReliability, Infocom Technologies and Optimization (ICRITO) (Trends and Future Directions; Baddoo, R.O.N., Cuadrado-Gallego, J.J., Rejas Muslera, R., Smolander, K., Messnarz, R.(2009)Software Process Improvement: 16Th European ConferenceEuroSPI, Alcala (Madrid), Spain: Springer Science & Business Media; (2016)Brief History of Agile Version One, Agile Sherpa by and for Thehttp://www.agilesherpa.org/; Ambler, S., Lines, M.(2009)Agile Practices Survey Results.Cited 4 times.July 2009http://www.ambysoft.com/surveys/practices2009.html; Nageswara Rao, K.Overcoming Testing Challenges in Project Life Cycle using Risk Based Validation Approach(2011)International Journal on Computer Science and Engineering (IJCSE), 3 (3), pp. 1232-1239.; Rico, D.F.V&v lifecycle methodologies(2014)Software Engineering Terminology; Tulika, C., Samyadip, C., Nasina, J.Analysis of Agile testing attributes for faster time to Market: Context of Manufacturing sector related IT projects(2014)Procedia Economics and Finance, 11, pp. 536-552.Cited 8 times.y"	28 - 36	"""@ARTICLE{Gil201628,
    author = ""Gil, Cesar and Diaz, Jorge and Orozco, Mario and de la Hoz, Alexis and de la Hoz, Eduardo and Morales, Roberto"",
    title = ""Agile testing practices in software quality: State of the art review"",
    year = ""2016"",
    journal = ""Journal of Theoretical and Applied Information Technology"",
    volume = ""92"",
    number = ""1"",
    pages = ""28 - 36"",
    url = ""https://www.scopus.com/inward/record.uri?eid=2-s2.0-84991594262\&partnerID=40\&md5=e225d0b3215f3cd845af63a794edebe5"",
    affiliations = ""Universidad de la Costa, Colombia; Universidad de la Costa, Department of Systems Engineering, Colombia"",
    abstract = ""In this paper you can find a review of articles related to agile testing practices in software quality, looking for theoretical information and real cases applied to testing inside a modern context, comparing them with the standard procedures taking into account their advantages and relevant features. As final result, we determine that agile practices in software quality have wide acceptance and many companies have chosen their use for all their benefits and impact on development software processes in several real applications, not necessarily IT governance ones, since other kind of technical applications have shown excellent results on testing. (c) 2005 - 2016 JATIT \& LLS. All rights reserved."",
    author_keywords = ""Agile testing software; Automation test software; Behavior driven development test software; Kanban agile testing software; Scrum agile testing software; Test driven development agile test software"",
    publisher = ""Asian Research Publishing Network"",
    issn = ""19928645"",
    language = ""English"",
    abbrev_source_title = ""J. Theor. Appl. Inf. Technol."",
    type = ""Review"",
    publication_stage = ""Final"",
    source = ""Scopus"",
    note = ""Cited by: 4""
}
"""	Excluded	Excluded	new_screen			2	Scopus Signed In		Agile testing practices in software quality: State of the art review	https://www.scopus.com/record/display.uri?eid=2-s2.0-84991594262&origin=resultslist&sort=r-f&src=s&sid=429af9e1b4374d39e2b103cf37b1c683&sot=b&sdt=b&s=TITLE%28agile+testing+practices+in+software+quality+state+of+the+art+review%29&sl=74&sessionSearchId=429af9e1b4374d39e2b103cf37b1c683&relpos=0	Asian Research Publishing Network	
132	Behave	Consistency Reflection for Automatic Update of Testing Environment	In this paper, we present an approach for maintaining consistency among design models, system under test, and test components. Our approach provides an automatic updating technique to deal with changes that happen frequently in agile software development. Consistency reflection by automatic updating allows us to cut off manual tasks required in maintaining automated tests and speed up testing process which is a bottleneck in service development lifecycle. We introduce the use of metadata, data structure that describes structural behavior of the system, in our automatic updating technique. Metadata is used as a common medium for communicating changes to keep consistency among design, system under test, and test components. We present an example of testing process to show how we apply this approach in practice.	automated software testing; design models; metadata; consistency reflection; automatic update; agile software development; behavior-driven development; automated software testing;  design models;  metadata;  consistency reflection;  automatic update;  agile software development;  behavior-driven development	Sathawornwichit, Chaiwat; Hosono, Shigeru	Proceedings - 2012 IEEE Asia-Pacific Services Computing Conference, APSCC 2012	https://doi.org/10.1109/APSCC.2012.49	"1.R. Martin, Agile software development: principles, patterns, and practices, ser. Alan Apt series. Prentice Hall, 2003. Google Scholar; 2.K. Beck, Test-driven development: by example. Addison- Wesley Professional, 2002. Google Scholar; 3.D. North. (2006, march) Introducing bdd. Better Software Magazine. [Online]. Available: http://www.stickyminds.com/BetterSoftware/magazine.asp. Google Scholar; 4.J. Humble and D. Farley, Continuous delivery: reliable software releases through build, test, and deployment automation. Addison-Wesley Professional, 2010. Google Scholar; 5.A. Hellesoy and M. Wynne, The Cucumber Book: Behaviour- Driven Development for Testers and Developers, ser. Pragmatic Programmers. Pragmatic Bookshelf, 2012. Google Scholar; 6.Gherkin. GitHub Cucumber Wiki. [Online]. Available: https://github.com/ cucumber/cucumber/wiki/Gherkin. Google Scholar; 7.M. Utting, A. Pretschner, and B. Legeard, ""A taxonomy of model-based testing approaches, "" Software Testing, Verification and Reliability, vol. 22, no. 5, pp. 297-312, 2012. CrossRef  Google Scholar; 8.T. Miller and P. A. Strooper, ""A case study in model-based testing of specifications and implementations."" Softw. Test., Verif. Reliab., vol. 22, no. 1, pp. 33-63, 2012. CrossRef  Google Scholar; 9.S. B. Tajali, V. D. Radonjic, and J.-P. Corriveau, ""Challenges of variability in model-driven and transformational approaches: A systematic survey, "" Software Architecture, Working IEEE/IFIP Conference on, vol. 0, pp. 294-301, 2011. View Article  Google Scholar; 10.A. Heinecke, T. Bruckmann, T. Griebe, and V. Gruhn, ""Generating test plans for acceptance tests from uml activity diagrams, "" in ECBS, R. Sterritt, B. Eames, and J. Sprinkle, Eds. IEEE Computer Society, 2010, pp. 57-66. Google Scholar; 11.C. Nebut, F. Fleurey, Y. L. Traon, and J.-M. Jezequel, ""Automatic test generation: A use case driven approach, "" IEEE Trans. Software Eng., vol. 32, no. 3, pp. 140-155, 2006. View Article  Google Scholar; 12.H. Reza and S. Lande, ""Model based testing using software architecture, "" in ITNG, S. Latifi, Ed. IEEE Computer Society, 2010, pp. 188-193. View Article  Google Scholar; 13.Z. R. Dai, ""Model-driven testing with uml 2.0, "" Computer Science at Kent, p. 179, 2004. Google Scholar; 14.Z. R. Dai, J. Grabowski, H. Neukirchen, and H. Pals, ""From design to test with uml: Applied to a roaming algorithm for bluetooth devices, "" in TestCom, ser. Lecture Notes in Computer Science, R. Groz and R. M. Hierons, Eds., vol. 2978. Springer, 2004, pp. 33-49. CrossRef  Google Scholar; 15.S. B. Tajali and J.-P. Corriveau, ""On extracting tests from a testable model in the context of domain engineering, "" in ICECCS. IEEE Computer Society, 2008, pp. 98-107. View Article  Google Scholar; 16.I. Lazar, S. Motogna, and B. Parv, ""Behaviour-driven development of foundational uml components, "" Electronic Notes in Theoretical Computer Science, vol. 264, no. 1, pp. 91-105, 2010. CrossRef  Google Scholar; 17.K. Sivashanmugam, D. Lin, and S. Palanisamy, ""Scenario driven testing, "" in ITNG. IEEE Computer Society, 2011, pp. 299-303. View Article  Google Scholar; 18.D. A. Turner, M. Park, J. Kim, and J. Chae, ""An automated test code generation method for web applications using activity oriented approach, "" in ASE. IEEE, 2008, pp. 411-414. View Article  Google Scholar; 19.J. Dick and A. Faivre, ""Automating the generation and sequencing of test cases from model-based specifications, "" in FME 93: Industrial-Strength Formal Methods, ser. Lecture Notes in Computer Science, J. Woodcock and P. Larsen, Eds. Springer Berlin/Heidelberg, 1993, vol. 670, pp. 268-284, 10.1007/BFb0024651. [Online]. Available: http://dx.doi.org/10.1007/ BFb0024651. CrossRef  Google Scholar; 20.S. Eldh, J. Brandt, M. Street, H. Hansson, and S. Punnekkat, ""Towards fully automated test management for large complex systems, "" in ICST. IEEE Computer Society, 2010, pp. 412- 420. View Article  Google Scholar"	335-340	"""@inproceedings{WOS:000317139100046,
    Author = ""Sathawornwichit, Chaiwat and Hosono, Shigeru"",
    Book-Group-Author = ""IEEE"",
    Title = ""Consistency Reflection for Automatic Update of Testing Environment"",
    Booktitle = ""2012 IEEE ASIA-PACIFIC SERVICES COMPUTING CONFERENCE (APSCC)"",
    Year = ""2012"",
    Pages = ""335-340"",
    Note = ""7th IEEE Asia-Pacific Services Computing Conference (APSCC), Huazhong Univ Sci \\& Technol, Guilin, PEOPLES R CHINA, DEC 06-08, 2012"",
    Organization = ""IEEE Comp Soc; IEEE"",
    Abstract = ""In this paper, we present an approach for maintaining consistency among design models, system under test, and test components. Our approach provides an automatic updating technique to deal with changes that happen frequently in agile software development. Consistency reflection by automatic updating allows us to cut off manual tasks required in maintaining automated tests and speed up testing process which is a bottleneck in service development lifecycle. We introduce the use of metadata, data structure that describes structural behavior of the system, in our automatic updating technique. Metadata is used as a common medium for communicating changes to keep consistency among design, system under test, and test components. We present an example of testing process to show how we apply this approach in practice."",
    Publisher = ""IEEE"",
    Address = ""345 E 47TH ST, NEW YORK, NY 10017 USA"",
    Type = ""Proceedings Paper"",
    Language = ""English"",
    Affiliation = ""Sathawornwichit, C (Corresponding Author), NEC Corp Ltd, Knowledge Discovery Res Labs, Kawasaki, Kanagawa, Japan. Sathawornwichit, Chaiwat; Hosono, Shigeru, NEC Corp Ltd, Knowledge Discovery Res Labs, Kawasaki, Kanagawa, Japan."",
    DOI = ""10.1109/APSCC.2012.49"",
    ISBN = ""978-0-7695-4897-5; 978-1-4673-4825-6"",
    Keywords = ""automated software testing; design models; metadata; consistency reflection; automatic update; agile software development; behavior-driven development"",
    Keywords-Plus = ""UML"",
    Research-Areas = ""Computer Science; Engineering"",
    Web-of-Science-Categories = ""Computer Science, Theory \\& Methods; Engineering, Electrical \\& Electronic"",
    Author-Email = ""chaiwat@cb.jp.nec.com s-hosono@bu.jp.nec.com"",
    Affiliations = ""NEC Corporation"",
    Number-of-Cited-References = ""19"",
    Times-Cited = ""3"",
    Usage-Count-Last-180-days = ""0"",
    Usage-Count-Since-2013 = ""2"",
    Doc-Delivery-Number = ""BEK92"",
    Web-of-Science-Index = ""Conference Proceedings Citation Index - Science (CPCI-S)"",
    Unique-ID = ""WOS:000317139100046"",
    DA = ""2024-10-22""
}
"""	Included	Included	new_screen			2	Web of Science		Consistency Reflection for Automatic Update of Testing Environment	https://www.webofscience.com/wos/woscc/full-record/WOS:000317139100046	IEEE	
133	Behave	Generation of Behavior-Driven Development C++ Tests from Abstract State Machine Scenarios	In this paper, we present theAsmetaVBDDtool that automatically translates the scenarios written in theAValLalanguage (used by theasmetavalidator (AsmetaV)) into Behavior-Driven Development scenarios for C++.	Behavior-driven Development (BDD); Abstract State Machines; Ll Ava; Asmeta; Motivate Design Rationale	Silvia Bonfanti; Angelo Gargantini; Atif Mashkoor	International Conference on Model and Data Engineering	https://doi.org/10.1007/978-3-030-02852-7_13		146-152		Included	Included	new_screen			2	Springer Link		Generation of behavior-driven development C++ tests from abstract state machine scenarios	https://link.springer.com/chapter/10.1007/978-3-030-02852-7_13	Springer, Cham	nan; References; Year; Bibtex
134	Behave	Behaviour-driven development for computer-interpretable clinical guidelines	In this paper, we propose an approach for specification and analysis of Computer-Interpretable Clinical Guidelines (CIGs) that was inspired by Behaviour-Driven Development. The expected behaviour of a CIG is specified by requirements in natural language. On the one hand, those requirements are used as design input for guideline development. On the other hand, they can be checked against time-oriented data recorded during testing sessions of the implemented CIG.	Artificial intelligence; Clinical guideline; Design input; Natural languages; Testing sessions; Time-oriented datum; Software engineering; Artificial intelligence;  Clinical guideline;  Design input;  Natural languages;  Testing sessions;  Time-oriented datum;  Software engineering	Hatko, Reinhard; Mersmann, Stefan; Puppe, Frank	CEUR Workshop Proceedings	https://www.scopus.com/record/display.uri?eid=2-s2.0-84910148472&origin=resultslist&sort=r-f&src=s&sid=bbbda6d151285460b29e2e898e90438f&sot=b&sdt=b&s=TITLE%28behaviour+driven+development+for+computer+interpretable+clinical+guidelines%29&sl=82&sessionSearchId=bbbda6d151285460b29e2e898e90438f&relpos=0	Chelimsky, D., Astels, D., Dennis, Z., Hellesoy, A., Helmkamp, B., North, D.(2011)The RSpec Book: Behaviour Driven Development with RSpec, Cucumber, and Friends.Cited 98 times.The Pragmatic Programmers, United States; Evans, E.(2003)Domain-Driven Design: Tackling Complexity in the Heart of Software.Cited 1067 times.Addison-Wesley Longman, Amsterdam, 1 edn; Hatko, R., Baumeister, J., Belli, V., Puppe, F.; Hatko, R., Schadler, D., Mersmann, S., Baumeister, J., Weiler, N., Puppe, F.; Lellouche, F., Mancebo, J., Jolliet, P., Roeseler, J., Schortgen, F., Dojat, M., Cabello, B., (...), Brochard, L.; Mersmann, S., Dojat, M.; Neumann, A., Schmidt, H.(2010)SmartCareR/PS the Automated Weaning Protocolhttp://www.draeger.net/media/10/01/35/10013505/smartcare_auto_weaning_protocol_booklet.pdf; Schadler, D., Engel, C., Elke, G., Pulletz, S., Haake, N., Frerichs, I., Zick, G., (...), Weiler, N.		"""@CONFERENCE{Hatko2014,
    author = ""Hatko, Reinhard and Mersmann, Stefan and Puppe, Frank"",
    editor = ""J., Baumeister and denkbares GmbH, Friedrich-Bergius-Ring 15, Wurzburg and G.J., Nalepa and of Science, AGH University and Technology, Al. Mickiewicza 30, Krakow"",
    title = ""Behaviour-driven development for computer-interpretable clinical guidelines"",
    year = ""2014"",
    journal = ""CEUR Workshop Proceedings"",
    volume = ""1289"",
    url = ""https://www.scopus.com/inward/record.uri?eid=2-s2.0-84910148472\&partnerID=40\&md5=af0f5f76a6fa8f7945c080e8467e3894"",
    affiliations = ""Institute of Computer Science, University of Wurzburg, Germany; Drager Medical GmbH, Lubeck, Germany"",
    abstract = ""In this paper, we propose an approach for specification and analysis of Computer-Interpretable Clinical Guidelines (CIGs) that was inspired by Behaviour-Driven Development. The expected behaviour of a CIG is specified by requirements in natural language. On the one hand, those requirements are used as design input for guideline development. On the other hand, they can be checked against time-oriented data recorded during testing sessions of the implemented CIG."",
    keywords = ""Artificial intelligence; Clinical guideline; Design input; Natural languages; Testing sessions; Time-oriented datum; Software engineering"",
    publisher = ""CEUR-WS"",
    issn = ""16130073"",
    language = ""English"",
    abbrev_source_title = ""CEUR Workshop Proc."",
    type = ""Conference paper"",
    publication_stage = ""Final"",
    source = ""Scopus"",
    note = ""Cited by: 3; Conference name: 10th Workshop on Knowledge Engineering and Software Engineering, KESE 2014, Co-Located with 21st European Conference on Artificial Intelligence, ECAI 2014; Conference date: 19 August 2014; Conference code: 109015""
}
"""	Included	Included	new_screen			2	Scopus Signed In		Behaviour-Driven Development for Computer-Interpretable Clinical Guidelines	https://www.scopus.com/record/display.uri?eid=2-s2.0-84910148472&origin=resultslist&sort=r-f&src=s&sid=bbbda6d151285460b29e2e898e90438f&sot=b&sdt=b&s=TITLE%28behaviour+driven+development+for+computer+interpretable+clinical+guidelines%29&sl=82&sessionSearchId=bbbda6d151285460b29e2e898e90438f&relpos=0	CEUR-WS	nan; Pages
135	Behave	A preliminary study on using acceptance tests for representing business requirements of smart contracts	"In this work, we address the following question: ""Which acceptance testing techniques are being used for representing business requirements of smart contracts?"" To answer this question we performed a systematic mapping to determine whether acceptance tests for smart contracts and blockchain are being utilized to represent requirements and which acceptance testing techniques are being applied. This systematic mapping shows that, in fact, acceptance testing techniques are still not commonly used to represent the business requirements of smart contracts. We only found two studies using acceptance testing techniques with smart contracts. Moreover, only one of them uses an acceptance testing technique, the BDD (Behavior-Driven Development) notation, to represent the business requirements. In order to confirm that it is possible to represent business requirements of smart contracts, we developed an example that uses the BDD notation to represent requirements of a smart contract deployed in the Hyperledger blockchain. Preliminary results show that it is possible to use acceptance tests to represent business requirements."	Testing; Contracts; Systematics; Google; Acceptable Test; Smart Contracts; Systematic Mapping; Inclusion Criteria; Study Selection; Use Of Techniques; Software Development; Digital Library; Search String; Scopus Databases; User Requirements; Abstracts Of Studies; ACM Digital Library; Commercial Paper; Blockchain Technology; Cyber-physical Systems; Google Scholar; Google Scholar Databases; acceptance testing; acceptance test; smart contract; business requirement; blockchain	Patricia Vilain; John Mylopoulos; Hans-Arno Jacobsen	2020 IEEE International Conference on Blockchain and Cryptocurrency (ICBC)	https://doi.org/10.1109/ICBC48266.2020.9169480	"1.C. Fu, X. Zhang, Z. Li, Z. Zhao, C. Wang and Y. Yu, ""On the Problem-Oriented Verification of Cyber-Physical Systems Using System-Level Test Sequences"", Proceedings of the 24th International DMS Conference on Visualization and Visual Languages (DMSVIVA 2018), pp. 125-131, 2018. CrossRef  Google Scholar; 2.S. Ibba, ""Agile methodologies and blockchain development"", Ph.D. Thesis in Electronic and Computer Engineering, pp. 123, 2019. Google Scholar; 3.P. Natsiavas, J. Rasmussen, M. Voss-Knude, K. Votis, L. Coppolino, P. Campegiani, et al., ""Comprehensive user requirements engineering methodology for secure and interoperable health data exchange"", BMC Medical Informatics and Decision Making, vol. 18, no. 1, pp. 85, 2018. CrossRef  Google Scholar; 4.P.R. Yammanuru, A. Jain and H. Vinayakaram, ""Enabling Enterprise Blockchain AppDev Teams"", Proceedings of the 23RD Annual International Conference in Advanced Computing and Communications (ADCOM 2017), pp. 34-39, 2017. View Article  Google Scholar; 5.G. Baralla, A. Pinna and G. Corrias, ""Ensure Traceability in European Food Supply Chain by Using a Blockchain System"", Proceedings of the IEEE/ACM 2nd International Workshop on Emerging Trends in Software Engineering for Blockchain (WETSEB), pp. 40-47, 2019. View Article  Google Scholar; 6.S. Ibba, A. Pinna, M. I. Lunesu, M. Marchesi and R. Tonelli, ""Initial coin offerings and agile practices"", Future Internet, vol. 10, no. 11, 2018. CrossRef  Google Scholar; 7.T. Mejtoft, D. Hellman and U. Soderstrom, ""Reclaiming control over personal data with blockchain technology: An exploratory study"", Proceedings of the 32nd Bled eConference: Humanizing Technology for a Sustainable Society, pp. 411-425, 2019. CrossRef  Google Scholar; 8.A. Vallin, ""Secure delivery system using blockchain technology"", Master Thesis in Computer Science and Engineering, pp. 64, 2018. Google Scholar; 9.P. Chawla and R. Chawla, ""Testing Perspectives of Fog-Based IoT Applications"", Fog and Edge Computing, pp. 373-409, 2019. CrossRef  Google Scholar; 10.S. Abbaspour Asadollah, R. Inam and H. Hansson, ""A Survey on Testing for Cyber Physical System"", Proceedings of the IFIP International Conference on Testing Software and Systems (ICTSS 2015). Lecture Notes in Computer Science Testing Software and Systems ICTSS 2015, vol. 9447, 2015. CrossRef  Google Scholar; 11.J. M. Gauthier, F. Bouquet, A. Hammad and F. Peureux, ""A SysML Formal Framework to Combine Discrete and Continuous Simulation for Testing"", Proceedings of the International Conference on Formal Engineering Methods (ICFEM 2015). Lecture Notes in Computer Science Formal Methods and Software Engineering ICFEM 2015, vol. 9407, 2015. CrossRef  Google Scholar; 12.M. Marchesi, L. Marchesi and R. Tonelli, ""An Agile Software Engineering Method to Design Blockchain Applications"", Proceedings of the 14th Central and Eastern European Software Engineering Conference Russia (CEE-SECR '18), pp. 1-8, 2018. CrossRef  Google Scholar; 13.A.M.S. Lima and M.C. Junior, ""An In Vivo Experimental Assessment of BTrans: An Agile Business Transformation Methodology"", Proceedings of the 16th International Conference on Information Technology-New Generations (ITNG 2019), pp. 387-393, 2019. CrossRef  Google Scholar; 14.""Cyber-Physical Systems Engineering"", Engineering Trustworthy Software Systems. Lecture Notes in Computer Science, vol. 9506, pp. 256-289, 2016. CrossRef  Google Scholar; 15.D. Mohanty, ""Installation Development Deployment Unit and Functional Testing"", R3 Corda for Architects and Developers, pp. 61-97, 2019. CrossRef  Google Scholar; 16.F. Borges de Oliveira, M. Bartscher, U. Neuschaefer-Rube, R. Tutsch and J. Hiller, ""Multi-material Acceptance Testing for CT-Based Coordinate Measurement Systems"", Proceedings of the 12th International Conference on Measurement and Quality Control - Cyber Physical Issue (IMEKOTC14 2019). Lecture Notes in Mechanical Engineering, 2019. CrossRef  Google Scholar; 17.V. Panarin, A. Bulda, I. Itkin, A. Zverev, K. Zagorouiko, M. Mamedov, et al., ""Poster: ClearTH Test Automation Framework: A Running Example of a DLT-Based Post-Trade System"", Proceedings of the 12th IEEE Conference on Software Testing Validation and Verification (ICST 2019), pp. 358-362, 2019. View Article  Google Scholar; 18.W. Bauer, B. Pokorni and S. Findeisen, ""Production Assessment 4.0 -Methods for the Development and Evaluation of Industry 4.0 Use Cases"", Proceedings of the International Conference on Applied Human Factors and Ergonomics (AHFE 2018). Advances in Manufacturing Production Management and Process Control, pp. 501-510, 2019. CrossRef  Google Scholar; 19.X. Zhou, X. Gou, T. Huang and S. Yang, ""Review on Testing of Cyber Physical Systems: Methods and Testbeds"", IEEE Access, vol. 6, pp. 52179-52194, 2018. View Article  Google Scholar; 20.V. Schonemann, H. Winner, T. Glock, S. Otten, E. Sax, B. Boeddeker, et al., ""Advances in Information and Communication Networks"", Proceedings of the Future of Information and Communication Conference (FICC 2018), pp. 53-64, 2018. Google Scholar; 21.P. Marwedel, ""Specifications and Modeling"", Embedded System Design, pp. 27-123, 2017. Google Scholar; 22.D.P.F. Moller, ""Systems and Software Engineering"", Guide to Computing Fundamentals in Cyber-Physical Systems, pp. 235-305, 2016. CrossRef  Google Scholar; 23.S.Y. Shin, S. Nejati, M. Sabetzadeh, L.C. Briand and F. Zimmer, ""Test case prioritization for acceptance testing of cyber physical systems: a multi-objective search-based approach"", Proceedings of the 27th ACM SIGSOFT International Symposium on Software Testing and Analysis (ISSTA 2018), pp. 49-60, 2018. CrossRef  Google Scholar; 24.S. Bosmans, S. Mercelis, J. Denil and P. Hellinckx, ""Testing IoT systems using a hybrid simulation based testing approach"", Computing, vol. 101, pp. 857-872, 2019. CrossRef  Google Scholar; 25.D. Mohanty, ""Testing Strategy for Ethereum Dapps"", Ethereum for Architects and Developers, pp. 197-201, 2018. CrossRef  Google Scholar; 26.C.F. Liao, C.J. Cheng, K. Chen, C.H. Lai, T. Chiu and C. Wu-Lee, ""Toward A Service Platform for Developing Smart Contracts on Blockchain in BDD and TDD Styles"", Proceedings of the IEEE 10th International Conference on Service-Oriented Computing and Applications, pp. 133-140, 2017. View Article  Google Scholar; 27.M. Marchesi, ""Why blockchain is important for software developers and why software engineering is important for blockchain software (Keynote)"", Proceedings of the 2018 International Workshop on Blockchain Oriented Software Engineering (IWBOSE), pp. 1-1, 2018. View Article  Google Scholar; 28.M. Staron, ""Requirements Engineering for Automotive Embedded Systems"", Automotive Systems and Software Engineering, pp. 11-28, 2019. CrossRef  Google Scholar; 29.B.H. Schlingloff, ""Specification and Verification of Collaborative Transport Robots"", Proceedings of the 4th International Workshop on Emerging Ideas and Trends in the Engineering of Cyber-Physical Systems (EITEC 2018), pp. 3-8, 2018. View Article  Google Scholar; 30.C. Lucena, ""A Semantic Wiki Approach to Enable Behaviour Driven Requirements Management"", Journal of Control Engineering and Applied Informatics, vol. 19, no. 4, 2017. Google Scholar"			Excluded	Excluded	new_screen			2	IEEE		A preliminary study on using acceptance tests for representing business requirements of smart contracts	https://ieeexplore.ieee.org/document/9169480	IEEE	nan; Pages; Year; Bibtex
136	Behave	Behavior-driven development as an approach to improve software quality and communication across remote business stakeholders, developers and QA:two case studies	In this work, we describe two of our experiences applying BDD: one at a large publisher of financial information and business news, and the other in a secure collaboration platform vendor. The team composition involves both a local team and an external service provider. We analyze two adoption processes, one driven by the product team, and the other driven by the development team. We cover the communication benefits and impacts on areas such as stakeholder alignment, software design, code refactoring, and bug fixing. We also discuss lessons learned, caveats and how we plan to expand this practice in the future.	distributed agile teams; industrial offshoring and outsourcing experiences; methods and processes; social and human aspects of software development	Andre Scandaroli; Rodrigo Leite; Alexis H. Kiosia; Sandro A. Coelho	ICGSE '19: Proceedings of the 14th International Conference on Global Software Engineering	https://doi.org/10.1109/ICGSE.2019.00016		95-100		Excluded	Excluded	new_screen			2	ACM		Behavior-Driven Development as an Approach to Improve Software Quality and Communication across Remote Business Stakeholders, Developers and QA: Two Case Studies	https://dl.acm.org/doi/10.1109/ICGSE.2019.00016	IEEE Press	nan; References; Year; Bibtex
137	Behave	Behavior-driven development as an approach to improve software quality and communication across remote business stakeholders, developers and QA: two case studies	In this work, we describe two of our experiences applying BDD: one at a large publisher of financial information and business news, and the other in a secure collaboration platform vendor. The team composition involves both a local team and an external service provider. We analyze two adoption processes, one driven by the product team, and the other driven by the development team. We cover the communication benefits and impacts on areas such as stakeholder alignment, software design, code refactoring, and bug fixing. We also discuss lessons learned, caveats and how we plan to expand this practice in the future.	social and human aspects of software development;  methods and processes;  industrial offshoring and outsourcing experiences;  distributed agile teams; social and human aspects of software development, methods and processes, industrial offshoring and outsourcing experiences, distributed agile teams	Scandaroli, Andr\'{e}; Leite, Rodrigo; Kiosia, Al\'{e}xis H.; Coelho, Sandro A.	ICGSE '19: Proceedings of the 14th International Conference on Global Software Engineering	https://doi.org/10.1109/ICGSE.2019.00016		95-100	"""@inproceedings{10.1109/ICGSE.2019.00016,
    author = ""Scandaroli, Andr\'{e} and Leite, Rodrigo and Kiosia, Al\'{e}xis H. and Coelho, Sandro A."",
    title = ""Behavior-driven development as an approach to improve software quality and communication across remote business stakeholders, developers and QA: two case studies"",
    year = ""2019"",
    publisher = ""IEEE Press"",
    url = ""https://doi.org/10.1109/ICGSE.2019.00016"",
    doi = ""10.1109/ICGSE.2019.00016"",
    abstract = ""In this work, we describe two of our experiences applying BDD: one at a large publisher of financial information and business news, and the other in a secure collaboration platform vendor. The team composition involves both a local team and an external service provider. We analyze two adoption processes, one driven by the product team, and the other driven by the development team. We cover the communication benefits and impacts on areas such as stakeholder alignment, software design, code refactoring, and bug fixing. We also discuss lessons learned, caveats and how we plan to expand this practice in the future."",
    booktitle = ""Proceedings of the 14th International Conference on Global Software Engineering"",
    pages = ""95-100"",
    numpages = ""6"",
    keywords = ""social and human aspects of software development, methods and processes, industrial offshoring and outsourcing experiences, distributed agile teams"",
    location = ""Montreal, Quebec, Canada"",
    series = ""ICGSE '19""
}
"""	Included	Included	new_screen			2	ACM		Behavior-Driven Development as an Approach to Improve Software Quality and Communication Across Remote Business Stakeholders, Developers and QA: Two Case Studies	https://dl.acm.org/doi/10.1109/ICGSE.2019.00016	IEEE Press	nan; References
138	Behave	Towards a behavior-oriented specification and testing language for multimodal applications	Initiated by the ubiquity of mobile devices, human computer interaction has evolved beyond the classic PCs' mouse and keyboard setup. Smartphones and tablets introduced new interaction modalities to the mass market and created the need for specialized software engineering methods. While more and more powerful SDKs are released to develop interactive applications, specifying user interaction is still ambiguous and error-prone, causing software defects as well as misunderstandings and frustration among project team members and stakeholders. We present an approach addressing this problems by demonstrating how to incorporate multimodal interaction into user acceptance tests written in near-natural language using Gherkin and formal gesture descriptions.	multimodal user interfaces; software engineering; specification	Marc Hesenius; Tobias Griebe; Volker Gruhn	EICS '14: Proceedings of the 2014 ACM SIGCHI symposium on Engineering interactive computing systems	https://doi.org/10.1145/2607023.2610278		117-122		Included	Included	new_screen			2	ACM		Towards a Behavior-Oriented Specification and Testing Language for Multimodal Applications	https://dl.acm.org/doi/10.1145/2607023.2610278	Association for Computing Machinery	nan; References; Year; Bibtex
139	Behave	Improving the prediction of files changed by programming tasks	Integration conflicts often damage software quality and developers' productivity in a collaborative development environment. For reducing merge conflicts, we could avoid asking developers to execute potentially conflicting tasks in parallel, as long as we can predict the files to be changed by each task. As manually predicting that is hard, the TAITI tool tries to do that in the context of BDD (Behaviour-Driven Development) projects, by statically analysing the automated acceptance tests that validate each task. TAITI computes the set of files that might be executed by the tests of a task (a so called test-based task interface), approximating the files that developers will change when performing the task. Although TAITI performs better than a random task interface, there is space for accuracy improvements. In this paper, we extend the interfaces computed by TAITI by including the dependences of the application files reached by the task tests. To understand the potential benefits of our extension, we evaluate precision and recall of 60 task interfaces from 8 Rails GitHub projects. The results bring evidence that the extended interface improves recall by slightly compromising precision.	Behaviour-Driven Development; Collaborative development; File change prediction	Joao Pedro Santos; Thais Rocha; Paulo Borba	SBCARS '19: Proceedings of the XIII Brazilian Symposium on Software Components, Architectures, and Reuse	https://doi.org/10.1145/3357141.3357145		53-62		Included	Included	new_screen			2	ACM		Improving the Prediction of Files Changed by Programming Tasks	https://dl.acm.org/doi/10.1145/3357141.3357145	Association for Computing Machinery	nan; References; Year; Bibtex
140	Behave	Test-Driven Java Development	About This BookExplore the most popular TDD tools and frameworks and become more proficient in building applicationsCreate applications with better code design, fewer bugs, and higher test coverage, enabling you to get them to market quicklyImplement test-driven programming methods into your development workflowsWho This Book Is For  If you're an experienced Java developer and want to implement more effective methods of programming systems and applications, then this book is for you. What You Will LearnExplore the tools and frameworks required for effective TDD developmentPerform the Red-Green-Refactor process efficiently, the pillar around which all other TDD procedures are basedMaster effective unit testing in isolation from the rest of your codeDesign simple and easily maintainable codes by implementing different techniquesUse mocking frameworks and techniques to easily write and quickly execute testsDevelop an application to implement behaviour-driven development in conjunction with unit testingEnable and disable features using Feature TogglesIn Detail  Test-driven development (TDD) is a development approach that relies on a test-first procedure that emphasises writing a test before writing the necessary code, and then refactoring the code to optimize it.  The value of performing TDD with Java, one of the most established programming languages, is to improve the productivity of programmers, the maintainability and performance of code, and develop a deeper understanding of the language and how to employ it effectively.  Starting with the basics of TDD and reasons why its adoption is beneficial, this book will take you from the first steps of TDD with Java until you are confident enough to embrace the practice in your day-to-day routine.  You'll be guided through setting up tools, frameworks, and the environment you need, and will dive right in to hands-on exercises with the goal of mastering one practice, tool, or framework at a time. You'll learn about the Red-Green-Refactor procedure, how to write unit tests, and how to use them as executable documentation.  With this book you'll also discover how to design simple and easily maintainable code, work with mocks, utilise behaviour-driven development, refactor old legacy code, and release a half-finished feature to production with feature toggles.  You will finish this book with a deep understanding of the test-driven development methodology and the confidence to apply it to application programming with Java. Style and approach  An easy-to-follow, hands-on guide to building applications through effective coding practices. This book covers practical examples by introducing different problems, each one designed as a learning exercise to help you understand each aspect of TDD.		Viktor Farcic; Alex Garcia		https://books.google.ca/books?id=tRl1CgAAQBAJ&dq=Test-Driven+Java+Development&lr=&source=gbs_navlinks_s		284	"""nan"""	Excluded	Excluded	new_screen			2	Google Scholar		Test-Driven Java Development	https://books.google.ca/books?id=tRl1CgAAQBAJ&dq=Test-Driven+Java+Development&lr=&source=gbs_navlinks_s	Packt Publishing Ltd	
141	Behave	An Industrial Case Study on Test Cases as Requirements	It is a conundrum that agile projects can succeed 'without requirements' when weak requirements engineering is a known cause for project failures. While Agile development projects often manage well without extensive requirements documentation, test cases are commonly used as requirements. We have investigated this agile practice at three companies in order to understand how test cases can fill the role of requirements. We performed a case study based on twelve interviews performed in a previous study. The findings include a range of benefits and challenges in using test cases for eliciting, validating, verifying, tracing and managing requirements. In addition, we identified three scenarios for applying the practice, namely as a mature practice, as a de facto practice and as part of an agile transition. The findings provide insights into how the role of requirements may be met in agile development including challenges to consider.		Elizabeth Bjarnason; Michael Unterkalmsteiner; Emelie Engstrom; Markus Borg	International Conference on Agile Software Development	https://doi.org/10.1007/978-3-319-18612-2_3		27-39		Included	Included	new_screen			2	Springer Link		An industrial case study on test cases as requirements	https://link.springer.com/chapter/10.1007/978-3-319-18612-2_3	Springer, Cham	nan; Keywords; References; Year; Bibtex
142	Behave	Chapter Five-Advances in Testing JavaScript-Based Web Applications	JavaScript is a flexible and expressive prototype-basedscripting languagethat is used by developers to create interactive web applications. The language is interpreted, dynamic, weakly typed, and has first-class functions. It also interacts extensively with other web languages such as CSS and HTML at runtime. All these characteristics makeJavaScript codeparticularly error-prone and challenging to analyze and test. In this chapter, we explore recent advances made in analysis and testing techniques geared toward JavaScript-based web applications. In particular, we look at recent empirical studies, testing techniques, test oracle automation approaches, test adequacy assessment methods,fault localizationand repair, andIntegrated Development Environmentsupport to help programmers write better JavaScript code.	JavaScript, Testing, Dynamic analysis, Web applications, Test adequacy, Oracles	AliMesbah*	Advances in Computers	https://doi.org/10.1016/bs.adcom.2014.12.003		201-235		Excluded	Excluded	new_screen			2	Science Direct		Chapter Five - Advances in Testing JavaScript-Based Web Applications	https://www.sciencedirect.com/science/article/abs/pii/S0065245814000114	Science Direct	nan; Keywords; References; Year; Bibtex
143	Behave	Mastering Symfony	About This BookCreate a robust and reliable Symfony development pipeline using Amazon's cloud platformCut development and maintenance costs by defining crystal clear features and possible scenarios for each feature before implementationFollow detailed examples provided in each chapter to create a task management applicationWho This Book Is For  If you are a PHP developer with some experience in Symfony and are looking to master the framework and use it to its full potential, then this book is for you. Though experience with PHP, object-oriented techniques, and Symfony basics is assumed, this book will give you a crash course on the basics and then proceed to more advanced topics. What You Will LearnInstall and configure Symfony and required third-party bundles to develop a task management applicationSet up a continuous integration server to orchestrate automatic builds every time you add a new feature to your projectReduce maintenance costs dramatically using Behaviour Driven Development (BDD)Create a slick user interface using the Bootstrap frameworkDesign robust business logic using DoctrineBuild a comprehensive dashboard and secure your project using the Sonata projectImprove performance using Redis, Memcache, and VarnishCreate customized Symfony commands and add them to your consoleIn Detail  In this book, you will learn some lesser known aspects of development with Symfony, and you will see how to use Symfony as a framework to create reliable and effective applications. You might have developed some impressive PHP libraries in other projects, but what is the point when your library is tied to one particular project? With Symfony, you can turn your code into a service and reuse it in other projects.  This book starts with Symfony concepts such as bundles, routing, twig, doctrine, and more, taking you through the request/response life cycle. You will then proceed to set up development, test, and deployment environments in AWS. Then you will create reliable projects using Behat and Mink, and design business logic, cover authentication, and authorization steps in a security checking process. You will be walked through concepts such as DependencyInjection, service containers, and services, and go through steps to create customized commands for Symfony's console. Finally, the book covers performance optimization and the use of Varnish and Memcached in our project, and you are treated with the creation of database agnostic bundles and best practices. Style and approach  A step-by-step guide to mastering Symfony while developing a task management application. Each chapter comes with detailed examples.		Sohail Salehi		https://books.google.ca/books?id=r9zJDAAAQBAJ&dq=Mastering+Symfony&lr=&source=gbs_navlinks_s		290	"""nan"""	Excluded	Excluded	new_screen			2	Google Scholar		Mastering Symfony	https://books.google.ca/books?id=r9zJDAAAQBAJ&dq=Mastering+Symfony&lr=&source=gbs_navlinks_s	Packt Publishing Ltd	
144	Behave	RSpec Essentials	About This BookExplore the concept of testability and how to implement tests that deliver the most valueMaximize the quality of your Ruby code through a wide variety of testsMaster the real-world tradeoffs of testing through detailed examples supported by in-depth discussionWho This Book Is For  This book is aimed at the software engineer who wants to make their code more reliable and their development process easier. It is also aimed at test engineers who need to automate the testing of complex systems. Knowledge of Ruby is helpful, but even someone new to the language should find it easy to follow the code and tests. What You Will LearnIdentify a unit of software for the purposes of testingManage test states with hooks, fixtures, and mocksHandle external web services in tests using various techniquesConfigure RSpec flexibly and cleanly using support code and environment variablesInteract with rich web apps in tests using CapybaraBuild the right feature with behavior-driven developmentCustomize matchers and failure messagesVerify correct development and production environmentsIn Detail  This book will teach you how to use RSpec to write high-value tests for real-world code. We start with the key concepts of the unit and testability, followed by hands-on exploration of key features. From the beginning, we learn how to integrate tests into the overall development process to help create high-quality code, avoiding the dangers of testing for its own sake.  We build up sample applications and their corresponding tests step by step, from simple beginnings to more sophisticated versions that include databases and external web services. We devote three chapters to web applications with rich JavaScript user interfaces, building one from the ground up using behavior-driven development (BDD) and test-driven development (TDD).  The code examples are detailed enough to be realistic while simple enough to be easily understood. Testing concepts, development methodologies, and engineering tradeoffs are discussed in detail as they arise. This approach is designed to foster the reader's ability to make well-informed decisions on their own. Style and approach  This comprehensive tutorial is packed with real-world examples of testing with RSpec. The most important features of RSpec are introduced in the early chapters and are used in examples of growing complexity in the following chapters. Concepts and methodologies are discussed in detail.		Mani Tadayon		https://books.google.ca/books?id=0dvJDAAAQBAJ&dq=RSpec+Essentials&lr=&source=gbs_navlinks_s		222	"""nan"""	Excluded	Excluded	new_screen			2	Google Scholar		RSpec Essentials	https://books.google.ca/books?id=0dvJDAAAQBAJ&dq=RSpec+Essentials&lr=&source=gbs_navlinks_s	Packt Publishing Ltd	
145	Behave	Crowdsourced Behavior-Driven Development	Key to the effectiveness of crowdsourcing approaches for software engineering is workflow design, describing how complex work is organized into small, relatively independent microtasks. This paper, we introduce a Behavior-Driven Development (BDD) workflow for accomplishing programming work through self-contained microtasks, implemented as a preconfigured environment called CrowdMi-croservices. In our approach, a client, acting on behalf of a software team, describes a microservice as a set of endpoints with paths, requests, and responses. A crowd then implements the endpoints, identifying individual endpoint behaviors that they test, implement, debug, create new functions, and interact with persistence APIs as needed. To evaluate our approach, we conducted a feasibility study in which a small crowd worked to implement a small ToDo microservice. The crowd created an implementation with only four defects, completing 350 microtasks and implementing 13 functions. We discuss the implications of these findings for incorporating crowdsourced programming contributions into traditional software projects.	Microtask programming; Programming environments; Behavior-Driven Development; Crowdsourcing; Workflow; Microservices; Microtask programming;  Programming environments;  Behavior-Driven Development;  Crowdsourcing;  Workflow;  Microservices	Aghayi, Emad; LaToza, Thomas D.; Surendra, Paurav; Abolghasemi, Seyedmeysam	JOURNAL OF SYSTEMS AND SOFTWARE	https://doi.org/10.1016/j.jss.2020.110840	Aghayi, E.; Andres, H.P., Zmud, R.W.; Beck, K.Test-Driven Development: by Example(2003) .Cited 1665 times.Addison-Wesley Professional; Bernstein, M.S., Little, G., Miller, R.C., Hartmann, B., Ackerman, M.S., Karger, D.R., Crowell, D., (...), Panovich, K.; Bounov, D., Derossi, A., Menarini, M., Griswold, W.G., Lerner, S.; Chen, N., Kim, S.; Chen, Y., Lee, S.W., Xie, Y., Yang, Y., Lasecki, W.S., Oney, S.; Doan, A., Ramakrishnan, R., Halevy, A.Y.; Dubey, A., LaToza, T., Aghayi, E.Crowd microservices hackathon: Utilizing crowdsourcing for microtask programming on a large-scale(2019)J. Stud.-Sci. Res.; Fagerholm, F., Sanchez Guinea, A., Borenstein, J., Munch, J.; Ghosh, R.A.Understanding free software developers: Findings from the FLOSS study(2005)Perspect. Free Open Sour. Softw., pp. 23-47.Cited 112 times.; Goldman, M.Software Development with Real-time Collaborative Editing(2012) .Cited 10 times.(Ph.D. thesis) Massachusetts Institute of Technology; Goldman, M., Little, G., Miller, R.C.; Goldman, M., Stockbauer, J.W., McAuliffe, T.G.; Gomez, L.A.C.Analysis of the Impact of Test Based Development Techniques (TDD, BDD, and ATDD) to the Software Life Cycle(2018) .Cited 3 times.(Ph.D. thesis) Polytechnic of Leiria; Hoseini, M., Saghafi, F., Aghayi, E.A multidimensional model of knowledge sharing behavior in mobile social networks(2018)Kybernetes; InnerSourceCommons, M.Behavior driven development(2020)URLhttps://rb.gy/41oym6; Jergensen, C., Sarma, A., Wagstrom, P.; Jiang, H., Matsubara, S.; Kim, J., Sterman, S., Cohen, A.A.B., Bernstein, M.S.; Kittur, A., Nickerson, J.V., Bernstein, M.S., Gerber, E.M., Shaw, A., Zimmerman, J., Lease, M., (...), Horton, J.J.; Kittur, A., Smus, B., Khamkar, S., Kraut, R.E.; Lasecki, W.S., Kim, J., Rafter, N., Sen, O., Bigham, J.P., Bernstein, M.S.; La Toza, T.D., Chen, M., Jiang, L., Zhao, M., Van Der Hoek, A.; LaToza, T.D., Di Lecce, A., Ricci, F., Towne, B., Van der Hoek, A.Microtask programming(2018)Trans. Softw. Eng., pp. 1-20.Cited 4 times.; LaToza, T.D., Van Der Hoek, A.; Latoza, T.D., Di Lecce, A., Ricci, F., Towne, W.B., Van Der Hoek, A.; LaToza, T.D., Towne, W.B., Adriano, C.M.(2014) , pp. 43-54.Van Der Hoek, A. Microtask programming: Building software with a crowd. In: Symposium on User Interface Software and Technology.; Latoza, T.D., Ben Towne, W., Van Der Hoek, A., Herbsleb, J.D.; Lee, S.W., Krosnick, R., Park, S.Y., Keelean, B., Vaidya, S., O'Keefe, S.D., Lasecki, W.S.; Lerner, S., Foster, S.R., Griswold, W.G.; Li, K., Xiao, J., Wang, Y., Wang, Q.; Mao, K., Capra, L., Harman, M., Jia, Y.; Nebeling, M., Leone, S., Norrie, M.C.; North, D.Introducing behaviour driven development(2006)Better Softw. Mag..Cited 41 times.; Rahman, M., Gao, J.; Retelny, D., Bernstein, M.S., Valentine, M.A.No workflow can ever be enough: How crowdsourcing workflows constrain complex work(2017)Conf. Comput.-Support. Coop. Work Social Comput., pp. 1-23.; Saengkhattiya, M., Sevandersson, M., Vallejo, U.Quality in Crowdsourcing-How Software Quality Is Ensured in Software Crowdsourcing(2012) , pp. 1-80.Cited 8 times.Department of Informatics, Lund University; Saito, S., Iimura, Y., Aghayi, E., Latoza, T.D.; Schiller, T.W., Ernst, M.D.; Smart, J.F.BDD in Action, Vol. 12(2014)Manning Publications New York; Steinmacher, I., Graciotto Silva, M.A., Gerosa, M.A., Redmiles, D.F.; Stol, K.-J., Fitzgerald, B.; Straus, S.G., McGrath, J.E.; Von Krogh, G., Spaeth, S., Lakhani, K.R.; Warner, J., Guo, P.J.; Weidema, E.R.Q., Lopez, C., Nayebaziz, S., Spanghero, F., Van Der Hoek, A.; Zanatta, A.L., Machado, L., Steinmacher, I.		"""@article{WOS:000592499600005,
    Author = ""Aghayi, Emad and LaToza, Thomas D. and Surendra, Paurav and Abolghasemi, Seyedmeysam"",
    Title = ""Crowdsourced Behavior-Driven Development"",
    Journal = ""JOURNAL OF SYSTEMS AND SOFTWARE"",
    Year = ""2021"",
    Volume = ""171"",
    Month = ""JAN"",
    Abstract = ""Key to the effectiveness of crowdsourcing approaches for software engineering is workflow design, describing how complex work is organized into small, relatively independent microtasks. This paper, we introduce a Behavior-Driven Development (BDD) workflow for accomplishing programming work through self-contained microtasks, implemented as a preconfigured environment called CrowdMi-croservices. In our approach, a client, acting on behalf of a software team, describes a microservice as a set of endpoints with paths, requests, and responses. A crowd then implements the endpoints, identifying individual endpoint behaviors that they test, implement, debug, create new functions, and interact with persistence APIs as needed. To evaluate our approach, we conducted a feasibility study in which a small crowd worked to implement a small ToDo microservice. The crowd created an implementation with only four defects, completing 350 microtasks and implementing 13 functions. We discuss the implications of these findings for incorporating crowdsourced programming contributions into traditional software projects. (c) 2020 Elsevier Inc. All rights reserved."",
    Publisher = ""ELSEVIER SCIENCE INC"",
    Address = ""STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA"",
    Type = ""Article"",
    Language = ""English"",
    Affiliation = ""Aghayi, E; LaToza, TD (Corresponding Author), George Mason Univ, Dept Comp Sci, 4400 Univ Dr, Fairfax, VA 22030 USA. Aghayi, Emad; LaToza, Thomas D.; Surendra, Paurav, George Mason Univ, Dept Comp Sci, 4400 Univ Dr, Fairfax, VA 22030 USA. Abolghasemi, Seyedmeysam, Old Dominion Univ, 1112 Monarch Hall, Norfolk, VA 23529 USA."",
    DOI = ""10.1016/j.jss.2020.110840"",
    Article-Number = ""110840"",
    ISSN = ""0164-1212"",
    EISSN = ""1873-1228"",
    Keywords = ""Microtask programming; Programming environments; Behavior-Driven Development; Crowdsourcing; Workflow; Microservices"",
    Research-Areas = ""Computer Science"",
    Web-of-Science-Categories = ""Computer Science, Software Engineering; Computer Science, Theory \\& Methods"",
    Author-Email = ""eaghayi@gmu.edu tlatoza@gmu.edu psurendr@gmu.edu sabolgha@cs.odu.edu"",
    Affiliations = ""George Mason University; Old Dominion University"",
    ResearcherID-Numbers = ""Aghayi, Emad/L-8198-2019"",
    Funding-Acknowledgement = ""National Science Foundation {[}CCF-1414197, CCF-1845508]"",
    Funding-Text = ""This research project was supported in part by the National Science Foundation under grants CCF-1414197 and CCF-1845508."",
    Number-of-Cited-References = ""46"",
    Times-Cited = ""4"",
    Usage-Count-Last-180-days = ""0"",
    Usage-Count-Since-2013 = ""9"",
    Journal-ISO = ""J. Syst. Softw."",
    Doc-Delivery-Number = ""OV9CU"",
    Web-of-Science-Index = ""Science Citation Index Expanded (SCI-EXPANDED)"",
    Unique-ID = ""WOS:000592499600005"",
    OA = ""Bronze"",
    DA = ""2024-10-22""
}
"""	Included	Included	new_screen			2	Web of Science		Crowdsourced Behavior-Driven Development	https://www.webofscience.com/wos/woscc/full-record/WOS:000592499600005	ELSEVIER SCIENCE INC	nan; Pages
146	Behave	Using language workbenches and domain-specific languages for safety-critical software development	Language workbenches support the efficient creation, integration, and use of domain-specific languages. Typically, they execute models by code generation to programming language code. This can lead to increased productivity and higher quality. However, in safety-/mission-critical environments, generated code may not be considered trustworthy, because of the lack of trust in the generation mechanisms. This makes it harder to justify the use of language workbenches in such an environment. In this paper, we demonstrate an approach to use such tools in critical environments. We argue that models created with domain-specific languages are easier to validate and that the additional risk resulting from the transformation to code can be mitigated by a suitably designed transformation and verification architecture. We validate the approach with an industrial case study from the healthcare domain. We also discuss the degree to which the approach is appropriate for critical software in space, automotive, and robotics systems.	Domain-specific languages; Safety-critical software development; Case study; Language workbenches; Domain-specific languages;  Safety-critical software development;  Case study;  Language workbenches	Voelter, Markus; Kolb, Bernd; Birken, Klaus; Tomassetti, Federico; Alff, Patrick; Wiart, Laurent; Wortmann, Andreas; Nordmann, Arne	SOFTWARE AND SYSTEMS MODELING	https://doi.org/10.1007/s10270-018-0679-0	"citation_journal_title=J. Object Technol.; citation_title=Formal verification techniques for model transformations: a tridimensional classification; citation_author=M Amrani, B Combemale, L Lucio, GMK Selim, J Dingel, YL Traon, H Vangheluwe, JR Cordy; citation_volume=14; citation_issue=3; citation_publication_date=2015; citation_pages=1:1-43; citation_doi=10.5381/jot.2015.14.3.a1; citation_id=CR1; citation_journal_title=IEEE Secur. Priv.; citation_title=Software penetration testing; citation_author=B Arkin, S Stender, G McGraw; citation_volume=3; citation_issue=1; citation_publication_date=2005; citation_pages=84-87; citation_doi=10.1109/MSP.2005.23; citation_id=CR2; Beine, M., Otterbach, R., Jungmann, M.: Development of safety-critical software using automatic code generation. Technical Report, SAE Technical Paper (2004); citation_title=Implementing Domain-Specific Languages with Xtext and Xtend; citation_publication_date=2016; citation_id=CR4; citation_author=L Bettini; citation_publisher=Packt Publishing Ltd; citation_title=Software Engineering Economics; citation_publication_date=1981; citation_id=CR5; citation_author=BW Boehm; citation_publisher=Prentice-hall; Broy, M., Kirstan, S., Krcmar, H., Schatz, B., Zimmermann, J.: What is the benefit of a model-based design of embedded software systems in the car industry? Softw Des Dev Concepts Methodol Tools Appl Concepts Methodol Tools Appl, p.310 (2013). 
                    https://doi.org/10.4018/978-1-4666-4301-7.ch017; citation_journal_title=IEEE Softw.; citation_title=The impact of tools on software productivity; citation_author=T Bruckhaus, N Madhavii, I Janssen, J Henshaw; citation_volume=13; citation_issue=5; citation_publication_date=1996; citation_pages=29-38; citation_doi=10.1109/52.536456; citation_id=CR7; Buckl, C., Regensburger, M., Knoll, A., Schrott, G.: Models for automatic generation of safety-critical real-time systems. In: ARES 2007 Conference. IEEE (2007); citation_journal_title=ACM SIGPLAN Not.; citation_title=A verified compiler for an impure functional language; citation_author=A Chlipala; citation_volume=45; citation_publication_date=2010; citation_pages=93-106; citation_doi=10.1145/1707801.1706312; citation_id=CR9; citation_journal_title=Acm SIGPLAN Not.; citation_title=Quickcheck: a lightweight tool for random testing of haskell programs; citation_author=K Claessen, J Hughes; citation_volume=46; citation_issue=4; citation_publication_date=2011; citation_pages=53-64; citation_doi=10.1145/1988042.1988046; citation_id=CR10; Conmy, P., Paige, R.F.: Challenges when using model driven architecture in the development of safety critical software. In: 4th Intl. Workshop on Model-Based Methodologies for Pervasive and Embedded Software. IEEE (2007); Conrad, M.: Verification and validation according to iso 26262: a workflow to facilitate the development of high-integrity software. In: ERTS2 Conference 2012; Cousot, P., Cousot, R., Feret, J., Mauborgne, L., Mine, A., Monniaux, D., Rival, X.: The astree analyzer. In: Esop, vol. 5, pp. 21-30. Springer (2005); Cuoq, P., Kirchner, F., Kosmatov, N., Prevosto, V., Signoles, J., Yakobowski, B.: Frama-c. In: International Conference on Software Engineering and Formal Methods. Springer (2012); Dahlweid, M., Moskal, M., Santen, T., Tobies, S., Schulte, W.: Vcc: Contract-based modular verification of concurrent c. In: ICSE Companion (2009); Dormoy, F.-X.: Scade 6: a model based solution for safety critical software development. In: Proceedings of the 4th European Congress on Embedded Real Time Software (ERTS'08), pp. 1-9 (2008); Erdweg, S., Van Der Storm, T., Volter, M., Boersma, M., Bosman, R., Cook, W. R., Gerritsen, A., Hulshout, A., Kelly, S., Loh, A., et al.: The state of the art in language workbenches. In: International Conference on Software Language Engineering, pp. 197-217. Springer (2013); Eysholdt, M.: Executable specifications for xtext. Website (2014). 
                    http://www.xpect-tests.org/; citation_journal_title=ACM SIGPLAN Not.; citation_title=Pop-pl: a patient-oriented prescription programming language; citation_author=SP Florence, B Fetscher, M Flatt, WH Temps, T Kiguradze, DP West, C Niznik, PR Yarnold, RB Findler, SM Belknap; citation_volume=51; citation_publication_date=2015; citation_pages=131-140; citation_doi=10.1145/2936314.2814221; citation_id=CR19; Gorke, S., Riebeling, R., Kraus, F., Reichel, R.: Flexible platform approach for fly-by-wire systems. In: 2013 IEEE/AIAA Digital Avionics Systems Conference. IEEE (2013); citation_journal_title=Ann. Rev. Control; citation_title=Programming languages for use in safety-related applications; citation_author=WA Halang, J Zalewski; citation_publication_date=2003; citation_id=CR21; citation_title=Patterns for Fault Tolerant Software; citation_publication_date=2013; citation_id=CR22; citation_author=R Hanmer; citation_publisher=Wiley; Hart, B.: Sdr security threats in an open source world. In: Software Defined Radio Conference, pp. 3-5 (2004); Haxthausen, A.E., Peleska, J.: A domain specific language for railway control systems. In: Proc. of the 6th biennial world conference on integrated design and process technology (2002); Hermans, F., Pinzger, M., Van Deursen, A.: Domain-specific languages in practice: a user study on the success factors. In: International Conference on Model Driven Engineering Languages and Systems, pp. 423-437. Springer (2009); citation_journal_title=ACM SIGPLAN Not.; citation_title=Building embedded systems with embedded dsls; citation_author=PC Hickey, L Pike, T Elliott, J Bielman, J Launchbury; citation_volume=49; citation_publication_date=2014; citation_pages=3-9; citation_doi=10.1145/2692915.2628146; citation_id=CR26; citation_title=Spin Model Checker, the: Primer and Reference Manual; citation_publication_date=2003; citation_id=CR27; citation_author=G Holzmann; citation_publisher=Addison-Wesley Professional; Huang, W.-l., Peleska, J.: Exhaustive model-based equivalence class testing. In: IFIP International Conference on Testing Software and Systems, pp. 49-64. Springer (2013); Karna, J., Tolvanen, J.-P., Kelly, S.: Evaluating the use of domain-specific modeling in practice. In: Proceedings of the 9th OOPSLA Workshop on Domain-Specific Modeling (2009); citation_journal_title=ACM SIGPLAN Not.; citation_title=Integrated language definition testing: enabling test-driven language development; citation_author=LC Kats, R Vermaas, E Visser; citation_volume=46; citation_publication_date=2011; citation_pages=139-154; citation_doi=10.1145/2076021.2048080; citation_id=CR30; Kieburtz, R. B., McKinney, L., Bell, J. M., Hook, J., Kotov, A., Lewis, J., Oliva, D. P., Sheard, T., Smith, I., Walton, L.: A software engineering experiment in software component generation. In: Proceedings of the 18th International Conference on Software Engineering, pp. 542-552. IEEE Computer Society (1996); Koopman, P.: Embedded Software Costs 15-40 per line of code (Update: 25-50). 
                    http://bit.ly/29QHOlo
                    
                   (URL too long); Koopman, P.: Risk areas in embedded software industry projects. In: 2010 Workshop on Embedded Systems Education. ACM (2010); citation_journal_title=Empir. Softw. Eng.; citation_title=Program comprehension of domain-specific and general-purpose languages: comparison using a family of experiments; citation_author=T Kosar, M Mernik, JC Carver; citation_volume=17; citation_issue=3; citation_publication_date=2012; citation_pages=276-304; citation_doi=10.1007/s10664-011-9172-x; citation_id=CR34; Kroening, D., Tautschnig, M.: Cbmc-c bounded model checker. In: International Conference on Tools and Algorithms for the Construction and Analysis of Systems, pp. 389-391. Springer (2014); Kuhn, A., Murphy, G.C., Thompson, C.A.: An exploratory study of forces and frictions affecting large-scale model-driven development. In: International Conference on Model Driven Engineering Languages and Systems, pp. 352-367. Springer (2012); citation_journal_title=ACM SIGPLAN Not.; citation_title=Cakeml: a verified implementation of ml; citation_author=R Kumar, MO Myreen, M Norrish, S Owens; citation_volume=49; citation_publication_date=2014; citation_pages=179-191; citation_id=CR37; Lammel, R.: Grammar testing. In: Proceedings of the 4th International Conference on Fundamental Approaches to Software Engineering (2001); Ledinot, E., Astruc, J.-M., Blanquart, J.-P., Baufreton, P., Boulanger, J.-L., Delseny, H., Gassino, J., Ladier, G., Leeman, M., Machrouh, J., et al.: A cross-domain comparison of software development assurance standards. In: Proc. of ERTS 2012; citation_journal_title=Commun. ACM; citation_title=Formal verification of a realistic compiler; citation_author=X Leroy; citation_volume=52; citation_issue=7; citation_publication_date=2009; citation_pages=107-115; citation_doi=10.1145/1538788.1538814; citation_id=CR40; Lewis, J.: Cryptol: specification, implementation and verification of high-grade cryptographic applications. In: Proceedings of the 2007 ACM workshop on Formal methods in security engineering, pp. 41-41. ACM (2007); Liebel, G., Marko, N., Tichy, M., Leitner, A., Hansson, J.: Assessing the state-of-practice of model-based engineering in the embedded systems domain. In: International Conference on Model Driven Engineering Languages and Systems, pp. 166-182. Springer (2014); citation_journal_title=IEEE Softw.; citation_title=Trends in embedded software engineering; citation_author=P Liggesmeyer, M Trapp; citation_volume=26; citation_issue=3; citation_publication_date=2009; citation_pages=19-25; citation_doi=10.1109/MS.2009.80; citation_id=CR43; Lucio, L., Barroca, B., Amaral, V.: A technique for automatic validation of model transformations. In: MODELS 2010. Springer (2010); Mery, D., Schatz, B., Wassyng, A.: The pacemaker challenge: developing certifiable medical devices (dagstuhl seminar 14062). In: Dagstuhl Reports, vol. 4. Schloss Dagstuhl-Leibniz-Zentrum fuer Informatik (2014); Michailidis, A., Spieth, U., Ringler, T., Hedenetz, B., Kowalewski, S.: Test front loading in early stages of automotive software development based on autosar. In: DATE 2010. IEEE; Motor Industry Software Reliability Association and Motor Industry Software Reliability Association staff: MISRA C: 2012: Guidelines for the Use of the C Language in Critical Systems. Motor Industry Research Association (2013); Molotnikov, Z., Volter, M., Ratiu, D.: Automated domain-specific c verification with mbeddr. In: Proceedings of the 29th ACM/IEEE International Conference on Automated Software Engineering, pp. 539-550. ACM (2014); Munier, P.: Polyspace(r). Industrial Use of Formal Methods: Formal Verification, pp. 123-153 (2012). 
                    https://www.mathworks.com/products/polyspace.html
                    
                  . Accessed 10 Apr 2018; citation_title=Software Reliability; citation_publication_date=1976; citation_id=CR50; citation_author=G J Myers; citation_publisher=Wiley; citation_journal_title=Commun. ACM; citation_title=A controlled experiment in program testing and code walkthroughs/inspections; citation_author=GJ Myers; citation_volume=21; citation_issue=9; citation_publication_date=1978; citation_pages=760-768; citation_doi=10.1145/359588.359602; citation_id=CR51; Nguyen-Tuong, A., Guarnieri, S., Greene, D., Shirley, J., Evans, D.: Automatically hardening web applications using precise tainting. In: IFIP International Information Security Conference. Springer, (2005); citation_journal_title=ACM Trans. Embed. Comput. Syst. (TECS); citation_title=Safety-critical medical device development using the upp2sf model translation tool; citation_author=M Pajic, Z Jiang, I Lee, O Sokolsky, R Mangharam; citation_volume=13; citation_issue=4s; citation_publication_date=2014; citation_pages=127; citation_id=CR53; Ratiu, D., Voelter, M.: Automated testing of DSL implementations. In: 11th IEEE/ACM International Workshop on Automation of Software Test (AST 2016) (2016); Ratiu, D., Schaetz, B., Voelter, M., Kolb, B.: Language engineering as an enabler for incrementally defined formal analyses. In: Proceedings of the First International Workshop on Formal Methods in Software Engineering: Rigorous and Agile Approaches, pp. 9-15. IEEE Press (2012); Ratiu, D., Zeller, M., Killian, L.: Safety.lab: model-based domain specific tooling for safety argumentation. In: International Conference on Computer Safety, Reliability, and Security, pp. 72-82. Springer (2014); Reveillere, L., Merillon, F., Consel, C., Marlet, R., Muller, G.: A dsl approach to improve productivity and safety in device drivers development. In: ASE 2000. IEEE; Santhanam, V.: The anatomy of an faa-qualifiable ada subset compiler. In: ACM SIGAda Ada Letters, vol. 23, pp. 40-43. ACM (2002); Svendsen, A., Olsen, G. K., Endresen, J., Moen, T., Carlson, E., Alme, K.-J., Haugen, O.: The future of train signaling. In: International Conference on Model Driven Engineering Languages and Systems, pp. 128-142. Springer (2008); citation_journal_title=Procedia Comput. Sci.; citation_title=Metamodeling for medical devices: code generation, model-debugging and run-time synchronization; citation_author=J-P Tolvanen, V Djukic, A Popovic; citation_volume=63; citation_publication_date=2015; citation_pages=539-544; citation_doi=10.1016/j.procs.2015.08.382; citation_id=CR60; citation_journal_title=ACM SIGPLAN Not.; citation_title=Domain-specific languages: an annotated bibliography; citation_author=A Deursen, P Klint, J Visser; citation_volume=35; citation_issue=6; citation_publication_date=2000; citation_pages=26-36; citation_doi=10.1145/352029.352035; citation_id=CR61; Vergu, V., Neron, P., Visser, E.: Dynsem: A dsl for dynamic semantics specification. Technical Report, Delft University of Technology, Software Engineering Research Group (2015); Visser, E., Wachsmuth, G., Tolmach, A., Neron, P., Vergu, V., Passalaqua, A., Konat, G.: A language designer's workbench: a one-stop-shop for implementation and verification of language designs. In: Proc. of the 2014 ACM International Symposium on New Ideas, New Paradigms, and Reflections on Programming and Software. ACM (2014); Voelter, M.: Language and ide modularization and composition with mps. In: Generative and Transformational Techniques in Software Engineering IV, pp. 383-430. Springer (2013); citation_title=Generic Tools, Specific Languages; citation_publication_date=2014; citation_id=CR65; citation_author=M Voelter; citation_publisher=TU Delft Delft University of Technology; Voelter, M., Lisson, S.: Supporting diverse notations in MPS' Projectional Editor. GEMOC Workshop; Voelter, M., Molotnikov, Z., Kolb, B.: Towards improving software security using language engineering and mbeddr c. In: Proceeding of the Workshop on Domain-Specific Modeling 2015, pp. 55-62. Pittsburgh, PA, USA, 27-27 October 2015; citation_journal_title=Autom. Softw. Eng.; citation_title=mbeddr: Instantiating a language workbench in the embedded software domain; citation_author=M Voelter, D Ratiu, B Kolb, B Schaetz; citation_volume=20; citation_issue=3; citation_publication_date=2013; citation_pages=339-390; citation_doi=10.1007/s10515-013-0120-4; citation_id=CR68; Voelter, M., Ratiu, D., Tomassetti, F.: Requirements as first-class citizens: integrating requirements closely with implementation artifacts. In: ACESMB@ MoDELS (2013); Voelter, M., Deursen, A. v., Kolb, B., Eberle, S.: Using C language extensions for developing embedded software: a case study In: Proceedings of the 2015 ACM SIGPLAN International Conference on Object-Oriented Programming, Systems, Languages, and Applications, pp. 655-674, Pittsburgh, PA, USA, 25-30 October 2015; Voelter, M., van Deursen, A., Kolb, B., Eberle, S.: Using c language extensions for developing embedded software: a case study. In: OOPSLA 2015 (2015); Voelter, M., Kolb, B., Szabo, T., Ratiu, D., van Deursen, A.: Lessons learned from developing mbeddr: a case study in language engineering with mps. Softw. Syst. Model., pp. 1-46 (2017). 
                    https://doi.org/10.1007/s10270-016-0575-4; Voelter, M., SzabO, T., Engelmann, B.: An Overview of Program Analysis using Formal Methods. Self-published (2017). 
                    http://voelter.de/data/books/introToFormalMethodsAndDSLs-1.0.pdf; citation_journal_title=Electron. Notes Theor. Comput. Sci.; citation_title=Modular architectural representation and analysis of fault propagation and transformation; citation_author=M Wallace; citation_volume=141; citation_issue=3; citation_publication_date=2005; citation_pages=53-71; citation_doi=10.1016/j.entcs.2005.02.051; citation_id=CR74; citation_journal_title=IEEE Softw.; citation_title=Comparison of structural test coverage metrics; citation_author=M Weiser, JD Gannon, PR McMullin; citation_volume=2; citation_issue=2; citation_publication_date=1985; citation_pages=80; citation_doi=10.1109/MS.1985.230356; citation_id=CR75; Whalen, M.W., Heimdahl, M.P.E.: An approach to automatic code generation for safety-critical systems. In: 14th IEEE International Conference on Automated Software Engineering, 1999, pp 315-318. IEEE (1999); citation_journal_title=Commun. ACM; citation_title=Computational thinking; citation_author=JM Wing; citation_volume=49; citation_issue=3; citation_publication_date=2006; citation_pages=33-35; citation_doi=10.1145/1118178.1118215; citation_id=CR77; Wortmann, A., Beet, M.: Domain specific languages for efficient satellite control software development. In: DASIA 2016, vol 736 (2016); Wu, H., Gray, J.G., Mernik, M.: Unit testing for domain-specific languages. In: Domain-Specific Languages, IFIP TC 2 Working Conference, DSL 2009, Oxford, UK, July 15-17, 2009, Proceedings, pp. 125-147 (2009)"	2507-2530	"""@article{WOS:000475599900006,
    Author = ""Voelter, Markus and Kolb, Bernd and Birken, Klaus and Tomassetti, Federico and Alff, Patrick and Wiart, Laurent and Wortmann, Andreas and Nordmann, Arne"",
    Title = ""Using language workbenches and domain-specific languages for safety-critical software development"",
    Journal = ""SOFTWARE AND SYSTEMS MODELING"",
    Year = ""2019"",
    Volume = ""18"",
    Number = ""4"",
    Pages = ""2507-2530"",
    Month = ""AUG"",
    Abstract = ""Language workbenches support the efficient creation, integration, and use of domain-specific languages. Typically, they execute models by code generation to programming language code. This can lead to increased productivity and higher quality. However, in safety-/mission-critical environments, generated code may not be considered trustworthy, because of the lack of trust in the generation mechanisms. This makes it harder to justify the use of language workbenches in such an environment. In this paper, we demonstrate an approach to use such tools in critical environments. We argue that models created with domain-specific languages are easier to validate and that the additional risk resulting from the transformation to code can be mitigated by a suitably designed transformation and verification architecture. We validate the approach with an industrial case study from the healthcare domain. We also discuss the degree to which the approach is appropriate for critical software in space, automotive, and robotics systems."",
    Publisher = ""SPRINGER HEIDELBERG"",
    Address = ""TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY"",
    Type = ""Article"",
    Language = ""English"",
    Affiliation = ""Voelter, M (Corresponding Author), Itemis AG, Stuttgart, Germany. Voelter, Markus; Kolb, Bernd; Birken, Klaus, Itemis AG, Stuttgart, Germany. Tomassetti, Federico, TripAdvisor \\& Groupon, Lyon, France. Alff, Patrick; Wiart, Laurent, Voluntis, Paris, France. Wortmann, Andreas, OHB Syst AG, Bremen, Germany. Nordmann, Arne, Bosch Corp Res, Stuttgart, Germany."",
    DOI = ""10.1007/s10270-018-0679-0"",
    ISSN = ""1619-1366"",
    EISSN = ""1619-1374"",
    Keywords = ""Domain-specific languages; Safety-critical software development; Case study; Language workbenches"",
    Keywords-Plus = ""EMBEDDED SOFTWARE; MBEDDR"",
    Research-Areas = ""Computer Science"",
    Web-of-Science-Categories = ""Computer Science, Software Engineering"",
    Author-Email = ""voelter@acm.org kolb@itemis.de birken@itemis.de federico@tomassetti.me Patrick.Alff@voluntis.com Laurent.Wiart@voluntis.com andreas.wortmann@ohb.de arne.nordmann@de.bosch.com"",
    Affiliations = ""OHB SE"",
    Number-of-Cited-References = ""79"",
    Times-Cited = ""16"",
    Usage-Count-Last-180-days = ""0"",
    Usage-Count-Since-2013 = ""1"",
    Journal-ISO = ""Softw. Syst. Model."",
    Doc-Delivery-Number = ""IJ0OR"",
    Web-of-Science-Index = ""Science Citation Index Expanded (SCI-EXPANDED)"",
    Unique-ID = ""WOS:000475599900006"",
    DA = ""2024-10-22""
}
"""	Excluded	Excluded	new_screen			2	Web of Science		Using Language Workbenches and Domain-Specific Languages for Safety-Critical Software Development	https://link.springer.com/article/10.1007/s10270-018-0679-0	SPRINGER HEIDELBERG	
147	Behave	Instant RSpec Test - Driven Development How-to	Learn RSpec and redefine your approach towards software development Overview Learn something new in an Instant! A short, fast, focused guide delivering immediate results Learn how to use RSpec with Rails Easy to read and grok examples Write idiomatic specifications In Detail RSpec is a behaviour driven development framework for Ruby programmers. It comes integrated with its own mocking framework based on Jmock. This book introduces you to RSpec helping you to write idiomatic specifications for Ruby code in a test first approach. Instant RSpec Test-Driven Development How-to is filled with examples of actual code accompanied by explanations and covers general Ruby, Rails, and RSpec use cases plus a few of the more advanced topics. RSpec Test Driven Development is written on the premise that you will need no experience with RSpec and limited experience with Ruby, Rails, and TDD fundamentals. Youll begin by writing a very simple Ruby library in true TDD fashion and and use the red, green, refactor tools to migrate this library into a Rails application. Instant RSpec Test-Driven Development How-to will teach you the actual steps performed in writing an idiomatic specification. You will be able to write a test for the code you wish you had, and learn to write only the minimum code necessary to pass a test, and write more specifications to drive out the production functionality your application will need. Through the course of the book, you will convert a Ruby program into a new Rails application, test Rails specifics such as file uploads, cookies, and model validation and even learn how to use Capybara. RSpec Test Driven Development will help you build confidence in the code they you write and spend less time dealing with bugs and maintenance headaches. What you will learn from this book RSpec fundamentals How to use RSpec and Rails together Modify your behavior to create tests first and run your specs with every code change How to work with the rspec command line tool Using mocks and stubs to decouple tests from the database How to refactor code to improve readability Approach Filled with practical, step-by-step instructions and clear explanations for the most important and useful tasks. A concise guide that delivers immediate results with practical recipes on learning practical hints. Who this book is written for This book is aimed at Ruby developers with beginner level expertise who want to use RSpec and test driven development methodology to improve the code they write. Experienced programmers new to Ruby will also benefit from this book which also covers creating testable, idiomatic Ruby code.		Feduke, Charles	Instant RSpec Test - Driven Development How-to	https://doi.org/10.5555/2556002			"""@book{10.5555/2556002,
    author = ""Feduke, Charles"",
    title = ""Instant RSpec Test - Driven Development How-to"",
    year = ""2013"",
    isbn = ""1782165223"",
    publisher = ""Packt Publishing"",
    abstract = ""Learn RSpec and redefine your approach towards software development Overview Learn something new in an Instant! A short, fast, focused guide delivering immediate results Learn how to use RSpec with Rails Easy to read and grok examples Write idiomatic specifications In Detail RSpec is a behaviour driven development framework for Ruby programmers. It comes integrated with its own mocking framework based on Jmock. This book introduces you to RSpec helping you to write idiomatic specifications for Ruby code in a test first approach. Instant RSpec Test-Driven Development How-to is filled with examples of actual code accompanied by explanations and covers general Ruby, Rails, and RSpec use cases plus a few of the more advanced topics. RSpec Test Driven Development is written on the premise that you will need no experience with RSpec and limited experience with Ruby, Rails, and TDD fundamentals. Youll begin by writing a very simple Ruby library in true TDD fashion and and use the red, green, refactor tools to migrate this library into a Rails application. Instant RSpec Test-Driven Development How-to will teach you the actual steps performed in writing an idiomatic specification. You will be able to write a test for the code you wish you had, and learn to write only the minimum code necessary to pass a test, and write more specifications to drive out the production functionality your application will need. Through the course of the book, you will convert a Ruby program into a new Rails application, test Rails specifics such as file uploads, cookies, and model validation and even learn how to use Capybara. RSpec Test Driven Development will help you build confidence in the code they you write and spend less time dealing with bugs and maintenance headaches. What you will learn from this book RSpec fundamentals How to use RSpec and Rails together Modify your behavior to create tests first and run your specs with every code change How to work with the rspec command line tool Using mocks and stubs to decouple tests from the database How to refactor code to improve readability Approach Filled with practical, step-by-step instructions and clear explanations for the most important and useful tasks. A concise guide that delivers immediate results with practical recipes on learning practical hints. Who this book is written for This book is aimed at Ruby developers with beginner level expertise who want to use RSpec and test driven development methodology to improve the code they write. Experienced programmers new to Ruby will also benefit from this book which also covers creating testable, idiomatic Ruby code.""
}
"""	Excluded	Excluded	new_screen			2	ACM		Instant RSpec Test - Driven Development How-To	https://dl.acm.org/doi/abs/10.5555/2556002	Packt Publishing	nan; Keywords; References; Pages
148	Behave	Behavior-driven Load Testing Using Contextual Knowledge - Approach and Experiences	Load testing is widely considered a meaningful technique for performance quality assurance. However, empirical studies reveal that in practice, load testing is not applied systematically, due to the sound expert knowledge required to specify, implement, and execute load tests.	behavior-driven testing; declarative performance engineering; load testing	Henning Schulz; Dusan Okanovic; Andre van Hoorn; Vincenzo Ferme; Cesare Pautasso	ICPE '19: Proceedings of the 2019 ACM/SPEC International Conference on Performance Engineering	https://doi.org/10.1145/3297663.3309674		265-272		Included	Included	new_screen			2	ACM		Behavior-Driven Load Testing Using Contextual Knowledge - Approach and Experiences	https://dl.acm.org/doi/10.1145/3297663.3309674	Association for Computing Machinery	nan; References; Year; Bibtex
149	Behave	Challenges \& opportunities in low-code testing	Low-code is a growing development approach supported by many platforms. It fills the gap between business and IT by supporting the active involvement of non-technical domain experts, named Citizen Developer, in the application development lifecycle.Low-code introduces new concepts and characteristics. However, it is not investigated yet in academic research to point out the existing challenges and opportunities when testing low-code software. This shortage of resources motivates this research to provide an explicit definition to this area that we call it Low-Code Testing.In this paper, we initially conduct an analysis of the testing components of five commercial Low-Code Development Platforms (LCDP) to present low-code testing advancements from a business point of view. Based on the low-code principles as well as the result of our analysis, we propose a feature list for low-code testing along with possible values for them. This feature list can be used as a baseline for comparing low-code testing components and as a guideline for building new ones. Accordingly, we specify the status of the testing components of investigated LCDPs based on the proposed features. Finally, the challenges of low-code testing are introduced considering three concerns: the role of citizen developer in testing, the need for high-level test automation, and cloud testing. We provide references to the state-of-the-art to specify the difficulties and opportunities from an academic perspective. The results of this research can be used as a starting point for future research in low-code testing area.	testing;  low-code development platform;  low-code;  citizen developer; testing, low-code development platform, low-code, citizen developer	Khorram, Faezeh; Mottu, Jean-Marie; Suny\'{e}, Gerson	MODELS '20: Proceedings of the 23rd ACM/IEEE International Conference on Model Driven Engineering Languages and Systems: Companion Proceedings	https://doi.org/10.1145/3417990.3420204		1-10	"""@inproceedings{10.1145/3417990.3420204,
    author = ""Khorram, Faezeh and Mottu, Jean-Marie and Suny\'{e}, Gerson"",
    title = ""Challenges \\& opportunities in low-code testing"",
    year = ""2020"",
    isbn = ""9781450381352"",
    publisher = ""Association for Computing Machinery"",
    address = ""New York, NY, USA"",
    url = ""https://doi.org/10.1145/3417990.3420204"",
    doi = ""10.1145/3417990.3420204"",
    abstract = ""Low-code is a growing development approach supported by many platforms. It fills the gap between business and IT by supporting the active involvement of non-technical domain experts, named Citizen Developer, in the application development lifecycle.Low-code introduces new concepts and characteristics. However, it is not investigated yet in academic research to point out the existing challenges and opportunities when testing low-code software. This shortage of resources motivates this research to provide an explicit definition to this area that we call it Low-Code Testing.In this paper, we initially conduct an analysis of the testing components of five commercial Low-Code Development Platforms (LCDP) to present low-code testing advancements from a business point of view. Based on the low-code principles as well as the result of our analysis, we propose a feature list for low-code testing along with possible values for them. This feature list can be used as a baseline for comparing low-code testing components and as a guideline for building new ones. Accordingly, we specify the status of the testing components of investigated LCDPs based on the proposed features. Finally, the challenges of low-code testing are introduced considering three concerns: the role of citizen developer in testing, the need for high-level test automation, and cloud testing. We provide references to the state-of-the-art to specify the difficulties and opportunities from an academic perspective. The results of this research can be used as a starting point for future research in low-code testing area."",
    booktitle = ""Proceedings of the 23rd ACM/IEEE International Conference on Model Driven Engineering Languages and Systems: Companion Proceedings"",
    articleno = ""70"",
    numpages = ""10"",
    keywords = ""testing, low-code development platform, low-code, citizen developer"",
    location = ""Virtual Event, Canada"",
    series = ""MODELS '20""
}
"""	Excluded	Excluded	new_screen			2	ACM		Challenges &amp; Opportunities in Low-Code Testing	https://dl.acm.org/doi/10.1145/3417990.3420204	Association for Computing Machinery	nan; References
150	Behave	Toward leveraging Gherkin Controlled Natural Language and Machine Translation for Global Product Information Development	Machine Translation (MT) already plays an important part in software development process at McAfee where the technology can be leveraged to provide early builds for localization and internationalization testing teams. Behavior Driven Development (BDD) has been growing in usage as a development methodology in McAfee. Within BDD, the Gherkin Controlled Natural Language (CNL) is a syntax and common terminology set that is used to describe the software or business process in a User Story. Given there exists this control on the language to describe User Stories for software features using Gherkin, we seek to use Machine Translation to Globalize it at high accuracy and without Post-Editing and reuse it as Product Information. This enables global product information development to happen as part of the Software Development Life Cycle (SDLC) and at low cost.	Boolean functions; Computational linguistics; Computer aided language translation; Computer software reusability; Life cycle; Software testing; Business Process; Controlled natural language; Development methodology; Machine translations; Product information; Software development life cycle; Software development process; Software features; Software design; Boolean functions;  Computational linguistics;  Computer aided language translation;  Computer software reusability;  Life cycle;  Software testing;  Business Process;  Controlled natural language;  Development methodology;  Machine translations;  Product information;  Software development life cycle;  Software development process;  Software features;  Software design	O'Brien, Morgan	EAMT 2018 - Proceedings of the 21st Annual Conference of the European Association for Machine Translation	https://www.scopus.com/record/display.uri?eid=2-s2.0-85074938172&origin=resultslist&sort=r-f&src=s&sid=a98397d8e1750112f7b6cca4e224a8f7&sot=b&sdt=b&s=TITLE%28toward+leveraging+gherkin+controlled+natural+language+and+machine+translation+for+global+product+information+development%29&sl=127&sessionSearchId=a98397d8e1750112f7b6cca4e224a8f7&relpos=0		293 - 296	"""@CONFERENCE{O'Brien2018293,
    author = ""O'Brien, Morgan"",
    editor = ""J.A., Perez-Ortiz and F., Sanchez-Martinez and M., Espla-Gomis and M., Popovic and C., Rico and A., Martins and den Bogaert J., Van and M.L., Forcada"",
    title = ""Toward leveraging Gherkin Controlled Natural Language and Machine Translation for Global Product Information Development"",
    year = ""2018"",
    journal = ""EAMT 2018 - Proceedings of the 21st Annual Conference of the European Association for Machine Translation"",
    pages = ""293 - 296"",
    url = ""https://www.scopus.com/inward/record.uri?eid=2-s2.0-85074938172\&partnerID=40\&md5=fdb8c17e1235b7fe003a817555376b54"",
    affiliations = ""McAfee, Building 2000 Citygate, Mahon, Cork, Ireland"",
    abstract = ""Machine Translation (MT) already plays an important part in software development process at McAfee where the technology can be leveraged to provide early builds for localization and internationalization testing teams. Behavior Driven Development (BDD) has been growing in usage as a development methodology in McAfee. Within BDD, the Gherkin Controlled Natural Language (CNL) is a syntax and common terminology set that is used to describe the software or business process in a User Story. Given there exists this control on the language to describe User Stories for software features using Gherkin, we seek to use Machine Translation to Globalize it at high accuracy and without Post-Editing and reuse it as Product Information. This enables global product information development to happen as part of the Software Development Life Cycle (SDLC) and at low cost. (c) 2018 Morgan O'Brien, McAfee LLC."",
    keywords = ""Boolean functions; Computational linguistics; Computer aided language translation; Computer software reusability; Life cycle; Software testing; Business Process; Controlled natural language; Development methodology; Machine translations; Product information; Software development life cycle; Software development process; Software features; Software design"",
    correspondence_address = ""M. O'Brien; McAfee, Building 2000 Citygate, Mahon, Cork, Ireland; email: mobrien@mcafee.com"",
    publisher = ""European Association for Machine Translation"",
    isbn = ""978-840901901-4"",
    language = ""English"",
    abbrev_source_title = ""EAMT - Proc. Annu. Conf. Eur. Assoc. Mach. Transl."",
    type = ""Conference paper"",
    publication_stage = ""Final"",
    source = ""Scopus"",
    note = ""Cited by: 1; Conference name: 21st Annual Conference of the European Association for Machine Translation, EAMT 2018; Conference date: 28 May 2018 through 30 May 2018; Conference code: 152775""
}
"""	Included	Included	new_screen			2	Scopus Signed In		Toward leveraging Gherkin Controlled Natural Language and Machine Translation for Global Product Information Development	https://www.scopus.com/record/display.uri?eid=2-s2.0-85074938172&origin=resultslist&sort=r-f&src=s&sid=a98397d8e1750112f7b6cca4e224a8f7&sot=b&sdt=b&s=TITLE%28toward+leveraging+gherkin+controlled+natural+language+and+machine+translation+for+global+product+information+development%29&sl=127&sessionSearchId=a98397d8e1750112f7b6cca4e224a8f7&relpos=0	European Association for Machine Translation	nan; References
151	Behave	Automating test oracles from restricted natural language agile requirements	Manual testing of software requirements written in natural language for agile or any other methodology requires more time and human resources. This leaves the testing process error prone and time consuming. For satisfied end users with bug-free software delivered on time, there is a need to automate the test oracle process for natural language or informal requirements. The automation of the test oracle is relatively easier with formal requirements, but this task is difficult to achieve with natural language requirements. This study proposes an approach calledRestricted Natural Language Agile Requirements Testing(ReNaLART) to automate the test oracle from restricted natural language agile requirements. For this purpose, it uses an existing user story template with some modifications for writing user stories. This helps in identifying test input and expected output for a user story. For comparison of expected and observed outputs it makes use of a regex pattern and string distance functions. It is capable of assigning different types of verdicts automatically depending upon the similarity/dissimilarity between observed and expected outputs of user stories. ReNaLART is validated using several case studies of different domains, namely, OLX Pakistan, Mental Health Tests, McDelivery Pakistan, BlueStacks, Power Searching with Google, TensorFlow Playground, w3Schools 2018 offline and Touch'D. It revealed several faults in five of the above listed eight applications. Plus, the proposed test oracle on an average took 0.02 s for test data generation, expected output generation and verdict assignment. Both these facts show the fault revealing effectiveness and efficiency of ReNaLART.	automated test oracle; automated test-driven development; behaviour-driven development; restricted natural language; agile requirements; automated test oracle;  automated test-driven development;  behaviour-driven development;  restricted natural language;  agile requirements	Malik, Maryam Imtiaz; Sindhu, Muddassar Azam; Khattak, Akmal Saeed; Abbasi, Rabeeh Ayaz; Saleem, Khalid	EXPERT SYSTEMS	https://doi.org/10.1111/exsy.12608			"""@article{WOS:000551088800001,
    Author = ""Malik, Maryam Imtiaz and Sindhu, Muddassar Azam and Khattak, Akmal Saeed and Abbasi, Rabeeh Ayaz and Saleem, Khalid"",
    Title = ""Automating test oracles from restricted natural language agile requirements"",
    Journal = ""EXPERT SYSTEMS"",
    Year = ""2021"",
    Volume = ""38"",
    Number = ""1, SI"",
    Month = ""JAN"",
    Abstract = ""Manual testing of software requirements written in natural language for agile or any other methodology requires more time and human resources. This leaves the testing process error prone and time consuming. For satisfied end users with bug-free software delivered on time, there is a need to automate the test oracle process for natural language or informal requirements. The automation of the test oracle is relatively easier with formal requirements, but this task is difficult to achieve with natural language requirements. This study proposes an approach calledRestricted Natural Language Agile Requirements Testing(ReNaLART) to automate the test oracle from restricted natural language agile requirements. For this purpose, it uses an existing user story template with some modifications for writing user stories. This helps in identifying test input and expected output for a user story. For comparison of expected and observed outputs it makes use of a regex pattern and string distance functions. It is capable of assigning different types of verdicts automatically depending upon the similarity/dissimilarity between observed and expected outputs of user stories. ReNaLART is validated using several case studies of different domains, namely, OLX Pakistan, Mental Health Tests, McDelivery Pakistan, BlueStacks, Power Searching with Google, TensorFlow Playground, w3Schools 2018 offline and Touch'D. It revealed several faults in five of the above listed eight applications. Plus, the proposed test oracle on an average took 0.02 s for test data generation, expected output generation and verdict assignment. Both these facts show the fault revealing effectiveness and efficiency of ReNaLART."",
    Publisher = ""WILEY"",
    Address = ""111 RIVER ST, HOBOKEN 07030-5774, NJ USA"",
    Type = ""Article"",
    Language = ""English"",
    Affiliation = ""Sindhu, MA (Corresponding Author), Quaid I Azam Univ, Dept Comp Sci, Islamabad 45320, Pakistan. Malik, Maryam Imtiaz; Sindhu, Muddassar Azam; Khattak, Akmal Saeed; Abbasi, Rabeeh Ayaz; Saleem, Khalid, Quaid I Azam Univ, Dept Comp Sci, Islamabad 45320, Pakistan."",
    DOI = ""10.1111/exsy.12608"",
    EarlyAccessDate = ""JUL 2020"",
    Article-Number = ""e12608"",
    ISSN = ""0266-4720"",
    EISSN = ""1468-0394"",
    Keywords = ""automated test oracle; automated test-driven development; behaviour-driven development; restricted natural language; agile requirements"",
    Keywords-Plus = ""USER STORIES"",
    Research-Areas = ""Computer Science"",
    Web-of-Science-Categories = ""Computer Science, Artificial Intelligence; Computer Science, Theory \\& Methods"",
    Author-Email = ""masindhu@qau.edu.pk"",
    Affiliations = ""Quaid I Azam University"",
    ResearcherID-Numbers = ""Malik, Maryam/ITU-4703-2023 Sindhu, Muddassar/O-3216-2013 Saleem, Khalid/AAD-9293-2021 Saeed, Akmal/AAZ-8110-2021 Abbasi, Rabeeh/B-4495-2011"",
    Number-of-Cited-References = ""55"",
    Times-Cited = ""7"",
    Usage-Count-Last-180-days = ""0"",
    Usage-Count-Since-2013 = ""10"",
    Journal-ISO = ""Expert Syst."",
    Doc-Delivery-Number = ""PI7FT"",
    Web-of-Science-Index = ""Science Citation Index Expanded (SCI-EXPANDED)"",
    Unique-ID = ""WOS:000551088800001"",
    DA = ""2024-10-22""
}
"""	Included	Included	new_screen			2	Web of Science		Automating test oracles from restricted natural language agile requirements	https://www.webofscience.com/wos/woscc/full-record/WOS:000551088800001	WILEY	nan; References; Pages
152	Behave	Scenario-Based Microservice Retrieval Using Word2Vec	Microservice architecture (MSA) is an emerging software architectural style, which differs fundamentally from the monolithic, layered architecture. During the development and maintenance of microservice systems, how to provide an effective service retrieval mechanism is a critical challenge to avoid the problems of rework and duplicate code. Meanwhile, nowadays, using the BDD (Behavior-Driven Development) method to develop microservices becomes more and more popular due to its agility and domain-driven characteristics. BDD is an agile software development approach emphasizing that test cases are written in a common language to include scenarios that describe the features of a target system. In this paper, we propose an approach, referred to as SMSR (Scenario-based MicroService Retrieval), to recommend appropriate microservices to users based on the user-written BDD test scenarios. The proposed service retrieval algorithm is based on word2vec, a widely-used machine learning method in NLP (Natural Language Processing), to perform service filtering and service similarity calculation. Experiment results show that SMSR is able to effectively retrieve appropriate microservices from the service repository.	Software; Organizations; Computer architecture; Machine learning; Natural language processing; Filtering; Semantics; Machine Learning; Software Development; Agility; Test Scenarios; Agile Development; Clone Detection; Widely-used Method; Developmental Stages; Support Vector Machine; Artificial Neural Network; Similarity Score; Information Retrieval; Semantic Similarity; Word Embedding; User Requirements; Expansion Method; Similar Words; Context Words; Usage Scenarios; Field Of Computing; Vector Space Model; Service Description; WordNet; Word2vec Model; Removing Stop Words; Microservice, Microservice Retrieval, Requirement Scenario, Behavior-Driven Development, word2vec	Shang-Pin Ma; Yen Chuang; Ci-Wei Lan; Hsi-Min Chen; Chun-Ying Huang; Chia-Yu Li	2018 IEEE 15th International Conference on e-Business Engineering (ICEBE)	https://doi.org/10.1109/ICEBE.2018.00046	"1.I. Nadareishvili, R. Mitra, M. McLarty and M. Amundsen, Microservice Architecture: Aligning Principles Practices and Culture, OReillv Media. Inc., 2016. Google Scholar; 2.C. Y. Fan and S. P. Ma, ""Migrating Monolithic Mobile Application to Microservice Architecture: An Experiment Report"", 2017 IEEE International Conference on AI  Mobile Services (AIMS), pp. 109-112, 2017. View Article  Google Scholar; 3.C. Solis and X. Wang, ""A study of the characteristics of behaviour driven development"", 2011 37th EUROMICRO Conference on Software Engineering and Advanced Applications (SEAA), pp. 383-387, 2011. View Article  Google Scholar; 4.M. Soeken, R. Wille and R. Drechsler, Assisted Behavior Driven Development Using Natural Language Processing, Berlin, Heidelberg, pp. 269-287, 2012. Google Scholar; 5.E. Evans and R. Szpoton, Domain-driven design: Helion, 2015. Google Scholar; 6.M. Rahman and J. Gao, ""A reusable automated acceptance testing architecture for microservices in behavior-driven development"", 2015 IEEE Symposium on Service-Oriented System Engineering (SOSE), pp. 321-325, 2015. View Article  Google Scholar; 7.OpenAPI Specification (OAS),  [online]  Available: httns.//swagger.io/docs/snccification/. Google Scholar; 8.RAML (RESTful API Modeling Language),  [online]  Available: https://raml.org/. Google Scholar; 9.T. Mikolov, K. Chen, G. Corrado and J. Dean, Efficient estimation of word representations in vector space, 2013. Google Scholar; 10.S.-P. Ma, C.-H. Li, Y.-Y. Tsai and C.-W. Lan, ""Web Service Discovery Using Lexical and Semantic Query Expansion"", 2013 IEEE 10th International Conference on e-Business Engineering (ICEBE), pp. 423-428, 2013. View Article  Google Scholar; 11.Y. Hao, Y. Zhang and J. Cao, ""Web services discovery and rank: An information retrieval approach"", Future Generation Computer Systems, vol. 26, pp. 1053-1062, 2010. CrossRef  Google Scholar; 12.S. Sharma, J. S. Lather and M. Dave, ""Semantic approach for Web service classification using machine learning and measures of semantic relatedness"", Service Oriented Computing and Applications, vol. 10, pp. 221-231, September 2016. CrossRef  Google Scholar; 13.M. Gysel, L. Kolbener, W. Giersche and O. Zimmermann, ""Service cutter: A systematic approach to service decomposition"", European Conference on Service-Oriented and Cloud Computing, pp. 185-200, 2016. CrossRef  Google Scholar; 14.L. Baresi, M. Garriga and A. De Renzis, ""Microservices Identification Through Interface Analysis"", European Conference on Service-Oriented and Cloud Computing, pp. 19-33, 2017. CrossRef  Google Scholar; 15.S.-P. Ma, C.-W. Lan and C.-H. Li, ""Contextual service discovery using term expansion and binding coverage analysis"", Future Generation Computer Systems, vol. 48, pp. 73-81, 2015. CrossRef  Google Scholar; 16.A. Bagga and B. Baldwin, ""Entity-based cross-document coreferencing using the vector space model"", Proceedings of the 17th international conference on Computational linguistics, vol. 1, pp. 79-85, 1998. CrossRef  Google Scholar; 17.S. P. Ma, C. Y. Fan, Y. Chuang, W. T. Lee, S. J. Lee and N. L. Hsueh, ""Using Service Dependency Graph to Analyze and Test Microservices"", 2018 IEEE 42nd Annual Computer Software and Applications Conference (COMPSAC), pp. 81-86, 2018. View Article  Google Scholar"			Included	Included	new_screen			2	IEEE		Scenario-Based Microservice Retrieval Using Word2Vec	https://ieeexplore.ieee.org/document/8592657	IEEE	nan; Pages; Year; Bibtex
153	Behave	Agile development cycle: Approach to design an effective Model Based Testing with Behaviour driven automation framework	Model Based Testing (MBT) is a relatively an approach widely discussed in software testing. It extends test automation from test design to test execution using automatic test generation from models. The effective use of this approach requires new skills, technology and knowledge, such as test modelling skills, but also good programs and tool support. This paper explores a design of a Behaviour driven test automation framework using MBT and how it can be effectively used during Agile Development. The automation framework is experimented upon the integration of the Graphwalker, a Model Based Graphical User Interface test generator with behaviour driven development framework and Robot Framework.	Data structures; Boolean functions; Testing; Libraries; Pipelines; Radio frequency; Generators; Agile Development; Model-based Testing; Automation Framework; Support Tool; Testing Tools; Software Testing; Testing Framework; Executive Tests; Heuristic; Best Practices; State Machine; Online Assessment; Test Suite; Test Configuration; Continuous Integration; Vertex Labels; Software Testing; Automation Framework; Model Based Testing; Behaviour Driven Automation; Graphical User Interface Testing; Agile Development	Sandeep Sivanandan; Yogeesha C. B	20th Annual International Conference on Advanced Computing and Communications (ADCOM)	https://doi.org/10.1109/ADCOM.2014.7103243	"1.""A generic test automation framework"", The Robot Frame Work website,  [online]  Available: http://code.google.com/p/robotframework. Google Scholar; 2.""The Open Source Model-Based Testing Tool"", The Graphwalker website,  [online]  Available: http://graphwalker.org/. Google Scholar; 3.""The Magazine for Professional Testers"", Test Experience _ Model Based Testing,  [online]  Available: http://www.testingexperience.com/testingexperience17_03_12.pdf, ISSN 1866-5705. Google Scholar; 4.Michiel Pieter and Willem Jacob van Osch, ""Automated Model-based Testing of Hybrid Systems"", pp. 2009-04, 2009. Google Scholar; 5.""Software Testing and Software Quality Assurance"", TOSCA Test Suite,  [online]  Available: www.tricentis.at. Google Scholar; 6.""Applied Model Based Testing - Experiences & Examples"", SimonEjsing, August 2007,  [online]  Available: http://appMBT.blogspot.in/. Google Scholar; 7.""SeleniumHQ Web Application TestingSystem"", Selenium Home Page,  [online]  Available: http://seleniumhq.org/. Google Scholar; 8.B. Gopularam, ""Mechanism for on demand Tag-Based software testing in virtualized environments"", 4th International Conference on Advance Computing - IcoAC-2012, Dec 13-15, 2012. CrossRef  Google Scholar; 9.Kleanthis Thramboulidis and Alkiviadis Zoupas, ""Real-Time Java in Control and Automation: A Model Driven Development Approach"", 10th IEEE Conference on Emerging Technologies and Factory Automation 2005, 2005. CrossRef  Google Scholar"			Included	Included	new_screen			2	IEEE		Agile development cycle: Approach to design an effective Model Based Testing with Behaviour driven automation framework	https://ieeexplore.ieee.org/document/7103243	IEEE	nan; Pages; Year; Bibtex
154	Behave	Automated test case generation from domain specific models of high-level requirements	Model-based software development has been shown to improve productivity and quality of software through automation. This involves using abstractions or models at several stages of development. This work reports on preliminary attempts to automate the generation of test cases from software requirement models using an industrial case study. The requirements are represented using a modeling notation and test cases are automatically generated using model to text transformation techniques.	domain specific languages; model-based testing	Oyindamola Olajubu; Suraj Ajit; Mark Johnson; Scott Turner; Scott Thomson; Mark Edwards	RACS '15: Proceedings of the 2015 Conference on research in adaptive and convergent systems	https://doi.org/10.1145/2811411.2811555		505-508		Excluded	Excluded	new_screen			2	ACM		Automated Test Case Generation from Domain Specific Models of High-Level Requirements	https://dl.acm.org/doi/10.1145/2811411.2811555	Association for Computing Machinery	nan; References; Year; Bibtex
155	Behave	Towards a workflow for model-based testing of embedded systems	Model-based testing (MBT) has been previously used to validate embedded systems. However, (i) creation of a model conforming to the behavioural aspects of an embedded system, (ii) generation of executable test scripts and (iii) assessment of test verdict, re-quires a systematic process. In this paper, we have presented a three-phase tool-supported MBT workflow for the testing of an embedded system, that spans from requirements specification to test verdict assessment. The workflow starts with a simplistic, yet practical, application of a Domain-Specific Language (DSL) based on Gherkin-like style, which allows the requirements engineer to specify requirements and to extract information about model elements(i.e. states and transitions). This is done to assist the graphical modelling of the complete system under test (SUT). Later stages of the workflow generates an executable test script that runs on a domain-specific simulation platform. We have evaluated this tool-supported workflow by specifying the requirements, extracting information from the DSL and developing a model of a subsystem of the train control management system developed at Alstom Transport AB in Sweden. The C# test script generated from the SUT model is successfully executed at the Software-in-the-Loop (SIL) execution platform and test verdicts are visualized as a sequence of passed and failed test steps.	Domain-Specific Language; Model-Based Testing; Software-in-the-Loop	Muhammad Nouman Zafar; Wasif Afzal; Eduard Enoiu	A-TEST 2021: Proceedings of the 12th International Workshop on Automating TEST Case Design, Selection, and Evaluation	https://doi.org/10.1145/3472672.3473956		33-40		Included	Included	new_screen			2	ACM		Towards a Workflow for Model-Based Testing of Embedded Systems	https://dl.acm.org/doi/10.1145/3472672.3473956	Association for Computing Machinery	nan; References; Year; Bibtex
156	Behave	Model-Based Testing in Practice: An Industrial Case Study using GraphWalker	Model-based testing (MBT) is a test design technique that supports the automation of software testing processes and generates test artefacts based on a system model representing behavioural aspects of the system under test (SUT). Previous research has shown some positive aspects of MBT such as low-cost test case generation and fault detection effectiveness. However, it is still a challenge for both practitioners and researchers to evaluate MBT tools and techniques in real, industrial settings. Consequently, the empirical evidence regarding the mainstream use, including the modelling and test case generation using MBT tools, is limited. In this paper, we report the results of a case study on applying GraphWalker, an open-source tool for MBT, on an industrial cyber-physical system (i.e., a Train Control Management System developed by Bombardier Transportation in Sweden), from modelling of real-world requirements and test specifications to test case generation. We evaluate the models of the SUT for completeness and representativeness, compare MBT with manual test cases written by practitioners using multiple attributes as well as share our experiences of selecting and using GraphWalker for industrial application. The results show that a model of the SUT created using both requirements and test specifications provides better understanding of the SUT from testers' perspective, making it more complete and representative than the model created based only on the requirements specification alone. The generated model-based test cases are longer in terms of the number of test steps, achieve better edge coverage and can cover requirements more frequently in different orders while achieving the same level of requirements coverage as manually created test cases.	Case Study; GraphWalker; Model-Based Testing	Muhammad Nouman Zafar; Wasif Afzal; Eduard Enoiu; Athanasios Stratis; Aitor Arrieta; Goiuria Sagardui	ISEC '21: Proceedings of the 14th Innovations in Software Engineering Conference (formerly known as India Software Engineering Conference)	https://doi.org/10.1145/3452383.3452388		1-11		Excluded	Excluded	new_screen			2	ACM		Model-Based Testing in Practice: An Industrial Case Study Using GraphWalker	https://dl.acm.org/doi/10.1145/3452383.3452388	Association for Computing Machinery	nan; References; Year; Bibtex
157	Behave	Towards behavior driven operations (BDOps)	Modern Enterprise Software Systems entail many challenges such as availability, scalability, complexity and providing business agility. Ensuring the systems to be up and running for 24 x 7 has become a mandate for operations. Agile development has been adopted to keep pace with the demands of business and IT. Test Driven Development (TDD) and Behavior Driven Development (BDD) are practices, which enable agile development. So far the agile approach has been limited to development. For ensuring business to be truly agile, we need to take forward the agile approach to operations. In this paper, we discuss the behavior driven approach for operations specifically on the core sub-systems like infrastructure provisioning, deployment and monitoring. We share our explorations and experiments with Behavior Driven Monitoring (BDM) and how the same can be adopted for infrastructure provisioning and deployment. We used Cucumber-Nagios to detect behavior of an enterprise application. We close this paper with a note on the benefits to busmess and IT showing its relevance to DevOps, Continuous Delivery and Cloud Computing.	Behavior Driven Development; Behavior Driven Operations; Behavior Driven Monitoring; Cucumber-Nagios; Behavior Driven Infrastructure	Komal Gohil; Nagalakshmi Alapati; Sunil Joglekar	3rd International Conference on Advances in Recent Technologies in Communication and Computing (ARTCom 2011)	https://doi.org/10.1049/ic.2011.0095				Included	Included	new_screen			2	IEEE		Towards behavior driven operations (BDOps)	https://ieeexplore.ieee.org/document/6193584	IET	nan; References; Pages; Year; Bibtex
158	Behave	Combining Behaviour-Driven Development with Scrum for Software Development in the Education Domain	Most of the Brazilian universities employ teaching-learning methodologies based on classic frontal lectures. The Medicine Programme of the Federal University of Sao Carlos (UFSCar) is an exception, since it employs active learning methodologies. The Educational and Academic Management System for Courses Based on Active Learning Methodologies (EAMS-CBALM) was built and it is currently used to support this programme, and has been made available for other programmes as well. This system was developed using Scrum, but during its development project it was often necessary to reconsider system behaviour scenarios, and consequently the product backlog items, mainly due to poor communication between the Product Owner (PO) and the development team. This paper discusses a case study in which Behaviour-Driven Development (BDD) has been used in combination with Scrum to redesign some EAMS-CBALM components. The paper demonstrates that the communication between the PO and the development team can be improved by using BDD as a communication platform to unambiguously define system requirements and automatically generate test suites.	Software Engineering; Methodologies for System Development; BDD; Scrum; ICT in Education; PBL; Software Engineering;  Methodologies for System Development;  BDD;  Scrum;  ICT in Education;  PBL	de Souza, Pedro Lopes; do Prado, Antonio Francisco; de Souza, Wanderley Lopes; dos Santos Forghieri Pereira, Sissi Marilia; Pires, Luis Ferreira	ICEIS 2017 - Proceedings of the 19th International Conference on Enterprise Information Systems	https://doi.org/10.5220/0006336804490458	Beck, K.(2002)Test Driven Development: by Example.Cited 1665 times.Addison-Wesley Longman Publishing Co. Inc. Boston, MA, USA; Carlisle, C., Calman, L., Ibbotson, T.; Chauhan, R.(2016)Fusion of Agile-Scrum to BDDAccessed: 2016-12-19http://docplayer.net/28500425-Fusion-of-Agilescrum-To-bdd.html; (2016)Cucumber Simple, Human CollaborationCucumber . Accessed: 2016-12-19https://cucumber.io; Diepenbeck, M., Drechsler, R.(2015)Behavior Driven Development for Tests and VerificationSpringer Fachmedien Wiesbaden, Wiesbaden; El-Fakih, K., Yevtushenko, N., Bozga, M., Bensalem, S.Distinguishing extended finite state machine configurations using predicate abstraction(2016)J. Software Eng. R and D, 4, p. 1.Cited 8 times.; Evans, E.(2004)Domain-driven Design: Tackling Complexity in the Heart of Software.Cited 1067 times.Addison-Wesley; Guizzardi, G.(2005)Ontological Foundations for Structural Conceptual Models.Cited 991 times.PhD thesis, University of Twente, Enschede; (2015)JBehave -A BDD FrameworkJBehave . Accessed: 2016-12-19http://jbehave.org; (2016)JMeter Graphical Server Performance Testing Tool.Cited 2 times.JMeter . Accessed: 2016-12-19http://jmeter.apache.org; (2016)JUnit -A Framework to Write Repeatable TestsJUnit . Accessed: 2016-12-19http://junit.org/junit4; Koskela, L.(2008)Test Driven: Practical TDD and Acceptance TDD for Java Developers.Cited 64 times.Manning Pubs Co Series. Manning; Lubke, D., Van Lessen, T.; Malik, Z.(2013)Value of Behavior-Driven Development for Backlog Refinement in ScrumAccessed: 2016-12-19https://www.scrumalliance.org/community/articles/2013/march/value-of-behavior-driven-developmentfor-backlog-r; (2016)MSpec - Context/Specification FrameworkMSpec . Accessed: 2016-12-19https://github.com/machine/machine.specifications; (2014)NBehave -A BDD FrameworkNBehave . Accessed: 2016-12-19https://github.com/nbehave/nbehave; North, D.(2006)Introducing BDD.Cited 58 times.Accessed: 2016-12-19https://dannorth.net/introducing-bdd; Oruc, A.F., Ovatman, T.; Rhem, J.(1998)Problem-based Learning: An Introduction.Cited 121 times.Accessed: 2016-12-19www1.udel.edu/pbl/deu-june2006/supplemental/NTLF-PBL-introduction.pdf; (2016)RSpec: Behaviour Driven Development for RubyRSpec . Accessed: 2016-12-19http://rspec.info/; de Freitas Santos, H., de Souza, W.L., do Prado, A.F., dos Santos Forghieri Pereira, S.M.; Schwaber, K., Sutherland, J.(2016)The Definitive Guide to Scrum: The Rules of the Game.Cited 130 times.Accessed: 2016-12-19http://www.scrumguides.org/docs/scrumguide/v2016/2016-Scrum-Guide-US.pdf; Silva, T.R., Hak, J.-L., Winckler, M.; Soeken, M., Wille, R., Drechsler, R.; Solis, C., Wang, X.; (2016)SpecFlow - Cucumber for .NETSpecFlow . Accessed: 2016-12-19http://specflow.org; (2010)StoryQ -A Bdd Framework forStoryQ .net 3.5. Accessed: 2016-12-19https://storyq.codeplex.com/; Tempski, P.(2014)Caderno do Curso Educacao Na Saude para Preceptores do SUS.Cited 2 times.Teaching and Research Institute of the Sirio-Libanes Hospital (in Portuguese; (2007)Curso de Medicina - CCBS Projeto Politico Pedagogico Medicina UFSCarUFSCar . Accessed: 2016-12-19http://www.prograd.ufscar.br/cursos/cursosoferecidos-1/medicina; Weltman, D.(2007)A Comparison of Traditional and Active Learning Methods: An Empirical Investigation Utilizing a Linear Mixed Model.Cited 20 times.University of Texas at Arlington; Wynne, M., Hellesoy, A.(2012)The Cucumber Book : Behaviour-driven Development for Testers and Developers. The Pragmatic Programmers.Cited 108 times.Dallas, Tex. Pragmatic Bookshelf	449-458	"""@inproceedings{WOS:000697612300046,
    Author = ""de Souza, Pedro Lopes and do Prado, Antonio Francisco and de Souza, Wanderley Lopes and dos Santos Forghieri Pereira, Sissi Marilia and Pires, Luis Ferreira"",
    Editor = ""Hammoudi, S and Smialek, M and Camp, O and Filipe, J"",
    Title = ""Combining Behaviour-Driven Development with Scrum for Software Development in the Education Domain"",
    Booktitle = ""ICEIS: PROCEEDINGS OF THE 19TH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS - VOL 2"",
    Year = ""2017"",
    Pages = ""449-458"",
    Note = ""19th International Conference on Enterprise Information Systems (ICEIS), Porto, PORTUGAL, APR 26-29, 2017"",
    Abstract = ""Most of the Brazilian universities employ teaching-learning methodologies based on classic frontal lectures. The Medicine Programme of the Federal University of Sao Carlos (UFSCar) is an exception, since it employs active learning methodologies. The Educational and Academic Management System for Courses Based on Active Learning Methodologies (EAMS-CBALM) was built and it is currently used to support this programme, and has been made available for other programmes as well. This system was developed using Scrum, but during its development project it was often necessary to reconsider system behaviour scenarios, and consequently the product backlog items, mainly due to poor communication between the Product Owner (PO) and the development team. This paper discusses a case study in which Behaviour-Driven Development (BDD) has been used in combination with Scrum to redesign some EAMS-CBALM components. The paper demonstrates that the communication between the PO and the development team can be improved by using BDD as a communication platform to unambiguously define system requirements and automatically generate test suites."",
    Publisher = ""SCITEPRESS"",
    Address = ""AV D MANUELL, 27A 2 ESQ, SETUBAL, 2910-595, PORTUGAL"",
    Type = ""Proceedings Paper"",
    Language = ""English"",
    Affiliation = ""de Souza, PL (Corresponding Author), Univ Fed Sao Carlos, Dept Comp, POB 676, BR-13565905 Sao Carlos, SP, Brazil. de Souza, Pedro Lopes; do Prado, Antonio Francisco; de Souza, Wanderley Lopes, Univ Fed Sao Carlos, Dept Comp, POB 676, BR-13565905 Sao Carlos, SP, Brazil. dos Santos Forghieri Pereira, Sissi Marilia, Univ Fed Sao Carlos, Dept Med, POB 676, BR-13565905 Sao Carlos, SP, Brazil. Pires, Luis Ferreira, Univ Twente, Ctr Telemat \\& Informat Technol, POB 217, NL-7500 AE Enschede, Netherlands."",
    DOI = ""10.5220/0006336804490458"",
    ISBN = ""978-989-758-248-6"",
    Keywords = ""Software Engineering; Methodologies for System Development; BDD; Scrum; ICT in Education; PBL"",
    Research-Areas = ""Computer Science"",
    Web-of-Science-Categories = ""Computer Science, Information Systems; Computer Science, Theory \\& Methods"",
    Affiliations = ""Universidade Federal de Sao Carlos; Universidade Federal de Sao Carlos; University of Twente"",
    ORCID-Numbers = ""Ferreira Pires, Luis/0000-0001-7432-7653 Lopes de Souza, Pedro/0000-0002-4538-7590"",
    Number-of-Cited-References = ""31"",
    Times-Cited = ""4"",
    Usage-Count-Last-180-days = ""0"",
    Usage-Count-Since-2013 = ""1"",
    Doc-Delivery-Number = ""BS1XW"",
    Web-of-Science-Index = ""Conference Proceedings Citation Index - Science (CPCI-S)"",
    Unique-ID = ""WOS:000697612300046"",
    OA = ""Green Submitted, hybrid"",
    DA = ""2024-10-22""
}
"""	Included	Included	new_screen			2	Web of Science		Combining behaviour-driven development with scrum for software development in the education domain	https://www.webofscience.com/wos/woscc/full-record/WOS:000697612300046	SCITEPRESS	
159	Behave	Enterprise Ontology-Driven Development	Most of the current techniques and approaches for user requirements specification have problems with capturing the appropriate context for development of enterprise information systems. Primarily, they are designed to capture the functional aspects of software rather than its relevancy to an enterprise. Transactions defined in the DEMO (Design & Engineering Methodology for Organizations) represent business activities in their existential essence without implementation details. Therefore, they are great candidates to be utilized for the initial development phase of enterprise information systems. The paper exemplifies how to specify software specification the using the DEMO transaction pattern and BDD (Behaviour-Driven Development) technique. This proposal resulted from a significant lack of direct utilization of ontology for enterprise information systems development. The major part of the paper gives a step-by-step explanation of how to integrate DEMO transaction patterns into initial BDD scenarios for the development of enterprise information systems. Such created scenarios provide a perfect guideline in the initial phase of information system development for enterprises. The created scenarios were verified using the domain specific language Gherkin and BDD framework Behat.	DEMO methodology; Behaviour-Driven development; User requirements specification; Enterprise information system	Jiri Matula; Frantisek Hunka	Workshop on Enterprise and Organizational Modeling and Simulation	https://doi.org/10.1007/978-3-030-00787-4_1		3-15		Included	Included	new_screen			2	Springer Link		Enterprise ontology-driven development	https://link.springer.com/chapter/10.1007/978-3-030-00787-4_1	Springer, Cham	nan; References; Year; Bibtex
160	Behave	A Behavior-Based Ontology for Supporting Automated Assessment of Interactive Systems	Nowadays many software development frameworks implement Behavior-Driven Development (BDD) as a mean of automating the test of interactive systems under construction. Automated testing helps to simulate user's action on the User Interface and therefore check if the system behaves properly and in accordance to Scenarios that describe functional requirements. However, most of tools supporting BDD requires that tests should be written using low-level events and components that only exist when the system is already implemented. As a consequence of such low-level of abstraction, BDD tests can hardly be reused with diverse artifacts and with versions of the system. To address this problem, this paper proposes to raise the abstraction level by the means of a behavior-based ontology that is aimed at supporting test automation. The paper presents an ontology and an ontology-based approach for automating the test of functional requirements of interactive systems. With the help of a case study for the flight tickets e-commerce domain, we demonstrate how tests written using our ontology can be used to assess functional requirements using different artifacts, from low-fidelity to full-fledged UI Prototypes.	Ontologies; User interfaces; Interactive systems; Testing; Prototypes; Natural languages; Containers; Interactive System; Active Users; Level Of Abstraction; Functional Requirements; Testing Tools; Natural Language; Human-computer Interaction; User Behavior; State Machine; Acceptance Criteria; Object Properties; Mobile Platform; Interactive Elements; Markup Language; Consistency Checks; Text Field; User Tasks; Domain Ontology; Interface Elements; Common Vocabulary; Use Of Ontologies; Radio Buttons; Business Behavior; Interface Components; User Point; Automated Requirements Assessment; Behavior-Driven Development; Ontological Modeling; Testing of Interactive Systems	Thiago Rocha Silva; Jean-Luc Hak; Marco Winckler	2017 IEEE 11th International Conference on Semantic Computing (ICSC)	https://doi.org/10.1109/ICSC.2017.73	"1.D. Chelimsky, D. Astels, B. Helmkamp, D. North, Z. Dennis and A. Hellesoy, The RSpec Book: Behaviour Driven Development with Rspec Cucumber and Friends, Pragmatic Bookshelf, 2010. Google Scholar; 2.K. Pugh, Lean-Agile Acceptance Test-Driven-Development, Pearson Education, 2010. Google Scholar; 3.G. Adzic, Specification by Example: How Successful Teams Deliver the Right Software, Manning Publications, 2011. Google Scholar; 4.M. Cohn, User Stories Applied: For Agile Software Development, Addison-Wesley Professional, 2004. Google Scholar; 5.N. Guarino, D. Oberle and S. Staab, ""What is an Ontology?"" in Handbook on ontologies, Springer Berlin Heidelberg, pp. 1-17, 2009. CrossRef  Google Scholar; 6.G. Calvary, J. Coutaz, D. Thevenin, Q. Limbourg, L. Bouillon and J. Vanderdonckt, ""A Unifying Reference Framework for multi-target user interfaces"", Interacting with Computers, vol. 15, no. 3, pp. 289-308, 2003. CrossRef  Google Scholar; 7.Q. Limbourg, J. Vanderdonckt, B. Michotte, L. Bouillon and V. Lopez-Jaquero, ""USIXML: a Language Supporting Multi-Path Development of User Interfaces"", EHCI/DS-VIS, 2004. CrossRef  Google Scholar; 8.M. Winckler, J. Vanderdonckt, A. Stanciulescu and F. Trindade, ""Cascading dialog modeling with UsiXML"", International Workshop on Design Specification and Verification of Interactive Systems, pp. 121-135, 2008. CrossRef  Google Scholar; 9.M. Winckler and P. Palanque, ""StateWebCharts: A Formal Description Technique Dedicated to Navigation Modelling of Web Applications"" in Design Specification and Verification of Interactive Systems (DSV-IS), Springer-Verlag, pp. 61-67, 2003. CrossRef  Google Scholar; 10.J. Pullmann, ""MBUI - Glossary - W3C"", Fraunhofer FIT, 2016,  [online]  Available: https://www.w3.org/TR/mbui-glossary/. Google Scholar; 11.J. Barnett et al., ""State Chart XML (SCXML): State Machine Notation for Control Abstraction"", W3C, 2016,  [online]  Available: http://www.w3.org/TR/sexml/. Google Scholar; 12.D. North, Whats in a Story?, 2016,  [online]  Available: http://dannorth.net/whats-in-a-story/. Google Scholar; 13.J-L. Hak, M. Winckler and D. Navarre, ""PANDA: prototyping using annotation and decision analysis"", Proceedings of the 8th ACM SIGCHI Symposium on Engineering Interactive Computing Systems (EICS'16), pp. 171-176, 2016. CrossRef  Google Scholar; 14.M. Fowler, Page Object, 2016,  [online]  Available: http://martinfowler.com/bliki/PageObject.html. Google Scholar"			Included	Included	new_screen			2	IEEE		A Behavior-Based Ontology for Supporting Automated Assessment of Interactive Systems	https://ieeexplore.ieee.org/document/7889535	IEEE	nan; Pages; Year; Bibtex
161	Behave	A Formal Ontology for Describing Interactive Behaviors and Supporting Automated Testing on User Interfaces	Nowadays many software development frameworks implement Behavior-Driven Development (BDD) as a mean of automating the test of interactive systems under construction. Automated testing helps to simulate user's actions on the User Interface and therefore check if the system behaves properly and in accordance to scenarios that describe functional requirements. However, tools supporting BDD run tests on implemented User Interfaces and are a suitable alternative for assessing functional requirements in later phases of the development process. However, even when BDD tests can be written in early phases of the development process they can hardly be used with specifications of User Interfaces such as prototypes. To address this problem, this paper proposes to raise the abstraction level of both system interactive behaviors and User Interfaces by means of a formal ontology that is aimed at supporting test automation using BDD. The paper presents an ontology and an ontology-based approach for automating the test of functional requirements of interactive systems. We demonstrate the feasibility of this ontology-based approach to assess functional requirements in prototypes and full-fledge applications through an illustrative case study of e-commerce applications for buying flight tickets.	Behavior-Driven Development (BDD); automated requirements assessment; ontological modeling; user interfaces; prototyping; testing of interactive systems	Thiago Rocha Silva; Jean-Luc Hak; Marco Winckler	International Journal of Semantic Computing	https://www.worldscientific.com/doi/abs/10.1142/S1793351X17400219		513-539	"""nan"""	Included	Included	new_screen			2	Google Scholar		A Formal Ontology for Describing Interactive Behaviors and Supporting Automated Testing on User Interfaces	https://www.worldscientific.com/doi/abs/10.1142/S1793351X17400219	World Scientific Publishing Co Pte Ltd	
162	Behave	Behavior Driven Development: Tools and Challenges	Nowadays testing usually applies Test Driven Development (TDD) which is an approach to software development in which developers write tests first which initially fail and by adding more application codes tests pass. However, the latest development in this field is an extension to Test Driven Development (TDD) which usually referred as Behavior Driven Development (BDD). As being a modified version of TDD, both the technologies have various similarities. Nevertheless, the differences are also not unnoticeable. Where BDD is more about communication and collaboration TDD is more about coders and coding. This paper focuses on the advantages and glitches of TDD which led to the development of along with the method of working of BDD and several tools along with their features and a comparison of their functionalities.	Testing; Tools; Cloud computing; Writing; Software; Business; Java; Behavior Driven Development; Best Practices; Big Data; Cloud Computing; Cucumber; Testing Tools; User Testing; Testing Coverage; Unit Tests; Simple Text; Huge Volume Of Data; Manual Testing; Test Driven Development (TDD); Behavior Driven Development (BDD); Collaboration	Rakesh Kumar Lenka; Srikant Kumar; Sunakshi Mamgain	2018 International Conference on Advances in Computing, Communication Control and Networking (ICACCCN)	https://doi.org/10.1109/ICACCCN.2018.8748595	"1.I. Ciupa, B. Meyer, M. Oriol and Pretschner, ""A Finding faults: Manual testing vs. random+ testing vs. user reports"", Software Reliability Engineering November 2008. ISSRE 2008. 19th International Symposium on, pp. 157-166. View Article  Google Scholar; 2.N. Nagappan, E.M. Maximilien, T. Bhat and L. Williams, ""Realizing quality improvement through test driven development: results and experiences of four industrial teams"", Empirical Software Engineering, vol. 13, no. 3, pp. 289-302, 2008. CrossRef  Google Scholar; 3.R.K. Barik, R.K. Lenka, A.B. Samaddar, J. Pattnaik, B. Prakash and V. Agarwal, ""m-GeoEduNet: Mobile SDI Model for Education Information Infrastructure Network"" in Advances in Electronics Communication and Computing, Singapore:Springer, vol. 443, 2018. CrossRef  Google Scholar; 4.Lech Madeyski and Lukasz Szala, ""The impact of test-driven development on software development productivity--an empirical study"", In European Conference on Software Process Improvement, pp. 200-211, 2007. CrossRef  Google Scholar; 5.Murat Tiryaki, Ali, Sibel Oztuna, Oguz Dikenelli and Riza CenkErdur, ""Sunit: A unit testing framework for test driven development of multi-agent systems"", International Workshop on Agent-Oriented Software Engineering, pp. 156-173, 2006. Google Scholar; 6.R.K. Barik, R.K. Lenka, S.R. Sahoo, B.B. Das and J. Pattnaik, ""Development of Educational Geospatial Database for Cloud SDI Using Open Source GIS"" in Progress in Advanced Computing and Intelligent Engineering. Advances in Intelligent Systems and Computing, Singapore:Springer, 2018. CrossRef  Google Scholar; 7.Yoonsik Cheon and Gary T. Leavens, ""A simple and practical approach to unit testing: The JML and JUnit way"", In European Conference on Object-Oriented Programming, pp. 231-255, 2002. CrossRef  Google Scholar; 8.R. K. Barik, R. K. Lenka, S. M. Ali, N. Gupta, A. Satpathy and A. Raj, ""Investigation into the efficacy of geospatial big data visualization tools"", 2017 International Conference on Computing Communication and Automation (ICCCA), pp. 88-93, 2017. View Article  Google Scholar; 9.R. K. Lenka and P. Ranjan, ""A Comparative Study on DFA-Based Pattern Matching for Deep Packet Inspection"", 2012 Third International Conference on Computer and Communication Technology, pp. 255-260, 2012. View Article  Google Scholar; 10.""SpecFlow-Pragmatic B. D. D. for .NET"", 2010. Google Scholar; 11.D. North, ""JBehave. A framework for behaviour driven development (BDD)"", 2012. Google Scholar; 12.R. K. Lenka, R. K. Barik, N. K. Das, K. Agarwal, D. Mohanty and S. Vipsita, ""PSPS: An IoT based predictive smart parking system"", 2017 4th IEEE Uttar Pradesh Section International Conference on Electrical Computer and Electronics (UPCON), pp. 311-317, 2017. View Article  Google Scholar; 13.M. Wynne and A. Hellesoy, ""The cucumber book: behaviour-driven development for testers and developers. Pragmatic Bookshelf"", 2012. Google Scholar; 14.S. M. Ali, N. Gupta, G. K. Nayak and R. K. Lenka, ""Big data visualization: Tools and challenges"", 2016 2nd International Conference on Contemporary Computing and Informatics (IC3I), pp. 656-660, 2016. View Article  Google Scholar; 15.R. K. Barik, P. K. Das and R. K. Lenka, ""Development and implementation of SOA based SDI model for tourism information infrastructure management web services"", 2016 6th International Conference - Cloud System and Big Data Engineering (Confluence), pp. 748-753, 2016. View Article  Google Scholar; 16.Ryan Stejskal and Harvey Siy, ""Test-driven learning in high school computer science"", In Software Engineering Education and Training (CSEE) 2013 IEEE 26th Conference on, pp. 289-293, 2013. View Article  Google Scholar; 17.Ghazala Mansuri and Vijayendra Rao, ""Community-based and-driven development: A critical review"", The World Bank Research Observer, vol. 19, no. 1, pp. 1-39, 2014. CrossRef  Google Scholar; 18.Giner P and V. Pelechano, ""Test-driven development of model transformations"", InInternational Conference on Model Driven Engineering Languages and Systems, pp. 748-752, 2009 Oct 4. Google Scholar; 19.Jianjun Zhao, ""Data-flow-based unit testing of aspect-oriented programs"", Computer Software and Applications Conference 2003. COMPSAC 2003. Proceedings. 27th Annual International, 2003. View Article  Google Scholar; 20.R. K. Lenka et al., ""Building Scalable Cyber-Physical-Social Networking Infrastructure using IoT and Low Power Sensors"", IEEE Access. View Article  Google Scholar; 21.G. Adzic, ""Test Driven. NET Development with FitNesse"", 2008. Google Scholar; 22.Per Runeson, ""A survey of unit testing practices"", IEEE software, vol. 23, pp. 22-29, 2006. View Article  Google Scholar; 23.Carlos Solis and Xiaofeng Wang, ""A study of the characteristics of behaviour driven development"", Software Engineering and Advanced Applications (SEAA) 2011 37th EUROMICRO Conference, pp. 383-387, 2011. View Article  Google Scholar; 24.R. K. Lenka, R. K. Barik, S. Panigrahi and S. S. Panda, ""An Improved Hybrid Distributed Collaborative Model for Filtering Recommender Engine Using Apache Spark"", International Journal of Intelligent Systems and Application (IJISA),  [online]  Available: . CrossRef  Google Scholar; 25.Rabindra K. Barik, Ankita Tripathi, Harishchandra Dubey, Rakesh K. Lenka, Tanjappa Pratik, Suraj Sharma, et al., ""Mistgis: Optimizing geospatial data analysis using mist computing"" in In Progress in Computing Analytics and Networking, Singapore:Springer, pp. 733-742, 2018. CrossRef  Google Scholar; 26.Rabindra K. Barik, Amaresh Chandra Dubey, Ankita Tripathi, T. Pratik, Sapna Sasane, Rakesh K. Lenka, et al., ""Mist Data: Leveraging Mist Computing for Secure and Scalable Architecture for Smart and Connected Health"", Procedia Computer Science, vol. 125, 2018,  [online]  Available: https://doi.org/10.1016/j.procs.2017.12.083. CrossRef  Google Scholar; 27.S.M. Ali, G.K. Nayak, R.K. Lenka and R.K. Barik, ""Movie Recommendation System Using Genome Tags and Content-Based Filtering"" in Advances in Data and Information Sciences, Singapore:Springer, vol. 38, 2018. CrossRef  Google Scholar; 28.R. K. Barik, R. K. Lenka, N. V. R. Simha, H. Debey and K. Mankodiya, ""Fog Computing based SDI Framework for Mineral Resources Information Infrastructure Management in India"", arXiv preprint arXiv: 1712.09282, 2017. Google Scholar; 29.Noopur Gupta, Rakesh K. Lenka, Rabindra K. Barik and Harishchandra Dubey, ""FAIR: A Hadoop-based Hybrid Model for Faculty Information Retrieval System"", arXiv preprint arXiv:1706.08018, 2017. Google Scholar; 30.R. K. Lenka, A. Aggarwal, A. Rath and S. Sharma, ""Cluster-based rendezvous routing protocol for wireless sensor network"", 2017 International Conference on Computing Communication and Automation (ICCCA), pp. 748-752, 2017. View Article  Google Scholar"			Included	Included	new_screen			2	IEEE		Behavior Driven Development: Tools and Challenges	https://ieeexplore.ieee.org/document/8748595	IEEE	nan; Pages; Year; Bibtex
163	Behave	Behavior Driven Development Approach in the Modern Quality Control Process	Nowadays usually the Behavior Driven Development is the approach of choice for the quality control engineers, especially for the long-term projects with the big amount of the audits, because of its main advantage - clear test scenarios visualization and understanding for the not involved persons. However, this approach could not reach its maximum efficiency without proper usage, but the documentation covers only the high-level practices which are not always enough to write the good test scenarios. That is why it is needed to describe the best practices and techniques of the usage of behavior-driven development, formed with the experience of its use. These practices would help to create correct and well understandable behavior scenarios, with the ability to use them as part of the technical documentation. Behavior-driven development would be considered in the comparison with the test-driven development and the domain-driven design approaches - the other important strategies in the quality assurance process.	Visualization; Automation; Process control; Quality control; Documentation; Manuals; Best practices; Quality Control; Quality Control Process; Best Practices; Test Scenarios; Quality Assurance Processes; English Language; Use Of Approach; Cucumber; Testing Tools; Common Mistakes; Domain-specific Languages; Design Documents; behaviour driven development; test driven development; quality control; gherkin; practice; technique; scenario; feature; keyword; step	Oleksandr Bezsmertnyi; Nataliia Golian; Vira Golian; Iryna Afanasieva	2020 IEEE International Conference on Problems of Infocommunications. Science and Technology (PIC S&T)	https://doi.org/10.1109/PICST51311.2020.9467891	"1.J. Smart, BDD in action, Shelter Island, N.Y:Manning, 2015. Google Scholar; 2.G. Nagy and S. Rose, Discovery: Explore behaviour using examples, CreateSpace Independent Publishing Platform, 2014. Google Scholar; 3.R. Lenka, S. Kumar and S. Mamgain, ""Behavior Driven Development: Tools and Challenges"", 2018 International Conference on Advances in Computing Communication Control and Networking (ICACCCN), 2018, 23 September 2020. View Article  Google Scholar; 4.J. Juran and J. De Feo, Juran's quality handbook, New York:McGraw-Hill, 2012. Google Scholar; 5.E. Evans, Domain-driven design, Boston, Mass:Addison-Wesley, 2014. Google Scholar; 6.Fowler and R. Parsons, Domain-specific languages, Upper Saddle River (NJ):Addison-Wesley, 2011. Google Scholar; 7.M. Wynne and A. Hellesoy, The cucumber book, Dallas, Tex:Pragmatic Bookshelf, 2012. Google Scholar; 8.""Gherkin Syntax - Cucumber Documentation"", Cucumber.io, Sep 2020,  [online]  Available: https://cucumber.io/docs/gherkin. Google Scholar; 9.D. Graham and M. Fewster, Experiences of test automation, Upper Saddle River, NJ:Addison-Wesley, 2012. Google Scholar; 10.G. Myers, C. Sandler and T. Badgett, The art of software testing, Hoboken, N.J:John Wiley & Sons, 2012. CrossRef  Google Scholar; 11.""Welcome to SpecFlow's documentation! -- documentation"", Docs.specflow.org, Sep 2020,  [online]  Available: https://docs.specflow.org/projects/specflow/en/latest/. Google Scholar"			Included	Included	new_screen			2	IEEE		Behavior Driven Development Approach in the Modern Quality Control Process	https://ieeexplore.ieee.org/document/9467891	IEEE	nan; Pages; Year; Bibtex
164	Behave	Behavior Driven Development for Tests and Verification	Nowadays, hardware is usually tested and verified at postdesign time. The bottom line is that more effort is spend in the validation phases than in the implementation, because it is harder to fix bugs in later design stages than during the implementation of the design. In contrast, test-first approaches such as test driven development (TDD) have become increasingly important for software development. Behavior driven development (BDD) extends TDD by using natural language style scenarios to describe tests. But both approaches miss formal verification methods which are very important in hardware design. This research project presents a new approach based on BDD that combines testing and verification seamlessly.		Diepenbeck, Melanie; Drechsler, Rolf	Formal Modeling and Verification of Cyber-Physical Systems	https://doi.org/10.1007/978-3-658-09994-7_11		275--277	"""@Inbook{Diepenbeck2015,
    author = ""Diepenbeck, Melanie and Drechsler, Rolf"",
    editor = {Drechsler, Rolf and K{\""u}hne, Ulrich},
    title = ""Behavior Driven Development for Tests and Verification"",
    bookTitle = ""Formal Modeling and Verification of Cyber-Physical Systems: 1st International Summer School on Methods and Tools for the Design of Digital Systems, Bremen, Germany, September 2015"",
    year = ""2015"",
    publisher = ""Springer Fachmedien Wiesbaden"",
    address = ""Wiesbaden"",
    pages = ""275--277"",
    abstract = ""Nowadays, hardware is usually tested and verified at postdesign time. The bottom line is that more effort is spend in the validation phases than in the implementation, because it is harder to fix bugs in later design stages than during the implementation of the design. In contrast, test-first approaches such as test driven development (TDD) have become increasingly important for software development. Behavior driven development (BDD) extends TDD by using natural language style scenarios to describe tests. But both approaches miss formal verification methods which are very important in hardware design. This research project presents a new approach based on BDD that combines testing and verification seamlessly."",
    isbn = ""978-3-658-09994-7"",
    doi = ""10.1007/978-3-658-09994-7\_11"",
    url = ""https://doi.org/10.1007/978-3-658-09994-7\_11""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Behavior driven development for tests and verification	https://link.springer.com/chapter/10.1007/978-3-658-09994-7_11	Springer Fachmedien Wiesbaden	nan; Keywords; References
165	Behave	Towards automatic scenario generation from coverage information	Nowadays, the design of software systems is pushed towards agile development practices. One of its most fundamental approaches is Test Driven Development (TDD). This procedure is based on test cases which are incrementally written prior to the implementation. Recently, Behavior Driven Development (BDD) has been introduced as an extension of TDD, in which natural language scenarios are the starting point for the test cases. This description offers a ubiquitous communication mean for both the software developers and stakeholders.		Melanie Diepenbeck; Mathias Soeken; Daniel Grosse; Rolf Drechsler	AST '13: Proceedings of the 8th International Workshop on Automation of Software Test	https://doi.org/10.5555/2662413.2662432		82-88		Included	Included	new_screen			2	ACM		Towards Automatic Scenario Generation from Coverage Information	https://dl.acm.org/doi/10.5555/2662413.2662432	IEEE Press	nan; Keywords; References; Year; Bibtex
166	Behave	Towards automatic scenario generation from coverage information	Nowadays, the design of software systems is pushed towards agile development practices. One of its most fundamental approaches is Test Driven Development (TDD). This procedure is based on test cases which are incrementally written prior to the implementation. Recently, Behavior Driven Development (BDD) has been introduced as an extension of TDD, in which natural language scenarios are the starting point for the test cases. This description offers a ubiquitous communication mean for both the software developers and stakeholders.Following the BDD methodology thoroughly, one would expect 100\% code coverage, since code is only written to make the test cases pass. However, as we show in an empirical study this expectation is not valid in practice. It becomes even worse in the process of development, i.e. the coverage decreases over time. To close the coverage gap, we sketch an algorithm that generates BDD-style scenarios based on uncovered code.		Diepenbeck, Melanie; Soeken, Mathias; Gro\ss{}e, Daniel; Drechsler, Rolf	AST '13: Proceedings of the 8th International Workshop on Automation of Software Test	https://doi.org/10.5555/2662413.2662432		82-88	"""@inproceedings{10.5555/2662413.2662432,
    author = ""Diepenbeck, Melanie and Soeken, Mathias and Gro\ss{}e, Daniel and Drechsler, Rolf"",
    title = ""Towards automatic scenario generation from coverage information"",
    year = ""2013"",
    isbn = ""9781467361613"",
    publisher = ""IEEE Press"",
    abstract = ""Nowadays, the design of software systems is pushed towards agile development practices. One of its most fundamental approaches is Test Driven Development (TDD). This procedure is based on test cases which are incrementally written prior to the implementation. Recently, Behavior Driven Development (BDD) has been introduced as an extension of TDD, in which natural language scenarios are the starting point for the test cases. This description offers a ubiquitous communication mean for both the software developers and stakeholders.Following the BDD methodology thoroughly, one would expect 100\\% code coverage, since code is only written to make the test cases pass. However, as we show in an empirical study this expectation is not valid in practice. It becomes even worse in the process of development, i.e. the coverage decreases over time. To close the coverage gap, we sketch an algorithm that generates BDD-style scenarios based on uncovered code."",
    booktitle = ""Proceedings of the 8th International Workshop on Automation of Software Test"",
    pages = ""82-88"",
    numpages = ""7"",
    location = ""San Francisco, California"",
    series = ""AST '13""
}
"""	Excluded	Excluded	new_screen			2	ACM		Towards automatic scenario generation from coverage information	https://dl.acm.org/doi/10.5555/2662413.2662432	IEEE Press	nan; Keywords; References
167	Behave	Using gherkin to extract tests and monitors for safer medical device interaction design	Number entry systems on medical devices are safety critical and it is important to get them right. Interaction design teams can be multidisciplinary, and in this work we present a process where the requirements of the system are drawn up using a Controlled Natural Language (CNL) that is understandable by non-technical experts or clients. These CNL requirements can also be directly used by the Quality Assurance (QA) team to test the system and monitor whether or not the system runs as it should once deployed. Since commonly, systems are too complex to test all possible execution paths before deployment, monitoring the system at runtime is useful in order to check that the system is running correctly. If at runtime, it is discovered that an anomaly is detected, the relevant personnel is notified through a report in natural language.	medical devices; runtime verification; testing; user interfaces	Abigail Cauchi; Christian Colombo; Adrian Francalanza; Mark Micallef; Gordon Pace	EICS '16: Proceedings of the 8th ACM SIGCHI Symposium on Engineering Interactive Computing Systems	https://doi.org/10.1145/2933242.2935868		275-280		Included	Included	new_screen			2	ACM		Using Gherkin to Extract Tests and Monitors for Safer Medical Device Interaction Design	https://dl.acm.org/doi/10.1145/2933242.2935868	Association for Computing Machinery	nan; References; Year; Bibtex
168	Behave	A Behavior-Driven Approach to Intent Specification for Software-Defined Infrastructure Management	"One of the goals of Software-Defined Networking (SDN) is to allow users to specify high-level policies into lower level network rules. Managing a network and decide what policy set is appropriate requires, however, expertise and low level know-how. An emerging SDN paradigm is to allow higher-level network level decisions wishes in the form of ""intents"". Despite its importance in simplifying network management, intent specification is not yet standardized. In this work, we propose a northbound interface (NBI) for intent declaration, based on Behavior-Driven Development. In our approach, intents are specified in plain English and translated by our system into pre-compiled network policies, that are in turn, converted into low-level rules by the software-defined infrastructure e.g. an SDN controller. We demonstrated our behavior-driven approach with two practical use cases: service function chaining deployed on OpenStack, supported by both ONOS and Ryu controllers, and dynamic firewall programming. We also measured the overhead and response time of our NBI. We believe that our approach is far more general and paves the way for a more expressive and simplified northbound interface for intent-driven networking."	Programming; Network function virtualization; Software; Software defined networking; Business; Conferences; Computer languages; Infrastructure; Practical Use; Dynamic Programming; Network Management; Plain English; Practical Use Cases; Rest Of The Paper; Rational Design; Functional Networks; Natural Language; Programming Language; International Network; Application Programming Interface; Traffic Flow; Business Management; Blacklist; Regular Expressions; OpenFlow; Network Congestion; Agile Development; Virtual Network Functions; Technical Leadership; Service Chain; Formal Verification; Set Of Purposes; Whitelist; Workflow; Bitrate; Service Behavior; Virtually	Flavio Esposito; Jiayi Wang; Chiara Contoli; Gianluca Davoli; Walter Cerroni; Franco Callegati	2018 IEEE Conference on Network Function Virtualization and Software Defined Networks (NFV-SDN)	https://doi.org/10.1109/NFV-SDN.2018.8725754	"1.""Network Functions Virtualisation (NFV); Architectural Framework"", European Telecommunications Standards Institute Standard ETSI GS NFV 002, 2014. Google Scholar; 2.D. Kreutz, F. M. V. Ramos, P. E. Verissimo, C. E. Rothenberg, S. Azodolmolky and S. Uhlig, ""Software-Defined Networking: A comprehensive survey"", Proceedings of the IEEE, vol. 103, no. 1, pp. 14-76, Jan. 2015. View Article  Google Scholar; 3.A. Khurshid, X. Zou, W. Zhou, M. Caesar and P. B. Godfrey, ""VeriFlow: Verifying network-wide invariants in real time"", Proc. of 10th USENIX Symposium on Networked Systems Design and Implementation (NSDI), pp. 15-27, 2013. CrossRef  Google Scholar; 4.P. Kazemian, M. Chang, H. Zeng, G. Varghese, N. McKeown and S. Whyte, ""Real time network policy checking using header space analysis"", Proc. of 10th USENIX Symposium on Networked Systems Design and Implementation (NSDI), pp. 99-112, 2013. Google Scholar; 5.S. Ghorbani and B. Godfrey, ""Towards correct network virtualization"", ACM SIGCOMM Comput. Commun. Rev., vol. 44, no. 4, pp. 109-114, Aug. 2014. CrossRef  Google Scholar; 6.G. N. Nde and R. Khondoker, ""SDN testing and debugging tools: A survey"", Proc. of 5th International Conference on Informatics Electronics and Vision (ICIEV), pp. 631-635, 2016. View Article  Google Scholar; 7.B. Heller et al., ""Leveraging SDN layering to systematically troubleshoot networks"", Proc. of 2nd ACM SIGCOMM Workshop on Hot Topics in Software Defined Networking (HotSDN), pp. 37-42, 2013. CrossRef  Google Scholar; 8.R. Beckett, X. K. Zou, S. Zhang, S. Malik, J. Rexford and D. Walker, ""An assertion language for debugging SDN applications"", Proc. of 3rd ACM SIGCOMM Workshop on Hot Topics in Software Defined Networking (HotSDN), pp. 91-96, 2014. CrossRef  Google Scholar; 9.N. McKeown, T. Anderson, H. Balakrishnan, G. Parulkar, L. Peterson, J. Rexford, et al., ""OpenFlow: Enabling innovation in campus networks"", ACM SIGCOMM Comput. Commun. Rev., vol. 38, no. 2, pp. 69-74, Mar. 2008. CrossRef  Google Scholar; 10.""Intent NBI - Definition and Principles"" in Tech. Rep. TR-523, Open Networking Foundation (ONF), October 2016. Google Scholar; 11.Y. Yuan, D. Lin, R. Alur and B. T. Loo, ""Scenario-based programming for SDN policies"", Proc. of 11th ACM Conference on Emerging Networking Experiments and Technologies (CoNEXT), pp. 34:1-34:13, 2015. CrossRef  Google Scholar; 12.B.L. Loo et al., ""Declarative networking"", Commun. ACM, vol. 52, no. 11, pp. 87-95, Nov. 2009. CrossRef  Google Scholar; 13.R. Soule et al., ""Merlin: A language for provisioning network resources"", Proc. of 10th ACM Conference on Emerging Networking Experiments and Technologies (CoNEXT), pp. 213-226, 2014. CrossRef  Google Scholar; 14.N. Foster, R. Harrison, M. J. Freedman, C. Monsanto, J. Rexford, A. Story, et al., ""Frenetic: A network programming language"", Proc. of 16th ACM SIGPLAN International Conference on Functional Programming, pp. 279-291, 2011. CrossRef  Google Scholar; 15.C. Monsanto, J. Reich, N. Foster, J. Rexford and D. Walker, ""Composing software defined networks"", Proc. of 10th USENIX Symposium on Networked Systems Design and Implementation (NSDI), pp. 1-13, 2013. Google Scholar; 16.T. Nelson, A. D. Ferguson, M. J. G. Scheer and S. Krishnamurthi, ""Tierless programming and reasoning for software-defined networks"", Proc. of 11th USENIX Conference on Networked Systems Design and Implementation (NSDI), pp. 519-531, 2014. Google Scholar; 17.A. Alsudais and E. Keller, ""Hey network can you understand me?"", Proc. of 2017 IEEE Conference on Computer Communications Workshops (INFOCOM), pp. 193-198, 2017. View Article  Google Scholar; 18.R. Birkner, D. Drachsler-Cohen, L. Vanbever and M. Vechev, ""Net2Text: Query-guided summarization of network forwarding behaviors"", Proc. of 15th USENIX Symposium on Networked Systems Design and Implementation (NSDI), pp. 609-623, 2018. Google Scholar; 19.D. North, ""Behavior-driven development"", 2003,  [online]  Available: https://dannorth.net/introducing-bdd. Google Scholar; 20.K. Beck, Test Driven Development: By Example, Boston, MA, USA:Addison-Wesley Longman Publishing Co., Inc., 2002. Google Scholar; 21.N. Feamster, J. Rexford and E. Zegura, ""The road to SDN: An intellectual history of programmable networks"", ACM SIGCOMM Comput. Commun. Rev., vol. 44, no. 2, pp. 87-98, Apr. 2014. CrossRef  Google Scholar; 22.Z. Wang, X. Li and J. Zhou, ""Small-footprint keyword spotting using deep neural network and connectionist temporal classifier"", CoRR, vol. abs/1709.03665, 2017,  [online]  Available: http://arxiv.org/abs/1709.03665. Google Scholar; 23.F. Callegati, W. Cerroni, C. Contoli and F. Foresta, ""Performance of intent-based virtualized network infrastructure management"", Proc. of 2017 IEEE International Conference on Communications (ICC), pp. 1-6, 2017. View Article  Google Scholar"			Included	Included	new_screen			2	IEEE		A Behavior-Driven Approach to Intent Specification for Software-Defined Infrastructure Management	https://ieeexplore.ieee.org/document/8725754	IEEE	nan; Pages; Year; Bibtex
169	Behave	Feature-Trace:Generating Operational Profile and Supporting Testing Prioritization from BDD Features	Operational Profiles provide quantitative information about how the software will be used, which supports highlighting those software components more sensitive to reliability based on their profile usage. However, the generation of Operational Profiles usually requires a considerable team effort to liaise requirements specification until their reification into expected software artifacts. In this sense, it becomes paramount in the software life cycle the ability to seamlessly or efficiently perform traceability from requirement to code, embracing the testing process as a means to ensure that the requirements are satisfiably covered and addressed. In this work, we propose the Feature-Trace approach which merges the advantages of the Operational Profile and the benefits of the requirements-to-code traceability present in the BDD (Behavior-Driven Development) approach. The primary goal of our work is to use the BDD approach as an information source for the semi-automated generation of the Operational Profile. The proposed approach was evaluated on the Diaspora software, on a GitHub open source software. The case study revealed that the Feature-Trace approach is capable of extracting the operational profile seamlessly from the specified Diaspora's BDD features as well as obtaining and presenting vital information to guide the process of test cases prioritization.	behavior-driven development; operational profile; requirements traceability; testing	Rafael Fazzolino; Genaina Nunes Rodrigues	SBES '19: Proceedings of the XXXIII Brazilian Symposium on Software Engineering	https://doi.org/10.1145/3350768.3350781		332-336		Included	Included	new_screen			2	ACM		Feature-Trace: Generating Operational Profile and Supporting Testing Prioritization from BDD Features	https://dl.acm.org/doi/10.1145/3350768.3350781	Association for Computing Machinery	nan; References; Year; Bibtex
170	Behave	Cucumber Cookbook	This book is intended for business and development personnel who want to use Cucumber for behavior-driven development and test automation. Readers with some familiarity with Cucumber will find this book of most benefit. Since the main objective of this book is to create test automation frameworks, previous experience in automation will be helpful.		Shankar Garg	Community experience distilled	https://books.google.ca/books?id=0IrGCQAAQBAJ&dq=Cucumber+Cookbook&lr=&source=gbs_navlinks_s		162	"""nan"""	Excluded	Excluded	new_screen			2	Google Scholar		Cucumber Cookbook	https://books.google.ca/books?id=0IrGCQAAQBAJ&dq=Cucumber+Cookbook&lr=&source=gbs_navlinks_s	Packt Publishing Ltd	
171	Behave	A Semantic Wiki Approach to Enable Behaviour Driven Requirements Management	Poorly managed requirements are considered as one of the principal causes of projects failure and consequently companies struggle to find an effective solution for requirements elicitation and further management. The adoption of such solution becomes even more difficult when the collaboration between different depaitaients (e.g. marketing and development) is necessary. To address this challenge, the authors propose a methodology for requirements raanagement based on Semantic Wild. and Behaviour Driven Development (BDD). BDD allows developers and end-users to interoperate and encourages seamless collaboration between all project participants. It also certifies that requirements are treated properly by their associated developments through the connection of textual descriptions to functional tests. Semantic wilds can be an added value in requirements management due to their enhanced browser interface and collaborative knowledge sharing capability. They allow stakeholders to participate in requirements management independently of their location. This is of major importance to reduce the problem of lack of inputs from interested parties. Moreover, with semantic wikis adoption, end-users and ontologies can coexist in one system since wiki pages are presented in a human-readable format in parallel to their formal representation in ontologies. This knowledge representation supports companies' decision-making by allowing managers to prioritize implementations, to keep a trace of requirements evolution, and reuse implementations when new requirements enter the system.	Requirements Management; Requirements Engineering; Semantic Wiki; Folksonomies; Behavior Driven Development; Requirements Management;  Requirements Engineering;  Semantic Wiki;  Folksonomies;  Behavior Driven Development	Marques-Lucena, Catarina; Agostinho, Carlos; Sarraipa, Joao; Jardim-Goncalves, Ricardo	CONTROL ENGINEERING AND APPLIED INFORMATICS	https://www.webofscience.com/wos/woscc/full-record/WOS:000419424700008		72-83	"""@article{WOS:000419424700008,
    Author = ""Marques-Lucena, Catarina and Agostinho, Carlos and Sarraipa, Joao and Jardim-Goncalves, Ricardo"",
    Title = ""A Semantic Wiki Approach to Enable Behaviour Driven Requirements Management"",
    Journal = ""CONTROL ENGINEERING AND APPLIED INFORMATICS"",
    Year = ""2017"",
    Volume = ""19"",
    Number = ""4"",
    Pages = ""72-83"",
    Month = ""DEC"",
    Abstract = ""Poorly managed requirements are considered as one of the principal causes of projects failure and consequently companies struggle to find an effective solution for requirements elicitation and further management. The adoption of such solution becomes even more difficult when the collaboration between different depaitaients (e.g. marketing and development) is necessary. To address this challenge, the authors propose a methodology for requirements raanagement based on Semantic Wild. and Behaviour Driven Development (BDD). BDD allows developers and end-users to interoperate and encourages seamless collaboration between all project participants. It also certifies that requirements are treated properly by their associated developments through the connection of textual descriptions to functional tests. Semantic wilds can be an added value in requirements management due to their enhanced browser interface and collaborative knowledge sharing capability. They allow stakeholders to participate in requirements management independently of their location. This is of major importance to reduce the problem of lack of inputs from interested parties. Moreover, with semantic wikis adoption, end-users and ontologies can coexist in one system since wiki pages are presented in a human-readable format in parallel to their formal representation in ontologies. This knowledge representation supports companies' decision-making by allowing managers to prioritize implementations, to keep a trace of requirements evolution, and reuse implementations when new requirements enter the system."",
    Publisher = ""ROMANIAN SOC CONTROL TECH INFORMATICS"",
    Address = ""313 SPLAIUL INDEPENDENTEI, BUCHAREST, 060042, ROMANIA"",
    Type = ""Article"",
    Language = ""English"",
    Affiliation = ""Marques-Lucena, C (Corresponding Author), Univ Nova Lisboa, Dept Engn Electrotecn, FCT, P-2829516 Caparica, Portugal. Marques-Lucena, C (Corresponding Author), Univ Nova Lisboa, CTS, P-2829516 Caparica, Portugal. Marques-Lucena, Catarina; Jardim-Goncalves, Ricardo, Univ Nova Lisboa, Dept Engn Electrotecn, FCT, P-2829516 Caparica, Portugal. Marques-Lucena, Catarina; Agostinho, Carlos; Sarraipa, Joao, Univ Nova Lisboa, CTS, P-2829516 Caparica, Portugal."",
    ISSN = ""1454-8658"",
    Keywords = ""Requirements Management; Requirements Engineering; Semantic Wiki; Folksonomies; Behavior Driven Development"",
    Keywords-Plus = ""GENERATION; SYSTEMS"",
    Research-Areas = ""Automation \\& Control Systems"",
    Web-of-Science-Categories = ""Automation \\& Control Systems"",
    Author-Email = ""c.lucena@campus.fct.unl.pt"",
    Affiliations = ""Universidade Nova de Lisboa; Universidade Nova de Lisboa"",
    ResearcherID-Numbers = ""Jardim-Goncalves, Ricardo/A-6819-2012 Agostinho, Carlos/M-5321-2013"",
    ORCID-Numbers = ""Jardim-Goncalves, Ricardo/0000-0002-3703-6854 Agostinho, Carlos/0000-0002-2884-776X"",
    Funding-Acknowledgement = ""FCT Fundacan para a Ciencia e a Tecnologia within its Research Unit CTS - Centro de Tecnologia e Sistemas {[}ULD/EEA/00066/2013]"",
    Funding-Text = ""This work is fimded by FCT Fundacan para a Ciencia e a Tecnologia within its Research Unit CTS - Centro de Tecnologia e Sistemas, with reference ULD/EEA/00066/2013."",
    Number-of-Cited-References = ""30"",
    Times-Cited = ""0"",
    Usage-Count-Last-180-days = ""0"",
    Usage-Count-Since-2013 = ""4"",
    Journal-ISO = ""Control Eng. Appl. Inform."",
    Doc-Delivery-Number = ""FR9WU"",
    Web-of-Science-Index = ""Science Citation Index Expanded (SCI-EXPANDED)"",
    Unique-ID = ""WOS:000419424700008"",
    DA = ""2024-10-22""
}
"""	Included	Included	new_screen			2	Web of Science		A semantic wiki approach to enable behaviour driven requirements management	https://www.webofscience.com/wos/woscc/full-record/WOS:000419424700008	ROMANIAN SOC CONTROL TECH INFORMATICS	nan; References
172	Behave	C	Power utilization assumes a massive part in any of the integrated circuits, and it’s rundown as a standout amongst essential difficulties in the universal innovation guide into semiconductors. Generally in integrated circuit, flip-flop and clock distribution system consume a lot of energy since they make and utilize the most extreme number of internal transitions. In the clock distribution system, the clock signal circulates from a typical point to every one of the components that required for the circuit. However this capacity is more important to the synchronous framework, much consideration needs to provide for the attributes of these clock signals. In the sequential circuits, a clock distribution system spends a lot of power given the high operating frequency of high capacitance. An existing approach to reducing the limits of a clock signal is based on the quantity of clocked transistors. In this, an advanced procedure is proposed and evaluated by utilizing Dual-Edge Triggered Flip-Flop (DETFF) depends on the Dynamic Signal Driving (DSD) strategy. This DETFF is executed in sequential circuits that have been ordered using Tanner Electronic Design Automation (EDA) tool which is used to simulate and examine control by using Dynamic Signal Driving (DSD) strategy. The outcomes demonstrate that the total power utilization is decreased in sequential benchmark circuit design. A number of Flip flops have been designed by various technologies such as reducing area, delay, and power, but this proposed dynamic signal driving scheme can be used for any integrated circuit- that can be reduced to all these three parameters to give the best trade-off for a particular ASIC platform.	Flip flop, Clock distribution system, Clocked transistor, Tanner, ASIC	Prithivi Raj, M.; Kavithaa, G.	Microprocessors and Microsystems	https://doi.org/doi:10.1007/978-3-540-29678-2_3				Excluded	Excluded	new_screen			2	Pub Med Central		Dynamic signal driving strategy based high speed and low powered dual edge triggered flip flop design used memory applications	https://www.ncbi.nlm.nih.gov/pmc/articles/PMC7163932/		nan; Venue; Authors; Abstract; Keywords; References; Pages; Year; Bibtex; Publisher
173	Behave	Pro Agile .NET Development with SCRUM	Pro Agile .NET Development with SCRUMguides youthrough a real-world ASP.NET project and shows how agile methodology is put into practice. There is plenty of literature on the theory behind agile methodologies, but no book on the market takes the concepts of agile practices and applies these in a practical manner to an end-to-end ASP.NET project, especially the estimating, requirements and management aspects of a project. Pro Agile .NET Development with SCRUM takes you through the initial stages of a project–gathering requirementsand setting up an environment–through to the development and deployment stages using an agile iterative approach: namely, Scrum. In the book,you'll focuson delivering an enterprise-level ASP.NET project. Each chapter is in iterations or sprints, putting into practice the features of agile–user stories, test-driven development (TDD), behavior-driven development (BDD), continuous integration, user acceptance testing, extreme programming, Scrum, design patterns and principles, inside-out development, lean developent, KanBan boards, and more. An appendix features code katas designed for the reader to get up-to-speed with some of the features of extreme programming, while also showcasing popular open-source frameworks to assist in automated testing and mocking. What you'll learn Gain practical knowledge on employing the Scrum project methodology using a real-world ASP.NET project Seehow extreme programming features in real world .NET projects Learnbest-practice tools foruser interfaceanduser acceptance testing, such as waitiN Discoverdetails on how to capture requirements and drive development using user stories Learnhow to estimate and plan agile projects and work with business stakeholders through a practical example Uncover tips for developing using the outside-in, TDD and BDD methodologies Gain information on tracking the progress of a project through burn down charts, iterations and retrospectives Who this book is for Experienced .NET developers who are looking to see how the Scrum agile project methodology and extreme programming features are employed in a real-world .NET application.		Jerrel Blankenship; Matthew Bussa; Scott Millett		https://link.springer.com/book/10.1007/978-1-4302-3534-7				Excluded	Excluded	new_screen			2	Springer Link		Pro Agile .NET Development with SCRUM	https://link.springer.com/book/10.1007/978-1-4302-3534-7	Springer Link	nan; Venue; Abstract; Keywords; References; Pages; Year; Bibtex
174	Behave	Behavior-driven development in product configuration systems	Product Configuration Systems (PCS) are increasingly used by companies to automate the performance of the sales and engineering processes. Since the benefits from such projects have huge variations, it is crucial to make the right decisions when scoping and developing PCSs. The development of PCS is influenced by both business interests and technical insights. Developers of PCS face various challenges while working in team, including different stakeholders such as business owners, developers, project managers, and product experts. The more diverse the team is, the more significant are the challenges. This paper suggests that Behavior-driven Development (BDD) may provide configuration teams with a specific structure to express scenarios (and thus constraints) on PCS in natural language. BDD may yield benefits such as a better expression of PCS constraints, more efficient communication of requirements and incorporation of the expressed rules in a software transformation process. In other words, applying BDD may eliminate unnecessary tasks when gathering knowledge, developing, and testing PCS projects. In this paper, we present a novel approach from an ongoing project on how to relate BDD to the development process of PCS while using Scrum-based methods.	Human resource management; Business owners; Development process; Efficient communications; Engineering process; Natural languages; Product configuration; Project managers; Software transformation; Boolean functions; Human resource management;  Business owners;  Development process;  Efficient communications;  Engineering process;  Natural languages;  Product configuration;  Project managers;  Software transformation;  Boolean functions	Shafiee, Sara; Hvam, Lars; Haug, Anders; Wautelet, Yves	CEUR Workshop Proceedings	https://www.scopus.com/record/display.uri?eid=2-s2.0-85054503710&origin=resultslist&sort=r-f&src=s&sid=a7d534ce36ec1da60fbd4d2431c71817&sot=b&sdt=b&s=TITLE%28behavior+driven+development+in+product+configuration+systems%29&sl=67&sessionSearchId=a7d534ce36ec1da60fbd4d2431c71817&relpos=0		49 - 52	"""@CONFERENCE{Shafiee201849,
    author = ""Shafiee, Sara and Hvam, Lars and Haug, Anders and Wautelet, Yves"",
    editor = ""M., Stettinger and A., Felfernig and L., Hotz and J., Tiihonen"",
    title = ""Behavior-driven development in product configuration systems"",
    year = ""2018"",
    journal = ""CEUR Workshop Proceedings"",
    volume = ""2220"",
    pages = ""49 - 52"",
    url = ""https://www.scopus.com/inward/record.uri?eid=2-s2.0-85054503710\&partnerID=40\&md5=c6f2658f2a1e55612267a8755418d476"",
    affiliations = ""Mechanical Engineering Department, Technical University of Denmark, Denmark"",
    abstract = ""Product Configuration Systems (PCS) are increasingly used by companies to automate the performance of the sales and engineering processes. Since the benefits from such projects have huge variations, it is crucial to make the right decisions when scoping and developing PCSs. The development of PCS is influenced by both business interests and technical insights. Developers of PCS face various challenges while working in team, including different stakeholders such as business owners, developers, project managers, and product experts. The more diverse the team is, the more significant are the challenges. This paper suggests that Behavior-driven Development (BDD) may provide configuration teams with a specific structure to express scenarios (and thus constraints) on PCS in natural language. BDD may yield benefits such as a better expression of PCS constraints, more efficient communication of requirements and incorporation of the expressed rules in a software transformation process. In other words, applying BDD may eliminate unnecessary tasks when gathering knowledge, developing, and testing PCS projects. In this paper, we present a novel approach from an ongoing project on how to relate BDD to the development process of PCS while using Scrum-based methods. (c) 2018 CEUR-WS. All rights reserved."",
    keywords = ""Human resource management; Business owners; Development process; Efficient communications; Engineering process; Natural languages; Product configuration; Project managers; Software transformation; Boolean functions"",
    publisher = ""CEUR-WS"",
    issn = ""16130073"",
    language = ""English"",
    abbrev_source_title = ""CEUR Workshop Proc."",
    type = ""Conference paper"",
    publication_stage = ""Final"",
    source = ""Scopus"",
    note = ""Cited by: 4; Conference name: 20th Configuration Workshop, ConfWS 2018; Conference date: 27 September 2018 through 28 September 2018; Conference code: 139881""
}
"""	Included	Included	new_screen			2	Scopus Signed In		Behavior-driven development in product configuration systems	https://www.scopus.com/record/display.uri?eid=2-s2.0-85054503710&origin=resultslist&sort=r-f&src=s&sid=a7d534ce36ec1da60fbd4d2431c71817&sot=b&sdt=b&s=TITLE%28behavior+driven+development+in+product+configuration+systems%29&sl=67&sessionSearchId=a7d534ce36ec1da60fbd4d2431c71817&relpos=0	CEUR-WS	nan; References
175	Behave	Light-weight software product lines for small and medium-sized enterprises (SMEs)	Product line engineering practices promote the idea of systematic reuse of core assets and have been reported to decrease time-to-market and development costs for new products. However, our recent efforts to transfer our product line engineering knowledge to several of our small and medium-size enterprise industrial partner showed that there are challenges that need to be addressed before core product line engineering ideas can be deployed in SME context. These challenges include upfront investment costs, business traceability, levels of abstraction of functional features and semantic distinction between functional and non-functional software aspects. In order to address these challenges within the context of SMEs, we adopt and extend the behavior-driven development methodology in a way to not only offer agility in practice but also to equip software developers with the means to capture and manage software variability within the behavior-driven development process. We introduce the details of the extended methodology and discuss its advantages and disadvantages in detail.		Ebrahim Bagheri; Faezeh Ensan	CASCON '13: Proceedings of the 2013 Conference of the Center for Advanced Studies on Collaborative Research	https://doi.org/10.5555/2555523.2555556		311-324		Included	Included	new_screen			2	ACM		Light-Weight Software Product Lines for Small and Medium-Sized Enterprises (SMEs)	https://dl.acm.org/doi/10.5555/2555523.2555556	IBM Corp	nan; Keywords; References; Year; Bibtex
176	Behave	Chapter 8-Integrating Automation into Your Development Process	Publisher SummaryThe concept of continuous integration has been around for quite a while now. There are many tools to provide continuous integration and surprisingly, some even work together. Any investment in continuous integration will pay off but it requires discipline that few developers, QA resources, or management actually have at the start of the process. The challenge is to train the development staff and the QA to use continuous integration to work smarter, not harder. There is much interest in continuous integration, and many organizations are implementing continuous integration tools as part of their move toagile development. Difficulty surrounds this move because not only do developers have to change some working habits, but also there typically is a large investment required matching the capabilities of the tool to the organization itself and for that reason alone it is daunting. Many tools, whether they are open source or commercial products, exist for performing automation. The platform in use for development, including the operating system or the development environment platform, as well as the delivery platform of the end product, may restrict the selection of tools. Additionally, the software development language in use may dictate a narrow selection of tools. Some development shops may have restrictions regarding what software can be brought in due to security concerns.		BillHoltsnider; TomWheeler; GeorgeStragand; JosephGee	Agile Development & Business Goals	https://doi.org/10.1016/B978-0-12-381520-0.00008-4				Excluded	Excluded	new_screen			2	Science Direct		Chapter 8 - Integrating Automation into Your Development Process	https://www.sciencedirect.com/science/article/abs/pii/B9780123815200000084	Science Direct	nan; Keywords; References; Pages; Year; Bibtex
177	Behave	Chapter 4.1-The Psychology of Programming in the Large: Team and Organizational Behaviour	Publisher SummaryThis chapter focuses on the psychology of programming in relation to team and organizational behavior. Software development must be studied at several behavioural levels. Organizing programmers into teams superimposes a layer of social behavior on the cognitive requirements of programming tasks. Two structures have been proposed for programming teams based on the centralized versus decentralized team organizations often studied in group dynamics research. A hybrid approach to structuring programming teams might be taken on large projects that have characteristics favourable to different types of programming teams. Programming team activities offer many opportunities for peer review activities that may be formal or informal components of the development process. On the other hand, team methodologies must focus on coordinating the tasks and product concept. The structure of programming teams should reflect the nature of the task rather than the organization, allow members to speak as if with one mind, and determine the tasks the team can effectively handle.		BillCurtis; DianeWalz	Psychology of Programming	https://doi.org/10.1016/B978-0-12-350772-3.50021-5		253-270		Excluded	Excluded	new_screen			2	Science Direct		Chapter 4.1 - The Psychology of Programming in the Large: Team and Organizational Behaviour	https://www.sciencedirect.com/science/article/abs/pii/B9780123507723500215	Science Direct	nan; Keywords; References; Year; Bibtex
178	Behave	Intuitive design: framing a software test system as a status reporting tool for business	Purpose: This paper aims to present a conceptual framework of how software teams can leverage the implicit information of implemented acceptance tests to cater to the needs of decision makers. The research questions on this framework were how business stakeholders can receive project status information in an intuitive way and how this framework can guarantee the traceability of tests to requirements. Design/methodology/approach: The conceptual framework delineates the design of an acceptance test framework in three aspects: how the requirements model reflects the evolving states of requirement maturity over a project, how the acceptance test model becomes synchronized with the requirements model without a traceability matrix and how the acceptance test model communicates business value to the decision makers. Findings: In an industrial case study, the presented framework yielded the positive effects of intuitive understanding by business stakeholders, high test coverage of requirements and distinctly reduced manual quality assurance (QA) work by automated testing for browsers and mobile devices. Practical implications: The presented framework can help to convince business stakeholders to approve the budget for building a testing framework because it delivers them value as a status reporting tool. Originality/value: This paper is the first to describe a step-by-step approach to solving a critical problem that IT departments frequently face. The solution consists in a new way of transforming the perception of a technical framework into a reporting tool for business information by intuitive design. The idea of mapping hierarchically corresponding abstraction layers can be transferred to other engineering domains.	Abstracting; Budget control; Decision making; Network function virtualization; Quality assurance; Software testing; Testing; User centered design; Behavior-driven development; Conceptual frameworks; Design/methodology/approach; Intuitive understanding; Reporting tools; Requirements management; Step-by-step approach; Test driven development; Acceptance tests; Abstracting;  Budget control;  Decision making;  Network function virtualization;  Quality assurance;  Software testing;  Testing;  User centered design;  Behavior-driven development;  Conceptual frameworks;  Design/methodology/approach;  Intuitive understanding;  Reporting tools;  Requirements management;  Step-by-step approach;  Test driven development;  Acceptance tests	So, Chaehan	Journal of Engineering, Design and Technology	https://doi.org/10.1108/JEDT-07-2016-0047		149 - 165	"""@ARTICLE{So2017149,
    author = ""So, Chaehan"",
    title = ""Intuitive design: framing a software test system as a status reporting tool for business"",
    year = ""2017"",
    journal = ""Journal of Engineering, Design and Technology"",
    volume = ""15"",
    number = ""2"",
    pages = ""149 - 165"",
    doi = ""10.1108/JEDT-07-2016-0047"",
    url = ""https://www.scopus.com/inward/record.uri?eid=2-s2.0-85016965317\&doi=10.1108\%2fJEDT-07-2016-0047\&partnerID=40\&md5=c9c8aabcbcf125395e56c91718b39c4b"",
    affiliations = ""International Design School for Advanced Studies, Hongik University, South Korea"",
    abstract = ""Purpose: This paper aims to present a conceptual framework of how software teams can leverage the implicit information of implemented acceptance tests to cater to the needs of decision makers. The research questions on this framework were how business stakeholders can receive project status information in an intuitive way and how this framework can guarantee the traceability of tests to requirements. Design/methodology/approach: The conceptual framework delineates the design of an acceptance test framework in three aspects: how the requirements model reflects the evolving states of requirement maturity over a project, how the acceptance test model becomes synchronized with the requirements model without a traceability matrix and how the acceptance test model communicates business value to the decision makers. Findings: In an industrial case study, the presented framework yielded the positive effects of intuitive understanding by business stakeholders, high test coverage of requirements and distinctly reduced manual quality assurance (QA) work by automated testing for browsers and mobile devices. Practical implications: The presented framework can help to convince business stakeholders to approve the budget for building a testing framework because it delivers them value as a status reporting tool. Originality/value: This paper is the first to describe a step-by-step approach to solving a critical problem that IT departments frequently face. The solution consists in a new way of transforming the perception of a technical framework into a reporting tool for business information by intuitive design. The idea of mapping hierarchically corresponding abstraction layers can be transferred to other engineering domains. (c) 2017, (c) Emerald Publishing Limited."",
    author_keywords = ""Acceptance test-driven development; Behavior-driven development; Intuitive design; Reporting tool; Requirements management; User-centered design"",
    keywords = ""Abstracting; Budget control; Decision making; Network function virtualization; Quality assurance; Software testing; Testing; User centered design; Behavior-driven development; Conceptual frameworks; Design/methodology/approach; Intuitive understanding; Reporting tools; Requirements management; Step-by-step approach; Test driven development; Acceptance tests"",
    correspondence_address = ""C. So; International Design School for Advanced Studies, Hongik University, South Korea; email: cso@hongik.ac.kr"",
    publisher = ""Emerald Group Publishing Ltd."",
    issn = ""17260531"",
    language = ""English"",
    abbrev_source_title = ""J. Eng. Des. Technol."",
    type = ""Article"",
    publication_stage = ""Final"",
    source = ""Scopus"",
    note = ""Cited by: 1""
}
"""	Included	Included	new_screen			2	Scopus Signed In		Intuitive design: framing a software test system as a status reporting tool for business	https://www.scopus.com/record/display.uri?eid=2-s2.0-85016965317&origin=resultslist&sort=r-f&src=s&sid=a3c5fe708145cce720db94fb86f23660&sot=b&sdt=b&s=TITLE%28intuitive+design+framing+a+software+test+system+as+a+status+reporting+tool+for+business%29&sl=94&sessionSearchId=a3c5fe708145cce720db94fb86f23660&relpos=0	Emerald Group Publishing Ltd	nan; References
179	Behave	iOS Code Testing: Test-Driven Development and Behavior-Driven Development with Swift	Put into motion practical examples to master Test-Driven Development (TDD) and acceptance testing in Swift. This book uses a pragmatic approach to writing well-tested code and provides techniques that can be used to retrofit tests to legacy code bases. You'll be introduced to basic principles of TDD, such as Test First, Red-Green-Refactor, Remove Duplicate code, Dependency Injection, and Single Responsibility. Approaches covered include TDD, behavior-driven development (BDD), UI, and acceptance testing with common standard/open source frameworks. iOS Code Testing offers helpful instruction to teach iOS developers to retrospectively fit tests to legacy code, refactor legacy code so as to make the code more testable, install and configure a popular Swift BDD framework, practice BDD with Xcode, and create automated UI tests with Xcode. Additionally, many projects have legacy code bases. Legacy code is often seen as a blocker when it comes to implementing any kind of testing. What You Will Learn Fit test to legacy code retrospectively Install and configure popular Swift BDD frameworks Practice BDD with Xcode Who This Book Is For practitioners, such as Swift developers and mobile app testers.	Boolean functions; Codes (symbols); Computer programming; iOS (operating system); Acceptance testing; Basic principles; Common standards; Dependency injection; Legacy code; Mobile app; Test driven development; Acceptance tests; Boolean functions;  Codes (symbols);  Computer programming;  iOS (operating system);  Acceptance testing;  Basic principles;  Common standards;  Dependency injection;  Legacy code;  Mobile app;  Test driven development;  Acceptance tests	Mishra, Abhishek	iOS Code Testing: Test-Driven Development and Behavior-Driven Development with Swift	https://doi.org/10.1007/978-1-4842-2689-6		1 - 440	"""@BOOK{Mishra20171,
    author = ""Mishra, Abhishek"",
    title = ""iOS Code Testing: Test-Driven Development and Behavior-Driven Development with Swift"",
    year = ""2017"",
    journal = ""iOS Code Testing: Test-Driven Development and Behavior-Driven Development with Swift"",
    pages = ""1 - 440"",
    doi = ""10.1007/978-1-4842-2689-6"",
    url = ""https://www.scopus.com/inward/record.uri?eid=2-s2.0-85032643859\&doi=10.1007\%2f978-1-4842-2689-6\&partnerID=40\&md5=e7bc8c81bcb632c43d16ecb8c8053651"",
    abstract = ""Put into motion practical examples to master Test-Driven Development (TDD) and acceptance testing in Swift. This book uses a pragmatic approach to writing well-tested code and provides techniques that can be used to retrofit tests to legacy code bases. You'll be introduced to basic principles of TDD, such as Test First, Red-Green-Refactor, Remove Duplicate code, Dependency Injection, and Single Responsibility. Approaches covered include TDD, behavior-driven development (BDD), UI, and acceptance testing with common standard/open source frameworks. iOS Code Testing offers helpful instruction to teach iOS developers to retrospectively fit tests to legacy code, refactor legacy code so as to make the code more testable, install and configure a popular Swift BDD framework, practice BDD with Xcode, and create automated UI tests with Xcode. Additionally, many projects have legacy code bases. Legacy code is often seen as a blocker when it comes to implementing any kind of testing. What You Will Learn Fit test to legacy code retrospectively Install and configure popular Swift BDD frameworks Practice BDD with Xcode Who This Book Is For practitioners, such as Swift developers and mobile app testers. (c) 2017 by Abhishek Mishra. All rights are reserved."",
    keywords = ""Boolean functions; Codes (symbols); Computer programming; iOS (operating system); Acceptance testing; Basic principles; Common standards; Dependency injection; Legacy code; Mobile app; Test driven development; Acceptance tests"",
    publisher = ""Apress Media LLC"",
    isbn = ""978-148422689-6; 978-148422688-9"",
    language = ""English"",
    abbrev_source_title = ""iOS Code Test.: Test-Driven Dev. and Behav.-Driven Dev. with Swift"",
    type = ""Book"",
    publication_stage = ""Final"",
    source = ""Scopus"",
    note = ""Cited by: 4""
}
"""	Excluded	Excluded	new_screen			2	Scopus Signed In		IOS Code Testing: Test-Driven Development and Behavior-Driven Development with Swift	https://www.scopus.com/record/display.uri?eid=2-s2.0-85032643859&origin=resultslist&sort=r-f&src=s&sid=8894abe1d5fd8476bf5ed600a6a1095f&sot=b&sdt=b&s=TITLE%28ios+code+testing+test+driven+development+and+behavior+driven+development+with+swift%29&sl=90&sessionSearchId=8894abe1d5fd8476bf5ed600a6a1095f&relpos=0	Apress Media LLC	nan; References
180	Behave	Modern and Responsive Mobile-enabled Web Applications	Rapid web technology improvements in the last few years have powered software developers to quickly write responsive mobile-friendly applications. The innovative web frameworks and libraries make it easy to have same software code base for desktop and mobile devices. Single-page applications offer a more-native-app-like experience to the user. This also means a web application can easily be converted to a native mobile application if desired. This allows software products to be evolved continuously at a much faster pace with features added on daily basis. The software companies who can adopt these technologies will most likely see the benefit in the long run as they can offer new and modified products faster than their competitors. In this paper, we review some of the state-of-the-art web technologies, third-party libraries, and frameworks for quick interactive web development. Finally, we present a simple interactive browser-based, mobile friendly web application which was developed using one of the latest web development framework.	Web-based Applications; JavaScript; Web Framework; Mobile-friendly Application; Single-Page Applications; Web-based Applications;  JavaScript;  Web Framework;  Mobile-friendly Application;  Single-Page Applications	Shahzad, Farrukh	Procedia Computer Science	https://doi.org/10.1016/j.procs.2017.06.105	Shahzad, F., Sheltami, T.R., Shakshuki, E.M., Shaikh, O.; Shaikh, O., Shahzad, F.; jQuery: The Write Less, Do More, JavaScript Libraryhttps://jquery.com/; AngularJS: Superheroic JavaScript MVW Frameworkhttps://angularjs.org/; Angular: One framework. Mobile & desktophttps://angular.io/; Bootstrap: The world's most popular mobile-first and responsive front-end frameworkhttp://getbootstrap.com/; Google's Material Design librarieshttps://design.google.com/resources/; React: A JavaScript Library for Building User Interfaces. 2017https://facebook.github.io/react/; Node.js: A JavaScript runtimehttps://nodejs.org; Jasmine: A behavior-driven development frameworkhttps://jasmine.github.io/	410-415	"""@inproceedings{WOS:000419274600052,
    Author = ""Shahzad, Farrukh"",
    Editor = ""Shakshuki, E and Yasar, A"",
    Title = ""Modern and Responsive Mobile-enabled Web Applications"",
    Booktitle = ""14TH INTERNATIONAL CONFERENCE ON MOBILE SYSTEMS AND PERVASIVE COMPUTING (MOBISPC 2017) / 12TH INTERNATIONAL CONFERENCE ON FUTURE NETWORKS AND COMMUNICATIONS (FNC 2017) / AFFILIATED WORKSHOPS"",
    Series = ""Procedia Computer Science"",
    Year = ""2017"",
    Volume = ""110"",
    Pages = ""410-415"",
    Note = ""14th International Conference on Mobile Systems and Pervasive Computing (MobiSPC) / 12th International Conference on Future Networks and Communications (FNC), Leuven, BELGIUM, JUL 24-26, 2017"",
    Abstract = ""Rapid web technology improvements in the last few years have powered software developers to quickly write responsive mobile-friendly applications. The innovative web frameworks and libraries make it easy to have same software code base for desktop and mobile devices. Single-page applications offer a more-native-app-like experience to the user. This also means a web application can easily be converted to a native mobile application if desired. This allows software products to be evolved continuously at a much faster pace with features added on daily basis. The software companies who can adopt these technologies will most likely see the benefit in the long run as they can offer new and modified products faster than their competitors. In this paper, we review some of the state-of-the-art web technologies, third-party libraries, and frameworks for quick interactive web development. Finally, we present a simple interactive browser-based, mobile friendly web application which was developed using one of the latest web development framework. (C) 2017 The Authors. Published by Elsevier B.V."",
    Publisher = ""ELSEVIER SCIENCE BV"",
    Address = ""SARA BURGERHARTSTRAAT 25, PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS"",
    Type = ""Proceedings Paper"",
    Language = ""English"",
    Affiliation = ""Shahzad, F (Corresponding Author), Polestar Global, Houston, TX 77082 USA. Shahzad, Farrukh, Polestar Global, Houston, TX 77082 USA."",
    DOI = ""10.1016/j.procs.2017.06.105"",
    ISSN = ""1877-0509"",
    Keywords = ""Web-based Applications; JavaScript; Web Framework; Mobile-friendly Application; Single-Page Applications"",
    Research-Areas = ""Telecommunications"",
    Web-of-Science-Categories = ""Telecommunications"",
    Author-Email = ""farrukh.shahzad@polestarglobal.com"",
    ResearcherID-Numbers = ""Ahmed, Farrukh/KVA-5132-2024"",
    Number-of-Cited-References = ""4"",
    Times-Cited = ""19"",
    Usage-Count-Last-180-days = ""2"",
    Usage-Count-Since-2013 = ""10"",
    Doc-Delivery-Number = ""BJ2GD"",
    Web-of-Science-Index = ""Conference Proceedings Citation Index - Science (CPCI-S)"",
    Unique-ID = ""WOS:000419274600052"",
    OA = ""gold"",
    DA = ""2024-10-22""
}
"""	Excluded	Excluded	new_screen			2	Web of Science		Modern and Responsive Mobile-enabled Web Applications	https://www.webofscience.com/wos/woscc/full-record/WOS:000419274600052	ELSEVIER SCIENCE BV	
181	Behave	Reengineering Legacy Systems with Transaction Model	Reengineering of legacy systems is one of trickiest challenges in software development. The paper addresses methodologies applicable to re-engineering legacy information systems. Specifically, it points out a possibility to couple ontological descriptions of the enterprise with information systems features. Such interconnection verifies whether a functionality implemented in the information system relates to business tasks or not. Business processes formulated as DEMO transaction patterns together with Behavior-Driven Development technique enable to link existing businesses processes to production codebase.		Matula, Jiri; Zacek, Jaroslav	AIP Conference Proceedings	https://doi.org/10.1063/1.5079079			"""@inproceedings{WOS:000467966400035,
    Author = ""Matula, Jiri and Zacek, Jaroslav"",
    Editor = ""Simos, TE and Kalogiratou, Z and Monovasilis, T"",
    Title = ""Reengineering Legacy Systems with Transaction Model"",
    Booktitle = ""INTERNATIONAL CONFERENCE OF COMPUTATIONAL METHODS IN SCIENCES AND ENGINEERING 2018 (ICCMSE-2018)"",
    Series = ""AIP Conference Proceedings"",
    Year = ""2018"",
    Volume = ""2040"",
    Note = ""International Conference of Computational Methods in Sciences and Engineering (ICCMSE), Thessaloniki, GREECE, MAR 14-18, 2018"",
    Organization = ""European Soc Computat Methods Sci \\& Engn"",
    Abstract = ""Reengineering of legacy systems is one of trickiest challenges in software development. The paper addresses methodologies applicable to re-engineering legacy information systems. Specifically, it points out a possibility to couple ontological descriptions of the enterprise with information systems features. Such interconnection verifies whether a functionality implemented in the information system relates to business tasks or not. Business processes formulated as DEMO transaction patterns together with Behavior-Driven Development technique enable to link existing businesses processes to production codebase."",
    Publisher = ""AMER INST PHYSICS"",
    Address = ""2 HUNTINGTON QUADRANGLE, STE 1NO1, MELVILLE, NY 11747-4501 USA"",
    Type = ""Proceedings Paper"",
    Language = ""English"",
    Affiliation = ""Matula, J (Corresponding Author), Univ Ostrava, 30 Dubna 22, CZ-70103 Ostrava, Czech Republic. Matula, Jiri; Zacek, Jaroslav, Univ Ostrava, 30 Dubna 22, CZ-70103 Ostrava, Czech Republic."",
    DOI = ""10.1063/1.5079079"",
    Article-Number = ""030016"",
    ISSN = ""0094-243X"",
    ISBN = ""978-0-7354-1766-3"",
    Keywords-Plus = ""DRIVEN"",
    Research-Areas = ""Computer Science; Engineering; Science \\& Technology - Other Topics"",
    Web-of-Science-Categories = ""Computer Science, Interdisciplinary Applications; Engineering, Multidisciplinary; Multidisciplinary Sciences"",
    Author-Email = ""jiri.matula@osu.cz jaroslav.zacek@osu.cz"",
    Affiliations = ""University of Ostrava"",
    ResearcherID-Numbers = ""Zacek, Jaroslav/D-7875-2014"",
    ORCID-Numbers = ""Zacek, Jaroslav/0000-0002-5918-8031"",
    Funding-Acknowledgement = ""Ministry of Education, Youth and Sport Czech Republic {[}SGS/PrF/2018]"",
    Funding-Text = ""The paper was supported by the grant provided by Ministry of Education, Youth and Sport Czech Republic, reference no. SGS/PrF/2018."",
    Number-of-Cited-References = ""14"",
    Times-Cited = ""0"",
    Usage-Count-Last-180-days = ""0"",
    Usage-Count-Since-2013 = ""4"",
    Doc-Delivery-Number = ""BM7JO"",
    Web-of-Science-Index = ""Conference Proceedings Citation Index - Science (CPCI-S)"",
    Unique-ID = ""WOS:000467966400035"",
    DA = ""2024-10-22""
}
"""	Included	Included	new_screen			2	Web of Science		Reengineering legacy systems with transaction model	https://www.webofscience.com/wos/woscc/full-record/WOS:000467966400035	AMER INST PHYSICS	nan; Keywords; References; Pages
182	Behave	A Requirement-based Regression Test Selection Technique in Behavior-Driven Development	Regression testing is an essential software maintenance activity before the release of a new version implementing a bug fix or a new feature. A regression test selection (RTS) technique chooses a subset of existing test cases to ensure that the system will not be adversely affected by the latest modifications. With the rise of DevOps, behavior-driven development (BDD) is growing in popularity as it is in close alignment with agile practices, for example, continuous integration. Hence, it is necessary to propose a novel and effective RTS technique for BDD specifically to accelerate the development process while ensuring software quality. Since most existing techniques for RTS are code-based and thus subject to some limitations, we present a requirement-based technique which uses the requirements in BDD to select test cases in both high-level (acceptance testing) and low-level (unit testing). Our technique firstly illustrates the new requirement with a scenario, and subsequently computes the semantic similarity of the new scenario and all existing scenarios with the vector space model. According to the results, the modification-traversing regression test cases can be selected in a semi-automated way. We also conduct an experimental study to evaluate our technique in terms of inclusiveness, precision, efficiency and generality. The study shows that our technique is applicable for BDD and effective in practice.	Software maintenance; Codes; Computational modeling; Conferences; Semantics; Computer bugs; Software quality; Regression Test; Regression Test Selection; Behavior Driven Development; Semantic; Acceptable Test; Continuous Integration; Unit Tests; Vector Space Model; Natural Language; System Software; Software Development; Acceptance Criteria; Similar Scenario; Test Suite; Coding Structure; Component Of The Project; Software Projects; Code Modifications; regression test selection; behavior-driven development; requirement-based technique; vector space model	Jincheng Xu; Qingfeng Du; Xiaojun Li	2021 IEEE 45th Annual Computers, Software, and Applications Conference (COMPSAC)	https://doi.org/10.1109/COMPSAC51774.2021.00182	"1.O. Legunsen, F. Hariri, A. Shi, Y. Lu, L. Zhang and D. Marinov, ""An extensive study of static regression test selection in modern software evolution"", Proceedings of the 24th ACM SIGSOFT International Symposium on Foundations of Software Engineering FSE 2016, pp. 583-594, November 13-18, 2016,  [online]  Available: https://doi.org/10.1145/2950290.2950361. CrossRef  Google Scholar; 2.G. Rothermel and M. J. Harrold, ""Analyzing regression test selection techniques"", Software Engineering IEEE Transactions on, vol. 22, no. 8, pp. 529-551, 1996. View Article  Google Scholar; 3.L. Zhang, ""Hybrid regression test selection"", Proceedings of the 40th International Conference on Software Engineering ICSE 2018, pp. 199-209, May 27 - June 03, 2018,  [online]  Available: https://doi.org/10.1145/3180155.3180198. View Article  Google Scholar; 4.T. Yu and T. Wang, ""A study of regression test selection in continuous integration environments"", 29th IEEE International Symposium on Software Reliability Engineering ISSRE 2018, pp. 135-143, October 15-18, 2018,  [online]  Available: https://doi.org/10.1109/ISSRE.2018.00024. View Article  Google Scholar; 5.L. Bass, I. Weber and L. Zhu, DevOps: A Software Architect's Perspective., Addison-Wesley Professional, 2015. Google Scholar; 6.S. G. Elbaum, G. Rothermel and J. Penix, ""Techniques for improving regression testing in continuous integration development environments"", pp. 235-245, 2014. CrossRef  Google Scholar; 7.D. North, ""Introducing behaviour driven development"",  [online]  Available: http://dannorth.net/introducing-bdd/. Google Scholar; 8.J. Smart, ""Bdd in action"", 2014. Google Scholar; 9.Y. Chen, R. L. Probert and D. P. Sims, ""Specification-based regression test selection with risk analysis"", Conference of the Centre for Advanced Studies on Collaborative Research, pp. 1, 2002. Google Scholar; 10.A. Mahmoud and N. Niu, ""On the role of semantics in automated requirements tracing"", Requirements Engineering, vol. 20, no. 3, pp. 281-300, 2015. CrossRef  Google Scholar; 11.R. K. Saha, L. Zhang, S. Khurshid and D. E. Perry, ""An information retrieval approach for regression test prioritization based on program changes"", IEEE/ACM IEEE International Conference on Software Engineering, 2015. View Article  Google Scholar; 12.K. Wang, C. Zhu, A. Celik, J. Kim, D. S. Batory and M. Gligoric, ""Towards refactoring-aware regression test selection"", Proceedings of the 40th International Conference on Software Engineering ICSE 2018, pp. 233-244, May 27 - June 03, 2018,  [online]  Available: https://doi.org/10.1145/3180155.3180254. View Article  Google Scholar; 13.S. Romano, G. Scanniello, G. Antoniol and A. Marchetto, ""Spiritus: a simple information retrieval regression test selection approach"", Inf. Softw. Technol., vol. 99, pp. 62-80, 2018,  [online]  Available: https://doi.org/10.1016/j.infsof.2018.03.004. CrossRef  Google Scholar; 14.P. K. Chittimalli and M. J. Harrold, ""Regression test selection on system requirements"", Proceeding of the India Software Engineering Conference Isec 2008, pp. 87-96, February, 2008. CrossRef  Google Scholar; 15.T. Nakagawa, K. Munakata and K. Yamamoto, ""Applying modified code entity-based regression test selection for manual end-to-end testing of commercial web applications"", IEEE International Symposium on Software Reliability Engineering Workshops ISSRE Workshops 2019, pp. 1-6, October 27-30, 2019,  [online]  Available: https://doi.org/10.1109/ISSREW.2019.00033. View Article  Google Scholar; 16.Z. Long, Z. Ao, G. Wu, W. Chen and J. Wei, ""Webrts: A dynamic regression test selection tool for java web applications"", IEEE International Conference on Software Maintenance and Evolution ICSME 2020, pp. 822-825, September 28 -October 2, 2020,  [online]  Available: https://doi.org/10.1109/ICSME46990.2020.00102. View Article  Google Scholar; 17.M. Vasic, Z. Parvez, A. Milicevic and M. Gligoric, ""File-level vs. module-level regression test selection for .net"", Proceedings of the 2017 11th Joint Meeting on Foundations of Software Engineering ESEC/FSE 2017, pp. 848-853, September 4-8, 2017,  [online]  Available: https://doi.org/10.1145/3106237.3117763. CrossRef  Google Scholar; 18.M. Soeken, R. Wille and R. Drechsler, ""Assisted behavior driven development using natural language processing"", International Conference on Objects Models Components Patterns, pp. 269-287, 2012. CrossRef  Google Scholar; 19.E. Hill, D. Binkley, D. Lawrie, L. Pollock and K. Vijay-Shanker, ""An empirical study of identifier splitting techniques"", Empirical Software Engineering, vol. 19, no. 6, pp. 1754-1780, 2014. CrossRef  Google Scholar"			Included	Included	new_screen			2	IEEE		A Requirement-based Regression Test Selection Technique in Behavior-Driven Development	https://ieeexplore.ieee.org/document/9529903	IEEE	nan; Pages; Year; Bibtex
183	Behave	Interface Responsibility Patterns:Processing Resources and Operation Responsibilities	Remote Application Programming Interfaces (APIs), as for instance offered in microservices architectures, are used in almost any distributed system today and are thus enablers for many digitalization efforts. It is hard to design such APIs so that they are easy and effective to use; maintaining their runtime qualities while preserving backward compatibility is equally challenging. Finding well suited granularities in terms of the architectural capabilities of endpoints and the read-write semantics of their operations are particularly important design concerns. Existing pattern languages have dealt with local APIs in object-oriented programming, with remote objects, with queue-based messaging and with service-oriented computing platforms. However, patterns or equivalent guidances for the architectural design of API endpoints, operations and their request and response message structures are still missing. In this paper, we extend our microservice API pattern language (MAP) and introduce endpoint role and operation responsibility patterns, namely Processing Resource, Computation Function, State Creation Operation, Retrieval Operation, and State Transition Operation. Known uses and examples of the patterns are drawn from public Web APIs, as well as application development and system integration projects the authors have been involved in.		Olaf Zimmermann; Daniel Lubke; Uwe Zdun; Cesare Pautasso; Mirko Stocker	EuroPLoP '20: Proceedings of the European Conference on Pattern Languages of Programs 2020	https://doi.org/10.1145/3424771.3424822		1-24		Excluded	Excluded	new_screen			2	ACM		Interface Responsibility Patterns: Processing Resources and Operation Responsibilities	https://dl.acm.org/doi/10.1145/3424771.3424822	Association for Computing Machinery	nan; Keywords; References; Year; Bibtex
184	Behave	A Conceptual Metamodel to Bridging Requirement Patterns to Test Patterns	Requirement patterns represent an abstraction of an application's behaviors and services that, in turn, may be replicated in similar applications. However, there has been a lack of efforts exploiting the benefits of requirement patterns in other phases of the software development life cycle, besides the requirements engineering itself. To address this gap, we propose the Software Pattern MetaModel (SoPaMM) that bridges requirement patterns to groups of scenarios with similar behaviors in the form of test patterns. SoPaMM allows the description of the behavior of a requirement pattern through a time executable and easy-to-use language aiming at the automatic generation of test patterns. Using SoPaMM, we model and implement a behavior-driven functional requirement pattern for a web-based user authentication application. Our preliminary results point out that a requirement pattern can be an executable specification capable of generating automated tests.	behavior; metamodeling; requirement pattern; reuse; test pattern	Taciana Novo Kudo; Renato F. Bulcao-Neto; Auri M. R. Vincenzi	SBES '19: Proceedings of the XXXIII Brazilian Symposium on Software Engineering	https://doi.org/10.1145/3350768.3351300		155-160		Included	Included	new_screen			2	ACM		A Conceptual Metamodel to Bridging Requirement Patterns to Test Patterns	https://dl.acm.org/doi/10.1145/3350768.3351300	Association for Computing Machinery	nan; References; Year; Bibtex
185	Behave	A Framework to Diminish the Gap between the Business Specialist and the Software Designer	"Requirements Engineering establishes the process for defining requirements as one in which elicitation, modeling and analysis are tasks which must be carried out. This process should involve different stakeholders and their different viewpoints. Among these stakeholders, there is the software designer, responsible for creating models based on the information gathered by business specialists. However, this communication channel may create some ""noise"" that leads to information being lost. This loss produces a semantic gap between what is desired and what will be developed. The semantic gap is characterized by inconsistencies in the requirements represented by scenarios -- user stories in a behavior-driven context -- and by the conceptual model. This paper presents an interactive approach to the agile requirements modeling, thus fostering greater consistency between the artifacts of the scenarios and the conceptual model. This consistency is ensured by using a mind model specification which will serve as a basis for transforming the definitions of the scenario and generating a conceptual model represented by a UML class diagram. The mind model represents the main role of this approach, and functions as a bond that represents the business entities, thus enabling the requirements to be more consistent with the reality of the business."	Design Software; Conceptual Model; Unified Modeling Language; Semantic Gap; Role Of Approach; Class Diagram; Vocabulary; Software Development; Common Language; Object Classification; Cognitive Map; Model Domain; Domain Experts; Description Of Behavior; Problem Framing; Domain Elements; Mind Map; Domain-specific Languages; JavaScript; Agile Modeling Requirements; Behaviour Driven Development; UML; Mind Map Modeling; Domain Model	Fernando Wanderley; Denis Silva da Silveria	2012 Eighth International Conference on the Quality of Information and Communications Technology	https://doi.org/10.1109/QUATIC.2012.9	"1.Available at: http://blog.standishgroup.com/ [Accessed November 20, 2011].; 2.F. P. Brooks, ""No Silver Bullet- Essence and Accidents of Software Engineering"" Computer Magazine; April - 1987 - University or North Carolina at Chapel Hill. View Article  Google Scholar; 3.Pressman, R.S., Software Engineering, McGraw-Hill, 6 edicao, 2006. Google Scholar; 4.Sommerville, I., Software Engineering, 8 Edicao. Pearson - Addison Wesley, 2007. Google Scholar; 5.D. North, Introducing BDD, 2006. Available at: http://dannorth.net/ introducing-bdd [Accessed December 13, 2010]. Google Scholar; 6.Beck, K. Test-Driven Development by Example, Addison Wesley, 2003 Google Scholar; 7.D. Janzen, D.H. Saiedian, Test-driven development: concepts, taxonomy and future directions, Computer, vol.38, no. 9, pp. 43-50, Sept, 2005 View Article  Google Scholar; 8.L Koskela.Test Driven: TDD and Acceptance TDD for Java Developers, Manning Publications, 2007. Google Scholar; 9.A.Gupta and P. Jalote. An Experimental Evaluation of the Effectiveness and Efficiency of the Test Driven Development. In Proc. of Empirical Software Engineering and Measurement, 2007, pp.285-294 View Article  Google Scholar; 10.D. Janzen and H. Saiedian. Does Test-Driven Development Really Improve Software Design Quality? IEEE Software. vol. 25, no. 2, 2008. View Article  Google Scholar; 11.D. Chelimsky, D. Astels, Z. Dennis, A. Hellesoy, D. North. The RSpec book: Behaviour Driven Development with RSpec, cucumber and friends, Pragmatic Bookshelf, 2010. Google Scholar; 12.D. Astels, A new look at test driven development, http://techblog. daveastels.com/files/BDD-Intro.pdf Google Scholar; 13.JBehave, http://jbehave.org/ [Accessed March 2012]; 14.Cucumber, http://cukes.info/ [Accessed March 2012]; 15.RSpec, http://rspec.info/ [Accessed March 2012]; 16.R. Carvalho, R. Soares Manhaes, and F.L. de Carvalho, Filling the Gap between Business Process Modeling and Behaviour Driven Development, CoRR, 2008. Google Scholar; 17.R. Carvalho, F.L. de Carvalho, and R. Soares, Mapping Business Process Modeling constructs to Behavior Driven Development Ubiquitous Language, CoRR, 2010. Google Scholar; 18.E. Evans. Domain -Driven Design: Tackling Complexity in the Heart of Software. Addison-Wesley Professional, 2003 Google Scholar; 19.T. Buzan, ""The Mind Map Book"", 2003 BBC Active. Google Scholar; 20.R. G. Downs and D. Stea ""Image & Environment: Cognitive Mapping and Spatial Behavior"", 1973. Google Scholar; 21.R. M. Kitchin (1994). Maps Cognitive: Que sao eles e porque estudo eles? Jornal do psychology ambiental, 14: 1-19. Google Scholar; 22.S. Robertson, J. Robertson, ""Mastering the Requirements Process"", 1999 Addison-Wesley Google Scholar; 23.C. Larman, ""Agile and Iterative Development"", 2003 Prentice Hall Google Scholar; 24.S. W. Ambler ""Agile Modeling: Effective Practices for Extreme Programming and the Unified Process"", 2002. Google Scholar; 25.C. Douglas, ""Introduction JSON"", 2008 - json.org [Accessed December 2010] Google Scholar; 26.Jackson JSON Processor http://jackson.codehaus.org/ [Accessed March 2012] Google Scholar; 27.ATL Language Transformation http://www.eclipse.org/atl/ [Accessed April 2012] Google Scholar; 28.Mernik, M.; Heering, J.; Sloane, A. M. When and how to develop domain-specific languages. ACM Computing Surveys, New York: ACM, 2005, v. 37, n. 4, p.316-344 (Pubitemid 43898543) CrossRef  Google Scholar; 29.Czarnecki, K. Overview of Generative Software Development In: BANATRE, J.- P. et al. (Eds.). Unconventional Programming Paradigms. Berlin: Springer, 2005.p.326-341. CrossRef  Google Scholar; 30.Jackson, M. (2001). Problem Frames. Addison-Wesley. pp. 9,10. Google Scholar"			Included	Included	new_screen			2	IEEE		A Framework to Diminish the Gap between the Business Specialist and the Software Designer	https://ieeexplore.ieee.org/document/6511809	IEEE	nan; Pages; Year; Bibtex
186	Behave	Using Behaviour-driven Requirements Engineering for Establishing and Managing Agile Product Lines An Observational Study	Requirements engineering in agile product line engineering refers to both common and variability components establishing a software. Although it is conventional for the requirements engineering to take place in a dedicated upfront domain analysis phase, agile-based environments denounce such a proactive behaviour. This paper provides an observational study examining a reactive incremental requirement engineering approach called behaviour-driven requirements engineering. The proposed approach uses behaviour-driven development to establish and maintain agile product lines. The findings of the study are very promising and suggest the following: the approach is easy to understand and quick to learn; the approach supports the constantly changing nature of software development; and using behaviour-driven requirements engineering produces reliable and coherent requirements. In practice, the observational study showed that using the proposed approach saved time for development team and customers, decreased costs, improved the software quality, and shortened the time-to-market.	Agile product line engineering; behaviour-driven requirements engineering; observational study; requirements engineering; Agile product line engineering;  behaviour-driven requirements engineering;  observational study;  requirements engineering	Elshandidy, Heba; Mazen, Sherif; Hassanein, Ehab; Nasr, Eman	INTERNATIONAL JOURNAL OF ADVANCED COMPUTER SCIENCE AND APPLICATIONS	https://doi.org/10.14569/IJACSA.2021.0120274	Cooper, K., Franch, X.; Pohl, K., Bockle, G., Van Der Linden, F.; Williams, L., Cockburn, A.; North, D.(2006)Introducing BDD.Cited 58 times.[4] last accessed 2018/1/1http://dannorth.net/introducing-bdd; Westfall, L.Software Requirements Engineering: What, Why, Who, When and How?.Cited 9 times.[5] Retrieved from last accessed 2018/11/12http://www.westfallteam.com/Papers/The_Why_What_Who_When_and_How_Of_Software_Requirements.pdf; The CHAOS Report 2015.Cited 11 times.[6] Standish Group, Retrieved from last accessed 2015/10/2https://www.standishgroup.com/sample_research; Kontonya, G.(1998)I Sommerville, Requirements Engineering: Processes and Techniques.Cited 2 times.[7] John Wiley & Sons; Chemuturi, M.(2012)Requirements Engineering and Management for Software Development Projects.Cited 32 times.[8] Springer Publishing Company; Astels, D.A new look at test driven development.Cited 7 times.[9] last accessed 2019/3/1http://techblog.daveastels.com/files/BDD_Intro.pdf; Noor, M.A., Rabiser, R., Grunbacher, P.A collaborative approach for reengineering-based product line scoping(2006)the 1st International Workshop on Agile Product Line Engineering (In conjunction with SPLC).Cited 15 times.[10]; Noor, M.A., Rabiser, R., Grunbacher, P.; Noor, M.A., Grunbacher, P., Hoyer, C.; Feng, K., Lempert, M., Tang, Y., Tian, K., Cooper, K., Franch, X.Developing a survey to collect expertise in agile product line requirements engineering(2007)Agile 2007 Conference, International Research-in-Progress Workshop on Agile Software Engineering, pp. 1-4.Cited 4 times.[13]; Feng, K.(2009)Towards an Agile Product Line Requirements Engineering Framework: Knowledge Acquisition and Process Definition.Cited 2 times.[14] Ph.D. Dissertation, The University of Texas at Dallas; Trinidad, P., Benavides, D., Duran, A., Ruiz-Cortes, A., Toro, M.; Paige, R.F., Wang, X., Stephenson, Z.R., Brooke, P.J.; Kakarontzas, G., Stamelos, I., Katsaros, P.; Raatikainen, M., Rautiainen, K., Myllarniemi, V., Mannisto, T.; Taborda, L.J.M.; Kurmann, R.Agile SPL-SCM agile software product line configuration and release management(2006)1st International Workshop on Agile Product Line Engineering (In conjunction with SPLC).Cited 2 times.[20]; Carbon, R., Lindvall, M., Muthig, D., Costa, P.Integrating product line engineering and agile methods: flexible design up-front VS. incremental design(2006)Proceedings of the 1st International Workshop on Agile Product Line Engineering In conjunction with SPLC, pp. 1-8.Cited 34 times.[21]; Carbon, R., Knodel, J., Muthig, D., Meier, G.; O'Leary, P., Babar, M.A., Thiel, S., Richardson, I.Product derivation process and agile approaches: exploring the integration potential(2007)Proceedings of the 2nd IFIP Central and East European Conference on Software Engineering Techniques, pp. 166-171.Cited 8 times.[23]; O'Leary, P., Babar, M.A., Thiel, S., Richardson, I.Towards agile product derivation in software product line engineering(2007)Proceedings of the 4th International Workshop on Rapid Integration of Software Engineering Techniques, pp. 19-32.Cited 3 times.[24]; O'Leary, P., Thiel, S., Botterweck, G., Richardson, I.Towards a product derivation process framework(2008)Proceedings of the 3rd IFIP TC2 Central and East European Conference on Software Engineering Techniques, pp. 189-202.Cited 7 times.[25]; O'Leary, P., McCaffery, F., Richardson, I., Thiel, S.Towards agile product derivation in software product line engineering(2009)Proceedings of the 16th European Conference on Software Process Improvement, pp. 81-86.Cited 4 times.[26]; O'Leary, P., Rabiser, R., Richardson, I., Thiel, S.Important issues and aey Activities in product derivation: experiences from two independent research projects(2009)Proceedings of the 13th International Software Product Line Conference, pp. 121-130.Cited 18 times.[27]; Ghanam, Y., Park, S., Maurer, F.A test-driven approach to establishing and managing agile product lines(2008)Proceedings of the 5th Software Product Lines Testing Workshop in conjunction with SPLC'08, pp. 151-156.Cited 11 times.[28]; Ghanam, Y., Maurer, F.An iterative model for agile product line engineering(2008)The SPLC Doctoral Symposium, 2008 - in conjunction with the SPLC'08, pp. 377-384.Cited 22 times.[29]; Ghanam, Y., Maurer, F.; Ghanam, Y., Maurer, F.; Farahani, F.F., Ramsin, R.; Da Silva, I.F., Da Mota Silveira Neto, P.A., O'Leary, P., De Almeida, E.S., De Lemos Meira, S.R.; Diaz, J., Perez, J., Alarcon, P.P., Garbajosa, J.; Alves, V., Niu, N., Alves, C., Valenca, G.; Neiva, D.F.S.(2009)RiPLE-RE: A Requirements Engineering Process for Software Product Lines.Cited 6 times.[36] M.Sc. Dissertation, Universidade Federal de Pernambuco, Brazil; Elshandidy, H.; Trigueros, R., Juan, M., Sandoval, F.(2017)Qualitative and Quantitative Research Instruments Research tools.Cited 3 times.[38]	591-596	"""@article{WOS:000630189900075,
    Author = ""Elshandidy, Heba and Mazen, Sherif and Hassanein, Ehab and Nasr, Eman"",
    Title = ""Using Behaviour-driven Requirements Engineering for Establishing and Managing Agile Product Lines An Observational Study"",
    Journal = ""INTERNATIONAL JOURNAL OF ADVANCED COMPUTER SCIENCE AND APPLICATIONS"",
    Year = ""2021"",
    Volume = ""12"",
    Number = ""2"",
    Pages = ""591-596"",
    Month = ""FEB"",
    Abstract = ""Requirements engineering in agile product line engineering refers to both common and variability components establishing a software. Although it is conventional for the requirements engineering to take place in a dedicated upfront domain analysis phase, agile-based environments denounce such a proactive behaviour. This paper provides an observational study examining a reactive incremental requirement engineering approach called behaviour-driven requirements engineering. The proposed approach uses behaviour-driven development to establish and maintain agile product lines. The findings of the study are very promising and suggest the following: the approach is easy to understand and quick to learn; the approach supports the constantly changing nature of software development; and using behaviour-driven requirements engineering produces reliable and coherent requirements. In practice, the observational study showed that using the proposed approach saved time for development team and customers, decreased costs, improved the software quality, and shortened the time-to-market."",
    Publisher = ""SCIENCE \\& INFORMATION SAI ORGANIZATION LTD"",
    Address = ""19 BOLLING RD, BRADFORD, WEST YORKSHIRE, 00000, ENGLAND"",
    Type = ""Article"",
    Language = ""English"",
    Affiliation = ""Elshandidy, H (Corresponding Author), Cairo Univ, Fac Comp \\& AI, Informat Syst Dept, Cairo, Egypt. Elshandidy, Heba; Mazen, Sherif; Hassanein, Ehab, Cairo Univ, Fac Comp \\& AI, Informat Syst Dept, Cairo, Egypt."",
    ISSN = ""2158-107X"",
    EISSN = ""2156-5570"",
    Keywords = ""Agile product line engineering; behaviour-driven requirements engineering; observational study; requirements engineering"",
    Research-Areas = ""Computer Science"",
    Web-of-Science-Categories = ""Computer Science, Theory \\& Methods"",
    Affiliations = ""Egyptian Knowledge Bank (EKB); Cairo University"",
    ResearcherID-Numbers = ""Nasr, Eman/LBI-1437-2024"",
    Number-of-Cited-References = ""38"",
    Times-Cited = ""1"",
    Usage-Count-Last-180-days = ""0"",
    Usage-Count-Since-2013 = ""0"",
    Journal-ISO = ""Int. J. Adv. Comput. Sci. Appl."",
    Doc-Delivery-Number = ""QY7AR"",
    Web-of-Science-Index = ""Emerging Sources Citation Index (ESCI)"",
    Unique-ID = ""WOS:000630189900075"",
    DA = ""2024-10-22""
}
"""	Included	Included	new_screen			2	Web of Science		Using Behaviour-driven Requirements Engineering for Establishing and Managing Agile Product Lines: An Observational Study	https://www.webofscience.com/wos/woscc/full-record/WOS:000630189900075	SCIENCE \& INFORMATION SAI ORGANIZATION LTD	
187	Behave	Towards automated testing of RPA implementations	Robotic Process Automation (RPA) is a technology that has grown tremendously in the last years, due to its usability in the area of process automation. An essential part of any software development process is quality assurance, so testing will be very important for RPA processes. However, the classical software techniques are not always suitable for the RPA software robots due to the mix of the graphical description of the robots and their implementations. In this short paper, we describe the state of the practice for testing of software robots and propose some ideas of test automation using model-based testing.	Model-based testing; RPA testing; Robotic Process Automation (RPA); Test automation	Marina Cernat; Adelina Nicoleta Staicu; Alin Stefanescu	A-TEST 2020: Proceedings of the 11th ACM SIGSOFT International Workshop on Automating TEST Case Design, Selection, and Evaluation	https://doi.org/10.1145/3412452.3423573		21-24		Excluded	Excluded	new_screen			2	ACM		Towards Automated Testing of RPA Implementations	https://dl.acm.org/doi/10.1145/3412452.3423573	Association for Computing Machinery	nan; References; Year; Bibtex
188	Behave	Agent-oriented software patterns for rapid and affordable robot programming	Robotic systems are often quite complex to develop: they are huge, heavily constrained from the nonfunctional point of view and they implement challenging algorithms. The lack of integrated methods with reuse approaches leads robotic developers to reinvent the wheel each time a new project starts. This paper proposes to reuse the experience done when building robotic applications, by catching it into design patterns. These represent a general mean for (i) reusing proved solutions increasing the final quality, (ii) communicating the knowledge about a domain and (iii) reducing the development time and effort. Despite of this generality, the proposed repository of patterns is specific for multi-agent robotic systems. These patterns are documented by a set of design diagrams and the corresponding implementing code is obtained through a series of automatic transformations. Some patterns extracted from an existing and freely available repository are presented. The paper also discusses an experimental set-up based on the construction of a complete robotic application obtained by composing some highly reusable patterns.	Multi-agent systems; Design patterns; Pattern oriented design; Robotics systems; Multi-agent systems;  Design patterns;  Pattern oriented design;  Robotics systems	Chella, Antonio; Cossentino, Massimo; Gaglio, Salvatore; Sabatucci, Luca; Seidita, Valeria	JOURNAL OF SYSTEMS AND SOFTWARE	https://doi.org/10.1016/j.jss.2009.10.035		557-573	"""@article{WOS:000275967500004,
    Author = ""Chella, Antonio and Cossentino, Massimo and Gaglio, Salvatore and Sabatucci, Luca and Seidita, Valeria"",
    Title = ""Agent-oriented software patterns for rapid and affordable robot programming"",
    Journal = ""JOURNAL OF SYSTEMS AND SOFTWARE"",
    Year = ""2010"",
    Volume = ""83"",
    Number = ""4"",
    Pages = ""557-573"",
    Month = ""APR"",
    Abstract = ""Robotic systems are often quite complex to develop: they are huge, heavily constrained from the nonfunctional point of view and they implement challenging algorithms. The lack of integrated methods with reuse approaches leads robotic developers to reinvent the wheel each time a new project starts. This paper proposes to reuse the experience done when building robotic applications, by catching it into design patterns. These represent a general mean for (i) reusing proved solutions increasing the final quality, (ii) communicating the knowledge about a domain and (iii) reducing the development time and effort. Despite of this generality, the proposed repository of patterns is specific for multi-agent robotic systems. These patterns are documented by a set of design diagrams and the corresponding implementing code is obtained through a series of automatic transformations. Some patterns extracted from an existing and freely available repository are presented. The paper also discusses an experimental set-up based on the construction of a complete robotic application obtained by composing some highly reusable patterns. (C) 2009 Elsevier Inc. All rights reserved."",
    Publisher = ""ELSEVIER SCIENCE INC"",
    Address = ""STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA"",
    Type = ""Article"",
    Language = ""English"",
    Affiliation = ""Cossentino, M (Corresponding Author), CNR, Ist Calcolo \\& Red Ad Alte Prestaz ICAR, Palermo, Italy. Chella, Antonio; Gaglio, Salvatore; Sabatucci, Luca; Seidita, Valeria, Univ Palermo, Dipartimento Ingn Informat, I-90133 Palermo, Italy. Cossentino, Massimo; Gaglio, Salvatore, CNR, Ist Calcolo \\& Red Ad Alte Prestaz ICAR, Palermo, Italy."",
    DOI = ""10.1016/j.jss.2009.10.035"",
    ISSN = ""0164-1212"",
    EISSN = ""1873-1228"",
    Keywords = ""Multi-agent systems; Design patterns; Pattern oriented design; Robotics systems"",
    Keywords-Plus = ""DESIGN PATTERNS; ARCHITECTURE; REUSE"",
    Research-Areas = ""Computer Science"",
    Web-of-Science-Categories = ""Computer Science, Software Engineering; Computer Science, Theory \\& Methods"",
    Author-Email = ""chella@unipa.it cossentino@pa.icar.cnr.it gaglio@unipa.it sabatucci@dinfo.unipa.it seidita@dinfo.unipa.it"",
    Affiliations = ""University of Palermo; Consiglio Nazionale delle Ricerche (CNR)"",
    ResearcherID-Numbers = ""Sabatucci, Luca/AAX-8900-2020 Seidita, Valeria/JXN-4458-2024 Cossentino, Massimo/HIK-1328-2022 Chella, Antonio/F-5320-2015 Cossentino, Massimo/I-6097-2012"",
    ORCID-Numbers = ""Chella, Antonio/0000-0002-8625-708X Sabatucci, Luca/0000-0003-2852-9355 Cossentino, Massimo/0000-0003-1258-9767"",
    Funding-Acknowledgement = ""EU"",
    Funding-Text = ""This work has been partially supported by the EU project FP7-Humanobs."",
    Number-of-Cited-References = ""51"",
    Times-Cited = ""11"",
    Usage-Count-Last-180-days = ""0"",
    Usage-Count-Since-2013 = ""1"",
    Journal-ISO = ""J. Syst. Softw."",
    Doc-Delivery-Number = ""574DA"",
    Web-of-Science-Index = ""Science Citation Index Expanded (SCI-EXPANDED)"",
    Unique-ID = ""WOS:000275967500004"",
    OA = ""Green Submitted"",
    DA = ""2024-10-22""
}
"""	Excluded	Excluded	new_screen			2	Web of Science		Agent-oriented software patterns for rapid and affordable robot programming	https://www.webofscience.com/wos/woscc/full-record/WOS:000275967500004	ELSEVIER SCIENCE INC	nan; References
189	Behave	Ruby on Rails Tutorial: Learn Web Development with Rails	Used by sites as varied as Hulu, GitHub, Shopify, and Airbnb, Ruby on Rails is one of the most popular frameworks for developing web applications, but it can be challenging to learn and use. Whether you're new to web development or new only to Rails, Ruby on RailsTM Tutorial, Seventh Edition, is the solution.  Best-selling author and leading Rails developer Michael Hartl teaches Rails by guiding you through the development of three example applications of increasing sophistication. The tutorial's examples focus on the general principles of web development needed for virtually any kind of website. The updates to this edition include full compatibility with Rails 7.  This indispensable guide provides integrated tutorials not only for Rails, but also for the essential Ruby, HTML, CSS, and SQL skills you need when developing web applications. Hartl explains how each new technique solves a real-world problem, and then he demonstrates it with bite-sized code that's simple enough to understand while still being useful. Whatever your previous web-development experience, this book will guide you to true Rails mastery.		Michael Hartl	Addison-Wesley Professional Ruby Series	https://books.google.ca/books/about/Ruby_on_Rails_Tutorial.html?id=-NnPEAAAQBAJ&source=kp_book_description&redir_esc=y		896	"""nan"""	Excluded	Excluded	new_screen			2	Google Scholar		Ruby on Rails Tutorial: Learn Web Development with Rails	https://books.google.ca/books/about/Ruby_on_Rails_Tutorial.html?id=-NnPEAAAQBAJ&source=kp_book_description&redir_esc=y	Addison-Wesley Professional	
190	Behave	Offshore Development Center Management in Action	Serving as a virtual extension of the Customer's IT Department, the Offshore Development Center (ODC) model provides certain benefits in comparison with in-house teams including reduced development complexity, reduced operating expense, and access to a larger pool of talents. Nevertheless, ODCs are prone to problems in Scope, Schedule, Quality, Human Resources, and Communication. From the experiences of Project Managers who have worked in Offshore Development Centers set up by FPT Software- a leading IT Outsourcing Service provider, this paper offers a look at actual problems encountered in ODCs. We then provide a reference ODC Management Framework, which consists of Best Practices that we have applied into an ODC serving a Media Industry customer over the last 4 years. The results of applying the model are discussed to prove its effectiveness.	Offshore; Offshore development center; Outsourcing	Phan Duy Hung; Le Gia Cuong; Nguyen Luu Bach	ICIIT '20: Proceedings of the 2020 5th International Conference on Intelligent Information Technology	https://doi.org/10.1145/3385209.3385214		77-85		Excluded	Excluded	new_screen			2	ACM		Offshore Development Center Management in Action	https://dl.acm.org/doi/10.1145/3385209.3385214	Association for Computing Machinery	nan; References; Year; Bibtex
191	Behave	Test-Driven Infrastructure with Chef: Bring Behavior-Driven Development to Infrastructure as Code	Since Test-Driven Infrastructure with Chef first appeared in mid-2011, infrastructure testing has begun to flourish in the web ops world. In this revised and expanded edition, author Stephen Nelson-Smith brings you up to date on this rapidly evolving discipline, including the philosophy driving it and a growing array of tools. You'll get a hands-on introduction to the Chef framework, and a recommended toolchain and workflow for developing your own test-driven production infrastructure.  Several exercises and examples throughout the book help you gain experience with Chef and the entire infrastructure-testing ecosystem. Learn how this test-first approach provides increased security, code quality, and peace of mind.		Stephen Nelson-Smith		https://books.google.ca/books?id=fT1PAQAAQBAJ&dq=Test-Driven+Infrastructure+with+Chef:+Bring+Behavior-Driven+Development+to+Infrastructure+as+Code&lr=&source=gbs_navlinks_s		308	"""nan"""	Excluded	Excluded	new_screen			2	Google Scholar		Test-Driven Infrastructure with Chef: Bring Behavior-Driven Development to Infrastructure as Code	https://books.google.ca/books?id=fT1PAQAAQBAJ&dq=Test-Driven+Infrastructure+with+Chef:+Bring+Behavior-Driven+Development+to+Infrastructure+as+Code&lr=&source=gbs_navlinks_s	O'Reilly Media, Inc.	
192	Behave	A permissioned blockchain-based implementation of LMSR prediction markets	Since the seminal work by Hanson (2003), the Logarithmic Market Scoring Rule (LMSR) has become the de facto market-maker mechanism for prediction markets. We suggest in this paper three potential issues with centralized implementations of LMSR, which we refer to as the availability, security, and privacy problems. We also explain how a permissioned blockchain-based implementation of LMSR effectively solves all the above problems. Following the design science research framework (Peffers et al., 2007), our main contribution is a fully functional permissioned blockchain-based implementation of LMSR that is ready to be deployed. We believe our results are of great value not only to prediction market researchers and practitioners looking for LMSR implementations, but also to blockchain professionals looking for fully developed solutions as well as applications of suitable research frameworks to guide blockchain research and development.	Blockchain; Design science; Logarithmic Market Scoring Rule; Prediction markets; Blockchain;  Design science;  Logarithmic Market Scoring Rule;  Prediction markets	Carvalho, Arthur	DECISION SUPPORT SYSTEMS	https://doi.org/10.1016/j.dss.2019.113228			"""@article{WOS:000515215800005,
    Author = ""Carvalho, Arthur"",
    Title = ""A permissioned blockchain-based implementation of LMSR prediction markets"",
    Journal = ""DECISION SUPPORT SYSTEMS"",
    Year = ""2020"",
    Volume = ""130"",
    Month = ""MAR"",
    Abstract = ""Since the seminal work by Hanson (2003), the Logarithmic Market Scoring Rule (LMSR) has become the de facto market-maker mechanism for prediction markets. We suggest in this paper three potential issues with centralized implementations of LMSR, which we refer to as the availability, security, and privacy problems. We also explain how a permissioned blockchain-based implementation of LMSR effectively solves all the above problems. Following the design science research framework (Peffers et al., 2007), our main contribution is a fully functional permissioned blockchain-based implementation of LMSR that is ready to be deployed. We believe our results are of great value not only to prediction market researchers and practitioners looking for LMSR implementations, but also to blockchain professionals looking for fully developed solutions as well as applications of suitable research frameworks to guide blockchain research and development."",
    Publisher = ""ELSEVIER"",
    Address = ""RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS"",
    Type = ""Article"",
    Language = ""English"",
    Affiliation = ""Carvalho, A (Corresponding Author), Miami Univ, Farmer Sch Business, Dept Informat Syst \\& Analyt, Oxford, OH 45056 USA. Carvalho, Arthur, Miami Univ, Farmer Sch Business, Dept Informat Syst \\& Analyt, Oxford, OH 45056 USA."",
    DOI = ""10.1016/j.dss.2019.113228"",
    Article-Number = ""113228"",
    ISSN = ""0167-9236"",
    EISSN = ""1873-5797"",
    Keywords = ""Blockchain; Design science; Logarithmic Market Scoring Rule; Prediction markets"",
    Keywords-Plus = ""INFORMATION; IMPACT"",
    Research-Areas = ""Computer Science; Operations Research \\& Management Science"",
    Web-of-Science-Categories = ""Computer Science, Artificial Intelligence; Computer Science, Information Systems; Operations Research \\& Management Science"",
    Author-Email = ""arthur.carvalho@miamioh.edu"",
    Affiliations = ""University System of Ohio; Miami University"",
    ORCID-Numbers = ""Carvalho, Arthur/0000-0002-5381-3588"",
    Number-of-Cited-References = ""27"",
    Times-Cited = ""24"",
    Usage-Count-Last-180-days = ""0"",
    Usage-Count-Since-2013 = ""33"",
    Journal-ISO = ""Decis. Support Syst."",
    Doc-Delivery-Number = ""KO0DF"",
    Web-of-Science-Index = ""Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)"",
    Unique-ID = ""WOS:000515215800005"",
    DA = ""2024-10-22""
}
"""	Excluded	Excluded	new_screen			2	Web of Science		A permissioned blockchain-based implementation of LMSR prediction markets	https://www.webofscience.com/wos/woscc/full-record/WOS:000515215800005	ELSEVIER	nan; References; Pages
193	Behave	Introducing continuous experimentation in large software-intensive product and service organisations	Software development in highly dynamic environments imposes high risks to development organizations. One such risk is that the developed software may be of only little or no value to customers, wasting the invested development efforts. Continuous experimentation, as an experiment-driven development approach, may reduce such development risks by iteratively testing product and service assumptions that are critical to the success of the software. Although several experiment-driven development approaches are available, there is little guidance available on how to introduce continuous experimentation into an organization. This article presents a multiple-case study that aims at better understanding the process of introducing continuous experimentation into an organization with an already established development process. The results from the study show that companies are open to adopting such an approach and learning throughout the introduction process. Several benefits were obtained, such as reduced development efforts, deeper customer insights, and better support for development decisions. Challenges included complex stakeholder structures, difficulties in defining success criteria, and building experimentation skills. Our findings indicate that organizational factors may limit the benefits of experimentation. Moreover, introducing continuous experimentation requires fundamental changes in how companies operate, and a systematic introduction process can increase the chances of a successful start.	Continuous experimentation; Experiment-driven software development; Product management; Agile software development; Lean software development; Lean startup; Continuous experimentation;  Experiment-driven software development;  Product management;  Agile software development;  Lean software development;  Lean startup	Yaman, Sezin Gizem; Munezero, Myriam; Muench, Juergen; Fagerholm, Fabian; Syd, Ossi; Aaltola, Mika; Palmu, Christina; Mannisto, Tomi	JOURNAL OF SYSTEMS AND SOFTWARE	https://doi.org/10.1016/j.jss.2017.07.009		195-211	"""@article{WOS:000412614400013,
    Author = ""Yaman, Sezin Gizem and Munezero, Myriam and Muench, Juergen and Fagerholm, Fabian and Syd, Ossi and Aaltola, Mika and Palmu, Christina and Mannisto, Tomi"",
    Title = ""Introducing continuous experimentation in large software-intensive product and service organisations"",
    Journal = ""JOURNAL OF SYSTEMS AND SOFTWARE"",
    Year = ""2017"",
    Volume = ""133"",
    Pages = ""195-211"",
    Month = ""NOV"",
    Abstract = ""Software development in highly dynamic environments imposes high risks to development organizations. One such risk is that the developed software may be of only little or no value to customers, wasting the invested development efforts. Continuous experimentation, as an experiment-driven development approach, may reduce such development risks by iteratively testing product and service assumptions that are critical to the success of the software. Although several experiment-driven development approaches are available, there is little guidance available on how to introduce continuous experimentation into an organization. This article presents a multiple-case study that aims at better understanding the process of introducing continuous experimentation into an organization with an already established development process. The results from the study show that companies are open to adopting such an approach and learning throughout the introduction process. Several benefits were obtained, such as reduced development efforts, deeper customer insights, and better support for development decisions. Challenges included complex stakeholder structures, difficulties in defining success criteria, and building experimentation skills. Our findings indicate that organizational factors may limit the benefits of experimentation. Moreover, introducing continuous experimentation requires fundamental changes in how companies operate, and a systematic introduction process can increase the chances of a successful start. (C) 2017 Elsevier Inc. All rights reserved."",
    Publisher = ""ELSEVIER SCIENCE INC"",
    Address = ""STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA"",
    Type = ""Article"",
    Language = ""English"",
    Affiliation = ""Yaman, SG (Corresponding Author), Univ Helsinki, Dept Comp Sci, POB 68, Helsinki 00014, Finland. Yaman, Sezin Gizem; Munezero, Myriam; Muench, Juergen; Fagerholm, Fabian; Mannisto, Tomi, Univ Helsinki, Dept Comp Sci, POB 68, Helsinki 00014, Finland. Muench, Juergen, Reutlingen Univ, Danziger Str 6, D-71034 Boblingen, Germany. Syd, Ossi, Solita Oy, Alvar Aalto St 5, Helsinki 00100, Finland. Aaltola, Mika; Palmu, Christina, Oy LM Ericsson Ab, Hirsalantie 11, Jorvas 02420, Finland."",
    DOI = ""10.1016/j.jss.2017.07.009"",
    ISSN = ""0164-1212"",
    EISSN = ""1873-1228"",
    Keywords = ""Continuous experimentation; Experiment-driven software development; Product management; Agile software development; Lean software development; Lean startup"",
    Keywords-Plus = ""INNOVATION"",
    Research-Areas = ""Computer Science"",
    Web-of-Science-Categories = ""Computer Science, Software Engineering; Computer Science, Theory \\& Methods"",
    Author-Email = ""sezin.yaman@cs.helsinki.fi myriam.munezero@cs.helsinki.fi juergen.muench@reutlingen-university.de fabian.fagerholm@cs.helsinki.fi ossi.syd@solita.fi mika.aaltola@ericsson.com christina.palmu@ericsson.com tomi.mannisto@cs.helsinki.fi"",
    Affiliations = ""University of Helsinki; Ericsson"",
    ResearcherID-Numbers = ""Munch, Jurgen/ABC-2316-2020 Mannisto, Tomi/ABC-7781-2021 Mannisto, Tomi/I-3999-2013 Fagerholm, Fabian/B-1952-2015"",
    ORCID-Numbers = ""Munch, Jurgen/0000-0003-0327-8094 Mannisto, Tomi/0000-0001-7470-5183 Fagerholm, Fabian/0000-0002-7298-3021"",
    Funding-Acknowledgement = ""Need for Speed research program of DIMECC - Tekes, the Finnish Funding Agency for Innovation"",
    Funding-Text = ""This study was supported by the Need for Speed research program of DIMECC, funded by Tekes, the Finnish Funding Agency for Innovation."",
    Number-of-Cited-References = ""28"",
    Times-Cited = ""30"",
    Usage-Count-Last-180-days = ""0"",
    Usage-Count-Since-2013 = ""44"",
    Journal-ISO = ""J. Syst. Softw."",
    Doc-Delivery-Number = ""FJ3EX"",
    Web-of-Science-Index = ""Science Citation Index Expanded (SCI-EXPANDED)"",
    Unique-ID = ""WOS:000412614400013"",
    DA = ""2024-10-22""
}
"""	Excluded	Excluded	new_screen			2	Web of Science		Introducing continuous experimentation in large software-intensive product and service organisations	https://www.webofscience.com/wos/woscc/full-record/WOS:000412614400013	ELSEVIER SCIENCE INC	nan; References
194	Behave	Investigating Agile Practices in Software Startups	Software development practices have smoothly shifted from traditional software development to new approaches that fit better to the real and unpredictable world. Agile practices might help practitioners respond quickly to customer change requests and deliver a working software on-schedule. Software startups are companies that develop innovative and software-intensive products and services in a dynamic and fast-growing market. This study aims to investigate the use of agile practices in software startups. We conducted 14 in-depth semi-structured interviews with the CEO and CTO from early-stage software startups. The results indicate that DevOps, Fundamentals, Design and Extreme Programming are the most used agile practice areas. Our results open up an opportunity to improve software engineering practices in early-stage software startups.	Agile practices; Interview; Software engineering; Software startups	Renata Souza; Larissa Rocha; Franklin Silva; Ivan Machado	SBES '19: Proceedings of the XXXIII Brazilian Symposium on Software Engineering	https://doi.org/10.1145/3350768.3350786		317-321		Excluded	Excluded	new_screen			2	ACM		Investigating Agile Practices in Software Startups	https://dl.acm.org/doi/10.1145/3350768.3350786	Association for Computing Machinery	nan; References; Year; Bibtex
195	Behave	Behavior-Driven Development:A case study on its impacts on agile development teams	Software development practices which enhance software quality and help teams better develop collaboratively have received attention by the academic community. Among these techniques is Behavior-Driven Development (BDD), a development method which proposes software to be developed focusing primarily on its expected behavior. In this context, this paper investigates how BDD impacts agile software development teams. In order to achieve this, we have conducted a case study on a mobile application development environment which develops software using agile. In total, 42 interviews were performed. Our results indicate that BDD can have positive impacts, increasing collaboration among team members, and negative impacts, like difficulties in writing unit tests. We concluded that BDD has more positive than negative outcomes.	Agile Development; Behavior-Driven Development; Challenge Based Learning; Software Engineering	Nicolas Nascimento; Alan R. Santos; Afonso Sales; Rafael Chanin	ICSEW'20: Proceedings of the IEEE/ACM 42nd International Conference on Software Engineering Workshops	https://doi.org/10.1145/3387940.3391480		109-116		Included	Included	new_screen			2	ACM		Behavior-Driven Development: A Case Study on Its Impacts on Agile Development Teams	https://dl.acm.org/doi/10.1145/3387940.3391480	Association for Computing Machinery	nan; References; Year; Bibtex
196	Behave	Using grounded theory to understand software process improvement: A study of Irish software product companies	Software process improvement (SPI) aims to understand the software process as it is used within an organisation and thus drive the implementation of changes to that process to achieve specific goals such as increasing development speed, achieving higher product quality or reducing costs. Accordingly, SPI researchers must be equipped with the methodologies and tools to enable them to look within organisations and understand the state of practice with respect to software process and process improvement initiatives, in addition to investigating the relevant literature. Having examined a number of potentially suitable research methodologies, we have chosen Grounded Theory as a Suitable approach to determine what was happening in actual practice in relation to software process and SPI, using the indigenous Irish software product industry as a test-bed. The outcome of this study is a theory, grounded in the field data, that explains when and why SPI is undertaken by the software industry. The objective of this paper is to describe both the selection and usage of grounded theory in this Study and evaluate its effectiveness as a research methodology for software process researchers. Accordingly, this paper will focus on the selection and usage of grounded theory, rather than results of the SPI study itself.	software engineering; software process improvement; qualitative research methods; grounded theory; software engineering;  software process improvement;  qualitative research methods;  grounded theory	Coleman, Gerry; O'Connor, Rory	INFORMATION AND SOFTWARE TECHNOLOGY	https://doi.org/10.1016/j.infsof.2007.02.011		654-667	"""@article{WOS:000246599700010,
    Author = ""Coleman, Gerry and O'Connor, Rory"",
    Title = ""Using grounded theory to understand software process improvement: A study of Irish software product companies"",
    Journal = ""INFORMATION AND SOFTWARE TECHNOLOGY"",
    Year = ""2007"",
    Volume = ""49"",
    Number = ""6"",
    Pages = ""654-667"",
    Month = ""JUN"",
    Abstract = ""Software process improvement (SPI) aims to understand the software process as it is used within an organisation and thus drive the implementation of changes to that process to achieve specific goals such as increasing development speed, achieving higher product quality or reducing costs. Accordingly, SPI researchers must be equipped with the methodologies and tools to enable them to look within organisations and understand the state of practice with respect to software process and process improvement initiatives, in addition to investigating the relevant literature. Having examined a number of potentially suitable research methodologies, we have chosen Grounded Theory as a Suitable approach to determine what was happening in actual practice in relation to software process and SPI, using the indigenous Irish software product industry as a test-bed. The outcome of this study is a theory, grounded in the field data, that explains when and why SPI is undertaken by the software industry. The objective of this paper is to describe both the selection and usage of grounded theory in this Study and evaluate its effectiveness as a research methodology for software process researchers. Accordingly, this paper will focus on the selection and usage of grounded theory, rather than results of the SPI study itself. (C) 2007 Elsevier B.V. All rights reserved."",
    Publisher = ""ELSEVIER"",
    Address = ""RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS"",
    Type = ""Article"",
    Language = ""English"",
    Affiliation = ""O'Connor, R (Corresponding Author), Dublin City Univ, Sch Comp, Dublin 9, Ireland. Dublin City Univ, Sch Comp, Dublin 9, Ireland. Dundalk Inst Technol, Dept Comp, Dundalk, Co Louth, Ireland."",
    DOI = ""10.1016/j.infsof.2007.02.011"",
    ISSN = ""0950-5849"",
    EISSN = ""1873-6025"",
    Keywords = ""software engineering; software process improvement; qualitative research methods; grounded theory"",
    Keywords-Plus = ""QUALITATIVE RESEARCH"",
    Research-Areas = ""Computer Science"",
    Web-of-Science-Categories = ""Computer Science, Information Systems; Computer Science, Software Engineering"",
    Author-Email = ""gerry.coleman@dkit.ie roconnor@computing.dcu.ie"",
    Affiliations = ""Dublin City University; Dundalk Institute of Technology"",
    ORCID-Numbers = ""O'Connor, Rory/0000-0001-9253-0313"",
    Number-of-Cited-References = ""45"",
    Times-Cited = ""102"",
    Usage-Count-Last-180-days = ""0"",
    Usage-Count-Since-2013 = ""14"",
    Journal-ISO = ""Inf. Softw. Technol."",
    Doc-Delivery-Number = ""169NU"",
    Web-of-Science-Index = ""Science Citation Index Expanded (SCI-EXPANDED)"",
    Unique-ID = ""WOS:000246599700010"",
    OA = ""Green Accepted, Green Submitted"",
    DA = ""2024-10-22""
}
"""	Excluded	Excluded	new_screen			2	Web of Science		Using grounded theory to understand software process improvement: A study of Irish software product companies	https://www.webofscience.com/wos/woscc/full-record/WOS:000246599700010	ELSEVIER	nan; References
197	Behave	Using spring Roo for the test-driven development of Web applications	Software should be developed in a way that achieves high external and internal quality. Most programs have to be maintained or are extended. They should not only adhere to their requirements but allow to be efficiently changed. Model-driven software development (MDSD) and test-driven development (TDD) are techniques that help to satisfy this demand. We present a novel approach combining MDSD and TDD while using the Spring Roo Web development framework. Besides discussing existing work and the background, we sketch a test-driven Web development process. We then evaluate its feasibility in an exemplary scenario. Thereby, we contribute to the body of scientific knowledge on Web development frameworks in the field of MDSD and TDD.	TDD; spring; spring roo; test-driven development; web application; web development	Tim A. Majchrzak; Andreas Simon	SAC '12: Proceedings of the 27th Annual ACM Symposium on Applied Computing	https://doi.org/10.1145/2245276.2245404		664-671		Excluded	Excluded	new_screen			2	ACM		Using Spring Roo for the Test-Driven Development of Web Applications	https://dl.acm.org/doi/10.1145/2245276.2245404	Association for Computing Machinery	nan; References; Year; Bibtex
198	Behave	A survey of software testing practices in Canada	Software testing is an important activity in the software development life-cycle. In an earlier study in 2009, we reported the results of a regional survey of software testing practices among practitioners in the Canadian province of Alberta. To get a larger nationwide view on this topic (across Canada), we conducted a newer survey with a revised list of questions in 2010. Compared to our previous Alberta-wide survey (53 software practitioners), the nation-wide survey had larger number of participants (246 practitioners). We report the survey design, execution and results in this article. The survey results reveal important and interesting findings about software testing practices in Canada. Whenever possible, we also compare the results of this survey to other similar studies, such as the ones conducted in the US, Sweden and Australia, and also two previous Alberta-wide surveys, including our 2009 survey. The results of our survey will be of interest to testing professionals both in Canada and world-wide. It will also benefit researchers in observing the latest trends in software testing industry identifying the areas of strength and weakness, which would then hopefully encourage further industry-academia collaborations in this area. Among the findings are the followings: (1) the importance of testing-related training is increasing, (2) functional and unit testing are two common test types that receive the most attention and efforts spent on them, (3) usage of the mutation testing approach is getting attention among Canadian firms, (4) traditional Test-last Development (TLD) style is still dominating and a few companies are attempting the new development approaches such as Test-Driven Development (TDD), and Behavior-Driven Development (BDD), (5) in terms of the most popular test tools, NUnit and Web application testing tools overtook JUnit and IBM Rational tools, (6) most Canadian companies use a combination of two coverage metrics: decision (branch) and condition coverage, (7) number of passing user acceptance tests and number of defects found per day (week or month) are regarded as the most important quality assurance metrics and decision factors to release, (8) in most Canadian companies, testers are out-numbered by developers, with ratios ranging from 1:2 to 1:5, (9) the majority of Canadian firms spent less than 40\% of their efforts (budget and time) on testing during development, and (10) more than 70\% of respondents participated in online discussion forums related to testing on a regular basis.	Survey; Software testing; Industry practices; Canada; Survey;  Software testing;  Industry practices;  Canada	Garousi, Vahid; Zhi, Junji	JOURNAL OF SYSTEMS AND SOFTWARE	https://doi.org/10.1016/j.jss.2012.12.051		1354-1376	"""@article{WOS:000317322400014,
    Author = ""Garousi, Vahid and Zhi, Junji"",
    Title = ""A survey of software testing practices in Canada"",
    Journal = ""JOURNAL OF SYSTEMS AND SOFTWARE"",
    Year = ""2013"",
    Volume = ""86"",
    Number = ""5"",
    Pages = ""1354-1376"",
    Month = ""MAY"",
    Abstract = ""Software testing is an important activity in the software development life-cycle. In an earlier study in 2009, we reported the results of a regional survey of software testing practices among practitioners in the Canadian province of Alberta. To get a larger nationwide view on this topic (across Canada), we conducted a newer survey with a revised list of questions in 2010. Compared to our previous Alberta-wide survey (53 software practitioners), the nation-wide survey had larger number of participants (246 practitioners). We report the survey design, execution and results in this article. The survey results reveal important and interesting findings about software testing practices in Canada. Whenever possible, we also compare the results of this survey to other similar studies, such as the ones conducted in the US, Sweden and Australia, and also two previous Alberta-wide surveys, including our 2009 survey. The results of our survey will be of interest to testing professionals both in Canada and world-wide. It will also benefit researchers in observing the latest trends in software testing industry identifying the areas of strength and weakness, which would then hopefully encourage further industry-academia collaborations in this area. Among the findings are the followings: (1) the importance of testing-related training is increasing, (2) functional and unit testing are two common test types that receive the most attention and efforts spent on them, (3) usage of the mutation testing approach is getting attention among Canadian firms, (4) traditional Test-last Development (TLD) style is still dominating and a few companies are attempting the new development approaches such as Test-Driven Development (TDD), and Behavior-Driven Development (BDD), (5) in terms of the most popular test tools, NUnit and Web application testing tools overtook JUnit and IBM Rational tools, (6) most Canadian companies use a combination of two coverage metrics: decision (branch) and condition coverage, (7) number of passing user acceptance tests and number of defects found per day (week or month) are regarded as the most important quality assurance metrics and decision factors to release, (8) in most Canadian companies, testers are out-numbered by developers, with ratios ranging from 1:2 to 1:5, (9) the majority of Canadian firms spent less than 40\\% of their efforts (budget and time) on testing during development, and (10) more than 70\\% of respondents participated in online discussion forums related to testing on a regular basis. (c) 2012 Elsevier Inc. All rights reserved."",
    Publisher = ""ELSEVIER SCIENCE INC"",
    Address = ""STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA"",
    Type = ""Article"",
    Language = ""English"",
    Affiliation = ""Garousi, V (Corresponding Author), Univ Calgary, Dept Elect \\& Comp Engn, Software Qual Engn Res Grp SoftQual, Calgary, AB, Canada. Garousi, Vahid, Univ Calgary, Dept Elect \\& Comp Engn, Software Qual Engn Res Grp SoftQual, Calgary, AB, Canada. Garousi, Vahid, Middle EastTech Univ METU, Grad Sch Informat, Ankara, Turkey. Zhi, Junji, Univ Calgary, Dept Comp Sci, Software Qual Engn Res Grp SoftQual, Calgary, AB, Canada."",
    DOI = ""10.1016/j.jss.2012.12.051"",
    ISSN = ""0164-1212"",
    EISSN = ""1873-1228"",
    Keywords = ""Survey; Software testing; Industry practices; Canada"",
    Keywords-Plus = ""STATE"",
    Research-Areas = ""Computer Science"",
    Web-of-Science-Categories = ""Computer Science, Software Engineering; Computer Science, Theory \\& Methods"",
    Author-Email = ""vgarousi@ucalgary.ca zhij@ucalgary.ca"",
    Affiliations = ""University of Calgary; University of Calgary"",
    ORCID-Numbers = ""Garousi, Vahid/0000-0001-6590-7576"",
    Funding-Acknowledgement = ""Natural Sciences and Engineering Research Council of Canada (NSERC) {[}341511-07]; Visiting Scientist Fellowship Program of the Scientific and Technological Research Council of Turkey (TUBITAK) {[}2221]; Alberta Ingenuity New Faculty Award {[}200600673]"",
    Funding-Text = ""Vahid Garousi was supported by the Discovery Grant no. 341511-07 from the Natural Sciences and Engineering Research Council of Canada (NSERC), by the Visiting Scientist Fellowship Program (\\#2221) of the Scientific and Technological Research Council of Turkey (TUBITAK), and also by the Alberta Ingenuity New Faculty Award no. 200600673."",
    Number-of-Cited-References = ""53"",
    Times-Cited = ""97"",
    Usage-Count-Last-180-days = ""2"",
    Usage-Count-Since-2013 = ""45"",
    Journal-ISO = ""J. Syst. Softw."",
    Doc-Delivery-Number = ""122MO"",
    Web-of-Science-Index = ""Science Citation Index Expanded (SCI-EXPANDED)"",
    Unique-ID = ""WOS:000317322400014"",
    DA = ""2024-10-22""
}
"""	Excluded	Excluded	new_screen			2	Web of Science		A Survey of Software Testing Practices in Canada	https://www.webofscience.com/wos/woscc/full-record/WOS:000317322400014	ELSEVIER SCIENCE INC	nan; References
199	Behave	Software Testing: High-impact Strategies - What You Need to Know Definitions, Adoptions, Impact, Benefits, Maturity, Vendors	Software testing is an investigation conducted to provide stakeholders with information about the quality of the product or service under test. Software testing also provides an objective, independent view of the software to allow the business to appreciate and understand the risks of software implementation. Test techniques include, but are not limited to, the process of executing a program or application with the intent of finding software bugs (errors or other defects). This book is your ultimate resource for Software Testing. Here you will find the most up-to-date information, analysis, background and everything you need to know. In easy to read chapters, with extensive references and links to get you to know all there is to know about Software Testing right away, covering: Software testing, Acceptance testing, Ad hoc testing, Agile testing, All-pairs testing, American Software Testing Qualifications Board, Api Sanity Autotest, Association for Software Testing, Attack patterns, Augmented Reality-based testing, Australian and New Zealand Testing Board, Automated Testing Framework, Avalanche (dynamic analysis tool), Bebugging, Behavior Driven Development, Black-box testing, Block design, Boundary case, Boundary testing, Boundary-value analysis, Browser speed test, Bs 7925-1, Bs 7925-2, Bug bash, Build verification test, Ca/Eztest, Cause-effect graph, Centercode, Characterization test, Cloud testing, Code coverage, Code integrity, Codenomicon, Compatibility testing, Component-Based Usability Testing, Conference Room Pilot, Conformance testing, Core Security, Corner case, Daikon (system), Data-driven testing, Decision table, Decision-to-decision path, Design predicates, Development, testing, acceptance and production, DeviceAnywhere, Dry run (testing), Dynamic program analysis, Dynamic testing, Edge case, Endeavour Software Project Management,		Roebuck, Kevin	Software Testing:High-impact Strategies - What You Need to Know Definitions, Adoptions, Impact, Benefits, Maturity, Vendors	https://doi.org/10.5555/2031364			"""@book{10.5555/2031364,
    author = ""Roebuck, Kevin"",
    title = ""Software Testing: High-impact Strategies - What You Need to Know Definitions, Adoptions, Impact, Benefits, Maturity, Vendors"",
    year = ""2011"",
    isbn = ""1743044763"",
    publisher = ""Tebbo"",
    abstract = ""Software testing is an investigation conducted to provide stakeholders with information about the quality of the product or service under test. Software testing also provides an objective, independent view of the software to allow the business to appreciate and understand the risks of software implementation. Test techniques include, but are not limited to, the process of executing a program or application with the intent of finding software bugs (errors or other defects). This book is your ultimate resource for Software Testing. Here you will find the most up-to-date information, analysis, background and everything you need to know. In easy to read chapters, with extensive references and links to get you to know all there is to know about Software Testing right away, covering: Software testing, Acceptance testing, Ad hoc testing, Agile testing, All-pairs testing, American Software Testing Qualifications Board, Api Sanity Autotest, Association for Software Testing, Attack patterns, Augmented Reality-based testing, Australian and New Zealand Testing Board, Automated Testing Framework, Avalanche (dynamic analysis tool), Bebugging, Behavior Driven Development, Black-box testing, Block design, Boundary case, Boundary testing, Boundary-value analysis, Browser speed test, Bs 7925-1, Bs 7925-2, Bug bash, Build verification test, Ca/Eztest, Cause-effect graph, Centercode, Characterization test, Cloud testing, Code coverage, Code integrity, Codenomicon, Compatibility testing, Component-Based Usability Testing, Conference Room Pilot, Conformance testing, Core Security, Corner case, Daikon (system), Data-driven testing, Decision table, Decision-to-decision path, Design predicates, Development, testing, acceptance and production, DeviceAnywhere, Dry run (testing), Dynamic program analysis, Dynamic testing, Edge case, Endeavour Software Project Management,""
}
"""	Excluded	Excluded	new_screen			2	ACM		Software Testing: High-Impact Strategies - What You Need to Know Definitions, Adoptions, Impact, Benefits, Maturity, Vendors	https://dl.acm.org/doi/abs/10.5555/2031364	Tebbo	nan; Keywords; References; Pages
200	Behave	The implementation of ATDD and BDD from Testing Perspectives	Software testing is one of the stages in software development that aims to ensure that the software is built to meet the specifications. Selection of selective test cases has a great chance of finding failure. Black box testing approach is done based on the requirement specification where this approach does not pay attention to the program code but the specification of a software. This approach can be used for testing a software using ATDD (Acceptance Test Driven Development) and BDD (Behavior Driven Development) methods. ATDD is a method of building a software created based on agile principle, acceptance test created by customer, developer and tester. BDD is a growing agile development approach in recent years. Behavior Driven Development (BDD) is built on Test-Driven Development (TDD). This Final Project focuses on the application of ATDD and BDD methods to testing the final three projects of IT Del students tested using the Roboy Framework and Cucumber Framework to find out whether these two methods are effective and be able to improve the software development process. The results obtained are that the application of ATDD and BDD methods are effective and helping to remove the error as soon as possible.		Barus, Arlinta Christy	1ST INTERNATIONAL CONFERENCE ON ADVANCE AND SCIENTIFIC INNOVATION	https://doi.org/10.1088/1742-6596/1175/1/012112			"""@inproceedings{WOS:000478561500111,
    Author = ""Barus, Arlinta Christy"",
    Book-Group-Author = ""IOP"",
    Title = ""The implementation of ATDD and BDD from Testing Perspectives"",
    Booktitle = ""1ST INTERNATIONAL CONFERENCE ON ADVANCE AND SCIENTIFIC INNOVATION"",
    Series = ""Journal of Physics Conference Series"",
    Year = ""2019"",
    Volume = ""1175"",
    Note = ""Joint Workshop on KO2PI / 1st International Conference on Advance and Scientific Innovation (ICASI) - Empowering Digital Society through Integration of Multidisciplinarity Aspect, Medan, INDONESIA, APR 23-24, 2018"",
    Abstract = ""Software testing is one of the stages in software development that aims to ensure that the software is built to meet the specifications. Selection of selective test cases has a great chance of finding failure. Black box testing approach is done based on the requirement specification where this approach does not pay attention to the program code but the specification of a software. This approach can be used for testing a software using ATDD (Acceptance Test Driven Development) and BDD (Behavior Driven Development) methods. ATDD is a method of building a software created based on agile principle, acceptance test created by customer, developer and tester. BDD is a growing agile development approach in recent years. Behavior Driven Development (BDD) is built on Test-Driven Development (TDD). This Final Project focuses on the application of ATDD and BDD methods to testing the final three projects of IT Del students tested using the Roboy Framework and Cucumber Framework to find out whether these two methods are effective and be able to improve the software development process. The results obtained are that the application of ATDD and BDD methods are effective and helping to remove the error as soon as possible."",
    Publisher = ""IOP PUBLISHING LTD"",
    Address = ""DIRAC HOUSE, TEMPLE BACK, BRISTOL BS1 6BE, ENGLAND"",
    Type = ""Proceedings Paper"",
    Language = ""English"",
    Affiliation = ""Barus, AC (Corresponding Author), Del Inst Technol, Kab Tobasa, North Sumatera, Indonesia. Barus, Arlinta Christy, Del Inst Technol, Kab Tobasa, North Sumatera, Indonesia."",
    DOI = ""10.1088/1742-6596/1175/1/012112"",
    Article-Number = ""012112"",
    ISSN = ""1742-6588"",
    EISSN = ""1742-6596"",
    Research-Areas = ""Science \\& Technology - Other Topics"",
    Web-of-Science-Categories = ""Multidisciplinary Sciences"",
    Number-of-Cited-References = ""21"",
    Times-Cited = ""1"",
    Usage-Count-Last-180-days = ""0"",
    Usage-Count-Since-2013 = ""7"",
    Doc-Delivery-Number = ""BN3AG"",
    Web-of-Science-Index = ""Conference Proceedings Citation Index - Science (CPCI-S)"",
    Unique-ID = ""WOS:000478561500111"",
    OA = ""gold"",
    DA = ""2024-10-22""
}
"""	Included	Included	new_screen			2	Web of Science		The implementation of ATDD and BDD from Testing Perspectives	https://www.webofscience.com/wos/woscc/full-record/WOS:000478561500111	IOP PUBLISHING LTD	nan; Keywords; References; Pages
201	Behave	Impacts of behavioral driven development in the improvement of quality software deliverables	Sometimes, the software deliverables do not exactly match with the requirements. This mismatch requirement can be captured during the testing. Even then if it is missing it is because of non-coverage of the testing and test cases. This could be resolved by creating the unit test cases / Integration test cases from the requirements. This paper focuses on BDD requirements which generates the test cases as well as report executed. With aid of automation testing, the test cases of BDD can be explained. This paper deals with such test cases, the next version binaries to get the proper deliverables.	BDD - Behavior Driven Development; TDD - Test Driven Development; QA - Quality Assurance; BD - Behavior Driven; BDD - Behavior Driven Development;  TDD - Test Driven Development;  QA - Quality Assurance;  BD - Behavior Driven	AnanthiSheshasaayee; Banumathi, P.	PROCEEDINGS OF THE 2018 3RD INTERNATIONAL CONFERENCE ON INVENTIVE COMPUTATION TECHNOLOGIES (ICICT 2018)	https://www.webofscience.com/wos/woscc/full-record/WOS:000610379500031		228-230	"""@inproceedings{WOS:000610379500031,
    Author = ""AnanthiSheshasaayee and Banumathi, P."",
    Book-Group-Author = ""IEEE"",
    Title = ""Impacts of behavioral driven development in the improvement of quality software deliverables"",
    Booktitle = ""PROCEEDINGS OF THE 2018 3RD INTERNATIONAL CONFERENCE ON INVENTIVE COMPUTATION TECHNOLOGIES (ICICT 2018)"",
    Year = ""2018"",
    Pages = ""228-230"",
    Note = ""3rd International Conference on Inventive Computation Technologies (ICICT), Coimbatore, INDIA, NOV 15-16, 2018"",
    Organization = ""IEEE; RVS Tech Campus"",
    Abstract = ""Sometimes, the software deliverables do not exactly match with the requirements. This mismatch requirement can be captured during the testing. Even then if it is missing it is because of non-coverage of the testing and test cases. This could be resolved by creating the unit test cases / Integration test cases from the requirements. This paper focuses on BDD requirements which generates the test cases as well as report executed. With aid of automation testing, the test cases of BDD can be explained. This paper deals with such test cases, the next version binaries to get the proper deliverables."",
    Publisher = ""IEEE"",
    Address = ""345 E 47TH ST, NEW YORK, NY 10017 USA"",
    Type = ""Proceedings Paper"",
    Language = ""English"",
    Affiliation = ""AnanthiSheshasaayee (Corresponding Author), Quaid e Millath Govt Coll Women Autonomous, PG \\& Res Dept Comp Sci, Chennai 2, Tamil Nadu, India. AnanthiSheshasaayee, Quaid e Millath Govt Coll Women Autonomous, PG \\& Res Dept Comp Sci, Chennai 2, Tamil Nadu, India. Banumathi, P., Quaid e Millath Govt Coll Women Autonomous, Chennai 2, Tamil Nadu, India."",
    ISBN = ""978-1-5386-4985-5"",
    Keywords = ""BDD - Behavior Driven Development; TDD - Test Driven Development; QA - Quality Assurance; BD - Behavior Driven"",
    Research-Areas = ""Computer Science"",
    Web-of-Science-Categories = ""Computer Science, Interdisciplinary Applications; Computer Science, Theory \\& Methods"",
    Number-of-Cited-References = ""15"",
    Times-Cited = ""1"",
    Usage-Count-Last-180-days = ""0"",
    Usage-Count-Since-2013 = ""1"",
    Doc-Delivery-Number = ""BQ6AT"",
    Web-of-Science-Index = ""Conference Proceedings Citation Index - Science (CPCI-S)"",
    Unique-ID = ""WOS:000610379500031"",
    DA = ""2024-10-22""
}
"""	Excluded	Excluded	new_screen			2	Web of Science		Impacts of behavioral driven development in the improvement of quality software deliverables	https://www.webofscience.com/wos/woscc/full-record/WOS:000610379500031	IEEE	nan; References
202	Behave	A Natural Language Driven Approach for Automated Web API Development:Gherkin2OAS	"Speeding up the development process of Web Services, while adhering to high quality software standards is a typical requirement in the software industry. This is why industry specialists usually suggest ""driven by"" development approaches to tackle this problem. In this paper, we propose such a methodology that employs Specification Driven Development and Behavior Driven Development in order to facilitate the phases of Web Service requirements elicitation and specification. Furthermore, we introduce gherkin2OAS, a software tool that aspires to bridge the aforementioned development approaches. Through the suggested methodology and tool, one may design and build RESTful services fast, while ensuring proper functionality."	behavior driven development; gherkin; open API specification; restful API	Anastasios Dimanidis; Kyriakos C. Chatzidimitriou; Andreas L. Symeonidis	WWW '18: Companion Proceedings of the The Web Conference 2018	https://doi.org/10.1145/3184558.3191654		1869-1874		Included	Included	new_screen			2	ACM		A Natural Language Driven Approach for Automated Web API Development: Gherkin2OAS	https://dl.acm.org/doi/10.1145/3184558.3191654	International World Wide Web Conferences Steering Committee	nan; References; Year; Bibtex
203	Behave	Sismic--A Python library for statechart execution and testing	Statecharts are a well-known visual modelling language for representing the executable behaviour of complex reactive event-based systems. The essential complexity of statechart models solicits the need for advanced model testing and validation techniques, such as test-driven development, behaviour-driven development, design by contract, and property statecharts for monitoring of violations of behavioural properties during statechart execution. Sismic is an open-source Python library providing a tool suite to define, simulate, execute and test statecharts with all of the aforementioned techniques.	Statechart;  Executable modelling;  Behaviour-driven development;  Design by contract;  Runtime verification; Statechart, Executable modelling, Behaviour-driven development, Design by contract, Runtime verification	Decan, Alexandre; Mens, Tom	SoftwareX	https://www.sciencedirect.com/science/article/pii/S2352711020303034		100590	"""@article{DECAN2020100590,
    author = ""Decan, Alexandre and Mens, Tom"",
    title = ""Sismic--A Python library for statechart execution and testing"",
    journal = ""SoftwareX"",
    volume = ""12"",
    pages = ""100590"",
    year = ""2020"",
    issn = ""2352-7110"",
    doi = ""https://doi.org/10.1016/j.softx.2020.100590"",
    url = ""https://www.sciencedirect.com/science/article/pii/S2352711020303034"",
    keywords = ""Statechart, Executable modelling, Behaviour-driven development, Design by contract, Runtime verification"",
    abstract = ""Statecharts are a well-known visual modelling language for representing the executable behaviour of complex reactive event-based systems. The essential complexity of statechart models solicits the need for advanced model testing and validation techniques, such as test-driven development, behaviour-driven development, design by contract, and property statecharts for monitoring of violations of behavioural properties during statechart execution. Sismic is an open-source Python library providing a tool suite to define, simulate, execute and test statecharts with all of the aforementioned techniques.""
}
"""	Excluded	Excluded	new_screen			2	Science Direct		Sismic—A Python library for statechart execution and testing	https://www.sciencedirect.com/science/article/pii/S2352711020303034	ELSEVIER	nan; References
204	Behave	A method for testing and validating executable statechart models	Statecharts constitute an executable language for modelling event-based reactive systems. The essential complexity of statechart models solicits the need for advanced model testing and validation techniques. In this article, we propose a method aimed at enhancing statechart design with a range of techniques that have proven their usefulness to increase the quality and reliability of source code. The method is accompanied by a process that flexibly accommodates testing and validation techniques such as test-driven development, behaviour-driven development, design by contract, and property statecharts that check for violations of behavioural properties during statechart execution. The method is supported by the Sismic tool, an open-source statechart interpreter library in Python, which supports all the aforementioned techniques. Based on this tooling, we carry out a controlled user study to evaluate the feasibility, usefulness and adequacy of the proposed techniques for statechart testing and validation.	Statechart; Executable modeling; Behaviour-driven development; Design by contract; Runtime verification; Statechart;  Executable modeling;  Behaviour-driven development;  Design by contract;  Runtime verification	Mens, Tom; Decan, Alexandre; Spanoudakis, Nikolaos I.	SOFTWARE AND SYSTEMS MODELING	https://doi.org/10.1007/s10270-018-0676-3	"Aravantinos, V., Voss, S., Teufl, S., Holzl, F., Schatz, B.: AutoFOCUS 3: tooling concepts for seamless, model-based development of embedded systems. In: International Workshop on Model-Based Architecting of Cyber-Physical and Embedded Systems and International Workshop on UML Consistency Rules, Volume 1508 of CEUR Workshop Proceedings, pp. 19-26. CEUR-WS.org (2015); citation_title=Principles of Model Checking; citation_publication_date=2008; citation_id=CR2; citation_author=C Baier; citation_author=J-P Katoen; citation_publisher=MIT Press; citation_title=Test-Driven Development by Example; citation_publication_date=2002; citation_id=CR3; citation_author=K Beck; citation_publisher=Addison-Wesley; Beer, I., Ben-David, S., Eisner, C., Fisman, D., Gringauze, A., Rodeh, Y.: The temporal logic sugar. In: International Conference Computer Aided Verification (CAV), pp. 363-367. Springer (2001); Bunse, C., Klingert, S., Schulze, T.: Greenslas: supporting energy-efficiency through contracts. In: International Workshop on Energy Efficient Data Centers, pp. 54-68. Springer (2012); citation_journal_title=J. Syst. Softw.; citation_title=On the verification of UML/OCL class diagrams using constraint programming; citation_author=J Cabot, R Clariso, D Riera; citation_volume=93; citation_publication_date=2014; citation_pages=1-23; citation_doi=10.1016/j.jss.2014.03.023; citation_id=CR6; Cariou, E., Ballagny, C., Feugas, A., Barbier, F.: Contracts for model execution verification. In: European Conference Modelling Foundations and Applications (ECMFA), Volume 6698 of Lecturer Notes in Computer Science, pp. 3-18. Springer (2011); citation_journal_title=Sci. Comput. Program.; citation_title=Contracts-refinement proof system for component-based embedded systems; citation_author=A Cimatti, S Tonetta; citation_volume=97; citation_publication_date=2015; citation_pages=333-348; citation_doi=10.1016/j.scico.2014.06.011; citation_id=CR8; Corbett, J.C., Dwyer, M.B., Hatcliff, J., Robby.: A language framework for expressing checkable properties of dynamic software. In: International SPIN Model Checking and Software Verification Workshop, Volume 1885 of Lecturer Notes in Computer Science, pp. 205-223. Springer (2000); citation_journal_title=Int. J. Agent Oriented Softw. Eng.; citation_title=Method fragments for agent design methodologies: from standardisation to research; citation_author=M Cossentino, S Gaglio, A Garro, V Seidita; citation_volume=1; citation_issue=1; citation_publication_date=2007; citation_pages=91-121; citation_doi=10.1504/IJAOSE.2007.013266; citation_id=CR10; Delmolino, K., Arnett, M., Kosba, A., Miller, A., Shi, E.: Step by step towards creating a safe smart contract: lessons and insights from a cryptocurrency lab. In: International Conference on Financial Cryptography and Data Security, pp. 79-94. Springer (2016); Dietrich, I., Dressler, F., Dulz, W., German, R.: Validating UML simulation models with model-level unit tests. In: International Conference Simulation Tools and Techniques (SIMUTools) (2010); citation_title=Doing Hard Time: Developing Real-Time Systems with UML, Objects, Frameworks, and Patterns; citation_publication_date=1999; citation_id=CR13; citation_author=BP Douglas; citation_publisher=Addison-Wesley; Drusinsky, D.: Semantics and runtime monitoring of TLCharts: statechart automata with temporal logic conditioned transitions. In: Proceedings of the Fourth Workshop on Runtime Verification (RV 2004), Electronic Notes in Theoretical Computer Science, Volume 113, pp. 3-21 (2005); citation_title=Modeling and Verification Using UML Statecharts; citation_publication_date=2006; citation_id=CR15; citation_author=D Drusinsky; citation_publisher=Elsevier Science; Dwyer, M.B., Avrunin, G.S., Corbett, J.C.: Patterns in property specifications for finite-state verification. In: International Conference on Software Engineering, pp. 411-420. ACM (1999); citation_journal_title=Sci. Comput. Program.; citation_title=The Daikon system for dynamic detection of likely invariants; citation_author=MD Ernst, JH Perkins, PJ Guo, S McCamant, C Pacheco, MS Tschantz, C Xiao; citation_volume=69; citation_issue=1-3; citation_publication_date=2007; citation_pages=35-45; citation_doi=10.1016/j.scico.2007.01.015; citation_id=CR17; citation_journal_title=Requir. Eng.; citation_title=Deconstructing the semantics of big-step modelling languages; citation_author=S Esmaeilsabzali, NA Day, JM Atlee, J Niu; citation_volume=15; citation_issue=2; citation_publication_date=2010; citation_pages=235-265; citation_doi=10.1007/s00766-010-0102-z; citation_id=CR18; Estler, H., Furia, C.A., Nordio, M., Piccioni, M., Meyer, B.: Contracts in practice. In: International Symposium on Formal Methods (FM), Volume 8442 of Lecturer Notes in Computer Science, pp. 230-246. Springer (2014); Fabbri, S.C.P.F., Maldonado, J.C., Sugeta, T., Masiero, P.C.: Mutation testing applied to validate specifications based on statecharts. In: International Symposium on Software Reliability Engineering (ISSRE), pp. 210-219. IEEE Computer Society (1999); citation_journal_title=Eng. Dependable Softw. Syst.; citation_title=A tutorial on runtime verification; citation_author=Y Falcone, K Havelund, G Reger; citation_volume=34; citation_publication_date=2013; citation_pages=141-175; citation_id=CR21; Gnesi, S., Latella, D., Massink M.: Model checking UML statechart diagrams using JACK. In: International Symposium on High-Assurance Systems Engineering (HASE), pp. 46-55. IEEE Computer Society (1999); Gogolla, M., Hamann, L., Hilken, F., Sedlmeier, M.: Modeling behavior with interaction diagrams in a UML and OCL tool. In: Behavior Modeling--Foundations and Applications, BM-FA 2009-2014, Revised Selected Papers, Volume 6368 of Lecturer Notes in Computer Science, pp. 31-58. Springer (2015); citation_journal_title=Sci. Comput. Program.; citation_title=USE: a UML-based specification environment for validating UML and OCL; citation_author=M Gogolla, F Buttner, M Richters; citation_volume=69; citation_issue=1-3; citation_publication_date=2007; citation_pages=27-34; citation_doi=10.1016/j.scico.2007.01.013; citation_id=CR24; citation_title=Designing Software Product Lines with UML: From Use Cases to Pattern-Based Software Architectures; citation_publication_date=2004; citation_id=CR25; citation_author=H Gomaa; citation_publisher=Addison Wesley; Hamann, L., Hofrichter, O., Gogolla, M.: On integrating structure and behavior modeling with OCL. In: International Conference on Model Driven Engineering Languages and Systems, Volume 7590 of Lecturer Notes in Computer Science, pp. 235-251. Springer (2012); citation_journal_title=Commun. ACM; citation_title=On visual formalisms; citation_author=D Harel; citation_volume=31; citation_issue=5; citation_publication_date=1988; citation_pages=514-530; citation_doi=10.1145/42411.42414; citation_id=CR27; citation_journal_title=IEEE Comput.; citation_title=Executable object modeling with statecharts; citation_author=D Harel, E Gery; citation_volume=30; citation_issue=7; citation_publication_date=1997; citation_pages=31-42; citation_doi=10.1109/2.596624; citation_id=CR28; citation_title=The Rhapsody Semantics of Statecharts (or, on the Executable Core of the UML), Volume LNCS 3147; citation_publication_date=2004; citation_id=CR29; citation_author=D Harel; citation_author=H Kugler; citation_publisher=Springer; citation_journal_title=ACM Trans. Softw. Eng. Methodol.; citation_title=The STATEMATE semantics of statecharts; citation_author=D Harel, A Naamad; citation_volume=5; citation_issue=4; citation_publication_date=1996; citation_pages=293-333; citation_doi=10.1145/235321.235322; citation_id=CR30; citation_journal_title=J. Univers. Comput. Sci.; citation_title=Situational method engineering: state-of-the-art review; citation_author=B Henderson-Sellers, J Ralyte; citation_volume=16; citation_issue=3; citation_publication_date=2010; citation_pages=424-478; citation_id=CR31; Idelberger, F., Governatori, G., Riveret, R., Sartor, G.: Evaluation of logic-based smart contracts for blockchain systems. In: International Symposium on Rules and Rule Markup Languages for the Semantic Web, pp. 167-183. Springer (2016); citation_journal_title=Electron. Notes Theor. Comput. Sci.; citation_title=Behaviour-driven development of foundational UML components; citation_author=I Lazar, S Motogna, B Parv; citation_volume=264; citation_issue=1; citation_publication_date=2010; citation_pages=91-105; citation_doi=10.1016/j.entcs.2010.07.007; citation_id=CR33; Leavens, G.T., Cheon, Y.: Design by Contract with JML. Technical report, Iowa State University (2006); citation_journal_title=J. Logic Algebr. Program.; citation_title=A brief account of runtime verification; citation_author=M Leucker, C Schallhart; citation_volume=78; citation_issue=5; citation_publication_date=2009; citation_pages=293-303; citation_doi=10.1016/j.jlap.2008.08.004; citation_id=CR35; Magee, J.: Behavioral analysis of software architectures using LTSA. In: International Conference on Software Engineering, pp. 634-637. ACM (1999); Meyer, B.: Contract-driven development. In: International Conference on Fundamental Approaches to Software Engineering (FASE), Volume 4422 of Lecturer Notes in Computer Science, p. 11. Springer (2007); citation_journal_title=IEEE Comput.; citation_title=Applying ""design by contract""; citation_author=B Meyer; citation_volume=25; citation_issue=10; citation_publication_date=1992; citation_pages=40-51; citation_doi=10.1109/2.161279; citation_id=CR38; North, D.: Behavior modification: the evolution of behavior-driven development. Better Software (2006); Object Management Group. Object Constraint Language, Version 2.4. OMG Document Number: formal/2014-02-03. URL: 
                    http://www.omg.org/spec/OCL/2.4
                    
                   (2014); Object Management Group. OMG Unified Modeling Language (OMG UML), Version 2.5. OMG Document Number: formal/2015-03-01. URL:
                    http://www.omg.org/spec/UML/2.5
                    
                   (2015); OMG. Software and Systems Process Engineering Meta-Model Specification. Version 2.0. Technical Report OMG Document Number: Formal/2008-04-01. Object Management Group (2008); citation_journal_title=IEEE Trans. Soft. Eng.; citation_title=Automated fixing of programs with contracts; citation_author=Y Pei, CA Furia, M Nordio, Y Wei, B Meyer, A Zeller; citation_volume=40; citation_issue=5; citation_publication_date=2014; citation_pages=427-449; citation_doi=10.1109/TSE.2014.2312918; citation_id=CR43; citation_title=Practical UML Statecharts in C/C++: Event-Driven Programming for Embedded Systems; citation_publication_date=2008; citation_id=CR44; citation_author=M Samek; citation_publisher=CRC Press; Sen, K.: Concolic testing. In: International Conference on Automated Software Engineering, pp. 571-572. ACM (2007); citation_title=The agent modeling language (AMOLA); citation_inbook_title=Artificial Intelligence: Methodology, Systems, and Applications, Volume 5253 of Lecture Notes in Computer Science; citation_publication_date=2008; citation_pages=32-44; citation_id=CR46; citation_author=N Spanoudakis; citation_author=P Moraitis; citation_publisher=Springer; Syriani, E., Vangheluwe, H., Mannadiar, R., Hansen, C., Van Mierlo, S., Ergin, H.: AToMPM: a web-based modeling environment. In: Joint Proceedings of MODELS'13 Invited Talks, Demonstration Session, Poster Session, and ACM Student Research Competition, Volume 1115, CEUR Workshop Proceedings (2013); citation_title=A CASE tool for robot behavior development; citation_inbook_title=RoboCup 2012: Robot Soccer World Cup XVI. Lecture Notes in Computer Science; citation_publication_date=2013; citation_pages=225-236; citation_id=CR48; citation_author=A Topalidou-Kyniazopoulou; citation_author=NI Spanoudakis; citation_author=MG Lagoudakis; citation_publisher=Springer; Trakhtenbrot, M.: New mutations for evaluation of specification and implementation levels of adequacy in testing of statecharts models. In: Testing: Academic and Industrial Conference Practice and Research Techniques (MUTATION), pp. 151-160 (2007); Wynne, M., Hellesoy, A.: The Cucumber Book: Behaviour-Driven Development for Testers and Developers. Pragmatic Bookshelf. ISBN: 978-1-93435-680-7. 
                    https://pragprog.com/book/hwcuc/the-cucumber-book
                    
                   (2012)"	837-863	"""@article{WOS:000464022400005,
    Author = ""Mens, Tom and Decan, Alexandre and Spanoudakis, Nikolaos I."",
    Title = ""A method for testing and validating executable statechart models"",
    Journal = ""SOFTWARE AND SYSTEMS MODELING"",
    Year = ""2019"",
    Volume = ""18"",
    Number = ""2"",
    Pages = ""837-863"",
    Month = ""APR"",
    Abstract = ""Statecharts constitute an executable language for modelling event-based reactive systems. The essential complexity of statechart models solicits the need for advanced model testing and validation techniques. In this article, we propose a method aimed at enhancing statechart design with a range of techniques that have proven their usefulness to increase the quality and reliability of source code. The method is accompanied by a process that flexibly accommodates testing and validation techniques such as test-driven development, behaviour-driven development, design by contract, and property statecharts that check for violations of behavioural properties during statechart execution. The method is supported by the Sismic tool, an open-source statechart interpreter library in Python, which supports all the aforementioned techniques. Based on this tooling, we carry out a controlled user study to evaluate the feasibility, usefulness and adequacy of the proposed techniques for statechart testing and validation."",
    Publisher = ""SPRINGER HEIDELBERG"",
    Address = ""TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY"",
    Type = ""Article"",
    Language = ""English"",
    Affiliation = ""Mens, T (Corresponding Author), Univ Mons, Fac Sci, Software Engn Lab, B-7000 Mons, Belgium. Mens, Tom; Decan, Alexandre, Univ Mons, Fac Sci, Software Engn Lab, B-7000 Mons, Belgium. Spanoudakis, Nikolaos I., Tech Univ Crete, Sch Prod Engn \\& Management, Appl Math \\& Comp Lab, Khania 73100, Greece."",
    DOI = ""10.1007/s10270-018-0676-3"",
    ISSN = ""1619-1366"",
    EISSN = ""1619-1374"",
    Keywords = ""Statechart; Executable modeling; Behaviour-driven development; Design by contract; Runtime verification"",
    Keywords-Plus = ""SYSTEM; UML"",
    Research-Areas = ""Computer Science"",
    Web-of-Science-Categories = ""Computer Science, Software Engineering"",
    Author-Email = ""tom.mens@umons.ac.be alexandre.decan@umons.ac.be nispanoudakis@isc.tuc.gr"",
    Affiliations = ""University of Mons; Technical University of Crete"",
    ResearcherID-Numbers = ""Mens, Tom/B-6518-2013 Spanoudakis, Nikolaos/I-4895-2012"",
    ORCID-Numbers = ""Mens, Tom/0000-0003-3636-5020 Spanoudakis, Nikolaos/0000-0002-4957-9194"",
    Number-of-Cited-References = ""50"",
    Times-Cited = ""10"",
    Usage-Count-Last-180-days = ""0"",
    Usage-Count-Since-2013 = ""2"",
    Journal-ISO = ""Softw. Syst. Model."",
    Doc-Delivery-Number = ""HS7AM"",
    Web-of-Science-Index = ""Science Citation Index Expanded (SCI-EXPANDED)"",
    Unique-ID = ""WOS:000464022400005"",
    DA = ""2024-10-22""
}
"""	Excluded	Excluded	new_screen			2	Web of Science		A Method for Testing and Validating Executable Statechart Models	https://www.webofscience.com/wos/woscc/full-record/WOS:000464022400005	SPRINGER HEIDELBERG	
205	Behave	A method for testing and validating executable statechart models	Statecharts constitute an executable language for modelling event-based reactive systems. The essential complexity of statechart models solicits the need for advanced model testing and validation techniques. In this article, we propose a method aimed at enhancing statechart design with a range of techniques that have proven their usefulness to increase the quality and reliability of source code. The method is accompanied by a process that flexibly accommodates testing and validation techniques such as test-driven development, behaviour-driven development, design by contract, and property statecharts that check for violations of behavioural properties during statechart execution. The method is supported by theSismictool, an open-source statechart interpreter library in Python, which supports all the aforementioned techniques. Based on this tooling, we carry out a controlled user study to evaluate the feasibility, usefulness and adequacy of the proposed techniques for statechart testing and validation.	Statechart; Executable modeling; Behaviour-driven development; Design by contract; Runtime verification	Tom Mens; Alexandre Decan; Nikolaos I. Spanoudakis	Software & Systems Modeling	https://doi.org/10.1007/s10270-018-0676-3	"Aravantinos, V., Voss, S., Teufl, S., Holzl, F., Schatz, B.: AutoFOCUS 3: tooling concepts for seamless, model-based development of embedded systems. In: International Workshop on Model-Based Architecting of Cyber-Physical and Embedded Systems and International Workshop on UML Consistency Rules, Volume 1508 of CEUR Workshop Proceedings, pp. 19-26. CEUR-WS.org (2015); citation_title=Principles of Model Checking; citation_publication_date=2008; citation_id=CR2; citation_author=C Baier; citation_author=J-P Katoen; citation_publisher=MIT Press; citation_title=Test-Driven Development by Example; citation_publication_date=2002; citation_id=CR3; citation_author=K Beck; citation_publisher=Addison-Wesley; Beer, I., Ben-David, S., Eisner, C., Fisman, D., Gringauze, A., Rodeh, Y.: The temporal logic sugar. In: International Conference Computer Aided Verification (CAV), pp. 363-367. Springer (2001); Bunse, C., Klingert, S., Schulze, T.: Greenslas: supporting energy-efficiency through contracts. In: International Workshop on Energy Efficient Data Centers, pp. 54-68. Springer (2012); citation_journal_title=J. Syst. Softw.; citation_title=On the verification of UML/OCL class diagrams using constraint programming; citation_author=J Cabot, R Clariso, D Riera; citation_volume=93; citation_publication_date=2014; citation_pages=1-23; citation_doi=10.1016/j.jss.2014.03.023; citation_id=CR6; Cariou, E., Ballagny, C., Feugas, A., Barbier, F.: Contracts for model execution verification. In: European Conference Modelling Foundations and Applications (ECMFA), Volume 6698 of Lecturer Notes in Computer Science, pp. 3-18. Springer (2011); citation_journal_title=Sci. Comput. Program.; citation_title=Contracts-refinement proof system for component-based embedded systems; citation_author=A Cimatti, S Tonetta; citation_volume=97; citation_publication_date=2015; citation_pages=333-348; citation_doi=10.1016/j.scico.2014.06.011; citation_id=CR8; Corbett, J.C., Dwyer, M.B., Hatcliff, J., Robby.: A language framework for expressing checkable properties of dynamic software. In: International SPIN Model Checking and Software Verification Workshop, Volume 1885 of Lecturer Notes in Computer Science, pp. 205-223. Springer (2000); citation_journal_title=Int. J. Agent Oriented Softw. Eng.; citation_title=Method fragments for agent design methodologies: from standardisation to research; citation_author=M Cossentino, S Gaglio, A Garro, V Seidita; citation_volume=1; citation_issue=1; citation_publication_date=2007; citation_pages=91-121; citation_doi=10.1504/IJAOSE.2007.013266; citation_id=CR10; Delmolino, K., Arnett, M., Kosba, A., Miller, A., Shi, E.: Step by step towards creating a safe smart contract: lessons and insights from a cryptocurrency lab. In: International Conference on Financial Cryptography and Data Security, pp. 79-94. Springer (2016); Dietrich, I., Dressler, F., Dulz, W., German, R.: Validating UML simulation models with model-level unit tests. In: International Conference Simulation Tools and Techniques (SIMUTools) (2010); citation_title=Doing Hard Time: Developing Real-Time Systems with UML, Objects, Frameworks, and Patterns; citation_publication_date=1999; citation_id=CR13; citation_author=BP Douglas; citation_publisher=Addison-Wesley; Drusinsky, D.: Semantics and runtime monitoring of TLCharts: statechart automata with temporal logic conditioned transitions. In: Proceedings of the Fourth Workshop on Runtime Verification (RV 2004), Electronic Notes in Theoretical Computer Science, Volume 113, pp. 3-21 (2005); citation_title=Modeling and Verification Using UML Statecharts; citation_publication_date=2006; citation_id=CR15; citation_author=D Drusinsky; citation_publisher=Elsevier Science; Dwyer, M.B., Avrunin, G.S., Corbett, J.C.: Patterns in property specifications for finite-state verification. In: International Conference on Software Engineering, pp. 411-420. ACM (1999); citation_journal_title=Sci. Comput. Program.; citation_title=The Daikon system for dynamic detection of likely invariants; citation_author=MD Ernst, JH Perkins, PJ Guo, S McCamant, C Pacheco, MS Tschantz, C Xiao; citation_volume=69; citation_issue=1-3; citation_publication_date=2007; citation_pages=35-45; citation_doi=10.1016/j.scico.2007.01.015; citation_id=CR17; citation_journal_title=Requir. Eng.; citation_title=Deconstructing the semantics of big-step modelling languages; citation_author=S Esmaeilsabzali, NA Day, JM Atlee, J Niu; citation_volume=15; citation_issue=2; citation_publication_date=2010; citation_pages=235-265; citation_doi=10.1007/s00766-010-0102-z; citation_id=CR18; Estler, H., Furia, C.A., Nordio, M., Piccioni, M., Meyer, B.: Contracts in practice. In: International Symposium on Formal Methods (FM), Volume 8442 of Lecturer Notes in Computer Science, pp. 230-246. Springer (2014); Fabbri, S.C.P.F., Maldonado, J.C., Sugeta, T., Masiero, P.C.: Mutation testing applied to validate specifications based on statecharts. In: International Symposium on Software Reliability Engineering (ISSRE), pp. 210-219. IEEE Computer Society (1999); citation_journal_title=Eng. Dependable Softw. Syst.; citation_title=A tutorial on runtime verification; citation_author=Y Falcone, K Havelund, G Reger; citation_volume=34; citation_publication_date=2013; citation_pages=141-175; citation_id=CR21; Gnesi, S., Latella, D., Massink M.: Model checking UML statechart diagrams using JACK. In: International Symposium on High-Assurance Systems Engineering (HASE), pp. 46-55. IEEE Computer Society (1999); Gogolla, M., Hamann, L., Hilken, F., Sedlmeier, M.: Modeling behavior with interaction diagrams in a UML and OCL tool. In: Behavior Modeling--Foundations and Applications, BM-FA 2009-2014, Revised Selected Papers, Volume 6368 of Lecturer Notes in Computer Science, pp. 31-58. Springer (2015); citation_journal_title=Sci. Comput. Program.; citation_title=USE: a UML-based specification environment for validating UML and OCL; citation_author=M Gogolla, F Buttner, M Richters; citation_volume=69; citation_issue=1-3; citation_publication_date=2007; citation_pages=27-34; citation_doi=10.1016/j.scico.2007.01.013; citation_id=CR24; citation_title=Designing Software Product Lines with UML: From Use Cases to Pattern-Based Software Architectures; citation_publication_date=2004; citation_id=CR25; citation_author=H Gomaa; citation_publisher=Addison Wesley; Hamann, L., Hofrichter, O., Gogolla, M.: On integrating structure and behavior modeling with OCL. In: International Conference on Model Driven Engineering Languages and Systems, Volume 7590 of Lecturer Notes in Computer Science, pp. 235-251. Springer (2012); citation_journal_title=Commun. ACM; citation_title=On visual formalisms; citation_author=D Harel; citation_volume=31; citation_issue=5; citation_publication_date=1988; citation_pages=514-530; citation_doi=10.1145/42411.42414; citation_id=CR27; citation_journal_title=IEEE Comput.; citation_title=Executable object modeling with statecharts; citation_author=D Harel, E Gery; citation_volume=30; citation_issue=7; citation_publication_date=1997; citation_pages=31-42; citation_doi=10.1109/2.596624; citation_id=CR28; citation_title=The Rhapsody Semantics of Statecharts (or, on the Executable Core of the UML), Volume LNCS 3147; citation_publication_date=2004; citation_id=CR29; citation_author=D Harel; citation_author=H Kugler; citation_publisher=Springer; citation_journal_title=ACM Trans. Softw. Eng. Methodol.; citation_title=The STATEMATE semantics of statecharts; citation_author=D Harel, A Naamad; citation_volume=5; citation_issue=4; citation_publication_date=1996; citation_pages=293-333; citation_doi=10.1145/235321.235322; citation_id=CR30; citation_journal_title=J. Univers. Comput. Sci.; citation_title=Situational method engineering: state-of-the-art review; citation_author=B Henderson-Sellers, J Ralyte; citation_volume=16; citation_issue=3; citation_publication_date=2010; citation_pages=424-478; citation_id=CR31; Idelberger, F., Governatori, G., Riveret, R., Sartor, G.: Evaluation of logic-based smart contracts for blockchain systems. In: International Symposium on Rules and Rule Markup Languages for the Semantic Web, pp. 167-183. Springer (2016); citation_journal_title=Electron. Notes Theor. Comput. Sci.; citation_title=Behaviour-driven development of foundational UML components; citation_author=I Lazar, S Motogna, B Parv; citation_volume=264; citation_issue=1; citation_publication_date=2010; citation_pages=91-105; citation_doi=10.1016/j.entcs.2010.07.007; citation_id=CR33; Leavens, G.T., Cheon, Y.: Design by Contract with JML. Technical report, Iowa State University (2006); citation_journal_title=J. Logic Algebr. Program.; citation_title=A brief account of runtime verification; citation_author=M Leucker, C Schallhart; citation_volume=78; citation_issue=5; citation_publication_date=2009; citation_pages=293-303; citation_doi=10.1016/j.jlap.2008.08.004; citation_id=CR35; Magee, J.: Behavioral analysis of software architectures using LTSA. In: International Conference on Software Engineering, pp. 634-637. ACM (1999); Meyer, B.: Contract-driven development. In: International Conference on Fundamental Approaches to Software Engineering (FASE), Volume 4422 of Lecturer Notes in Computer Science, p. 11. Springer (2007); citation_journal_title=IEEE Comput.; citation_title=Applying ""design by contract""; citation_author=B Meyer; citation_volume=25; citation_issue=10; citation_publication_date=1992; citation_pages=40-51; citation_doi=10.1109/2.161279; citation_id=CR38; North, D.: Behavior modification: the evolution of behavior-driven development. Better Software (2006); Object Management Group. Object Constraint Language, Version 2.4. OMG Document Number: formal/2014-02-03. URL: 
                    http://www.omg.org/spec/OCL/2.4
                    
                   (2014); Object Management Group. OMG Unified Modeling Language (OMG UML), Version 2.5. OMG Document Number: formal/2015-03-01. URL:
                    http://www.omg.org/spec/UML/2.5
                    
                   (2015); OMG. Software and Systems Process Engineering Meta-Model Specification. Version 2.0. Technical Report OMG Document Number: Formal/2008-04-01. Object Management Group (2008); citation_journal_title=IEEE Trans. Soft. Eng.; citation_title=Automated fixing of programs with contracts; citation_author=Y Pei, CA Furia, M Nordio, Y Wei, B Meyer, A Zeller; citation_volume=40; citation_issue=5; citation_publication_date=2014; citation_pages=427-449; citation_doi=10.1109/TSE.2014.2312918; citation_id=CR43; citation_title=Practical UML Statecharts in C/C++: Event-Driven Programming for Embedded Systems; citation_publication_date=2008; citation_id=CR44; citation_author=M Samek; citation_publisher=CRC Press; Sen, K.: Concolic testing. In: International Conference on Automated Software Engineering, pp. 571-572. ACM (2007); citation_title=The agent modeling language (AMOLA); citation_inbook_title=Artificial Intelligence: Methodology, Systems, and Applications, Volume 5253 of Lecture Notes in Computer Science; citation_publication_date=2008; citation_pages=32-44; citation_id=CR46; citation_author=N Spanoudakis; citation_author=P Moraitis; citation_publisher=Springer; Syriani, E., Vangheluwe, H., Mannadiar, R., Hansen, C., Van Mierlo, S., Ergin, H.: AToMPM: a web-based modeling environment. In: Joint Proceedings of MODELS'13 Invited Talks, Demonstration Session, Poster Session, and ACM Student Research Competition, Volume 1115, CEUR Workshop Proceedings (2013); citation_title=A CASE tool for robot behavior development; citation_inbook_title=RoboCup 2012: Robot Soccer World Cup XVI. Lecture Notes in Computer Science; citation_publication_date=2013; citation_pages=225-236; citation_id=CR48; citation_author=A Topalidou-Kyniazopoulou; citation_author=NI Spanoudakis; citation_author=MG Lagoudakis; citation_publisher=Springer; Trakhtenbrot, M.: New mutations for evaluation of specification and implementation levels of adequacy in testing of statecharts models. In: Testing: Academic and Industrial Conference Practice and Research Techniques (MUTATION), pp. 151-160 (2007); Wynne, M., Hellesoy, A.: The Cucumber Book: Behaviour-Driven Development for Testers and Developers. Pragmatic Bookshelf. ISBN: 978-1-93435-680-7. 
                    https://pragprog.com/book/hwcuc/the-cucumber-book
                    
                   (2012)"			Included	Included	new_screen			2	Springer Link		A method for testing and validating executable statechart models	https://link.springer.com/article/10.1007/s10270-018-0676-3	Springer Link	nan; Pages; Year; Bibtex
206	Behave	Rails 3 in Action	Summary Rails 3 in Action is a collaboration between Rails community leaders, Ryan Bigg and Yehuda Katz, that covers Rails 3.1 making it the most up-to-date resource available. But it's much more than just a Rails 3 reference book. You'll learn to do Rails the right way, so you can build stable, scalable, and maintainable apps that will satisfy even the most demanding clients. About the BookRails 3 is a full stack, open source web framework powered by Ruby and this book is an introduction to it. Whether you're just starting or you have a few cycles under your belt, you'll appreciate the book's guru's-eye-view of idiomatic Rails programming.You'll master Rails 3.1 by developing a ticket tracking application that includes RESTful routing, authentication and authorization, state maintenance, file uploads, email, and more. You'll also explore powerful features like designing your own APIs and building a Rails engine. You will see Test Driven Development and Behavior Driven Development in action throughout the book, just like you would in a top Rails shop.It is helpful for readers to have a background in Ruby, but no prior Rails experience is needed. What's InsideCovers Rails 3.1 from the ground up Testing and BDD using RSpec and Cucumber Working with Rack=============================================== Table of ContentsRuby on Rails, the framework Testing saves your bacon Developing a real Rails application Oh CRUD! Nested resources Authentication and basic authorization Basic access control More authorization File uploading Tracking state Tagging Sending email Designing an API Deployment Alternative authentication Basic performance enhancements Engines Rack-based applications		Bigg, Ryan; Katz, Yehuda	Rails 3 in Action	https://doi.org/10.5555/2095825			"""@book{10.5555/2095825,
    author = ""Bigg, Ryan and Katz, Yehuda"",
    title = ""Rails 3 in Action"",
    year = ""2011"",
    isbn = ""1935182277"",
    publisher = ""Manning Publications Co."",
    address = ""USA"",
    abstract = ""Summary Rails 3 in Action is a collaboration between Rails community leaders, Ryan Bigg and Yehuda Katz, that covers Rails 3.1 making it the most up-to-date resource available. But it's much more than just a Rails 3 reference book. You'll learn to do Rails the right way, so you can build stable, scalable, and maintainable apps that will satisfy even the most demanding clients. About the BookRails 3 is a full stack, open source web framework powered by Ruby and this book is an introduction to it. Whether you're just starting or you have a few cycles under your belt, you'll appreciate the book's guru's-eye-view of idiomatic Rails programming.You'll master Rails 3.1 by developing a ticket tracking application that includes RESTful routing, authentication and authorization, state maintenance, file uploads, email, and more. You'll also explore powerful features like designing your own APIs and building a Rails engine. You will see Test Driven Development and Behavior Driven Development in action throughout the book, just like you would in a top Rails shop.It is helpful for readers to have a background in Ruby, but no prior Rails experience is needed. What's InsideCovers Rails 3.1 from the ground up Testing and BDD using RSpec and Cucumber Working with Rack=============================================== Table of ContentsRuby on Rails, the framework Testing saves your bacon Developing a real Rails application Oh CRUD! Nested resources Authentication and basic authorization Basic access control More authorization File uploading Tracking state Tagging Sending email Designing an API Deployment Alternative authentication Basic performance enhancements Engines Rack-based applications""
}
"""	Excluded	Excluded	new_screen			2	ACM		Rails 3 in Action	https://dl.acm.org/doi/abs/10.5555/2095825	Manning Publications Co	nan; Keywords; References; Pages
207	Behave	BeSoS: A Tool for Behavior-driven and Scenario-based Requirements Modeling for Systems of Systems	Systems of Systems (SoS), like connected vehicle systems, provide their functionality by the interaction of several constituent systems (CSs).[Problem] Due to the managerial, operational and evolutionary independence of the CSs in an SoS, requirements constantly change over time and linear, top-down requirements engineering methods cannot be applied without significant adaptations. New tools are needed that support the continuous and iterative specification and alignment of requirements across different levels of abstraction.[Principal Ideas] We propose to integrate the behavior-driven development (BDD) approach with an intuitive and executable scenario-based modeling of functional requirements. In this way, stakeholder expectations can be structured via features and documented in natural language as usage scenarios. Based on usage scenarios, the modeling of functional requirements can be driven by tests, allowing for the automated testing and analysis of requirements. This in turn supports the iterative specification of requirements and the alignment of stakeholder needs.[Contribution] In this paper we showcase the tool BeSoS that supports the iterative and behavior-driven specification of requirements in an SoS context. We propose a method and describe its tool components using an example. The tool is available here: https://vimeo. Com/512739942	System of Systems Engineering; Requirements Analysis; Scenario-based; Requirements Modeling; Requirements Specification	Carsten Wiecher; Joel Greenyer	CEUR Workshop Proceedings	https://ceur-ws.org/Vol-2857/pt1.pdf		7	"""nan"""	Included	Included	new_screen			2	Google Scholar		BeSoS: A Tool for Behavior-driven and Scenario-based Requirements Modeling for Systems of Systems	https://ceur-ws.org/Vol-2857/pt1.pdf	CEUR Workshop	
208	Behave	Behavior-Driven Development:An Expert Panel to evaluate benefits and challenges	"Teaching modern software techniques is a challenging task as these practices tend to be collaborative and require a lot of preparation and environment setup. Among these techniques is Behavior-Driven Development (BDD), a development method which proposes software to be develop focusing primarily on its expected behavior. In this context, this paper investigates the perception of active-learning experts regarding the potential benefits and challenges of teaching BDD in active learning environments to software engineering students. To achieve this goal, we have conducted an expert panel with 28 active-learning experts from four countries. Our preliminary results indicate that experts perceive both benefits, like improvement in specification, and challenges to embrace the BDD ""culture"" when teaching BDD to software engineering students. Based in these findings, we found indicatives that BDD should benefit software engineering students in active learning environments, however it may require more setup, teacher preparation and engagement during the learning process."	Agile Development; Behavior-Driven Development; Challenge Based Learning; Software Engineering	Nicolas Nascimento; Alan R. Santos; Afonso Sales; Rafael Chanin	SBES '20: Proceedings of the XXXIV Brazilian Symposium on Software Engineering	https://doi.org/10.1145/3422392.3422460		41-46		Included	Included	new_screen			2	ACM		Behavior-Driven Development: An Expert Panel to Evaluate Benefits and Challenges	https://dl.acm.org/doi/10.1145/3422392.3422460	Association for Computing Machinery	nan; References; Year; Bibtex
209	Behave	Testing meets static and runtime verification	Test driven development (TDD) is a technique where test cases are used to guide the development of a system. This technique introduces several advantages at the time of developing a system, e.g. writing clean code, good coverage for the features of the system, and evolutionary development. In this paper we show how the capabilities of a testing focused development methodology based on TDD and model-based testing, can be enhanced by integrating static and runtime verification into its workflow. Considering that the desired system properties capture data- as well as control-oriented aspects, we integrate TDD with (static) deductive verification as an aid in the development of the data-oriented aspects, and we integrate model-based testing with runtime verification as an aid in the development of the control-oriented aspects. As a result of this integration, the proposed development methodology features the benefits of TDD and model-based testing, enhanced with, for instance, early detection of bugs which may be missed by TDD, regarding data aspects, and the validation of the overall system with respect to the model, regarding the control aspects.	Java; runtime verification; static verification; test driven development	Jesus Mauricio Chimento; Wolfgang Ahrendt; Gerardo Schneider	FormaliSE '18: Proceedings of the 6th Conference on Formal Methods in Software Engineering	https://doi.org/10.1145/3193992.3194000		30-39		Excluded	Excluded	new_screen			2	ACM		Testing Meets Static and Runtime Verification	https://dl.acm.org/doi/10.1145/3193992.3194000	Association for Computing Machinery	nan; References; Year; Bibtex
210	Behave	Jasmine JavaScript Testing Update	What you will learn      Understand and use the power of Jasmine to create better and more maintainable code bases     Drive your application development entirely by tests     Write modular and reusable code through the power of ECMA Script 6 (ES6) modules     Use asynchronous tests, stubs, and spies optimally     Test drive a React.js singlepage application     Optimize your code to unleash the power of tooling and automation		Zacharias Ragonha Paulo Vitor		https://sciendo.com/book/9781785283208		134	"""nan"""	Excluded	Excluded	new_screen			2	Google Scholar		Jasmine JavaScript Testing Update	https://sciendo.com/book/9781785283208	Packt Publishing Limited	
211	Behave	TestBox: Behavior Driven Development	TestBox is a testing framework for ColdFusion (CFML) that is based on BDD (Behavior Driven Development) for providing a clean obvious syntax for writing tests. It also includes MockBox for mocking and stubbing.		Luis Majano		https://books.google.ca/books/about/TestBox.html?id=tniRrgEACAAJ&source=kp_book_description&redir_esc=y		142	"""nan"""	Excluded	Excluded	new_screen			2	Google		TestBox: Behavior Driven Development	https://books.google.ca/books/about/TestBox.html?id=tniRrgEACAAJ&source=kp_book_description&redir_esc=y	CreateSpace Independent Publishing Platform	
212	Behave	Assessing Agile Testing Practices for Enterprise Systems:A Survey Approach	"Testing enterprise systems is a challenging task. In this context, besides considering user requirements and business rules, there are several concerns that must also be considered when designing a test suite, including user interaction, integration with legacy systems, and access to relational or non-relational databases. In addition, test engineers often have to decide whether to test in the different levels (e.g., unit, integration, and system testing) or not, whether to use mock objects or not, and so on. Sadly, these decisions often conflict to each other. In this paper, we report an 18-month experience on using different approaches and tools to test two enterprise systems (SISBOL and SISDOT) from the Brazilian Army. SISBOL is an enterprise system based on the REST architectural style, using JEE (Java Enterprise Edition) in the business and integration tiers and AngularJS in the presentation tier. On the other hand, SISDOT is a ""pure"" Java enterprise system, using Java Server Faces on the presentation tier. We found that using executable specifications (as recommended in approaches based on Behavior Driven Development) is not only valid in test first scenarios as well as giving confidence on the system requirements validation, but they also help to identify new execution paths when the source code had been already implemented---suggesting that it is also promising to introduce a BDD approach in later stages of the development than testing pure JEE systems at the integration level."	Behavior Driven Development; Software Testing; Specification by Example; Test Driven Development	Rafael Fazzolino; Henrique Medrado de Faria; Luis Henrique Vieira Amaral; Edna Dias Canedo; Genaina Nunes Rodrigues; Rodrigo Bonifacio	SAST '18: Proceedings of the III Brazilian Symposium on Systematic and Automated Software Testing	https://doi.org/10.1145/3266003.3266010		29-38		Included	Included	new_screen			2	ACM		Assessing Agile Testing Practices for Enterprise Systems: A Survey Approach	https://dl.acm.org/doi/10.1145/3266003.3266010	Association for Computing Machinery	nan; References; Year; Bibtex
213	Behave	Distributed Agile: Component-Based User Acceptance Testing	Testing is conducted at multiple levels during the development of software. User Acceptance Testing conforms that the software meets user's criteria. In this paper, User Acceptance Testing is automatically conducted based on acceptance criteria. The acceptance criteria are written in the form of Given-WhenThen Template. These acceptance criteria are broken down into steps and numbered. The dependencies among the steps are determined as Given->When->Then. Henceforth, the steps are arranged in a dependency graph. This graph further leads to the creation of a decision table in which the outcome of one step leads to the outcomes of its dependent steps. The decision table forms the basis of generation of a binary weighted dependency tree. This tree becomes the means to form test coverage (number of combinations to test) which forms the basis of generation of acceptance test cases.	Binary trees; Data handling; Decision tables; Forestry; Information analysis; Software testing; Acceptance criteria; Broken down; Component based; Dependency graphs; Dependency trees; Multiple levels; Test coverage; User acceptance testing; Acceptance tests; Binary trees;  Data handling;  Decision tables;  Forestry;  Information analysis;  Software testing;  Acceptance criteria;  Broken down;  Component based;  Dependency graphs;  Dependency trees;  Multiple levels;  Test coverage;  User acceptance testing;  Acceptance tests	Pandit, Pallavi; Tahiliani, Swati; Sharma, Meena	2016 Symposium on Colossal Data Analysis and Networking, CDAN 2016	https://doi.org/10.1109/CDAN.2016.7570913			"""@inproceedings{WOS:000390093900054,
    Author = ""Pandit, Pallavi and Tahiliani, Swati and Sharma, Meena"",
    Book-Group-Author = ""IEEE"",
    Title = ""Distributed Agile: Component-Based User Acceptance Testing"",
    Booktitle = ""2016 SYMPOSIUM ON COLOSSAL DATA ANALYSIS AND NETWORKING (CDAN)"",
    Year = ""2016"",
    Note = ""Symposium on Colossal Data Analysis and Networking (CDAN), INDIA, MAR 18-19, 2016"",
    Organization = ""IEEE; ACM; Comp Soc India; Medi Caps Univ; Dept Comp Sci Informat Technol \\& Comp Applicat"",
    Abstract = ""Testing is conducted at multiple levels during the development of software. User Acceptance Testing conforms that the software meets user's criteria. In this paper, User Acceptance Testing is automatically conducted based on acceptance criteria. The acceptance criteria are written in the form of Given-WhenThen Template. These acceptance criteria are broken down into steps and numbered. The dependencies among the steps are determined as Given->When->Then. Henceforth, the steps are arranged in a dependency graph. This graph further leads to the creation of a decision table in which the outcome of one step leads to the outcomes of its dependent steps. The decision table forms the basis of generation of a binary weighted dependency tree. This tree becomes the means to form test coverage (number of combinations to test) which forms the basis of generation of acceptance test cases."",
    Publisher = ""IEEE"",
    Address = ""345 E 47TH ST, NEW YORK, NY 10017 USA"",
    Type = ""Proceedings Paper"",
    Language = ""English"",
    Affiliation = ""Pandit, P (Corresponding Author), Medi Caps Inst Technol \\& Management, Indore, Madhya Pradesh, India. Pandit, Pallavi, Medi Caps Inst Technol \\& Management, Indore, Madhya Pradesh, India. Tahiliani, Swati, Medi Caps Inst Sci \\& Technol, Indore, Madhya Pradesh, India. Sharma, Meena, Inst Engn \\& Technol, Indore, Madhya Pradesh, India."",
    ISBN = ""978-1-5090-0669-4"",
    Research-Areas = ""Computer Science"",
    Web-of-Science-Categories = ""Computer Science, Hardware \\& Architecture; Computer Science, Information Systems; Computer Science, Software Engineering"",
    Author-Email = ""pllvpndt@gmail.com swati\\_tahiliani@yahoo.co.in meena@myself.com"",
    Affiliations = ""Devi Ahilya University"",
    ResearcherID-Numbers = ""Pandit, Pallavi/Y-9243-2019"",
    Number-of-Cited-References = ""19"",
    Times-Cited = ""0"",
    Usage-Count-Last-180-days = ""0"",
    Usage-Count-Since-2013 = ""0"",
    Doc-Delivery-Number = ""BG6DS"",
    Web-of-Science-Index = ""Conference Proceedings Citation Index - Science (CPCI-S)"",
    Unique-ID = ""WOS:000390093900054"",
    DA = ""2024-10-22""
}
"""	Included	Included	new_screen			2	Web of Science		Distributed agile: Component-based user acceptance testing	https://www.webofscience.com/wos/woscc/full-record/WOS:000390093900054	IEEE	nan; References; Pages
214	Behave	Modeling Test Cases in BPMN for Behavior-Driven Development	Testing large-scale process integration solutions is complex and cumbersome. To tackle this problem, researchers employed behavior-driven development. They used the Business Process Model and Notation language to model domain-specific test cases. These test cases can be understood by both developers and business stakeholders and can be executed automatically.	Simple object access protocol; Business process management; Modeling; Testing; Software engineering; Behaviorial sciences; Behavior Driven Development; Process Model; Safety Net; Business Processes; Domain-specific Languages; Land Registration; Test Data; Web Server; Common Language; Web Application; Functional Requirements; Testing Tools; Object-oriented; Test Suite; Test Scenarios; Manual Testing; Testing Framework; Executive Tests; Service Contracts; Service Interactions; Unit Tests; Non-functional Requirements; business processes; Business Process Model and Notation; BPMN; behavior-driven development; BDD; test-driven development; TDD; software testing; software development; software engineering	Daniel Lubke; Tammo van Lessen	IEEE Software	https://doi.org/10.1109/MS.2016.117	"1.W. Mockli, W. Werner and D. Lubke, ""Terravis--Large Scale Business Process Integration between Public and Private Partners"", Proc. 2014 Workshop Business Process Management in the Public Sector, 2014,  [online]  Available: http://subs.emis.de/LNI/Proceedings/Proceedings232/1075.pdf. Google Scholar; 2.D. North, ""Introducing BDD"", 2006,  [online]  Available: http://dannorth.net/introducing-bdd. Google Scholar; 3.K. Beck, Test-Driven Development: By Example, Addison Wesley, 2003. Google Scholar; 4.E. Evans, Domain-Driven Design: Tackling Complexity in the Heart of Software, Addison-Wesley, 2003. Google Scholar; 5.B. Silver, BPMN Method and Style, Cody-Cassidy, 2011. Google Scholar; 6.D. Lubke, ""Using Metric Time Lines for Identifying Architecture Shortcomings in Process Execution Architectures"", presentation at 2015 Workshop Software Architecture Metrics, 2015,  [online]  Available: http://resources.sei.cmu.edu/library/asset-view.cfm?assetid=439407. View Article  Google Scholar; 7.D. Lubke, ""Unit Testing BPEL Compositions"" in Test and Analysis of Web Services, Springer, pp. 149-171, 2007. CrossRef  Google Scholar; 8.M. Fowler, ""Business Readable DSL"", 2008,  [online]  Available: http://martinfowler.com/bliki/BusinessReadableDSL.html. Google Scholar; 9.J. Schulenklopper and E. Rommes, ""Why They Just Don't Get It: Communicating about Architecture with Business Stakeholders"", IEEE Software, vol. 33, no. 3, pp. 13-19. CrossRef  Google Scholar; 10.D. Lubke and T. van Lessen, ""Behavior-Driven Business Process Development with BPMN"", presentation at W-JAX 14, 2014,  [online]  Available: https://speakerdeck.com/vanto/behavior-driven-business-process-development-with-bpmn. Google Scholar"	15- 21		Included	Included	new_screen			2	IEEE		Modeling Test Cases in BPMN for Behavior-Driven Development	https://ieeexplore.ieee.org/document/7548916	IEEE	nan; Year; Bibtex
215	Behave	A study of value in agile software development organizations	The Agile manifesto focuses on the delivery of valuable software. In Lean, the principles emphasise value, where every activity that does not add value is seen as waste. Despite the strong focus on value, and that the primary critical success factor for software intensive product development lies in the value domain, no empirical study has investigated specifically what value is. This paper presents an empirical study that investigates how value is interpreted and prioritised, and how value is assured and measured. Data was collected through semi-structured interviews with 23 participants from 14 agile software development organisations. The contribution of this study is fourfold. First, it examines how value is perceived amongst agile software development organisations. Second, it compares the perceptions and priorities of the perceived values by domains and roles. Third, it includes an examination of what practices are used to achieve value in industry, and what hinders the achievement of value. Fourth, it characterises what measurements are used to assure, and evaluate value-creation activities.	Value;  Agile software development;  Empirical; Value, Agile software development, Empirical	Alahyari, Hiva; {Berntsson Svensson}, Richard; Gorschek, Tony	Journal of Systems and Software	https://www.sciencedirect.com/science/article/pii/S0164121216302539		271-288	"""@article{ALAHYARI2017271,
    author = ""Alahyari, Hiva and {Berntsson Svensson}, Richard and Gorschek, Tony"",
    title = ""A study of value in agile software development organizations"",
    journal = ""Journal of Systems and Software"",
    volume = ""125"",
    pages = ""271-288"",
    year = ""2017"",
    issn = ""0164-1212"",
    doi = ""https://doi.org/10.1016/j.jss.2016.12.007"",
    url = ""https://www.sciencedirect.com/science/article/pii/S0164121216302539"",
    keywords = ""Value, Agile software development, Empirical"",
    abstract = ""The Agile manifesto focuses on the delivery of valuable software. In Lean, the principles emphasise value, where every activity that does not add value is seen as waste. Despite the strong focus on value, and that the primary critical success factor for software intensive product development lies in the value domain, no empirical study has investigated specifically what value is. This paper presents an empirical study that investigates how value is interpreted and prioritised, and how value is assured and measured. Data was collected through semi-structured interviews with 23 participants from 14 agile software development organisations. The contribution of this study is fourfold. First, it examines how value is perceived amongst agile software development organisations. Second, it compares the perceptions and priorities of the perceived values by domains and roles. Third, it includes an examination of what practices are used to achieve value in industry, and what hinders the achievement of value. Fourth, it characterises what measurements are used to assure, and evaluate value-creation activities.""
}
"""	Excluded	Excluded	new_screen			2	Science Direct		A study of value in agile software development organizations	https://www.sciencedirect.com/science/article/pii/S0164121216302539	Science Direct	nan; References
216	Behave	User and System Stories: An Agile Approach for Managing Requirements in AOSE	The agile software development life cycle is widely used in industry today due to its highly flexible and iterative processes that facilitate rapid prototyping. There has been recent work in bringing concepts and processes from agile methodologies to agent-oriented software engineering (AOSE). We contribute to this effort by presenting in this paper a novel approach to capturing requirements of agent systems in AOSE using and extending agile concepts. In this paper, we propose to adopt and extend the well-known concept of User Stories to facilitate the development of agent systems. We introduce a novel concept, System Story, that defines requirements from the perspective of the system. These System Stories are refinements of User Stories and provide more intuitive mappings to agent concepts in the design and implementation. We show how our approach allows better traceability of requirements between stories and the different software development artifacts. We validate our proposal with a feature-based comparison to recent related work, and a preliminary user evaluation based on a drone simulation of a simple search and rescue case study.	AOSE; agile methodologies; engineering MAS	Sebastian Rodriguez; John Thangarajah; Michael Winikoff	AAMAS '21: Proceedings of the 20th International Conference on Autonomous Agents and MultiAgent Systems	https://doi.org/10.5555/3463952.3464076		1064-1072		Excluded	Excluded	new_screen			2	ACM		User and System Stories: An Agile Approach for Managing Requirements in AOSE	https://dl.acm.org/doi/10.5555/3463952.3464076	International Foundation for Autonomous Agents and Multiagent Systems	nan; References; Year; Bibtex
217	Behave	The Art of Rails (Programmer to Programmer)	The Art of Rails(r) Any programmer knows that an API is only half the story, and with Ruby on Rails(r) this is especially true. Good Rails development, like good web development, is much more about the design choices you make than the framework you have at your disposal. Written by an experienced web application developer, this book picks up where the API leaves off and explains how to take good Rails code and turn it into beautiful Rails code: simple, effective, reusable, evolvable code. In a blend of design and programming, this book identifies and describes the very latest in design patterns, programming abstractions, and development methodologies that have emerged for the modern web. Ruby on Rails offers a completely new way of thinking about and using these emerging techniques, and learning to think like a Rails developer will enable you to rapidly design and write high-quality code with elegance and maintainability. With each design technique, you will discover how Rails incorporates it into its domain-specific language, and you will learn how to weave it seamlessly into your own Rails applications. Then you will learn how to take the next step and transform yourself from user into creator, making your own additions to Rails and crafting a development environment tailored to your specific needs. What you will learn from this book * Techniques for organizing your code between and within Model, View, and Controller to eliminate code repetition and maximize your effectiveness * How to think like a REST-based developer and use Rails 2.0 to translate these thoughts into your code * Advanced Ruby and meta-programming: how to use features such as block-based development, monkey patching, and dynamic APIs to build your own additions to the Rails framework * Design patterns for AJAX, web APIs, HTML decomposition, schema development, meta-programming, and more * Behavior-driven development: A new style of testing and development centered arou nd stories and behaviors instead of method calls and assertions * Ways to make your development both productive and fun in the software you write Who this book is for This book is for developers familiar with Ruby on Rails who are looking to advance their skills by learning the design and coding techniques that enable a mastery of web application development with Rails. Wrox guides are crafted to make learning programming languages and technologies easier than you think. Written by programmers for programmers, they provide a structured, tutorial format that will guide you through all the techniques involved.		Benson, Edward		https://dl.acm.org/doi/10.5555/1386543			"""@book{10.5555/1386543,
    author = ""Benson, Edward"",
    title = ""The Art of Rails (Programmer to Programmer)"",
    year = ""2008"",
    isbn = ""0470189487"",
    publisher = ""Wrox Press Ltd."",
    address = ""GBR"",
    abstract = ""The Art of Rails(r) Any programmer knows that an API is only half the story, and with Ruby on Rails(r) this is especially true. Good Rails development, like good web development, is much more about the design choices you make than the framework you have at your disposal. Written by an experienced web application developer, this book picks up where the API leaves off and explains how to take good Rails code and turn it into beautiful Rails code: simple, effective, reusable, evolvable code. In a blend of design and programming, this book identifies and describes the very latest in design patterns, programming abstractions, and development methodologies that have emerged for the modern web. Ruby on Rails offers a completely new way of thinking about and using these emerging techniques, and learning to think like a Rails developer will enable you to rapidly design and write high-quality code with elegance and maintainability. With each design technique, you will discover how Rails incorporates it into its domain-specific language, and you will learn how to weave it seamlessly into your own Rails applications. Then you will learn how to take the next step and transform yourself from user into creator, making your own additions to Rails and crafting a development environment tailored to your specific needs. What you will learn from this book * Techniques for organizing your code between and within Model, View, and Controller to eliminate code repetition and maximize your effectiveness * How to think like a REST-based developer and use Rails 2.0 to translate these thoughts into your code * Advanced Ruby and meta-programming: how to use features such as block-based development, monkey patching, and dynamic APIs to build your own additions to the Rails framework * Design patterns for AJAX, web APIs, HTML decomposition, schema development, meta-programming, and more * Behavior-driven development: A new style of testing and development centered arou nd stories and behaviors instead of method calls and assertions * Ways to make your development both productive and fun in the software you write Who this book is for This book is for developers familiar with Ruby on Rails who are looking to advance their skills by learning the design and coding techniques that enable a mastery of web application development with Rails. Wrox guides are crafted to make learning programming languages and technologies easier than you think. Written by programmers for programmers, they provide a structured, tutorial format that will guide you through all the techniques involved.""
}
"""	Excluded	Excluded	new_screen			2	ACM		The Art of Rails (Programmer to Programmer)	https://dl.acm.org/doi/10.5555/1386543	Wrox Press Ltd	nan; Venue; Keywords; References; Pages
218	Behave	The blockchain: State-of-the-art and research challenges	The blockchain revolutionizes the creation of both scalable information technology systems and diversified applications by integrating the increasingly popular artificial intelligence, cloud computing, and big data. Various industries have recently begun to implement the exploration of blockchain. It will not take long for the blockchain to spread all over the world. In order to identify and further the development of the blockchain technology, this paper reviews the extant studies on the blockchain and its key components, blockchain-based IoT, blockchain-based security, blockchain-based data management, and the main applications based on the blockchain, and it delineates potential trends and challenges. This study provides a comprehensive overview of state-of-the-art blockchain and describes a forward-looking direction.	Blockchain; Decentralization; Smart contract; Security; Privacy; Blockchain;  Decentralization;  Smart contract;  Security;  Privacy	Yang, Lu	JOURNAL OF INDUSTRIAL INFORMATION INTEGRATION	https://doi.org/10.1016/j.jii.2019.04.002		80-90	"""@article{WOS:000487306100009,
    Author = ""Yang, Lu"",
    Title = ""The blockchain: State-of-the-art and research challenges"",
    Journal = ""JOURNAL OF INDUSTRIAL INFORMATION INTEGRATION"",
    Year = ""2019"",
    Volume = ""15"",
    Pages = ""80-90"",
    Month = ""SEP"",
    Abstract = ""The blockchain revolutionizes the creation of both scalable information technology systems and diversified applications by integrating the increasingly popular artificial intelligence, cloud computing, and big data. Various industries have recently begun to implement the exploration of blockchain. It will not take long for the blockchain to spread all over the world. In order to identify and further the development of the blockchain technology, this paper reviews the extant studies on the blockchain and its key components, blockchain-based IoT, blockchain-based security, blockchain-based data management, and the main applications based on the blockchain, and it delineates potential trends and challenges. This study provides a comprehensive overview of state-of-the-art blockchain and describes a forward-looking direction."",
    Publisher = ""ELSEVIER"",
    Address = ""RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS"",
    Type = ""Review"",
    Language = ""English"",
    Affiliation = ""Yang, L (Corresponding Author), Univ Kentucky, Lexington, KY 40506 USA. Yang, Lu, Univ Kentucky, Lexington, KY 40506 USA. Yang, Lu, Univ Manchester, Manchester M13 9PL, Lancs, England. Yang, Lu, Coll Charleston, Charleston, SC 29401 USA."",
    DOI = ""10.1016/j.jii.2019.04.002"",
    ISSN = ""2467-964X"",
    EISSN = ""2452-414X"",
    Keywords = ""Blockchain; Decentralization; Smart contract; Security; Privacy"",
    Keywords-Plus = ""BIG DATA; INDUSTRY 4.0; BITCOIN; MANAGEMENT; CONTRACTS; SECURITY; INTERNET; ISSUES; VIEW"",
    Research-Areas = ""Computer Science; Engineering"",
    Web-of-Science-Categories = ""Computer Science, Interdisciplinary Applications; Engineering, Industrial"",
    Author-Email = ""luj@cofc.edu"",
    Affiliations = ""University of Kentucky; University of Manchester; College of Charleston"",
    ResearcherID-Numbers = ""LU, YANG/W-7778-2019"",
    ORCID-Numbers = ""lu, yang/0000-0002-3027-3064"",
    Number-of-Cited-References = ""126"",
    Times-Cited = ""293"",
    Usage-Count-Last-180-days = ""116"",
    Usage-Count-Since-2013 = ""1318"",
    Journal-ISO = ""J. Ind. Inf. Integr."",
    Doc-Delivery-Number = ""IZ7VE"",
    Web-of-Science-Index = ""Science Citation Index Expanded (SCI-EXPANDED)"",
    Unique-ID = ""WOS:000487306100009"",
    ESI-Highly-Cited-Paper = ""Y"",
    ESI-Hot-Paper = ""N"",
    DA = ""2024-10-22""
}
"""	Excluded	Excluded	new_screen			2	Web of Science		The blockchain: State-of-the-art and research challenges	https://www.webofscience.com/wos/woscc/full-record/WOS:000487306100009	ELSEVIER	nan; References
219	Behave	A user-centered behavioral software development model	The concept of usability, which affects the quality and cost of the software projects, has become essential in recent years. There is a need to integrate usability testing activities and techniques into the development processes; however, integration is difficult. Therefore, this study proposes user-centered behavioral (UCB) software development model, which aims to bridge the gap between human-computer interaction (HCI) and software engineering (SE) disciplines. A triangulation methodology of mixed methods is used to understand the current situation in software development companies in terms of usability and user-centered software development by survey and interviews. Their results are then used to inform the development of the proposed model. The UCB software development model proposes a process in which several tools and techniques from SE and HCI are integrated to facilitate the production of highly usable software. In essence, the model proposes an iterative process that combines behavior-driven development (BDD)-an agile approach that enables a better understanding and analysis of the requirements-with the style guides, usability tests, heuristic evaluation, and Wizard of Oz techniques of HCI. The model was evaluated in a pilot project and then is improved based on feedback gathered. Participants' feedback supported the effectiveness of the proposed model.	agile methodology; behavior-driven development (BDD); human-computer interaction (HCI); software engineering; user-centered design; user-centered software development model	Guncan, Damla; Onay Durdu, Pinar	JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS	https://doi.org/10.1002/smr.2274				Excluded	Excluded	new_screen			2	Web of Science		A User‐Centered Behavioral Software Development Model	https://doi.org/10.1002/smr.2274	WILEY	nan; References; Pages; Year; Bibtex; Link
220	Behave	Behavior Driven Development for circuit design and verification	The design of hardware systems is a challenging and erroneous task where about 70% of the effort in designing these systems is spent on verification. In general, testing and verification are usually tasks that are being applied as a post-process to the implementation. In this paper, we propose a new design flow based on Behavior Driven Development (BDD), an agile technique for the development of software in which acceptance tests written in natural language play a central role and are the starting point in the design flow. We advance the flow such that the specifics that arise when modeling hardware are taken into account. Furthermore, we present a technique that allows for the automatic generalization of test cases to properties that are suitable for formal verification. This allows the designer to apply formal verification techniques based on test cases without specifying properties. We implemented our approach and evaluated the flow for an illustrative example that successfully demonstrates the advantages of the proposed flow.	Data structures; Boolean functions; Hardware design languages; Timing; Calculators; Semantics; Circuit synthesis; Circuit Design; Natural Language; Illustrative Example; Acceptable Test; Design Flow; Formal Verification; Semantic; Syntactic; Design Process; Input Signal; Output Signal; Time Information; Apparent Discrepancy; Implementation Phase; Test Pattern; Test Bench; Regular Expressions; Automatic Generation; Hardware Components; Error Message; Temporal Operators; Implementation Error	Melanie Diepenbeck; Mathias Soeken; Daniel Grosse; Rolf Drechsler	2012 IEEE International High Level Design Validation and Test Workshop (HLDVT)	https://doi.org/10.1109/HLDVT.2012.6418237	"1.K. Beck, Test Driven Development. By Example. Amsterdam: Addison-Wesley Longman, Nov. 2003. Google Scholar; 2.K. Beck, M. Beedle, A. van Bennekum, A. Cockburn, W. Cunningham, M. Fowler, J. Grenning, J. Highsmith, A. Hunt, R. Jeffries, J. Kern, B. Marick, R. C. Martin, S. Mellor, K. Schwaber, J. Sutherland, and D. Thomas, ""Manifesto for agile software development,"" 2001. [Online]. Available: http://www.agilemanifesto.org/ Google Scholar; 3.N. Nagappan, E. M. Maximilien, T. Bhat, and L. Williams, ""Realizing quality improvement through test driven development: results and experiences of four industrial teams,"" Empirical Softw. Engg., vol. 13, no. 3, pp. 289-302, Jun. 2008. CrossRef  Google Scholar; 4.E. M. Maximilien, ""Assessing test-driven development at IBM,"" in Intl Conf. on Software Engineering, 2003, pp. 564-569. View Article  Google Scholar; 5.D. North, ""Behavior Modification: The evolution of behavior-driven development,"" Better Software, vol. 8, no. 3, Mar. 2006. Google Scholar; 6.R. C. Martin, ""The truth about BDD,"" 2008. [Online]. Available: http://blog.objectmentor.com/articles/2008/11/27/the-truth-about-bdd Google Scholar; 7.D. Flanagan and Y. Matsumoto, The Ruby Programming Language. OReilly Media, Jan. 2008. Google Scholar; 8.M. Wynne and A. Hellesoy, The Cucumber Book: Behaviour-Driven Development for Testers and Developers. The Pragmatic Bookshelf, Jan. 2012. Google Scholar; 9.Accellera Property Specification Language Reference Manual, version 1.1, http://www.pslsugar.org, 2005. Google Scholar; 10.C. Eisner and D. Fisman, A Practical Introduction to PSL (Series on Integrated Circuits and Systems). Secaucus, NJ, USA: Springer, 2006. Google Scholar; 11.S. Williams. (2012) Icarus Verilog. [Online]. Available: http://iverilog.icarus.com/ Google Scholar; 12.M. Smith, A. Kwan, A. Martin, and J. Miller, ""E-TDD - Embedded Test Driven Development: A Tool for Hardware-Software Co-design Projects,"" in Extreme Programming and Agile Processes in Software Engineering, Jun. 2005, pp. 1229-1231. CrossRef  Google Scholar; 13.N. Johnson and B. Morrs. (2012) AgileSoC. [Online]. Available: http://www.agilesoc.com/ Google Scholar; 14.B. Morris and R. Saxe, ""svunit: Bringing Test Driven Design Into Functional Verification,"" in SNUG, 2009. Google Scholar; 15.H. Baumeister, ""Combining formal specifications with test driven development,""in XP/Agile Universe, 2004, pp. 1-12. CrossRef  Google Scholar; 16.M. Jahanpour and O. Mohamed, ""Automatic generation of model checking properties and constraints from production based specification,"" in Midwest Symposium on Circuits and Systems, Jul. 2004, pp. 435-8. View Article  Google Scholar; 17.M. P. E. Heimdahl, S. Rayadurgam, W. Visser, G. Devaraj, and J. Gao, ""Auto-generating Test Sequences Using Model Checkers: A Case Study,"" in Formal Approaches to Software Testing, Oct. 2003, pp. 42-59. Google Scholar; 18.Y. Zheng, J. Zhou, and P. Krause, ""A Model Checking based Test Case Generation Framework for Web Services,"" in Intl Conf. on Information Technology, Apr. 2007, pp. 715-722. View Article  Google Scholar; 19.M. Soeken, R. Wille, and R. Drechsler, ""Assisted behavior driven development using natural language processing,"" in TOOLS (50), 2012, pp. 269-287. CrossRef  Google Scholar; 20.R. Drechsler, M. Diepenbeck, D. Grosse, U. Kuhne, H. M. Le, J. Seiter, M. Soeken, and R. Wille, ""Completeness-driven development,"" in International Conference on Graph Transformation, 2012. CrossRef  Google Scholar"			Included	Included	new_screen			2	IEEE		Behavior Driven Development for circuit design and verification	https://ieeexplore.ieee.org/document/6418237	IEEE	nan; Pages; Year; Bibtex
221	Behave	Behavior Driven Development for Circuit Design and Verification	The design of hardware systems is a challenging and erroneous task where about 70\% of the effort in designing these systems is spent on verification. In general, testing and verification are usually tasks that are being applied as a post-process to the implementation. In this paper, we propose a new design flow based on Behavior Driven Development (BDD), an agile technique for the development of software in which acceptance tests written in natural language play a central role and are the starting point in the design flow. We advance the flow such that the specifics that arise when modeling hardware are taken into account. Furthermore, we present a technique that allows for the automatic generalization of test cases to properties that are suitable for formal verification. This allows the designer to apply formal verification techniques based on test cases without specifying properties. We implemented our approach and evaluated the flow for an illustrative example that successfully demonstrates the advantages of the proposed flow.	Design; Hardware; Software testing; Circuit designs; Design flows; Design of hardwares; Formal verifications; Illustrative examples; Natural languages; New design; Post process; Test case; Acceptance tests; Design;  Hardware;  Software testing;  Circuit designs;  Design flows;  Design of hardwares;  Formal verifications;  Illustrative examples;  Natural languages;  New design;  Post process;  Test case;  Acceptance tests	Diepenbeck, Melanie; Soeken, Mathias; Grosse, Daniel; Drechsler, Rolf	Proceedings - IEEE International High-Level Design Validation and Test Workshop, HLDVT	https://doi.org/10.1109/HLDVT.2012.6418237	Beck, K.(2003)Test Driven Development.Cited 1665 times.By Example. Amsterdam: Addison-Wesley Longman, Nov; Beck, K., Beedle, M., Van Bennekum, A., Cockburn, A., Cunningham, W., Fowler, M., Grenning, J., (...), Thomas, D.(2001)Manifesto for Agile Software Development.Cited 2801 times.[Online]. Availablehttp://www.agilemanifesto.org/; Nagappan, N., Maximilien, E.M., Bhat, T., Williams, L.; Maximilien, E.M., Williams, L.; North, D.Behavior Modification: The evolution of behavior-driven development(2006)Better Software, 8 (3).Cited 41 times.Mar.; Martin, R.C.(2008)The Truth about BDD.Cited 5 times.[Online]. Availablehttp://blog.objectmentor.com/articles/2008/11/27/the-truth-about-bdd; Flanagan, D., Matsumoto, Y.(2008)The Ruby Programming Language.Cited 180 times.O'Reilly Media, Jan; Wynne, M., Hellesoy, A.(2012)The Cucumber Book: Behaviour-Driven Development for Testers and Developers.Cited 108 times.The Pragmatic Bookshelf, Jan; (2005)Accellera Property Specification Language Reference Manual.Cited 85 times.version 1.1http://www.pslsugar.org; Eisner, C., Fisman, D.(2006)A Practical Introduction to PSL (Series on Integrated Circuits and Systems).Cited 182 times.Secaucus, NJ, USA: Springer; Williams, S.(2012)Icarus Verilog. [Online]Availablehttp://iverilog.icarus.com/; Smith, M., Kwan, A., Martin, A., Miller, J.E-TDD - Embedded Test Driven Development: A Tool for Hardware-Software Co-design Projects(2005)Extreme Programming and Agile Processes in Software Engineering, pp. 1229-1231.Jun.; Johnson, N., Morrs, B.(2012)AgileSoC. [Online]Availablehttp://www.agilesoc.com/; Morris, B., Saxe, R.Svunit: Bringing Test Driven Design into Functional Verification(2009)SNUG.Cited 2 times.; Baumeister, H.; Jahanpour, M.S., Mohamed, O.A.; Heimdahl, M.P.E., Rayadurgam, S., Visser, W., Devaraj, G., Gao, J.; Zheng, Y., Zhou, J., Krause, P.; Soeken, M., Wille, R., Drechsler, R.; Drechsler, R., Diepenbeck, M., Grosse, D., Kuhne, U., Le, H.M., Seiter, J., Soeken, M., (...), Wille, R.Completeness-driven developmentInternational Conference on Graph Transformation, 2012.Cited 2 times.	9-16	"""@inproceedings{WOS:000318714300002,
    Author = ""Diepenbeck, Melanie and Soeken, Mathias and Grosse, Daniel and Drechsler, Rolf"",
    Book-Group-Author = ""IEEE"",
    Title = ""Behavior Driven Development for Circuit Design and Verification"",
    Booktitle = ""2012 IEEE INTERNATIONAL HIGH LEVEL DESIGN VALIDATION AND TEST WORKSHOP (HLDVT)"",
    Series = ""IEEE International High Level Design Validation and Test Workshop"",
    Year = ""2012"",
    Pages = ""9-16"",
    Note = ""17th IEEE International High Level Design Validation and Test Workshop (HLDVT), Huntington Beach, CA, NOV 09-10, 2012"",
    Organization = ""IEEE; IEEE Comp Soc Test Technol Tech Council; IEEE Comp Soc Design Automat Tech Comm; IEEE Comp Soc"",
    Abstract = ""The design of hardware systems is a challenging and erroneous task where about 70\\% of the effort in designing these systems is spent on verification. In general, testing and verification are usually tasks that are being applied as a post-process to the implementation. In this paper, we propose a new design flow based on Behavior Driven Development (BDD), an agile technique for the development of software in which acceptance tests written in natural language play a central role and are the starting point in the design flow. We advance the flow such that the specifics that arise when modeling hardware are taken into account. Furthermore, we present a technique that allows for the automatic generalization of test cases to properties that are suitable for formal verification. This allows the designer to apply formal verification techniques based on test cases without specifying properties. We implemented our approach and evaluated the flow for an illustrative example that successfully demonstrates the advantages of the proposed flow."",
    Publisher = ""IEEE"",
    Address = ""345 E 47TH ST, NEW YORK, NY 10017 USA"",
    Type = ""Proceedings Paper"",
    Language = ""English"",
    Affiliation = ""Diepenbeck, M (Corresponding Author), Univ Bremen, Inst Comp Sci, D-28359 Bremen, Germany. Diepenbeck, Melanie; Soeken, Mathias; Grosse, Daniel; Drechsler, Rolf, Univ Bremen, Inst Comp Sci, D-28359 Bremen, Germany."",
    ISSN = ""1552-6674"",
    ISBN = ""978-1-4673-2897-5; 978-1-4673-2898-2"",
    Research-Areas = ""Computer Science"",
    Web-of-Science-Categories = ""Computer Science, Hardware \\& Architecture; Computer Science, Software Engineering"",
    Author-Email = ""diepenbeck@informatik.uni-bremen.de msoeken@informatik.uni-bremen.de grosse@informatik.uni-bremen.de drechsle@informatik.uni-bremen.de"",
    Affiliations = ""University of Bremen"",
    ResearcherID-Numbers = ""Drechsler, Rolf/K-2508-2014 Soeken, Mathias/M-2666-2013"",
    ORCID-Numbers = ""Drechsler, Rolf/0000-0002-9872-1740 Soeken, Mathias/0000-0002-0229-8766"",
    Number-of-Cited-References = ""20"",
    Times-Cited = ""6"",
    Usage-Count-Last-180-days = ""0"",
    Usage-Count-Since-2013 = ""6"",
    Doc-Delivery-Number = ""BEY61"",
    Web-of-Science-Index = ""Conference Proceedings Citation Index - Science (CPCI-S)"",
    Unique-ID = ""WOS:000318714300002"",
    DA = ""2024-10-22""
}
"""	Excluded	Excluded	new_screen			2	Web of Science		Behavior driven development for circuit design and verification	https://www.webofscience.com/wos/woscc/full-record/WOS:000318714300002	IEEE	
222	Behave	Behaviour Driven Development for Tests and Verification	The design of hardware systems is a challenging and error-prone task, where a signifcant portion of the effort is spent for testing and verification. Usually testing and verification are applied as a post-process to the implementation. Meanwhile, for the development of software, test-first approaches such astest driven development(TDD) have become increasingly important. In this paper, we propose a new design flow based onbehaviour driven development(BDD), an extension of TDD, where acceptance tests written in natural language drive the implementation. We extend this idea by allowing the specification of properties in natural language and use them as a starting point in the design flow. The flow also includes an automatic generalisation of test cases to properties that are used for formal verification. In this way, testing and formal verification are combined in a seamless manner, while keeping the requirements -- from which both tests and formal properties are derived -- in a single consistent document. The approach has been implemented and evaluated on several examples to demonstrate the advantages of the proposed flow.		Melanie Diepenbeck; Ulrich Kuhne; Mathias Soeken,; Rolf Drechsler	International Conference on Tests and Proofs	https://doi.org/10.1007/978-3-319-09099-3_5		61-77		Included	Included	new_screen			2	Springer Link		Behaviour driven development for tests and verification	https://link.springer.com/chapter/10.1007/978-3-319-09099-3_5	Springer, Cham	nan; Keywords; References; Year; Bibtex
223	Behave	The ASSERT Virtual Machine: A predictable platform for real-time systems	The development of real-time control systems is a complex process which has to face often conflicting requirements, especially those related to the performance of the control methods and the real-time behaviour of the system. The ASSERT Virtual Machine provides a reliable execution platform for such systems, which allows developers to cope with functional and real-time aspects separately. In order to guarantee the required real-time properties, the virtual machine only accepts software components which have a predictable temporal behaviour which can be analysed at system design time. Such components can be automatically generated from a high-level description of a system which embodies the functional components (e.g. control algorithms) into a set of containers providing the appropriate concurrent and real-time behaviour. The ASSERT Virtual Machine has been implemented in Ada 2005, using a predictable tasking subset of the language known as the Ravenscar profile. A prototype has been validated on several pilot-scale spacecraft control systems, with good results.	Ada (programming language); Algorithms; Computer control systems; Concurrency control; Machine design; Real time control; Spacecraft; Ada 2005; Automatically generated; Complex Processes; Control algorithms; Control methods; Functional components; High level description; Pilot scale; Ravenscar; Real time aspects; Real-time properties; Reliable execution; Software component; Spacecraft control systems; System design; Temporal behaviour; Virtual machines; Machine components; Ada (programming language);  Algorithms;  Computer control systems;  Concurrency control;  Machine design;  Real time control;  Spacecraft;  Ada 2005;  Automatically generated;  Complex Processes;  Control algorithms;  Control methods;  Functional components;  High level description;  Pilot scale;  Ravenscar;  Real time aspects;  Real-time properties;  Reliable execution;  Software component;  Spacecraft control systems;  System design;  Temporal behaviour;  Virtual machines;  Machine components	De La Puente, Juan Antonio; Zamorano, Juan; Pulido, Jose A.; Uruena, Santiago	IFAC Proceedings Volumes (IFAC-PapersOnline)	https://doi.org/10.3182/20080706-5-KR-1001.3469			"""@CONFERENCE{DeLaPuente2008,
    author = ""De La Puente, Juan Antonio and Zamorano, Juan and Pulido, Jose A. and Uruena, Santiago"",
    title = ""The ASSERT Virtual Machine: A predictable platform for real-time systems"",
    year = ""2008"",
    journal = ""IFAC Proceedings Volumes (IFAC-PapersOnline)"",
    volume = ""17"",
    number = ""1 PART 1"",
    doi = ""10.3182/20080706-5-KR-1001.3469"",
    url = ""https://www.scopus.com/inward/record.uri?eid=2-s2.0-79961018271\&doi=10.3182\%2f20080706-5-KR-1001.3469\&partnerID=40\&md5=da93acd9a031d96c13045133e9326d1c"",
    abstract = ""The development of real-time control systems is a complex process which has to face often conflicting requirements, especially those related to the performance of the control methods and the real-time behaviour of the system. The ASSERT Virtual Machine provides a reliable execution platform for such systems, which allows developers to cope with functional and real-time aspects separately. In order to guarantee the required real-time properties, the virtual machine only accepts software components which have a predictable temporal behaviour which can be analysed at system design time. Such components can be automatically generated from a high-level description of a system which embodies the functional components (e.g. control algorithms) into a set of containers providing the appropriate concurrent and real-time behaviour. The ASSERT Virtual Machine has been implemented in Ada 2005, using a predictable tasking subset of the language known as the Ravenscar profile. A prototype has been validated on several pilot-scale spacecraft control systems, with good results. Copyright (c) 2007 International Federation of Automatic Control All Rights Reserved."",
    author_keywords = ""Computers for control"",
    keywords = ""Ada (programming language); Algorithms; Computer control systems; Concurrency control; Machine design; Real time control; Spacecraft; Ada 2005; Automatically generated; Complex Processes; Control algorithms; Control methods; Functional components; High level description; Pilot scale; Ravenscar; Real time aspects; Real-time properties; Reliable execution; Software component; Spacecraft control systems; System design; Temporal behaviour; Virtual machines; Machine components"",
    issn = ""14746670"",
    isbn = ""978-390266100-5"",
    language = ""English"",
    abbrev_source_title = ""IFAC Proc. Vol. (IFAC-PapersOnline)"",
    type = ""Conference paper"",
    publication_stage = ""Final"",
    source = ""Scopus"",
    note = ""Cited by: 8; Conference name: 17th World Congress, International Federation of Automatic Control, IFAC; Conference date: 6 July 2008 through 11 July 2008; Conference code: 79403""
}
"""	Excluded	Excluded	new_screen			2	Scopus Signed In		The ASSERT Virtual Machine: A Predictable Platform for Real-Time Systems	https://www.scopus.com/record/display.uri?eid=2-s2.0-79961018271&origin=resultslist&sort=r-f&src=s&sid=b10579580af00c79e0c7d59422883659&sot=b&sdt=b&s=TITLE%28the+assert+virtual+machine+a+predictable+platform+for+real+time+systems%29&sl=78&sessionSearchId=b10579580af00c79e0c7d59422883659&relpos=0		nan; References; Pages; Publisher
224	Behave	Scenarios in the loop:integrated requirements analysis and automotive system validation	The development of safety-relevant systems in the automotive industry requires the definition of high-quality requirements and tests for the coordination and monitoring of development activities in an agile development environment. In this paper we describe a Scenarios in the Loop (SCIL) approach. SCIL combines (1) natural language requirements specification based on Behavior-Driven Development (BDD) with (2) formal and test-driven requirements modeling and analysis, and (3) integrates discipline-specific tools for software and system validation during development. A central element of SCIL is a flexible and executable scenario-based modeling language, the Scenario Modeling Language for Kotlin (SMLK). SMLK allows for an intuitive requirements formalization, and supports engineers to move iteratively, and continuously aided by automated checks, from stakeholder requirements to the validation of the implemented system. We evaluated the approach using a real example from the field of e-mobility.	BizDevOps; automotive systems engineering; requirements analysis; system validation	Carsten Wiecher; Sergej Japs; Lydia Kaiser; Joel Greenyer; Roman Dumitrescu; Carsten Wolff	MODELS '20: Proceedings of the 23rd ACM/IEEE International Conference on Model Driven Engineering Languages and Systems: Companion Proceedings	https://doi.org/10.1145/3417990.3421264		1-10		Included	Included	new_screen			2	ACM		Scenarios in the Loop: Integrated Requirements Analysis and Automotive System Validation	https://dl.acm.org/doi/10.1145/3417990.3421264	Association for Computing Machinery	nan; References; Year; Bibtex
225	Behave	Continuous Security through Integration Testing in an Electronic Health Records System	The estimated average cost of a healthcare data breach in 2019 was \$6.45 million, which is the highest among all industries. Yet, security remains an afterthought in many digital health applications. Formal methods for testing for bugs are commonplace in software development through the use of unit testing, integration testing, system testing, and acceptance testing. More so, in modern software engineering, continuous integration is a well-known concept to run automated tests soon after any code change, when the system builds and notifies the development team of the test results. In this paper, we describe the use of a popular Python unit testing framework to implement a formal method of security testing. Common Vulnerability Scoring System (CVSS) is used to calculate metrics that represent the state of security of a deployed system. We developed a series of Pytest Behavioral Driven Development (BDD) scripts to test the Authentication and Availability of a widely used Electronic Health Records System called OpenMRS. The advantage of using the BDD approach is that testing scripts, called Gherkin files, can be read, and understood by the developers as well as the non-developer stakeholders. The use of Gherkin serves two purposes: firstly, it serves as the project's documentation, and secondly, it automates the tests. The use of the CVSS score between 0 to 10 becomes an objective metric to compare every code change, thus achieving continuous security. We plan to expand BDD scripts to attacks like Denial of Service, Session Hijacking, SQL Injection, and other privilege escalation attacks.	Behavior Driven Development; Common Vulnerability Scoring System; Continuous Security; Electronic Health Records; Integration testing; OpenMRS; Behavior Driven Development;  Common Vulnerability Scoring System;  Continuous Security;  Electronic Health Records;  Integration testing;  OpenMRS	Purkayastha, Saptarshi; Goyal, Shreya; Phillips, Tyler; Wu, Huanmei; Haakenson, Brandon; Zou, Xukai	Proceedings - 2020 International Conference on Software Security and Assurance, ICSSA 2020	https://doi.org/10.1109/ICSSA51305.2020.00012	Ronquillo, J.G., Winterholler, J.E., Cwikla, K., Szymanski, R., Levy, C.; Reich, P.C.(2019)Healthcare: A Critical Information Infrastructure; Clarke, R., Youngstein, T.; Madhavi, A., Lincke, S.; Fowler, M., Foemmel, M.(2006)Continuous Integration.Cited 463 times.; Humble, J., Farley, D.(2010)Continuous Delivery: Reliable Software Releases Through Build, Test, and Deployment Automation (Adobe Reader).Cited 742 times.Pearson Education; Stahl, D., Bosch, J.; Fitzgerald, B., Stol, K.; Torkura, K.A., Sukmana, M.I.H., Meinel, C.; Lippmann, R.P., Riordan, J., Yu, T., Watson, K.(2012)Continuous Security Metrics for Prevalent Network Threats: Introduction and First Four Metrics.Cited 32 times.Massachusetts Inst of Tech Lexington Lincoln Lab, Tech. Rep; Aslam, M., Gehrmann, C., Bjorkman, M.; Hanson, C.(2017)The Network Certification DescriptionPh.D. dissertation, University of Colorado at Colorado Springs; Solis, C., Wang, X.; Purkayastha, S., Gichoya, J.W., Addepally, S.A.; Saff, D., Ernst, M.D.; Shahin, M., Ali Babar, M., Zhu, L.; Mell, P., Scarfone, K., Romanosky, S.; Stine, I., Rice, M., Dunlap, S., Pecarina, J.; Voss, J., Garcia, J.A., Proctor, W.C., Evans, R.T.; Sale, D.(2014)Testing Python: Applying Unit Testing, TDD, BDD and Acceptance Testing.Cited 2 times.John Wiley & Sons; Allodi, L., Banescu, S., Femmer, H., Beckers, K.; Houmb, S.H., Franqueira, V.N.L., Engum, E.A.; Mendes, N., Madeira, H., Duraes, J.; Pender-Bey, G.The parkerian hexad(2019)Information Security Program at Lewis University; Patel, K.; Nagpure, S., Kurkure, S.; Sharma, P., Nagpal, B.(2015)A Study on Url Manipulation Attack Methods and Their Countermeasures; Carl, G., Kesidis, G., Brooks, R.R., Rai, S.; Stewart, C.A., Cockerill, T.M., Foster, I., Hancock, D., Merchant, N., Skidmore, E., Stanzione, D., (...), Turner, G.Jetstream: A self-provisioned, scalable science and engineering cloud environment(2015)Proceedings of the 2015 XSEDE Conference: Scientific Advancements Enabled by Enhanced Cyberinfrastructure, pp. 1-8.Cited 83 times.	26-31	"""@inproceedings{WOS:000702909000004,
    Author = ""Purkayastha, Saptarshi and Goyal, Shreya and Phillips, Tyler and Wu, Huanmei and Haakenson, Brandon and Zou, Xukai"",
    Book-Group-Author = ""IEEE Comp Soc"",
    Title = ""Continuous Security through Integration Testing in an Electronic Health Records System"",
    Booktitle = ""2020 INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND ASSURANCE (ICSSA 2020)"",
    Year = ""2020"",
    Pages = ""26-31"",
    Note = ""6th International Conference on Software Security and Assurance (ICSSA), ELECTR NETWORK, OCT 28-30, 2020"",
    Organization = ""IEEE Comp Soc; Penn State Altoona; Seoul Womens Univ; Sungkyunkwan Univ; St Polten Univ Appl Sci"",
    Abstract = ""The estimated average cost of a healthcare data breach in 2019 was \$6.45 million, which is the highest among all industries. Yet, security remains an afterthought in many digital health applications. Formal methods for testing for bugs are commonplace in software development through the use of unit testing, integration testing, system testing, and acceptance testing. More so, in modern software engineering, continuous integration is a well-known concept to run automated tests soon after any code change, when the system builds and notifies the development team of the test results. In this paper, we describe the use of a popular Python unit testing framework to implement a formal method of security testing. Common Vulnerability Scoring System (CVSS) is used to calculate metrics that represent the state of security of a deployed system. We developed a series of Pytest Behavioral Driven Development (BDD) scripts to test the Authentication and Availability of a widely used Electronic Health Records System called OpenMRS. The advantage of using the BDD approach is that testing scripts, called Gherkin files, can be read, and understood by the developers as well as the non-developer stakeholders. The use of Gherkin serves two purposes: firstly, it serves as the project's documentation, and secondly, it automates the tests. The use of the CVSS score between 0 to 10 becomes an objective metric to compare every code change, thus achieving continuous security. We plan to expand BDD scripts to attacks like Denial of Service, Session Hijacking, SQL Injection, and other privilege escalation attacks."",
    Publisher = ""IEEE COMPUTER SOC"",
    Address = ""10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1264 USA"",
    Type = ""Proceedings Paper"",
    Language = ""English"",
    Affiliation = ""Purkayastha, S (Corresponding Author), Indiana Univ Purdue Univ, Dept BioHlth Informat, Indianapolis, IN 46202 USA. Purkayastha, Saptarshi; Goyal, Shreya; Wu, Huanmei, Indiana Univ Purdue Univ, Dept BioHlth Informat, Indianapolis, IN 46202 USA. Phillips, Tyler; Haakenson, Brandon; Zou, Xukai, Indiana Univ Purdue Univ, Dept Comp Sci, Indianapolis, IN 46202 USA."",
    DOI = ""10.1109/ICSSA51305.2020.00012"",
    ISBN = ""978-1-6654-3246-7"",
    Keywords = ""Behavior Driven Development; Common Vulnerability Scoring System; Continuous Security; Electronic Health Records; Integration testing; OpenMRS"",
    Keywords-Plus = ""SERVICE"",
    Research-Areas = ""Computer Science"",
    Web-of-Science-Categories = ""Computer Science, Information Systems; Computer Science, Software Engineering"",
    Author-Email = ""saptpurk@iupui.edu shregoya@iupui.edu phillity@iupui.edu hw9@iupui.edu bhaakens@iupui.edu xzou@iupui.edu"",
    Affiliations = ""Purdue University System; Purdue University; Purdue University System; Purdue University"",
    ResearcherID-Numbers = ""Goyal, Shreya/KHU-5106-2024 Purkayastha, Saptarshi/A-9627-2014"",
    ORCID-Numbers = ""Purkayastha, Saptarshi/0000-0003-3625-534X"",
    Funding-Acknowledgement = ""U.S. National Science Foundation {[}OAC-1839746]"",
    Funding-Text = ""The U.S. National Science Foundation supported this work under grant OAC-1839746. This work was made possible through a research allocation on the JetStream {[}29] public cloud infrastructure and XSEDE resources."",
    Number-of-Cited-References = ""29"",
    Times-Cited = ""4"",
    Usage-Count-Last-180-days = ""0"",
    Usage-Count-Since-2013 = ""4"",
    Doc-Delivery-Number = ""BS2KJ"",
    Web-of-Science-Index = ""Conference Proceedings Citation Index - Science (CPCI-S)"",
    Unique-ID = ""WOS:000702909000004"",
    DA = ""2024-10-22""
}
"""	Included	Included	new_screen			2	Web of Science		Continuous Security through Integration Testing in an Electronic Health Records System	https://www.webofscience.com/wos/woscc/full-record/WOS:000702909000004	IEEE COMPUTER SOC	
226	Behave	Design driven testing: Test smarter, not harder	"The groundbreaking book Design Driven Testing brings sanity back to the software development process by flipping around the concept of Test Driven Development (TDD)-restoring the concept of using testing to verify a design instead of pretending that unit tests are a replacement for design. Anyone who feels that TDD is ""Too Damn Difficult"" will appreciate this book. Design Driven Testing shows that, by combining a forward-thinking development process with cutting-edge automation, testing can be a finely targeted, business-driven, rewarding effort. In other words, you'll learn how to test smarter, not harder. *Applies a feedback-driven approach to each stage of the project lifecycle. *Illustrates a lightweight and effective approach using a core subset of UML. *Follows a real-life example project using Java and Flex/ActionScript. *Presents bonus chapters for advanced DDTers covering unit-test antipatterns (and their opposite, ""test-conscious"" design patterns), and showing how to create your own test transformation templates in Enterprise Architect."		Stephens, Matt; Rosenberg, Doug	Design Driven Testing: Test Smarter, Not Harder	https://doi.org/10.1007/978-1-4302-2944-5	"http://stephenwalther.com/blog/archive/2009/04/11/tdd-tests-are-not-unit- tests.aspx; www.artima.com/intv/testdriven4.html; www.theregister.co.uk/2007/04/25/unit_test_code_coverage/; www.jmock.org; http://mockito.org; http://easymock.org; www.martinfowler.com/bliki/FluentInterface.html; DSLs/fluent interfaceswww.mockobjects.com/files/evolving_an_edsl.ooplsa2006.pdf; www.iconixsw.com/aliceinusecaseland.html; www.infoq.com/minibooks/domain-driven-design-quickly; There is more information about MDG Integration atwww.sparxsystems.com/products/#integration; www.iconixsw.com/Articles/UML_visual_studio.html; There's a link to the download page herehttp://iconixsw.com/EA/PowerUsers.html; And if you haven't seen it, here it is (or search for ""This Too Shall Pass"")http://www.youtube.com/watch?v=qybUFnY7Y8w; http://commons.apache.org/io/; http://mockito.org/; http://en.wikipedia.org/wiki/Continuous_integration; An example Flex design pattern that helps you achieve this is ""Code Behind""www.insideria.com/2010/05/code-behind-vs-template-compon.html; De Grace'S, P.(1993)The Olduvai Imperative: CASE and the State of Software Engineering Practice.Cited 8 times.insightful book Yourdon Press; www.vresorts.com/VRPages/Cancun/Cancun.html; http://unixwiz.net/techtips/sql-injection.html; www.sans.org/top-cyber-security-risks; http://fitnesse.org; http://behaviour-driven.org/Introduction; http://abbot.sourceforge.net/doc/overview.shtml; www.uispec4j.org; http://fest.easytesting.org/swing/wiki/pmwiki.php; http://nunitforms.sourceforge.net/; www.gorillalogic.com/flexmonkey; www.riatest.com; http://seleniumhq.org/; Carroll, L.(1865)Alice's Adventures in Wonderland.Cited 1623 times.Chapter 1; www.testingreflections.com/node/view/4828; Asimov, I.(1972)The Gods Themselves.Cited 22 times.Doubleday; Fuzzing: Brute Force Vulnerability Discoveryand the accompanying web pagehttp://fuzzing.org/; www.owasp.org/index.php/Fuzzing; Carroll, L.(1865)Alice's Adventures in Wonderland.Cited 1623 times.Chapter 9 ""The Mock Turtle's Story""; http://projecteuler.net/index.php?section=problems&id=1"	1 - 344	"""@BOOK{Stephens20101,
    author = ""Stephens, Matt and Rosenberg, Doug"",
    title = ""Design driven testing: Test smarter, not harder"",
    year = ""2010"",
    journal = ""Design Driven Testing: Test Smarter, Not Harder"",
    pages = ""1 - 344"",
    doi = ""10.1007/978-1-4302-2944-5"",
    url = ""https://www.scopus.com/inward/record.uri?eid=2-s2.0-84892358958\&doi=10.1007\%2f978-1-4302-2944-5\&partnerID=40\&md5=062e4fb6076d3c78cde338ab7d57c1d4"",
    abstract = {The groundbreaking book Design Driven Testing brings sanity back to the software development process by flipping around the concept of Test Driven Development (TDD)-restoring the concept of using testing to verify a design instead of pretending that unit tests are a replacement for design. Anyone who feels that TDD is ""Too Damn Difficult"" will appreciate this book. Design Driven Testing shows that, by combining a forward-thinking development process with cutting-edge automation, testing can be a finely targeted, business-driven, rewarding effort. In other words, you'll learn how to test smarter, not harder. *Applies a feedback-driven approach to each stage of the project lifecycle. *Illustrates a lightweight and effective approach using a core subset of UML. *Follows a real-life example project using Java and Flex/ActionScript. *Presents bonus chapters for advanced DDTers covering unit-test antipatterns (and their opposite, ""test-conscious"" design patterns), and showing how to create your own test transformation templates in Enterprise Architect. Copyright (c) 2010 by Matt Stephens and Doug Rosenberg. All rights reserved.},
    publisher = ""Apress Media LLC"",
    isbn = ""978-143022943-8"",
    language = ""English"",
    abbrev_source_title = ""Des. Driven Testing: Test Smarter, Not Harder"",
    type = ""Book"",
    publication_stage = ""Final"",
    source = ""Scopus"",
    note = ""Cited by: 3; All Open Access, Green Open Access""
}
"""	Excluded	Excluded	new_screen			2	Scopus Signed In		Design Driven Testing: Test Smarter, Not Harder	https://www.scopus.com/record/display.uri?eid=2-s2.0-84892358958&origin=resultslist&sort=r-f&src=s&sid=bd8f20cf06e75a795597cf5bcab917b2&sot=b&sdt=b&s=TITLE%28design+driven+testing+test+smarter+not+harder%29&sl=52&sessionSearchId=bd8f20cf06e75a795597cf5bcab917b2&relpos=0	Apress Media LLC	nan; Keywords
227	Behave	Development of Health Software using Behaviour Driven Development - BDD	The health software industry is facing an immense challenge of managing quality and preventing software failures. Poorly defined requirements are one of the significant cause of health software failures. Agile practices are being increasingly used by the software industry to develop systems on time and within budget with improved software quality and user acceptance. Behaviour-driven development (BDD) is an agile software engineering practice that can help to improve health software quality vastly. BDD achieves this by prioritising the illustration of software's behaviour using ubiquitous language, followed by automated acceptance testing to assess if the illustrated behaviour was achieved. This paper presents a review of BDD literature, including the characteristics of BDD and examines how BDD can benefit health software quality. The paper reviews health software standards and guidelines, to examine their compatibility with a BDD approach. Finally, the paper details future plans for the development of a framework that provides health software companies with a detailed step by step guideline on how to use BDD to develop safer health software.	Automated Acceptance Testing; Requirement Engineering; Behaviour Driven Development; BDD; Software Requirements; Medical Software; Health Software; Automated Acceptance Testing;  Requirement Engineering;  Behaviour Driven Development;  BDD;  Software Requirements;  Medical Software;  Health Software	Anjum, Mohamma Z.; Mahon, Silvana Togneri Mac; McCaffery, Fergal	International Conference on Model-Driven Engineering and Software Development	https://doi.org/10.5220/0008984201490157		149-157	"""@inproceedings{WOS:000670778400014,
    Author = ""Anjum, Mohamma Z. and Mahon, Silvana Togneri Mac and McCaffery, Fergal"",
    Editor = ""Hammoudi, S and Pires, LF and Selic, B"",
    Title = ""Development of Health Software using Behaviour Driven Development - BDD"",
    Booktitle = ""PROCEEDINGS OF THE 8TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT (MODELSWARD)"",
    Year = ""2020"",
    Pages = ""149-157"",
    Note = ""8th International Conference on Model-Driven Engineering and Software Development (MODELSWARD), Valletta, MALTA, FEB 25-27, 2020"",
    Abstract = ""The health software industry is facing an immense challenge of managing quality and preventing software failures. Poorly defined requirements are one of the significant cause of health software failures. Agile practices are being increasingly used by the software industry to develop systems on time and within budget with improved software quality and user acceptance. Behaviour-driven development (BDD) is an agile software engineering practice that can help to improve health software quality vastly. BDD achieves this by prioritising the illustration of software's behaviour using ubiquitous language, followed by automated acceptance testing to assess if the illustrated behaviour was achieved. This paper presents a review of BDD literature, including the characteristics of BDD and examines how BDD can benefit health software quality. The paper reviews health software standards and guidelines, to examine their compatibility with a BDD approach. Finally, the paper details future plans for the development of a framework that provides health software companies with a detailed step by step guideline on how to use BDD to develop safer health software."",
    Publisher = ""SCITEPRESS"",
    Address = ""AV D MANUELL, 27A 2 ESQ, SETUBAL, 2910-595, PORTUGAL"",
    Type = ""Proceedings Paper"",
    Language = ""English"",
    Affiliation = ""Anjum, MZ (Corresponding Author), Dundalk Inst Technol, Regulated Software Res Ctr, Dundalk, Co Louth, Ireland. Anjum, Mohamma Z.; Mahon, Silvana Togneri Mac, Dundalk Inst Technol, Regulated Software Res Ctr, Dundalk, Co Louth, Ireland. McCaffery, Fergal, Dublin City Univ, Sch Comp, Dublin 9, Ireland."",
    DOI = ""10.5220/0008984201490157"",
    ISBN = ""978-989-758-400-8"",
    Keywords = ""Automated Acceptance Testing; Requirement Engineering; Behaviour Driven Development; BDD; Software Requirements; Medical Software; Health Software"",
    Keywords-Plus = ""RECALLS"",
    Research-Areas = ""Computer Science"",
    Web-of-Science-Categories = ""Computer Science, Software Engineering; Computer Science, Theory \\& Methods"",
    Affiliations = ""Dundalk Institute of Technology; Dublin City University"",
    ORCID-Numbers = ""Mc Caffery, Fergal/0000-0002-0839-8362"",
    Funding-Acknowledgement = ""Science Foundation Ire-land grant {[}13/RC/2094]; European Regional Development Fund through the Southern \\& Eastern Regional Operational Programme to Lero - the Irish Software Research Centre; Science Foundation Ireland (SFI) {[}13/RC/2094] Funding Source: Science Foundation Ireland (SFI)"",
    Funding-Text = ""This work was supported with the financial support of the Science Foundation Ire-land grant 13/RC/2094 and co-funded under the European Regional Development Fund through the Southern \\& Eastern Regional Operational Programme to Lero -the Irish Software Research Centre (www.lero.ie)."",
    Number-of-Cited-References = ""29"",
    Times-Cited = ""0"",
    Usage-Count-Last-180-days = ""4"",
    Usage-Count-Since-2013 = ""11"",
    Doc-Delivery-Number = ""BR8CX"",
    Web-of-Science-Index = ""Conference Proceedings Citation Index - Science (CPCI-S)"",
    Unique-ID = ""WOS:000670778400014"",
    DA = ""2024-10-22""
}
"""	Excluded	Excluded	new_screen			2	Web of Science		Development of health software using behaviour driven development - BDD	https://www.webofscience.com/wos/woscc/full-record/WOS:000670778400014	SCITEPRESS	nan; References
228	Behave	Behaviour-Driven Development Applied to the Conformance Testing of INSPIRE Web Services	The implementation of the INSPIRE directive requires to check the conformity of a large number of network services with the implementing rules of INSPIRE. The evaluation whether a service is fully conformant with INSPIRE is complex and requires the use of specialized testing tools that should report how verification has been made and should identify non-conformances. The use of these tools requires a high degree of technical knowledge. This fact makes very difficult for non-technical stakeholders (end users, managers, domain experts, etc.) to participate effectively in conformance testing, hinders stakeholders understanding of the causes and consequences of non-conformant results and may cause in some stakeholders disinterest in conformance testing. This work explores the suitability of abehaviour-driven development(BDD) approach to the conformance testing of OGC Web services in the context of the INSPIRE directive. BDD emphasizes the participation of non-technical parties in the design of acceptance tests by means of automatable abstract tests expressed in a human readable format. Using this idea as base, this work describes a BDD based workflow to derive abstract test suites and executable test suites from INSPIRE implementation requirements that can be written in the language used by non-technical stakeholders. This work also analyses if BDD and popular BDD tools, such as Gherkin and Cucumber, are compatible with ISO 19105:2000 testing methodology. As demonstration, we present an online conformance tool for INSPIRE View and Discovery services that executes BDD test suites.		Francisco J. Lopez-Pellicer; Miguel Angel Latre; Javier Nogueras-Iso; F. Javier Zarazaga-Soria; Jesus Barrera	Connecting a Digital Europe Through Location and Place	https://doi.org/10.1007/978-3-319-03611-3_19		325-339		Included	Included	new_screen			2	Springer Link		Behaviour-driven development applied to the conformance testing of INSPIRE web services	https://link.springer.com/chapter/10.1007/978-3-319-03611-3_19	Springer, Cham	nan; Keywords; References; Year; Bibtex
229	Behave	Towards a Thing-In-the-Loop approach for the Verification and Validation of IoT systems	The Internet of Things (IoT) is rapidly increasing its diffusion, posing great challenges to the research community. IoT systems are composed by smart objects (Things) that are interconnected in order to provide new products and services. The interaction of heterogeneous and distributed smart things guided by software with the physical world brings new sources of safety issues. To this reason, providing valuable and effective solutions to support the verification and validation of such systems is needed. In this paper we introduce a model-driven Thing-In-the-Loop verification and validation approach that transfers the best practices adopted in different embedded system domains towards the IoT world. Starting from models and scenarios representing the structure and behaviors of the IoT system as well as models of its context our approach generates appropriate test cases that are executed in accordance with Model-in-the-Loop, Software-in-the-Loop and Hardware-in-the-Loop techniques. We preliminarily evaluated the feasibility of our approach by applying it in the context of a Smart Mobility case study.	Internet of Things; Model-driven engineering; Thing-In-the-loop; verification and validation	Domenico Amalfitano; Nicola Amatucci; Vincenzo De Simone; Vincenzo Riccio; Fasolino Anna Rita	SafeThings'17: Proceedings of the 1st ACM Workshop on the Internet of Safe Things	https://doi.org/10.1145/3137003.3137007		57-63		Excluded	Excluded	new_screen			2	ACM		Towards a Thing-In-the-Loop Approach for the Verification and Validation of IoT Systems	https://dl.acm.org/doi/10.1145/3137003.3137007	Association for Computing Machinery	nan; References; Year; Bibtex
230	Behave	Supporting smart construction with dependable edge computing infrastructures and applications	The Internet of Things (IoT) such as the use of robots, sensors, actuators, electronic signalization and a variety of other Internet enabled physical devices may provide for new advanced smart applications to be used in construction in the very near future. Such applications require real-time responses and are therefore time-critical. Therefore, in order to support collaboration, control, monitoring, supply management, safety and other construction processes, they have to meet dependability requirements, including requirements for high Quality of Service (QoS). Dependability and high QoS can be achieved by using adequate number and quality of computing resources, such as processing, memory and networking elements, geographically close to the smart environments. The goal of this study is to develop a practical edge computing architecture and design, which can be used to support smart construction environments with high QoS. This study gives particular attention to the solution design, which relies on latest cloud and software engineering approaches and technologies, and provides elasticity, interoperability and adaptation to companies' specific needs. Two edge computing applications supporting video communications and construction process documentation are developed and demonstrate a viable edge computing design for smart construction.	Smart construction; Dependability; Internet of Things; Container-based systems; Edge computing; Smart construction;  Dependability;  Internet of Things;  Container-based systems;  Edge computing	Kochovski, Petar; Stankovski, Vlado	AUTOMATION IN CONSTRUCTION	https://doi.org/10.1016/j.autcon.2017.10.008		182-192	"""@article{WOS:000424071900014,
    Author = ""Kochovski, Petar and Stankovski, Vlado"",
    Title = ""Supporting smart construction with dependable edge computing infrastructures and applications"",
    Journal = ""AUTOMATION IN CONSTRUCTION"",
    Year = ""2018"",
    Volume = ""85"",
    Pages = ""182-192"",
    Month = ""JAN"",
    Abstract = ""The Internet of Things (IoT) such as the use of robots, sensors, actuators, electronic signalization and a variety of other Internet enabled physical devices may provide for new advanced smart applications to be used in construction in the very near future. Such applications require real-time responses and are therefore time-critical. Therefore, in order to support collaboration, control, monitoring, supply management, safety and other construction processes, they have to meet dependability requirements, including requirements for high Quality of Service (QoS). Dependability and high QoS can be achieved by using adequate number and quality of computing resources, such as processing, memory and networking elements, geographically close to the smart environments. The goal of this study is to develop a practical edge computing architecture and design, which can be used to support smart construction environments with high QoS. This study gives particular attention to the solution design, which relies on latest cloud and software engineering approaches and technologies, and provides elasticity, interoperability and adaptation to companies' specific needs. Two edge computing applications supporting video communications and construction process documentation are developed and demonstrate a viable edge computing design for smart construction."",
    Publisher = ""ELSEVIER SCIENCE BV"",
    Address = ""PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS"",
    Type = ""Article"",
    Language = ""English"",
    Affiliation = ""Stankovski, V (Corresponding Author), Univ Ljubljana, Fac Civil \\& Geodet Engn, Ljubljana, Slovenia. Kochovski, Petar; Stankovski, Vlado, Univ Ljubljana, Fac Civil \\& Geodet Engn, Ljubljana, Slovenia."",
    DOI = ""10.1016/j.autcon.2017.10.008"",
    ISSN = ""0926-5805"",
    EISSN = ""1872-7891"",
    Keywords = ""Smart construction; Dependability; Internet of Things; Container-based systems; Edge computing"",
    Keywords-Plus = ""SYSTEM; MANAGEMENT; INTERNET; FRAMEWORK; SAFETY"",
    Research-Areas = ""Construction \\& Building Technology; Engineering"",
    Web-of-Science-Categories = ""Construction \\& Building Technology; Engineering, Civil"",
    Author-Email = ""vlado.stankovski@fgg.uni-lj.si"",
    Affiliations = ""University of Ljubljana"",
    ORCID-Numbers = ""Stankovski, Vlado/0000-0001-9547-787X"",
    Funding-Acknowledgement = ""European Union {[}643963, 644179]; Slovenian Research Agency {[}BI-RU/16-18-043]"",
    Funding-Text = ""The research and development reported in this chapter have received funding from the European Union's Horizon 2020 Research and Innovation Programme under grant agreements no. 643963 (SWITCH project: Software Workbench for Interactive, Time Critical and Highly self-adaptive cloud applications) and no. 644179 (ENTICE project: dEcentralized repositories for traNsparent and efficienT virtual maChine opErations). Funding was also received from the Slovenian Research Agency under grant agreement no. BI-RU/16-18-043 (Internet of Things and Cloud computing as support for the development of new smart approaches in the construction sector)."",
    Number-of-Cited-References = ""42"",
    Times-Cited = ""75"",
    Usage-Count-Last-180-days = ""7"",
    Usage-Count-Since-2013 = ""119"",
    Journal-ISO = ""Autom. Constr."",
    Doc-Delivery-Number = ""FU7ZP"",
    Web-of-Science-Index = ""Science Citation Index Expanded (SCI-EXPANDED)"",
    Unique-ID = ""WOS:000424071900014"",
    OA = ""Green Submitted"",
    DA = ""2024-10-22""
}
"""	Excluded	Excluded	new_screen			2	Web of Science		Supporting smart construction with dependable edge computing infrastructures and applications	https://www.webofscience.com/wos/woscc/full-record/WOS:000424071900014	ELSEVIER SCIENCE BV	nan; References
231	Behave	Towards behavior-driven graphical user interface testing	The majority of users interacts with an application through its graphical user interface (GUI). To ensure high quality and expected behavior, those graphical user interfaces have to be tested thoroughly. Yet, creating graphical user interface test cases is considered expensive in comparison to unit or integration tests. In addition, test cases are perceived to be expensive to run and brittle, therefore causing a lot of false negative test results. Behavior-driven test case design addresses this challenges by bringing requirement specifications and test cases closer together. Although industry-proven tools map test specifications automatically, test methods making test scripts executable need to be implemented manually. The specification language Slang introduced by this paper generates automatically executable test cases from BDD-like feature descriptions that integrate low-fidelity prototypes in form of wireframesketcher models. To quantify the economic advantage of our approach an AB/BA crossover designed experiment was conducted. The experiment showed that creating automatically executable test cases utilizing Slang takes 63% less time compared to the industry-proven tool JBehave. In addition to presenting the experiment's results, the paper elaborates on first experience from applying the approach in a large Swiss bank. The findings of our experiments are supported by results from applying our approach in real-world scenarios. In addition, experiment as well as case study participants appreciated the sophisticated editor support of Slang.	GUI test case generation; behavior-driven development; case study; domain-specific language; model-driven engineering	Hendrik Bunder; Herbert Kuchen	ACM SIGAPP Applied Computing Review	https://doi.org/10.1145/3357385.3357386		5-17		Included	Included	new_screen			2	ACM		Towards Behavior-Driven Graphical User Interface Testing	https://dl.acm.org/doi/10.1145/3357385.3357386	Association for Computing Machinery	nan; References; Year; Bibtex
232	Behave	The Behavior Driven Development Applied to the Software Quality Test: A Case study Applied to the Promotion of Sports Financing in Brazil	The mechanisms of private investment in Brazilian sport are one of the main sources of resources that athletes hold to promote participation in high-performance competitions. In order to improve this flow, softwares are designed to shorten the path between donors and recipients. These tools, such as ``Meu Campelo{''} used in this paper, require efficient analysis of the quality of the product offered. Concepts known as agile methodologies have brought a new style to the analysis of the software developed, and one of them has gained considerable prominence, known such as BDD (Behavior Driven Development), so this paper aims to analyze the implementation of Behavior Driven Development in the software quality verification process ``Meu Campeao{''}.	Behavior Driven Development; Software Quality Test; Sports Financing; Behavior Driven Development;  Software Quality Test;  Sports Financing	Cavalcante, Maria Gerliane; Sales, Jose Iranildo	Iberian Conference on Information Systems and Technologies, CISTI	https://doi.org/10.23919/CISTI.2019.8760965	Castro, S.B.E., Poffo, B.N., Souza, D.L.Financiamento do esporte de rendimento no Brasil: programa Brasil no esporte de alto rendimento(2016)Revista Brasileira de Ciencia e Movimento, 24 (3), pp. 146-157.Cited 7 times.; Beck, K.(2003)Test-Driven Development: By Example.Cited 1665 times.Addison Wesley; Boehm, B., Turner, R.; Murphy, B., Bird, C., Zimmermann, T., Williams, L., Nagappan, N., Begel, A.; Rahman, M., Gao, J.; North, D.(2006)Introducing BDD.Cited 58 times.http://dannorth.net/introducing-bdd[AccessedDecember10,2018]; Beck, K., Andres, C.(2005)Extreme Programming Explained.Cited 5354 times.2nd Edition, Addison-Wesley; Fowler, M.(2014)Business Readable DSL.Cited 6 times.Dec 15, 2008. Retrieved on Nov 1http://martinfowler.com/bliki/BusinessReadableDSL.html; (2014)Retrieved on Nov 1Gherkin; Astels, D.(2018)A New Look at Test Driven Development.Cited 7 times.Accessed December 12http:/techblog.daveastels.com/files/BDD_Intro.pdf; Evans, E.(2003)Domain-Driven Design: Tackling Complexity in the Heart of Software.Cited 1067 times.Addison-Wesley Professional; Solis, C., Wang, X.; Do, H., Rothermel, G., Kinneer, A.Empirical studies of test case prioritization in a junit testing environment(2014)Computer Science and Engineering Department Proceedings of the 15th International Symposium on Software Reliability Engineering (ISSRE'04)1071-9458/04 $ 20. 00 IEEE; Chiavegatto, R.B., Silva, L.V., Andreia, V., Malvezzi, W.R.Desenvolvimento Orientado a Comportamento com Testes Automatizados utilizando JBehave e Selenium(2013)Anais Do Encontro Regional de Computacao e Sistemas de Informacao Manaus; Duelund, J., Eriksen, P.(2010)Behavior-driven Development Med JBehave; Kaurl, H., Gupta, G.Comparative study of automated testing tools: Selenium, quick test professional and test complete(2013)Int. Journal of Engineering Research and Applications, 3 (5), pp. 1739-1743.Cited 27 times.Sep-Octwww.ijera.com		"""@inproceedings{WOS:000492038200371,
    Author = ""Cavalcante, Maria Gerliane and Sales, Jose Iranildo"",
    Book-Group-Author = ""IEEE"",
    Title = ""The Behavior Driven Development Applied to the Software Quality Test: A Case study Applied to the Promotion of Sports Financing in Brazil"",
    Booktitle = ""2019 14TH IBERIAN CONFERENCE ON INFORMATION SYSTEMS AND TECHNOLOGIES (CISTI)"",
    Series = ""Iberian Conference on Information Systems and Technologies"",
    Year = ""2019"",
    Note = ""14th Iberian Conference on Information Systems and Technologies (CISTI), Coimbra, PORTUGAL, JUN 19-22, 2019"",
    Abstract = ""The mechanisms of private investment in Brazilian sport are one of the main sources of resources that athletes hold to promote participation in high-performance competitions. In order to improve this flow, softwares are designed to shorten the path between donors and recipients. These tools, such as ``Meu Campelo{''} used in this paper, require efficient analysis of the quality of the product offered. Concepts known as agile methodologies have brought a new style to the analysis of the software developed, and one of them has gained considerable prominence, known such as BDD (Behavior Driven Development), so this paper aims to analyze the implementation of Behavior Driven Development in the software quality verification process ``Meu Campeao{''}."",
    Publisher = ""IEEE"",
    Address = ""345 E 47TH ST, NEW YORK, NY 10017 USA"",
    Type = ""Proceedings Paper"",
    Language = ""English"",
    Affiliation = ""Cavalcante, MG (Corresponding Author), Software Engn Cesar Sch, Recife, PE, Brazil. Cavalcante, Maria Gerliane, Software Engn Cesar Sch, Recife, PE, Brazil. Sales, Jose Iranildo, Univ Fed Pernambuco, Prod Engn, Recife, PE, Brazil."",
    ISSN = ""2166-0727"",
    ISBN = ""978-9-8998-4349-3"",
    Keywords = ""Behavior Driven Development; Software Quality Test; Sports Financing"",
    Research-Areas = ""Computer Science"",
    Web-of-Science-Categories = ""Computer Science, Information Systems"",
    Author-Email = ""mariagecavalcante@gmail.com iranildo.sales2@gmail.com"",
    Affiliations = ""Universidade Federal de Pernambuco"",
    Number-of-Cited-References = ""15"",
    Times-Cited = ""0"",
    Usage-Count-Last-180-days = ""0"",
    Usage-Count-Since-2013 = ""0"",
    Doc-Delivery-Number = ""BO0LZ"",
    Web-of-Science-Index = ""Conference Proceedings Citation Index - Science (CPCI-S)"",
    Unique-ID = ""WOS:000492038200371"",
    DA = ""2024-10-22""
}
"""	Included	Included	new_screen			2	Web of Science		The behavior driven development applied to the software quality test: A case study applied to the promotion of sports financing in Brazil	https://www.webofscience.com/wos/woscc/full-record/WOS:000492038200371	IEEE	nan; Pages
233	Behave	Graph-based and scenario-driven microservice analysis, retrieval, and testing	The microservice architecture (MSA) differs fundamentally from the monolithic, layered architecture. The use of microservices provides a high degree of autonomy, composability, scalability, and fault-tolerance. MSA is regarded by many as a promising architecture for smart-city applications; however, a number of issues remain, including (1) the management of complex call relationships among microservices; (2) ensuring the quality of the overall software system even as new microservices are added and existing ones are modified, and (3) locating existing microservices that satisfy new requirements. In this paper, we propose a novel approach to the development of microservice-based systems, referred to as GSMART (Graph-based and Scenario-driven Microservice Analysis, Retrieval and Testing). GSMART enables the automatic generation of a ``Service Dependency Graph (SDG)'' by which to visualize and analyze dependency relationships between microservices as well as between services and scenarios. It also enables the automatic retrieval of test cases required for system changes to reduce the time and costs associated with regression testing. A microservice retrieval method using VSM and word2vec accelerates the development of new microservices tailored specifically to the needs of users based on user-provided scenarios. Experiment results demonstrate the feasibility, effectiveness, and efficiency of all of the main features of GSMART.	Microservice retrieval; Microservice testing; Microservice analysis; Service dependency graph; Behavior-driven development; Microservice retrieval;  Microservice testing;  Microservice analysis;  Service dependency graph;  Behavior-driven development	Ma, Shang-Pin; Fan, Chen-Yuan; Chuang, Yen; Liu, I-Hsiu; Lan, Ci-Wei	FUTURE GENERATION COMPUTER SYSTEMS-THE INTERNATIONAL JOURNAL OF ESCIENCE	https://doi.org/10.1016/j.future.2019.05.048	Fan, C.-Y., Ma, S.-P.; Lewis, J., Fowler, M.(2014)Microservices: a definition of this new architectural term Available:http://martinfowler.com/articles/microservices.html; Newman, S.Building Microservices: Designing Fine-Grained Systems(2015) .Cited 1505 times.O'Reilly Media, Inc.; Mauro, T.(2015)Adopting microservices at Netflix: Lessons for architectural design Available:https://www.nginx.com/blog/microservices-at-netflix-architectural-best-practices/; Vaquero, L.M., Cuadrado, F., Elkhatib, Y., Bernal-Bernabe, J., Srirama, S.N., Zhani, M.F.; Albino, V., Berardi, U., Dangelico, R.M.; Vogler, M., Schleicher, J.M., Inzinger, C., Dustdar, S., Ranjan, R.; de M. Del Esposte, A., Santana, E.F.Z., Kanashiro, L., Costa, F.M., Braghetto, K.R., Lago, N., Kon, F.; Krylovskiy, A., Jahn, M., Patti, E.; Cerny, T., Donahoo, M.J., Trnka, M.Contextual understanding of microservice architecture: current and future directions(2018)SIGAPP Appl. Comput. Rev., 17, pp. 29-45.Cited 169 times.; Pahl, C., Jamshidi, P.; Xiu, P., Yang, J., Zhao, W.; What is Docker, Available:https://www.docker.com/what-docker-old; Robinson, I.Consumer-driven contracts: A service evolution pattern. Available:https://martinfowler.com/articles/consumerDrivenContracts.html; Solis, C., Wang, X.; Soeken, M., Wille, R., Drechsler, R.; Savchenko, D., Radchenko, G., Hynninen, T., Taipale, O.Microservice test process: Design and implementation(2018)Int. J. Inf. Technol. Secur., 10, pp. 13-24.Cited 4 times.; Ashikhmin, N., Radchenko, G., Tchernykh, A.; RAML (RESTful API Modeling Language), Available:https://raml.org/; Kargar, M.J., Hanifizade, A.; Ma, S.-P., Li, C.-H., Tsai, Y.-Y., Lan, C.-W.; Hao, Y., Zhang, Y., Cao, J.; Sharma, S., Lather, J.S., Dave, M.; Bukhari, A., Liu, X.; Gysel, M., Kolbener, L., Giersche, W., Zimmermann, O.; Baresi, L., Garriga, M., De Renzis, A.; Ghirotti, S.E., Reilly, T., Rentz, A.; Shelajev, O.(2016)Why Spring is Winning the Microservices Game Available:https://zeroturnaround.com/rebellabs/why-spring-is-winning-the-microservices-game/; Schlosser, H.(2017)Microservices trends 2017: Strategies, tools and frameworks Available:https://jaxenter.com/microservices-trends-2017-survey-133265.html; Ma, S.-P., Fan, C.-Y., Chuang, Y., Lee, W.-T., Lee, S.-J., Hsueh, N.-L.; Tarjan, R.Depth-first search and linear graph algorithms(1972)SIAM J. Comput., 1, pp. 146-160.Cited 4517 times.; OpenAPI Specification (OAS), Available:https://swagger.io/docs/specification/; Mikolov, T., Chen, K., Corrado, G., Dean, J., Sutskever, L., Zweig, G.(2013)word2vec Available:https://code.google.com/archive/p/word2vec/; Ma, S.-P., Lan, C.-W., Li, C.-H.; Miller, G.A.; Ma, S.-P., Lin, H.-J., Lan, C.-W., Lee, W.-T., Hsu, M.-J.; Bagga, A., Baldwin, B.; Salton, G., Wong, A., Yang, C.S.; Wong, B.(2014)The Case for Chaos Available:https://www.slideshare.net/BruceWong3/the-case-for-chaos; Li, Y., Bandar, Z.A., McLean, D.	724-735	"""@article{WOS:000503827500053,
    Author = ""Ma, Shang-Pin and Fan, Chen-Yuan and Chuang, Yen and Liu, I-Hsiu and Lan, Ci-Wei"",
    Title = ""Graph-based and scenario-driven microservice analysis, retrieval, and testing"",
    Journal = ""FUTURE GENERATION COMPUTER SYSTEMS-THE INTERNATIONAL JOURNAL OF ESCIENCE"",
    Year = ""2019"",
    Volume = ""100"",
    Pages = ""724-735"",
    Month = ""NOV"",
    Abstract = ""The microservice architecture (MSA) differs fundamentally from the monolithic, layered architecture. The use of microservices provides a high degree of autonomy, composability, scalability, and fault-tolerance. MSA is regarded by many as a promising architecture for smart-city applications; however, a number of issues remain, including (1) the management of complex call relationships among microservices; (2) ensuring the quality of the overall software system even as new microservices are added and existing ones are modified, and (3) locating existing microservices that satisfy new requirements. In this paper, we propose a novel approach to the development of microservice-based systems, referred to as GSMART (Graph-based and Scenario-driven Microservice Analysis, Retrieval and Testing). GSMART enables the automatic generation of a ``Service Dependency Graph (SDG)'' by which to visualize and analyze dependency relationships between microservices as well as between services and scenarios. It also enables the automatic retrieval of test cases required for system changes to reduce the time and costs associated with regression testing. A microservice retrieval method using VSM and word2vec accelerates the development of new microservices tailored specifically to the needs of users based on user-provided scenarios. Experiment results demonstrate the feasibility, effectiveness, and efficiency of all of the main features of GSMART. (C) 2019 Elsevier B.V. All rights reserved."",
    Publisher = ""ELSEVIER"",
    Address = ""RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS"",
    Type = ""Article"",
    Language = ""English"",
    Affiliation = ""Ma, SP (Corresponding Author), Natl Taiwan Ocean Univ, Dept Comp Sci \\& Engn, Keelung, Taiwan. Ma, Shang-Pin; Fan, Chen-Yuan; Chuang, Yen; Liu, I-Hsiu, Natl Taiwan Ocean Univ, Dept Comp Sci \\& Engn, Keelung, Taiwan. Lan, Ci-Wei, Taiwan IBM, Taipei, Taiwan."",
    DOI = ""10.1016/j.future.2019.05.048"",
    ISSN = ""0167-739X"",
    EISSN = ""1872-7115"",
    Keywords = ""Microservice retrieval; Microservice testing; Microservice analysis; Service dependency graph; Behavior-driven development"",
    Keywords-Plus = ""DISCOVERY"",
    Research-Areas = ""Computer Science"",
    Web-of-Science-Categories = ""Computer Science, Theory \\& Methods"",
    Author-Email = ""albert@ntou.edu.tw 10557009@ntou.edu.tw 10557030@ntou.edu.tw 10657019@ntou.edu.tw lanciwei@tw.ibm.com"",
    Affiliations = ""National Taiwan Ocean University"",
    ResearcherID-Numbers = ""Ma, Shang-Pin/ABC-8834-2020"",
    Funding-Acknowledgement = ""IBM Faculty Award; Ministry of Science and Technology in Taiwan {[}MOST 105-2221-E-019-054-MY3]"",
    Funding-Text = ""This research was sponsored by the IBM Faculty Award and by the Ministry of Science and Technology in Taiwan under grant MOST 105-2221-E-019-054-MY3."",
    Number-of-Cited-References = ""38"",
    Times-Cited = ""34"",
    Usage-Count-Last-180-days = ""1"",
    Usage-Count-Since-2013 = ""18"",
    Journal-ISO = ""Futur. Gener. Comp. Syst."",
    Doc-Delivery-Number = ""JX6FD"",
    Web-of-Science-Index = ""Science Citation Index Expanded (SCI-EXPANDED)"",
    Unique-ID = ""WOS:000503827500053"",
    DA = ""2024-10-22""
}
"""	Included	Included	new_screen			2	Web of Science		Graph-based and scenario-driven microservice analysis, retrieval, and testing	https://www.webofscience.com/wos/woscc/full-record/WOS:000503827500053	ELSEVIER	
234	Behave	CEUR Workshop Proceedings	The proceedings contain 10 papers. The topics discussed include: pattern-driven knowledge systems engineering; an ontology debugger for the semantic Wiki KnowWE; behaviour-driven development for computer-interpretable clinical guidelines; ensuring the semantic correctness of workflow processes: an ontological approach; integration of activity modeller with Bayesian network based recommender for business processes; towards an ontological analysis of BPMN; CAPJA - a connector architecture for prolog and Java; migration of rule inference engine to mobile platform. challenges and case study; knowledge modeling with the open source tool myCBR; and SBVRwiki.		[No author name available]	CEUR Workshop Proceedings	The proceedings contain 10 papers. The topics discussed include: pattern-driven knowledge systems engineering; an ontology debugger for the semantic Wiki KnowWE; behaviour-driven development for computer-interpretable clinical guidelines; ensuring the semantic correctness of workflow processes: an ontological approach; integration of activity modeller with Bayesian network based recommender for business processes; towards an ontological analysis of BPMN; CAPJA - a connector architecture for prolog and Java; migration of rule inference engine to mobile platform. challenges and case study; knowledge modeling with the open source tool myCBR; and SBVRwiki.				Excluded	Excluded	new_screen			2						
235	Behave	Proceedings - 34th Brazilian Symposium on Software Engineering, SBES 2020	The proceedings contain 101 papers. The topics discussed include: on the influence of different perspectives on evaluating the quality of teamwork in the context of agile software development; challenges in agile transformation journey - a qualitative study; agile global software development: a systematic literature review; behavior-driven development: an expert panel to evaluate benefits and challenges [insightful ideas and emerging results; adaptations of scrum roles in software projects: survey and representation tentative with feature models; are code smell co-occurrences harmful to internal quality attributes? a mixed-method study; recommending composite refactorings for smell removal: heuristics and evaluation; a catalog of object-relational mapping code smells for java; and probabilistic model-based analysis to improve software energy efficiency.		[No author name available]	ACM International Conference Proceeding Series	https://www.scopus.com/record/display.uri?eid=2-s2.0-85123042060&origin=resultslist&sort=r-f&src=s&sid=38f60835522b120437da5c2a03de1c18&sot=b&sdt=b&s=TITLE%28proceedings+34th+brazilian+symposium+on+software+engineering+sbes+2020%29&sl=77&sessionSearchId=38f60835522b120437da5c2a03de1c18&relpos=0			"""@CONFERENCE{2020,
    title = ""Proceedings - 34th Brazilian Symposium on Software Engineering, SBES 2020"",
    year = ""2020"",
    journal = ""ACM International Conference Proceeding Series"",
    url = ""https://www.scopus.com/inward/record.uri?eid=2-s2.0-85123042060\&partnerID=40\&md5=172eb7e8a9c178c79e2cada96f5c83ad"",
    abstract = ""The proceedings contain 101 papers. The topics discussed include: on the influence of different perspectives on evaluating the quality of teamwork in the context of agile software development; challenges in agile transformation journey - a qualitative study; agile global software development: a systematic literature review; behavior-driven development: an expert panel to evaluate benefits and challenges [insightful ideas and emerging results; adaptations of scrum roles in software projects: survey and representation tentative with feature models; are code smell co-occurrences harmful to internal quality attributes? a mixed-method study; recommending composite refactorings for smell removal: heuristics and evaluation; a catalog of object-relational mapping code smells for java; and probabilistic model-based analysis to improve software energy efficiency."",
    publisher = ""Association for Computing Machinery"",
    isbn = ""978-145038753-8"",
    language = ""English"",
    abbrev_source_title = ""ACM Int. Conf. Proc. Ser."",
    type = ""Conference review"",
    publication_stage = ""Final"",
    source = ""Scopus"",
    note = ""Cited by: 0; Conference name: 34th Brazilian Symposium on Software Engineering, SBES 2020; Conference date: 21 October 2020 through 23 October 2020; Conference code: 165927""
}
"""	Excluded	Excluded	new_screen			2	Scopus Signed In		Proceedings - 34th Brazilian Symposium on Software Engineering, SBES 2020	https://www.scopus.com/record/display.uri?eid=2-s2.0-85123042060&origin=resultslist&sort=r-f&src=s&sid=38f60835522b120437da5c2a03de1c18&sot=b&sdt=b&s=TITLE%28proceedings+34th+brazilian+symposium+on+software+engineering+sbes+2020%29&sl=77&sessionSearchId=38f60835522b120437da5c2a03de1c18&relpos=0	Association for Computing Machinery	nan; Authors; Keywords; References; Pages
236	Behave	Proceedings - 2021 IEEE/ACM 6th International Workshop on Metamorphic Testing, MET 2021	The proceedings contain 11 papers. The topics discussed include: robustness evaluation of stacked generative adversarial networks using metamorphic testing; metamorphic detection of repackaged malware; applying metamorphic testing to homomorphic cryptography; BMT: behavior driven development-based metamorphic testing for autonomous driving models; enhancing Euro NCAP standards with metamorphic testing for verification of advanced driver-assistance systems; towards automated metamorphic test identification for ocean system models; metamorphic testing on the continuum of verification and validation of simulation models; and metamorphic testing for image-based calcium imaging analysis pipelines.		[No author name available]	Proceedings - 2021 IEEE/ACM 6th International Workshop on Metamorphic Testing, MET 2021	https://www.scopus.com/record/display.uri?eid=2-s2.0-85114325896&origin=resultslist&sort=r-f&src=s&sid=6328d7aa5ea7e50e0db7dcb0ad08dd32&sot=b&sdt=b&s=TITLE%28proceedings+2021+ieee+acm+6th+international+workshop+on+metamorphic+testing+met+2021%29&sl=91&sessionSearchId=6328d7aa5ea7e50e0db7dcb0ad08dd32&relpos=0			"""@CONFERENCE{2021,
    title = ""Proceedings - 2021 IEEE/ACM 6th International Workshop on Metamorphic Testing, MET 2021"",
    year = ""2021"",
    journal = ""Proceedings - 2021 IEEE/ACM 6th International Workshop on Metamorphic Testing, MET 2021"",
    url = ""https://www.scopus.com/inward/record.uri?eid=2-s2.0-85114325896\&partnerID=40\&md5=a023c116bb8c4695f51a27072b38c6b2"",
    abstract = ""The proceedings contain 11 papers. The topics discussed include: robustness evaluation of stacked generative adversarial networks using metamorphic testing; metamorphic detection of repackaged malware; applying metamorphic testing to homomorphic cryptography; BMT: behavior driven development-based metamorphic testing for autonomous driving models; enhancing Euro NCAP standards with metamorphic testing for verification of advanced driver-assistance systems; towards automated metamorphic test identification for ocean system models; metamorphic testing on the continuum of verification and validation of simulation models; and metamorphic testing for image-based calcium imaging analysis pipelines."",
    publisher = ""Institute of Electrical and Electronics Engineers Inc."",
    isbn = ""978-166544464-4"",
    language = ""English"",
    abbrev_source_title = ""Proc. - IEEE/ACM Int. Workshop Metamorph. Test., MET"",
    type = ""Conference review"",
    publication_stage = ""Final"",
    source = ""Scopus"",
    note = ""Cited by: 0; Conference name: 6th IEEE/ACM International Workshop on Metamorphic Testing, MET 2021; Conference date: 2 June 2021; Conference code: 171083""
}
"""	Excluded	Excluded	new_screen			2	Scopus Signed In		Proceedings - 2021 IEEE/ACM 6th International Workshop on Metamorphic Testing, MET 2021	https://www.scopus.com/record/display.uri?eid=2-s2.0-85114325896&origin=resultslist&sort=r-f&src=s&sid=6328d7aa5ea7e50e0db7dcb0ad08dd32&sot=b&sdt=b&s=TITLE%28proceedings+2021+ieee+acm+6th+international+workshop+on+metamorphic+testing+met+2021%29&sl=91&sessionSearchId=6328d7aa5ea7e50e0db7dcb0ad08dd32&relpos=0	Institute of Electrical and Electronics Engineers Inc	nan; Authors; Keywords; References; Pages
237	Behave	21st International Conference on Agile Software Development,XP 2020	The proceedings contain 32 papers. The special focus in this conference is on Agile Software Development. The topics include: Evaluation of agile team work quality; a systematic approach to agile development in highly regulated environments; diminuendo! tactics in support of faas migrations; predictable performance for qos-sensitive, scalable, multi-tenant function-as-a-service deployments; on the use of web assembly in a serverless context; agile transformation: How employees experience and cope with transformative change; strategy-focused agile transformation: A case study; shifting conceptualization of control in agile transformations; it's not easy being agile: Unpacking paradoxes in agile environments; towards specific software engineering practices for early-stage startups; improving agility by managing shared libraries in microservices; certification as a service; dependencies of agile teams - an analysis of the scaled agile framework; understanding work practices of autonomous agile teams: A social-psychological review; spotify tailoring for architectural governance; enabling team autonomy in a large public organization; defining testops: Collaborative behaviors and technology-driven workflows seen as enablers of effective software testing in devops; investigating agile adoption in saudi arabian mobile application development; crowd agile model for effective software development; continuous information monitoring in software startups; api utilization and monetization in finnish industries; is it possible to apply agile methods to contribute to the linux kernel?; forming and assessing student teams in software engineering courses; covid-19's influence on the future of agile; ico crowdfunding: Incentives, pricing strategy, token strategy and crowd involvement; what key aspects do icos reveal about their businesses?; operationalizing agile methods: Examining coherence in large-scale agile transformations.		[No author name available]	Lecture Notes in Business Information Processing	https://www.scopus.com/record/display.uri?eid=2-s2.0-85092199916&origin=resultslist&sort=r-f&src=s&sid=82be05a47815bf4239d4ebaf1aa83a15&sot=b&sdt=b&s=TITLE%2821st+international+conference+on+agile+software+development+xp+2020%29&sl=74&sessionSearchId=82be05a47815bf4239d4ebaf1aa83a15&relpos=0			"""@ARTICLE{2020,
    editor = ""M., Paasivaara and P., Kruchten"",
    title = ""21st International Conference on Agile Software Development,XP 2020"",
    year = ""2020"",
    journal = ""Lecture Notes in Business Information Processing"",
    volume = ""396 LNBIP"",
    url = ""https://www.scopus.com/inward/record.uri?eid=2-s2.0-85092199916\&partnerID=40\&md5=87c03851c5fd8a2e1a2d1a7bf99998a8"",
    abstract = ""The proceedings contain 32 papers. The special focus in this conference is on Agile Software Development. The topics include: Evaluation of agile team work quality; a systematic approach to agile development in highly regulated environments; diminuendo! tactics in support of faas migrations; predictable performance for qos-sensitive, scalable, multi-tenant function-as-a-service deployments; on the use of web assembly in a serverless context; agile transformation: How employees experience and cope with transformative change; strategy-focused agile transformation: A case study; shifting conceptualization of control in agile transformations; it's not easy being agile: Unpacking paradoxes in agile environments; towards specific software engineering practices for early-stage startups; improving agility by managing shared libraries in microservices; certification as a service; dependencies of agile teams - an analysis of the scaled agile framework; understanding work practices of autonomous agile teams: A social-psychological review; spotify tailoring for architectural governance; enabling team autonomy in a large public organization; defining testops: Collaborative behaviors and technology-driven workflows seen as enablers of effective software testing in devops; investigating agile adoption in saudi arabian mobile application development; crowd agile model for effective software development; continuous information monitoring in software startups; api utilization and monetization in finnish industries; is it possible to apply agile methods to contribute to the linux kernel?; forming and assessing student teams in software engineering courses; covid-19's influence on the future of agile; ico crowdfunding: Incentives, pricing strategy, token strategy and crowd involvement; what key aspects do icos reveal about their businesses?; operationalizing agile methods: Examining coherence in large-scale agile transformations."",
    publisher = ""Springer Science and Business Media Deutschland GmbH"",
    issn = ""18651348"",
    isbn = ""978-303058857-1"",
    language = ""English"",
    abbrev_source_title = ""Lect. Notes Bus. Inf. Process."",
    type = ""Conference review"",
    publication_stage = ""Final"",
    source = ""Scopus"",
    note = ""Cited by: 0; Conference name: 21st International Conference on Agile Software Development,XP 2020; Conference date: 8 June 2020 through 12 June 2020; Conference code: 249289""
}
"""	Excluded	Excluded	new_screen			2	Scopus Signed In		21st International Conference on Agile Software Development, XP 2020	https://www.scopus.com/record/display.uri?eid=2-s2.0-85092199916&origin=resultslist&sort=r-f&src=s&sid=82be05a47815bf4239d4ebaf1aa83a15&sot=b&sdt=b&s=TITLE%2821st+international+conference+on+agile+software+development+xp+2020%29&sl=74&sessionSearchId=82be05a47815bf4239d4ebaf1aa83a15&relpos=0	Springer Science and Business Media Deutschland GmbH	nan; Authors; Keywords; References; Pages
238	Behave	2020 IEEE International Conference on Problems of Infocommunications Science and Technology, PIC S and T 2020 - Proceedings	The proceedings contain 171 papers. The topics discussed include: last mile technique for wireless delivery system using an accelerating lens; compact polarizers for satellite information systems; highly-distributed systems: what is inside?; behavior driven development approach in the modern quality control process; analysis of influence of UDP parameters on QoS in IP network; categorical analysis of logical networks in application to intelligent radar systems; models and information technology for reliable design of the functioning processes of flexible production systems as complex human-machine systems; advanced code-based electronic digital signature scheme; required safety component of automotive cyber-physical systems; and structure optimization of the multi-channel on-board radar with antenna aperture synthesis and algorithm for power line selection on the background of the earth surface.		[No author name available]	2020 IEEE International Conference on Problems of Infocommunications Science and Technology, PIC S and T 2020 - Proceedings	https://www.scopus.com/record/display.uri?eid=2-s2.0-85114399629&origin=resultslist&sort=r-f&src=s&sid=37d9cc531e0472c296ac3e15c90c38bf&sot=b&sdt=b&s=TITLE%282020+ieee+international+conference+on+problems+of+infocommunications+science+and+technology+pic+s+and+t+2020+proceedings%29&sl=127&sessionSearchId=37d9cc531e0472c296ac3e15c90c38bf&relpos=0			"""@CONFERENCE{2021,
    editor = ""D., Ageyev"",
    title = ""2020 IEEE International Conference on Problems of Infocommunications Science and Technology, PIC S and T 2020 - Proceedings"",
    year = ""2021"",
    journal = ""2020 IEEE International Conference on Problems of Infocommunications Science and Technology, PIC S and T 2020 - Proceedings"",
    url = ""https://www.scopus.com/inward/record.uri?eid=2-s2.0-85114399629\&partnerID=40\&md5=50c3bed9cfaa6a8aaf6858ee5d00e805"",
    abstract = ""The proceedings contain 171 papers. The topics discussed include: last mile technique for wireless delivery system using an accelerating lens; compact polarizers for satellite information systems; highly-distributed systems: what is inside?; behavior driven development approach in the modern quality control process; analysis of influence of UDP parameters on QoS in IP network; categorical analysis of logical networks in application to intelligent radar systems; models and information technology for reliable design of the functioning processes of flexible production systems as complex human-machine systems; advanced code-based electronic digital signature scheme; required safety component of automotive cyber-physical systems; and structure optimization of the multi-channel on-board radar with antenna aperture synthesis and algorithm for power line selection on the background of the earth surface."",
    publisher = ""Institute of Electrical and Electronics Engineers Inc."",
    isbn = ""978-172819177-5"",
    language = ""English"",
    abbrev_source_title = ""IEEE Int. Conf. Probl. Infocommunications Sci. Technol., PIC S T - Proc."",
    type = ""Conference review"",
    publication_stage = ""Final"",
    source = ""Scopus"",
    note = ""Cited by: 0; Conference name: 2020 IEEE International Conference on Problems of Infocommunications Science and Technology, PIC S and T 2020; Conference date: 6 October 2020 through 9 October 2020; Conference code: 171140""
}
"""	Excluded	Excluded	new_screen			2	Scopus Signed In		2020 IEEE International Conference on Problems of Infocommunications Science and Technology, PIC S and T 2020 - Proceedings	https://www.scopus.com/record/display.uri?eid=2-s2.0-85114399629&origin=resultslist&sort=r-f&src=s&sid=37d9cc531e0472c296ac3e15c90c38bf&sot=b&sdt=b&s=TITLE%282020+ieee+international+conference+on+problems+of+infocommunications+science+and+technology+pic+s+and+t+2020+proceedings%29&sl=127&sessionSearchId=37d9cc531e0472c296ac3e15c90c38bf&relpos=0	Institute of Electrical and Electronics Engineers Inc	nan; Authors; Keywords; References; Pages
239	Behave	CEUR Workshop Proceedings	The proceedings contain 19 papers. The topics discussed include: product configuration in the wild: strategies for conflicting decisions in web configurators; configuring release plans; insights for configuration in natural language; group decision support for requirements management processes; Chatbot-based tourist recommendations using model-based reasoning; the effect of default options on consumer decisions in the product configuration process; cost benefit analysis in product configuration systems; do you read me? on the limits of manufacturing part numbers for communicating product variety; behavior-driven development in product configuration systems; integrating semantic web technologies and ASP for product configuration; measuring the complexity of product configuration systems; generating configuration models from requirements to assist in product management - dependency engine and its performance assessment; quasi-finite domains: dealing with the infinite in mass customization; software configuration diagnosis - a survey of existing methods and open challenges; knowledge retrieval for configuring risks when answering calls to tenders or direct customer demands; how to deal with engineering-to-order product/system configuration?; towards knowledge infrastructure for highly variant voltage transmission systems; and configuration lifecycle management - an assessment of the benefits based on maturity.		[No author name available]	CEUR Workshop Proceedings	The proceedings contain 19 papers. The topics discussed include: product configuration in the wild: strategies for conflicting decisions in web configurators; configuring release plans; insights for configuration in natural language; group decision support for requirements management processes; Chatbot-based tourist recommendations using model-based reasoning; the effect of default options on consumer decisions in the product configuration process; cost benefit analysis in product configuration systems; do you read me? on the limits of manufacturing part numbers for communicating product variety; behavior-driven development in product configuration systems; integrating semantic web technologies and ASP for product configuration; measuring the complexity of product configuration systems; generating configuration models from requirements to assist in product management - dependency engine and its performance assessment; quasi-finite domains: dealing with the infinite in mass customization; software configuration diagnosis - a survey of existing methods and open challenges; knowledge retrieval for configuring risks when answering calls to tenders or direct customer demands; how to deal with engineering-to-order product/system configuration?; towards knowledge infrastructure for highly variant voltage transmission systems; and configuration lifecycle management - an assessment of the benefits based on maturity.				Excluded	Excluded	new_screen			2						
240	Behave	8th International Conference on Model and Data Engineering, MEDI 2018, International Workshop on Modeling, Verification and Testing of Dependable Critical Systems, DETECT 2018, Model and Data Engineering for Social Good Workshop, MEDI4SG 2018, 2nd International Workshop on Cybersecurity and Functional Safety in Cyber-Physical Systems, IWCFS 2018, International Workshop on Formal Model for Mastering Multifaceted Systems, REMEDY 2018	The proceedings contain 21 papers. The special focus in this conference is on Model and Data Engineering. The topics include: Towards a requirements engineering approach for capturing uncertainty in cyber-physical systems environment; assessment of emerging standards for safety and security co-design on a railway case study; generation of behavior-driven development C++ tests from abstract state machine scenarios; hybrid systems and event-B: A formal approach to signalised left-turn assist; handling reparation in incremental construction of realizable conversation protocols; Analyzing a ROS based architecture for its cross reuse in ISO26262 settings; reliability in fully probabilistic event-B: How to bound the enabling of events; systematic construction of critical embedded systems using event-B; component design and adaptation based on behavioral contracts; An MDA approach for the specification of relay-based diagrams; Towards real-time semantics for a distributed event-based MOP language; Automatic planning: From event-B to PDDL; a problem-oriented approach to critical system design and diagnosis support; formal specification and verification of cloud resource allocation using timed petri-nets; Petri nets to event-B: Handling mathematical sequences through an ERTMS L3 Case; model-based verification and testing methodology for safety-critical airborne systems; gamification and serious games based learning for early childhood in rural areas; context-based sentiment analysis: A survey; a multi-agent system-based distributed intrusion detection system for a cloud computing.		[No author name available]	Communications in Computer and Information Science	The proceedings contain 21 papers. The special focus in this conference is on Model and Data Engineering. The topics include: Towards a requirements engineering approach for capturing uncertainty in cyber-physical systems environment; assessment of emerging standards for safety and security co-design on a railway case study; generation of behavior-driven development C++ tests from abstract state machine scenarios; hybrid systems and event-B: A formal approach to signalised left-turn assist; handling reparation in incremental construction of realizable conversation protocols; Analyzing a ROS based architecture for its cross reuse in ISO26262 settings; reliability in fully probabilistic event-B: How to bound the enabling of events; systematic construction of critical embedded systems using event-B; component design and adaptation based on behavioral contracts; An MDA approach for the specification of relay-based diagrams; Towards real-time semantics for a distributed event-based MOP language; Automatic planning: From event-B to PDDL; a problem-oriented approach to critical system design and diagnosis support; formal specification and verification of cloud resource allocation using timed petri-nets; Petri nets to event-B: Handling mathematical sequences through an ERTMS L3 Case; model-based verification and testing methodology for safety-critical airborne systems; gamification and serious games based learning for early childhood in rural areas; context-based sentiment analysis: A survey; a multi-agent system-based distributed intrusion detection system for a cloud computing.				Excluded	Excluded	new_screen			2						
241	Behave	17th AGILE Conference on Geographic Information Science, AGILE 2014	The proceedings contain 22 papers. The special focus in this conference is on Geographic Information Science. The topics include: Estimating completeness of vgi datasets by analyzing community activity over time periods; estimation of building types on openstreetmap based on urban morphology analysis; qualitative representations of extended spatial objects in sketch maps; exploring the geographical relations between social media and flood phenomena to improve situational awareness; event identification from georeferenced images; a recursive bayesian filter for anomalous behavior detection in trajectory data; using GPS logs to identify agronomical activities; assessing the influence of preprocessing methods on raw GPS-Data for automated change point detection; mining frequent spatio-temporal patterns in wind speed and direction; the text encoding algorithm for latitude/longitude/time; fast SNN-Based clustering approach for large geospatial data sets; RSS and sensor fusion algorithms for indoor location systems on Smartphones; an image segmentation process enhancement for land cover mapping from very high resolution remote sensing data application in a rural area; line matching for integration of photographic and geographic databases; encoding and querying historic map content; an area merge operation for smooth zooming; point labeling with sliding labels in interactive maps; comparing verbal instructions and sketch maps.; behaviour-driven development applied to the conformance testing of INSPIRE web services; making the web of data available via web feature services; a geospatial exploration of comparable cities and a gis-based process for calculating visibility impact from buildings during transmission line routing.		[No author name available]	Lecture Notes in Geoinformation and Cartography	https://www.scopus.com/record/display.uri?eid=2-s2.0-84930357526&origin=resultslist&sort=r-f&src=s&sid=221f42cee23b3e25ba95a6038fd80d79&sot=b&sdt=b&s=TITLE%2817th+agile+conference+on+geographic+information+science+agile+2014%29&sl=73&sessionSearchId=221f42cee23b3e25ba95a6038fd80d79&relpos=0		1 - 402	"""@CONFERENCE{20141,
    editor = ""C., Granell and S., Schade and J., Huerta"",
    title = ""17th AGILE Conference on Geographic Information Science, AGILE 2014"",
    year = ""2014"",
    journal = ""Lecture Notes in Geoinformation and Cartography"",
    pages = ""1 - 402"",
    url = ""https://www.scopus.com/inward/record.uri?eid=2-s2.0-84930357526\&partnerID=40\&md5=7e2a87840db2873b7850d8665113e923"",
    abstract = ""The proceedings contain 22 papers. The special focus in this conference is on Geographic Information Science. The topics include: Estimating completeness of vgi datasets by analyzing community activity over time periods; estimation of building types on openstreetmap based on urban morphology analysis; qualitative representations of extended spatial objects in sketch maps; exploring the geographical relations between social media and flood phenomena to improve situational awareness; event identification from georeferenced images; a recursive bayesian filter for anomalous behavior detection in trajectory data; using GPS logs to identify agronomical activities; assessing the influence of preprocessing methods on raw GPS-Data for automated change point detection; mining frequent spatio-temporal patterns in wind speed and direction; the text encoding algorithm for latitude/longitude/time; fast SNN-Based clustering approach for large geospatial data sets; RSS and sensor fusion algorithms for indoor location systems on Smartphones; an image segmentation process enhancement for land cover mapping from very high resolution remote sensing data application in a rural area; line matching for integration of photographic and geographic databases; encoding and querying historic map content; an area merge operation for smooth zooming; point labeling with sliding labels in interactive maps; comparing verbal instructions and sketch maps.; behaviour-driven development applied to the conformance testing of INSPIRE web services; making the web of data available via web feature services; a geospatial exploration of comparable cities and a gis-based process for calculating visibility impact from buildings during transmission line routing."",
    publisher = ""Kluwer Academic Publishers"",
    issn = ""18632351"",
    isbn = ""978-331903610-6"",
    language = ""English"",
    abbrev_source_title = ""Lect. Notes Geoinformation Cartogr."",
    type = ""Conference review"",
    publication_stage = ""Final"",
    source = ""Scopus"",
    note = ""Cited by: 0; Conference name: 17th AGILE Conference on Geographic Information Science, AGILE 2014; Conference date: ; Conference code: 111417""
}
"""	Excluded	Excluded	new_screen			2	Scopus Signed In		17th AGILE Conference on Geographic Information Science, AGILE 2014	https://www.scopus.com/record/display.uri?eid=2-s2.0-84930357526&origin=resultslist&sort=r-f&src=s&sid=221f42cee23b3e25ba95a6038fd80d79&sot=b&sdt=b&s=TITLE%2817th+agile+conference+on+geographic+information+science+agile+2014%29&sl=73&sessionSearchId=221f42cee23b3e25ba95a6038fd80d79&relpos=0	Kluwer Academic Publishers	nan; Authors; Keywords; References
242	Behave	CEUR Workshop Proceedings	The proceedings contain 24 papers. The topics discussed include: modeling test cases in BPMN for behavior-driven development; automating data exchange in process choreographies; gameful business process modeling; a game theoretic perspective on business processes; elastic process optimization and scheduling in the cloud; learning from quality issues of BPMN models from industry; the process of creating a domain specific modeling method; requirements catalog for business process modeling recommender systems; evaluating wiki collaborative features in ontology authoring; a visual language for modeling multiple perspectives of business process compliance rules; detecting flight trajectory anomalies and predicting diversions in freight transportation; and plausibility checking of formal business process specifications in linear temporal logic.		[No author name available]	CEUR Workshop Proceedings	The proceedings contain 24 papers. The topics discussed include: modeling test cases in BPMN for behavior-driven development; automating data exchange in process choreographies; gameful business process modeling; a game theoretic perspective on business processes; elastic process optimization and scheduling in the cloud; learning from quality issues of BPMN models from industry; the process of creating a domain specific modeling method; requirements catalog for business process modeling recommender systems; evaluating wiki collaborative features in ontology authoring; a visual language for modeling multiple perspectives of business process compliance rules; detecting flight trajectory anomalies and predicting diversions in freight transportation; and plausibility checking of formal business process specifications in linear temporal logic.				Excluded	Excluded	new_screen			2						
243	Behave	2012 IEEE International High Level Design Validation and Test Workshop, HLDVT 2012	The proceedings contain 24 papers. The topics discussed include: sequential equivalence checking of hard instances with targeted inductive invariants and efficient filtering strategies; behavior driven development for circuit design and verification; using decision diagrams to compactly represent the state space for explicit model checking; automatic generation of deadlock detection algorithms for a family of micro-architecture description languages of communication fabrics; automatic generation of Verilog bus transactors from natural language protocol specifications; single-source hardware modeling of different abstraction levels with state charts; using haloes in mixed-signal assertion based verification; a formal method to improve SystemVerilog functional coverage; a functional test generation technique for RTL datapaths; constrained signal selection for post-silicon validation; and monitoring distributed reactive systems.		[No author name available]	Proceedings - IEEE International High-Level Design Validation and Test Workshop, HLDVT	https://www.scopus.com/record/display.uri?eid=2-s2.0-84874290933&origin=resultslist&sort=r-f&src=s&sid=6b6bc8e278a9ace9c9d52ed55e9e2226&sot=b&sdt=b&s=TITLE%282012+ieee+international+high+level+design+validation+and+test+workshop+hldvt+2012%29&sl=88&sessionSearchId=6b6bc8e278a9ace9c9d52ed55e9e2226&relpos=0			"""@CONFERENCE{2012,
    title = ""2012 IEEE International High Level Design Validation and Test Workshop, HLDVT 2012"",
    year = ""2012"",
    journal = ""Proceedings - IEEE International High-Level Design Validation and Test Workshop, HLDVT"",
    url = ""https://www.scopus.com/inward/record.uri?eid=2-s2.0-84874290933\&partnerID=40\&md5=febc9cf6fc038b759eea1c898369647c"",
    abstract = ""The proceedings contain 24 papers. The topics discussed include: sequential equivalence checking of hard instances with targeted inductive invariants and efficient filtering strategies; behavior driven development for circuit design and verification; using decision diagrams to compactly represent the state space for explicit model checking; automatic generation of deadlock detection algorithms for a family of micro-architecture description languages of communication fabrics; automatic generation of Verilog bus transactors from natural language protocol specifications; single-source hardware modeling of different abstraction levels with state charts; using haloes in mixed-signal assertion based verification; a formal method to improve SystemVerilog functional coverage; a functional test generation technique for RTL datapaths; constrained signal selection for post-silicon validation; and monitoring distributed reactive systems."",
    issn = ""15526674"",
    isbn = ""978-146732897-5"",
    language = ""English"",
    abbrev_source_title = ""Proc. IEEE Int. High Level Des. Validation Test Workshop HLDVT"",
    type = ""Conference review"",
    publication_stage = ""Final"",
    source = ""Scopus"",
    note = ""Cited by: 0; Conference name: 2012 IEEE International High Level Design Validation and Test Workshop, HLDVT 2012; Conference date: 9 November 2012 through 10 November 2012; Conference code: 95654""
}
"""	Excluded	Excluded	new_screen			2	Scopus Signed In		2012 IEEE International High Level Design Validation and Test Workshop, HLDVT 2012	https://www.scopus.com/record/display.uri?eid=2-s2.0-84874290933&origin=resultslist&sort=r-f&src=s&sid=6b6bc8e278a9ace9c9d52ed55e9e2226&sot=b&sdt=b&s=TITLE%282012+ieee+international+high+level+design+validation+and+test+workshop+hldvt+2012%29&sl=88&sessionSearchId=6b6bc8e278a9ace9c9d52ed55e9e2226&relpos=0		nan; Authors; Keywords; References; Pages; Publisher
244	Behave	Objects, Models, Components, Patterns - 50th International Conference, TOOLS 2012, Proceedings	The proceedings contain 24 papers. The topics discussed include: supporting compile-time debugging and precise error reporting in meta-programs; identifying a unifying mechanism for the implementation of concurrency abstractions on multi-language virtual machines; verification of snapshotable trees using access permissions and typestate; multiparty session C: safe parallel programming with message optimisation; non-interference on UMI state-charts; representing uniqueness constraints in object-relational mapping; detection of seed methods for quantification of feature confinement; assisted behavior driven development using natural language processing; learning to classify bug reports into components; incremental dynamic updates with first-class contexts; and elucidative development for model-based documentation.		[No author name available]	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)	https://www.scopus.com/record/display.uri?eid=2-s2.0-84862190138&origin=resultslist&sort=r-f&src=s&sid=6118384fe416f3ac089c781bf533e8b7&sot=b&sdt=b&s=TITLE%28objects+models+components+patterns+50th+international+conference+tools+2012+proceedings%29&sl=94&sessionSearchId=6118384fe416f3ac089c781bf533e8b7&relpos=0			"""@ARTICLE{2012,
    title = ""Objects, Models, Components, Patterns - 50th International Conference, TOOLS 2012, Proceedings"",
    year = ""2012"",
    journal = ""Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)"",
    volume = ""7304 LNCS"",
    url = ""https://www.scopus.com/inward/record.uri?eid=2-s2.0-84862190138\&partnerID=40\&md5=add9e5027d05cb5ab1ac5b4404340948"",
    abstract = ""The proceedings contain 24 papers. The topics discussed include: supporting compile-time debugging and precise error reporting in meta-programs; identifying a unifying mechanism for the implementation of concurrency abstractions on multi-language virtual machines; verification of snapshotable trees using access permissions and typestate; multiparty session C: safe parallel programming with message optimisation; non-interference on UMI state-charts; representing uniqueness constraints in object-relational mapping; detection of seed methods for quantification of feature confinement; assisted behavior driven development using natural language processing; learning to classify bug reports into components; incremental dynamic updates with first-class contexts; and elucidative development for model-based documentation."",
    issn = ""16113349"",
    isbn = ""978-364230560-3"",
    language = ""English"",
    abbrev_source_title = ""Lect. Notes Comput. Sci."",
    type = ""Conference review"",
    publication_stage = ""Final"",
    source = ""Scopus"",
    note = ""Cited by: 0; Conference name: 50th International Conference on Objects, Models, Components, Patterns, TOOLS 2012; Conference date: 29 May 2012 through 31 May 2012; Conference code: 90034""
}
"""	Excluded	Excluded	new_screen			2	Scopus Signed In		Objects, Models, Components, Patterns - 50th International Conference, TOOLS 2012, Proceedings	https://www.scopus.com/record/display.uri?eid=2-s2.0-84862190138&origin=resultslist&sort=r-f&src=s&sid=6118384fe416f3ac089c781bf533e8b7&sot=b&sdt=b&s=TITLE%28objects+models+components+patterns+50th+international+conference+tools+2012+proceedings%29&sl=94&sessionSearchId=6118384fe416f3ac089c781bf533e8b7&relpos=0		nan; Authors; Keywords; References; Pages; Publisher
245	Behave	IFIP WG 13.2/13.5 Joint 6th International Conference on Human-Centered Software Engineering, HCSE 2016 and 8th International Conference on Human Error, Safety, and System Development, HESSD 2016	The proceedings contain 25 papers. The special focus in this conference is on Agile, Human-Centered Software Engineering, Usability Evaluation, Testing, Socio-Technical, Ethical Considerations, Human Error, Safety-Critical Systems, User, Developer Experience, Models, Methods, Adopting Tools, Demos and Posters. The topics include: Supporting the HCI aspect of agile software development by tool support for UI-pattern transformations; usability problems experienced by different groups of skilled internet users; user-test results injection into task-based design process for the assessment and improvement of both usability and user experience; framework for relative web usability evaluation on usability features in MDD; testing prototypes and final user interfaces through an ontological perspective for behavior-driven development; complementary tools and techniques for supporting fitness-for-purpose of interactive critical systems; a conceptual ux-aware model of requirements; audio guidance for runner training; enterprise model-driven agile human-centered software engineering; collaborative task modelling on the web and declarative prototyping with data; a first prototype integrated in HAMSTERS.		[No author name available]	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)	The proceedings contain 25 papers. The special focus in this conference is on Agile, Human-Centered Software Engineering, Usability Evaluation, Testing, Socio-Technical, Ethical Considerations, Human Error, Safety-Critical Systems, User, Developer Experience, Models, Methods, Adopting Tools, Demos and Posters. The topics include: Supporting the HCI aspect of agile software development by tool support for UI-pattern transformations; usability problems experienced by different groups of skilled internet users; user-test results injection into task-based design process for the assessment and improvement of both usability and user experience; framework for relative web usability evaluation on usability features in MDD; testing prototypes and final user interfaces through an ontological perspective for behavior-driven development; complementary tools and techniques for supporting fitness-for-purpose of interactive critical systems; a conceptual ux-aware model of requirements; audio guidance for runner training; enterprise model-driven agile human-centered software engineering; collaborative task modelling on the web and declarative prototyping with data; a first prototype integrated in HAMSTERS.				Excluded	Excluded	new_screen			2						
246	Behave	Enterprise Information Systems of the Future - 6th IFIP WG 8.9 Working Conference, CONFENIS 2012, Revised Selected Papers	The proceedings contain 25 papers. The topics discussed include: process innovation: redesigning an enterprise backbone system; sub-process discovery: opportunities for process diagnostics; measuring the impact of suspension on the process enactment environment during process evolution; user perceptions, motivations and implications on ERP usage: an Indian higher education context; a decision support system based on RCM approach to define maintenance strategies; towards more flexible enterprise information systems; a proposal of a process model for requirements elicitation in information mining projects; a financial perspective on improving ICT service delivery: a case at the Belgian railways; looking for a fit for purpose: business process maturity models from a user's perspective; enterprise information systems security: a case study in the banking sector; and implementing behavior driven development in an open source ERP.		[No author name available]	Lecture Notes in Business Information Processing	The proceedings contain 25 papers. The topics discussed include: process innovation: redesigning an enterprise backbone system; sub-process discovery: opportunities for process diagnostics; measuring the impact of suspension on the process enactment environment during process evolution; user perceptions, motivations and implications on ERP usage: an Indian higher education context; a decision support system based on RCM approach to define maintenance strategies; towards more flexible enterprise information systems; a proposal of a process model for requirements elicitation in information mining projects; a financial perspective on improving ICT service delivery: a case at the Belgian railways; looking for a fit for purpose: business process maturity models from a user's perspective; enterprise information systems security: a case study in the banking sector; and implementing behavior driven development in an open source ERP.				Excluded	Excluded	new_screen			2						
247	Behave	2017 8th International Conference on Information and Communication Systems, ICICS 2017	The proceedings contain 65 papers. The topics discussed include: using behavior-driven development with hardware-software co-design for autonomous load management; dealing with decisional natural language why-question in business intelligence; sentence-aligned parallel corpus Amazigh-English; corpora for sentiment analysis of Arabic text in social media; ALIF editor for generating Arabic normalized lexicons; a brain friendly tool to facilitate research-teaching nexus: mind maps; adaptive e-learning web-based English tutor using data mining techniques and Jackson's learning styles; and towards a model-based approach for developing and QA of online business processes.		[No author name available]	2017 8th International Conference on Information and Communication Systems, ICICS 2017	The proceedings contain 65 papers. The topics discussed include: using behavior-driven development with hardware-software co-design for autonomous load management; dealing with decisional natural language why-question in business intelligence; sentence-aligned parallel corpus Amazigh-English; corpora for sentiment analysis of Arabic text in social media; ALIF editor for generating Arabic normalized lexicons; a brain friendly tool to facilitate research-teaching nexus: mind maps; adaptive e-learning web-based English tutor using data mining techniques and Jackson's learning styles; and towards a model-based approach for developing and QA of online business processes.				Excluded	Excluded	new_screen			2						
248	Behave	4th International Conference on Computer Science and Computational Intelligence: Enabling Collaboration to Escalate Impact of Research Results for Society, ICCSCI 2019	The proceedings contain 87 papers. The topics discussed include: comparative performance of filtering methods for reducing noise in ischemic posterior Fossa CT images; gender demography classification on instagram based on user's comments section; automotive security with authorization and tracking via gps; combination of test-driven development and behavior-driven development for improving backend testing performance; modeling of the acute lymphoblastic leukemia detection based on the principal object characteristics of the color image; music recommender system based on genre using convolutional recurrent neural networks; MobileNet convolutional neural networks and support vector machines for palmprint recognition; MVC architecture: a comparative study between laravel framework and slim framework in freelancer project monitoring system web based; and recommendation of scheduling tourism routes using tabu search method (case study Bandung).		[No author name available]	Procedia Computer Science	The proceedings contain 87 papers. The topics discussed include: comparative performance of filtering methods for reducing noise in ischemic posterior Fossa CT images; gender demography classification on instagram based on user's comments section; automotive security with authorization and tracking via gps; combination of test-driven development and behavior-driven development for improving backend testing performance; modeling of the acute lymphoblastic leukemia detection based on the principal object characteristics of the color image; music recommender system based on genre using convolutional recurrent neural networks; MobileNet convolutional neural networks and support vector machines for palmprint recognition; MVC architecture: a comparative study between laravel framework and slim framework in freelancer project monitoring system web based; and recommendation of scheduling tourism routes using tabu search method (case study Bandung).				Excluded	Excluded	new_screen			2						
249	Behave	CLOSER 2016 - Proceedings of the 6th International Conference on Cloud Computing and Services Science	The proceedings contain 89 papers. The topics discussed include: native cloud applications; SemNaaS: semantic web for network as a service; design time validation for the correct execution of BPMN collaborations; evidence collection in cloud provider chains; decision support system for adoption of cloud-based services; process mining monitoring for map reduce applications in the cloud; a wavelet-inspired anomaly detection framework for cloud platforms; evaluating the effect of utility-based decision making in collective adaptive systems; sing a predator-prey model to explain variations of cloud spot price; towards automatic service level agreements information extraction; an enhanced workflow scheduling algorithm in cloud computing; and container-centric methodology for benchmarking workflow management systems.		[No author name available]	CLOSER 2016 - Proceedings of the 6th International Conference on Cloud Computing and Services Science	https://www.scopus.com/record/display.uri?eid=2-s2.0-84979777122&origin=resultslist&sort=r-f&src=s&sid=20bcaf6482e6199a90afb148e077cb01&sot=b&sdt=b&s=TITLE%28closer+2016+proceedings+of+the+6th+international+conference+on+cloud+computing+and+services+science%29&sl=106&sessionSearchId=20bcaf6482e6199a90afb148e077cb01&relpos=0			"""@CONFERENCE{2016,
    editor = ""M., Helfert and D., Ferguson and V.M., Munoz and J., Cardoso and J., Cardoso"",
    title = ""CLOSER 2016 - Proceedings of the 6th International Conference on Cloud Computing and Services Science"",
    year = ""2016"",
    journal = ""CLOSER 2016 - Proceedings of the 6th International Conference on Cloud Computing and Services Science"",
    volume = ""1"",
    url = ""https://www.scopus.com/inward/record.uri?eid=2-s2.0-84979777122\&partnerID=40\&md5=8f1dbd32dc31d6b0deeb1d7cdaf7e038"",
    abstract = ""The proceedings contain 89 papers. The topics discussed include: native cloud applications; SemNaaS: semantic web for network as a service; design time validation for the correct execution of BPMN collaborations; evidence collection in cloud provider chains; decision support system for adoption of cloud-based services; process mining monitoring for map reduce applications in the cloud; a wavelet-inspired anomaly detection framework for cloud platforms; evaluating the effect of utility-based decision making in collective adaptive systems; sing a predator-prey model to explain variations of cloud spot price; towards automatic service level agreements information extraction; an enhanced workflow scheduling algorithm in cloud computing; and container-centric methodology for benchmarking workflow management systems."",
    publisher = ""SciTePress"",
    isbn = ""978-989758182-3"",
    language = ""English"",
    abbrev_source_title = ""CLOSER - Proc. Int. Conf. Cloud Comput. Serv. Sci."",
    type = ""Conference review"",
    publication_stage = ""Final"",
    source = ""Scopus"",
    note = ""Cited by: 0; Conference name: 6th International Conference on Cloud Computing and Services Science, CLOSER 2016; Conference date: 23 April 2016 through 25 April 2016; Conference code: 122372""
}
"""	Excluded	Excluded	new_screen			2	Scopus Signed In		CLOSER 2016 - Proceedings of the 6th International Conference on Cloud Computing and Services Science	https://www.scopus.com/record/display.uri?eid=2-s2.0-84979777122&origin=resultslist&sort=r-f&src=s&sid=20bcaf6482e6199a90afb148e077cb01&sot=b&sdt=b&s=TITLE%28closer+2016+proceedings+of+the+6th+international+conference+on+cloud+computing+and+services+science%29&sl=106&sessionSearchId=20bcaf6482e6199a90afb148e077cb01&relpos=0	SciTePress	nan; Authors; Keywords; References; Pages
250	Behave	A Service Framework for Parallel Test Execution on a Developer's Local Development Workstation	The proliferation of distributed microservices driven by service oriented architecture and the effectiveness of agile software development processes such as Test Driven Development (TDD), Behavior Driven Development (BDD), inspired by extreme programming (XP), have driven the challenging necessity to receive prompt test feedback during software development iteratively. Although few test frameworks can execute unit tests in memory in parallel, no existing test frameworks can reliably perform parallel execution for the tests that rely on file system access, database fixtures and network communication. Isolated test execution environment with dedicated resources is a prerequisite to address these challenges. No previous research addresses this need to run groups of tests in parallel on the same development host. In this paper, to cut down test execution time, we present a service framework for parallel tests execution in a developer's containerized sandbox using operating system level virtualization provided by Docker, the new hot driver for Platform as a Service (PaaS).	Containers; File systems; Testing; Databases; Generators; Workstations; Parallel Test; Executive Tests; Service Framework; Operating System; Test Group; Software Development; Processing Software; File System; Testing Framework; Database File; Agile Development; Unit Tests; Parallel Execution; Execution Environment; Microservices; Development Phase; Number Of Tests; Development Environment; Type Of Test; Web Application; Application Instances; Test Suite; Virtual Machines; Docker Container; Entire Suite; Single Host; Acceptable Test; Run Test; Real-world Scenarios; Mac OSX; parallel testing; cloud testing; test execution environment;Docker; agile development	Mazedur Rahman; Zehua Chen; Jerry Gao	2015 IEEE Symposium on Service-Oriented System Engineering	https://doi.org/10.1109/SOSE.2015.45	"1.M. Fowler, ""Agile Software Development"", Sep 2014. Google Scholar; 2.S. Ambler, ""2013 IT Project Success Rates Survey Results"", Sep 2014. Google Scholar; 3.""Principles behind the Agile Manifesto"", Sep 2014. Google Scholar; 4.""Continuous Integration"". Google Scholar; 5.K. Beck, ""Test Driven Development: By Example"" in , Boston, MA:Addison-Wesley Longman Publishing Co., Inc., pp. 11-12, 2002. Google Scholar; 6.D. North, ""Introducing behaviour driven development"", 2006. Google Scholar; 7.K. Incki, I. Ari and H. Sozer, ""A Survey of Software Testing in the Cloud"", Proc. of 2012 IEEE Sixth International Conference on Software Security and Reliability Companion, pp. 18-23, 2012. View Article  Google Scholar; 8.M. Feathers, ""Let's Reconsider That A Set of Unit Testing Rules"", Oct 2014. Google Scholar; 9.R. Osherove, ""The Art of Unit Testing: Unit-Test Definition"". Google Scholar; 10.T. Banzai, H. Koizumi, R. Kanbayashi, T. Imada, T. Hanawa and M. Sato, ""D-Cloud: Design of a Software Testing Environment for Reliable Distributed Systems using Cloud Computing Technology"", Proc. of the 2010 10th IEEE/ACM Intl. Conf. on Cluster Cloud and Grid Computing, pp. 631-636, 2010. CrossRef  Google Scholar; 11.S. Hykes, ""What is Docker? How is this different from Virtual Machines?"". Google Scholar; 12.""Introdcution to Linux Containers"", Oct 2014. Google Scholar; 13.D. Wells, ""Acceptance Tests"". Google Scholar; 14.S. Ambler, ""Acceptance/Customer Tests as Requirements Artifacts: An Agile Introduction"". Google Scholar; 15.; 16.; 17.; 18.; 19.""Dockerfile Reference"". Google Scholar; 20.""Linux Containers"". Google Scholar; 21.""GNU Bash"". Google Scholar; 22.""AWS Elastic Beanstalk adds Docker support"". Google Scholar; 23.""Containers on Google Cloud Platform"", Nov 2014. Google Scholar; 24.J. Zander, ""New Windows Server containers and Azure support for Docker"", Oct 2014. Google Scholar; 25.R. Kienzler, ""IBM & Docker partner to Deliver Apps in the Cloud & on prem"", Dec 2014. Google Scholar; 26.F. Kung, ""DockerCon 2014: Thoughts on interoperable containers"", Jun 2014. Google Scholar; 27.C. Wolf, ""VMware and Docker - Better Together"", Aug 2014. Google Scholar; 28.""Docker Explained: How To Containerize Python Web Applications"", Dec 2014. Google Scholar"			Excluded	Excluded	new_screen			2	IEEE		A Service Framework for Parallel Test Execution on a Developer's Local Development Workstation	https://ieeexplore.ieee.org/document/7133524	IEEE	nan; Pages; Year; Bibtex
251	Behave	A systematic literature review on quality criteria for agile requirements specifications	The quality of requirements is typically considered as an important factor for the quality of the end product. For traditional up-front requirements specifications, a number of standards have been defined on what constitutes good quality : Requirements should be complete, unambiguous, specific, time-bounded, consistent, etc. For agile requirements specifications, no new standards have been defined yet, and it is not clear yet whether traditional quality criteria still apply. To investigate what quality criteria for assessing the correctness of written agile requirements exist, we have conducted a systematic literature review. The review resulted in a list of 16 selected papers on this topic. These selected papers describe 28 different quality criteria for agile requirements specifications. We categorize and analyze these criteria and compare them with those from traditional requirements engineering. We discuss findings from the 16 papers in the form of recommendations for practitioners on quality assessment of agile requirements. At the same time, we indicate the open points in the form of a research agenda for researchers working on this topic .	Agile requirement; Just-in-time; Quality assessment; Systematic literature review; Quality criteria; Correctness; Agile requirement;  Just-in-time;  Quality assessment;  Systematic literature review;  Quality criteria;  Correctness	Heck, Petra; Zaidman, Andy	SOFTWARE QUALITY JOURNAL	https://doi.org/10.1007/s11219-016-9336-4	"Auger, C. P. (1994) Information sources in grey literature. Bowker-Saur.; citation_title=Test driven development: By example; citation_publication_date=2002; citation_id=CR2; citation_author=K Beck; citation_publisher=Addison-Wesley Longman Publishing Co. Inc; Beck, K., Beedle, M., van Bennekum, A., Cockburn, A., Cunningham, W., Fowler, M. et al. (2001). Manifesto for agile software development. 
                    http://agilemanifesto.org
                    
                  . Last visited April 16, 2015.; citation_journal_title=Requirements Engineering; citation_title=PBURC: A patterns-based, unsupervised requirements clustering framework for distributed agile software development; citation_author=P Belsis, A Koutoumanos, C Sgouropoulou; citation_volume=19; citation_issue=2; citation_publication_date=2014; citation_pages=213-225; citation_doi=10.1007/s00766-013-0172-9; citation_id=CR4; Bhasin, S. (2012). Quality assurance in agile: A study towards achieving excellence. In AGILE India (AGILE INDIA) (pp 64-67).; Bjarnason, E., Unterkalmsteiner, M., Engstrm, E., & Borg, M. (2015). An industrial case study on test cases as requirements. In C. Lassenius, T. Dingsyr, & M. Paasivaara (Eds.) Agile Processes, in Software Engineering, and Extreme Programming, Lecture Notes in Business Information Processing (Vol. 212, pp. 27-39) Springer International Publishing. doi:
                    10.1007/978-3-319-18612-2_3
                    
                  .; citation_journal_title=Journal of Systems and Software; citation_title=Lessons from applying the systematic literature review process within the software engineering domain; citation_author=P Brereton, BA Kitchenham, D Budgen, M Turner, M Khalil; citation_volume=80; citation_issue=4; citation_publication_date=2007; citation_pages=571-583; citation_doi=10.1016/j.jss.2006.07.009; citation_id=CR7; citation_journal_title=IEEE Transactions on Software Engineering; citation_title=A systematic survey of program comprehension through dynamic analysis; citation_author=B Cornelissen, A Zaidman, A Deursen, L Moonen, R Koschke; citation_volume=35; citation_issue=5; citation_publication_date=2009; citation_pages=684-702; citation_doi=10.1109/TSE.2009.28; citation_id=CR8; Davis, A., & Hickey, A. (2009). A quantitative assessment of requirements engineering publications 1963-2008. In M. Glinz & P. Heymans (Eds.), Requirements engineering:Foundation for software quality (Vol. 5512, pp. 175-189). Lecture Notes in Computer Science, Berlin Heidelberg: Springer.; Davis, A., Overmyer, S., Jordan, K., Caruso, J., Dandashi, F., Dinh, A. et al. (1993). Identifying and measuring quality in a software requirements specification. In Int'l Software Metrics Symposium (pp. 141-152). Baltimore (MD).; citation_journal_title=Journal of Emerging Technologies in Web Intelligence; citation_title=Requirements engineering in agile software development; citation_author=A De Lucia, A Qusef; citation_volume=2; citation_issue=3; citation_publication_date=2010; citation_pages=309-326; citation_doi=10.4304/jetwi.2.3.212-220; citation_id=CR11; Desharnais, J. M., Kocaturk, B., & Abran, A. (2011). Using the cosmic method to evaluate the quality of the documentation of agile user stories. In Joint Conference of the 21st Int'l Workshop on Software Measurement and 6th Int'l Conference on Software Process and Product Measurement (IWSM-MENSURA), Nara, Japan (pp. 269-272).; Dingsoyr, T., Dyba, T., & Abrahamsson, P. (2008). A preliminary roadmap for empirical research on agile software development. In AGILE Conference, Toronto (ON) (pp. 83-94).; Dumas-Monette, JF., & Trudel, S. (2014). Requirements engineering quality revealed through functional size measurement: An empirical study in an agile context. In Joint Conference of the International Workshop on Software Measurement and the International Conference on Software Process and Product Measurement (IWSM-MENSURA), Rotterdam, The Netherlands (pp. 222-232).; Duncan, R. (2001). The quality of requirements in extreme programming. CrossTalk, June 19, pp. 22-31.; citation_journal_title=Information and Software Technology; citation_title=Empirical studies of agile software development: A systematic review; citation_author=T Dyba, T Dingsoyr; citation_volume=50; citation_issue=9-10; citation_publication_date=2008; citation_pages=833-859; citation_doi=10.1016/j.infsof.2008.01.006; citation_id=CR16; Eberlein, A., & Leite, J. (2002). Agile requirements definition: A view from requirements engineering. In Proceedings of the International Workshop on Time-Constrained Requirements Engineering (TCRE02), Essen, Germany (pp. 4-8).; Ernst, N. A., & Murphy, G. (2012). Case studies in just-in-time requirements analysis. Int'l Workshop on Empirical Requirements Engineering (pp. 25-32). Chicago (IL): IEEE.; Farid, W., & Mitropoulos, F. (2013). Norplan: Non-functional requirements planning for agile processes. In Proceedings of IEEE Southeastcon, Jacksonville, FL (pp. 1-8).; citation_journal_title=Journal of Object Technology; citation_title=Generating complete, unambiguous, and verifiable requirements from stories, scenarios, and use cases; citation_author=D Firesmith; citation_volume=3; citation_issue=10; citation_publication_date=2004; citation_pages=27-40; citation_doi=10.5381/jot.2004.3.10.c3; citation_id=CR20; citation_journal_title=Better Software; citation_title=Slicing requirements for agile success; citation_author=E Gottesdiener, M Gorman; citation_volume=2010; citation_issue=04; citation_publication_date=2010; citation_pages=16-21; citation_id=CR21; Grau, R., Lauenroth, K., Bereza, B., van Veenendaal, E., & van der Zee, S. (2014). Requirements engineering and agile development - collaborative, just enough, just in time, sustainable. IREB.; Heck, P., & Zaidman, A. (2014). A quality framework for agile requirements: A practitioner's perspective. Technical Report TUD-SERG-2014-006, Software Engineering Research Group, Delft University of Technology.; Heck, P., & Zaidman, A. (2016). A framework for quality assessment of just-in-time requirements: The case of open source feature requests. Requirements Engineering (pp. 1-21).; Huo, M., Verner, J., Zhu, L., & Babar, M. (2004). Software quality and agile methods. In Int'l Computer Software and Applications Conference (Vol.1, pp. 520-525). doi:
                    10.1109/CMPSAC.2004.1342889
                    
                  .; IEEE. (1998). IEEE recommended practice for software requirements specifications. IEEE Std 830-1998.; citation_journal_title=Computers in Human Behavior; citation_title=A systematic literature review on agile requirements engineering practices and challenges; citation_author=I Inayat, SS Salim, S Marczak, M Daneva, S Shamshirband; citation_volume=51; citation_publication_date=2014; citation_pages=915-929; citation_doi=10.1016/j.chb.2014.10.046; citation_id=CR27; citation_journal_title=Journal of Systems and Software; citation_title=Defining multi-tenancy: A systematic mapping study on the academic and the industrial perspective; citation_author=J Kabbedijk, CP Bezemer, S Jansen, A Zaidman; citation_volume=100; citation_publication_date=2015; citation_pages=139-148; citation_doi=10.1016/j.jss.2014.10.034; citation_id=CR28; Kassab, M. (2014). An empirical study on the requirements engineering practices for agile software development. In 40th EUROMICRO Conference on Software Engineering and Advanced Applications (SEAA), Verona, Italy (pp. 254-261).; Kitchenham, B., & Charters, S. (2007). Guidelines for performing systematic literature reviews in software engineering. Techical Report, EBSE-2007-01.; Kitchenham, B. A. (2004). Procedures for performing systematic reviews. Technical Report.; Lee, C., Guadagno, L., & Jia, X. (2003). An agile approach to capturing requirements and traceability. In Proceedings of the 2nd International Workshop on Traceability in Emerging Forms of Software Engineering, Montreal, Canada (pp. 17-23).; citation_title=Agile software requirements: Lean requirements practices for teams, programs, and the enterprise; citation_publication_date=2011; citation_id=CR33; citation_author=D Leffingwell; citation_publisher=Addison-Wesley Professional; Liskin, O., Pham, R., Kiesling, S., & Schneider, K. (2014a). Why we need a granularity concept for user stories. In G. Cantone & M. Marchesi (Eds.) Agile Processes in Software Engineering and Extreme Programming, Lecture Notes in Business Information Processing (Vol. 179, pp. 110-125). Berlin: Springer International Publishing.; Liskin, O., Schneider, K., Fagerholm, F., & Munch, J. (2014b). Understanding the role of requirements artifacts in kanban. In Proceedings of the 7th International Workshop on Cooperative and Human Aspects of Software Engineering, Hyderabad, India, CHASE 2014 (pp. 56-63).; Melnik, G., Maurer, F., & Chiasson, M. (2006). Executable acceptance tests for communicating business requirements: Customer perspective. In Agile Conference, 2006 (pp. 12-46). doi:
                    10.1109/AGILE.2006.26
                    
                  .; citation_journal_title=Better Software; citation_title=Behavior modification; citation_author=D North; citation_volume=2006; citation_publication_date=2006; citation_pages=4-12; citation_id=CR37; Paetsch, F., Eberlein, A., & Maurer, F. (2003). Requirements engineering and agile software development. In Int'l Workshop on Enabling Technologies: Infrastructure for Collaborative Enterprises, Linz, Austria (pp. 308-308).; citation_journal_title=JSW; citation_title=Story card maturity model (smm): A process improvement framework for agile requirements engineering practices; citation_author=C Patel, M Ramachandran; citation_volume=4; citation_issue=5; citation_publication_date=2009; citation_pages=422-435; citation_doi=10.4304/jsw.4.5.422-435; citation_id=CR39; Power, K. (2014). Definition of ready: An experience report from teams at cisco. In G. Cantone, M. Marchesi (Eds.) Agile processes in software engineering and extreme programming. Lecture Notes in Business Information Processing (Vol. 179, pp. 312-319). Berlin: Springer International Publishing.; citation_journal_title=Information Systems Journal; citation_title=Agile requirements engineering practices and challenges: An empirical study; citation_author=B Ramesh, L Cao, R Baskerville; citation_volume=20; citation_issue=5; citation_publication_date=2010; citation_pages=449-480; citation_doi=10.1111/j.1365-2575.2007.00259.x; citation_id=CR41; citation_title=Case study research in software engineering: Guidelines and examples; citation_publication_date=2012; citation_id=CR42; citation_author=P Runeson; citation_author=M Host; citation_author=A Rainer; citation_author=B Regnell; citation_publisher=Wiley; Sfetsos, P., & Stamelos, I. (2010). Empirical studies on quality in agile practices: A systematic literature review. In Seventh International Conference on the Quality of Information and Communications Technology (QUATIC), Porto, Portugal (pp. 44-53).; citation_title=Engineering and managing software requirements, Chapter 14; citation_inbook_title=Requirements engineering for agile methods; citation_publication_date=2005; citation_pages=309-326; citation_id=CR44; citation_author=A Sillitti; citation_author=G Succi; citation_publisher=Springer; Srinivasan, J., & Lundqvist, K. (2009). Using agile methods in software product development: A case study. In Sixth International Conference on Information Technology: New Generations. ITNG '09, Las Vegas, NV (pp. 1415-1420).; citation_journal_title=Journal of Systems and Software; citation_title=Experiences using systematic review guidelines; citation_author=M Staples, M Niazi; citation_volume=80; citation_issue=9; citation_publication_date=2007; citation_pages=1425-1437; citation_doi=10.1016/j.jss.2006.09.046; citation_id=CR46; Wake, B. (2003). INVEST in good stories, and SMART tasks. 
                    http://xp123.com/articles/invest-in-good-stories-and-smart-tasks/
                    
                  . Accessed December, 2015.; citation_journal_title=Requirements Engineering; citation_title=Requirements engineering paper classification and evaluation criteria: A proposal and a discussion; citation_author=R Wieringa, N Maiden, N Mead, C Rolland; citation_volume=11; citation_issue=1; citation_publication_date=2005; citation_pages=102-107; citation_doi=10.1007/s00766-005-0021-6; citation_id=CR48; Wohlin, C. (2014). Guidelines for snowballing in systematic literature studies and a replication in software engineering. In Proceedings of the International Conference on Evaluation and Assessment in Software Engineering (EASE), London, UK (pp. 38:1-38:10)."	127-160	"""@article{WOS:000425779200005,
    Author = ""Heck, Petra and Zaidman, Andy"",
    Title = ""A systematic literature review on quality criteria for agile requirements specifications"",
    Journal = ""SOFTWARE QUALITY JOURNAL"",
    Year = ""2018"",
    Volume = ""26"",
    Number = ""1"",
    Pages = ""127-160"",
    Month = ""MAR"",
    Abstract = ""The quality of requirements is typically considered as an important factor for the quality of the end product. For traditional up-front requirements specifications, a number of standards have been defined on what constitutes good quality : Requirements should be complete, unambiguous, specific, time-bounded, consistent, etc. For agile requirements specifications, no new standards have been defined yet, and it is not clear yet whether traditional quality criteria still apply. To investigate what quality criteria for assessing the correctness of written agile requirements exist, we have conducted a systematic literature review. The review resulted in a list of 16 selected papers on this topic. These selected papers describe 28 different quality criteria for agile requirements specifications. We categorize and analyze these criteria and compare them with those from traditional requirements engineering. We discuss findings from the 16 papers in the form of recommendations for practitioners on quality assessment of agile requirements. At the same time, we indicate the open points in the form of a research agenda for researchers working on this topic ."",
    Publisher = ""SPRINGER"",
    Address = ""VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS"",
    Type = ""Review"",
    Language = ""English"",
    Affiliation = ""Heck, P (Corresponding Author), Fontys Appl Univ, Software Engn, Eindhoven, Netherlands. Heck, Petra, Fontys Appl Univ, Software Engn, Eindhoven, Netherlands. Zaidman, Andy, Delft Univ Technol, Software Engn, Delft, Netherlands. Zaidman, Andy, Delft Univ Technol, Software Engn Res Grp, Delft, Netherlands."",
    DOI = ""10.1007/s11219-016-9336-4"",
    ISSN = ""0963-9314"",
    EISSN = ""1573-1367"",
    Keywords = ""Agile requirement; Just-in-time; Quality assessment; Systematic literature review; Quality criteria; Correctness"",
    Keywords-Plus = ""ENGINEERING PRACTICES"",
    Research-Areas = ""Computer Science"",
    Web-of-Science-Categories = ""Computer Science, Software Engineering"",
    Author-Email = ""p.heck@fontys.nl"",
    Affiliations = ""Delft University of Technology; Delft University of Technology"",
    ResearcherID-Numbers = ""Zaidman, Andy/O-6542-2014"",
    ORCID-Numbers = ""Zaidman, Andy/0000-0003-2413-3935"",
    Number-of-Cited-References = ""49"",
    Times-Cited = ""28"",
    Usage-Count-Last-180-days = ""4"",
    Usage-Count-Since-2013 = ""33"",
    Journal-ISO = ""Softw. Qual. J."",
    Doc-Delivery-Number = ""FX1AL"",
    Web-of-Science-Index = ""Science Citation Index Expanded (SCI-EXPANDED)"",
    Unique-ID = ""WOS:000425779200005"",
    DA = ""2024-10-22""
}
"""	Excluded	Excluded	new_screen			2	Web of Science		A Systematic Literature Review on Quality Criteria for Agile Requirements Specifications	https://www.webofscience.com/wos/woscc/full-record/WOS:000425779200005	SPRINGER	
252	Behave	The Rails 3 Way	Ruby on Rails strips complexity from the development process, enabling professional developers to focus on what matters most: delivering business value via clean and maintainable code. The RailsTM 3 Way is the only comprehensive, authoritative guide to delivering production-quality code with Rails 3. Pioneering Rails expert Obie Fernandez and a team of leading experts illuminate the entire Rails 3 API, along with the idioms, design approaches, and libraries that make developing applications with Rails so powerful. Drawing on their unsurpassed experience and track record, they address the real challenges development teams face, showing how to use Rails 3 to maximize your productivity.  Using numerous detailed code examples, the author systematically covers Rails 3 key capabilities and subsystems, making this book a reference that you will turn to again and again. He presents advanced Rails programming techniques that have been proven effective in day-to-day usage on dozens of production Rails systems and offers important insights into behavior-driven development and production considerations such as scalability. Dive deep into the Rails 3 codebase and discover why Rails is designed the way it is, and how to make it do what you want it to do.		Obie Fernandez		https://books.google.ca/books/about/The_Rails_3_Way.html?id=slwLAqkT_Y0C&source=kp_book_description&redir_esc=y		704	"""nan"""	Excluded	Excluded	new_screen			2	Google Scholar		The Rails 3 Way	https://books.google.ca/books/about/The_Rails_3_Way.html?id=slwLAqkT_Y0C&source=kp_book_description&redir_esc=y	Pearson Education	
253	Behave	Using executable specification and regression testing for broadcast mechanism of visual programming language on smartphones	The rapid advancement of mobile computing technology and the rising usage of mobile apps made our daily life more productive. The mobile app should operate all the time bug-free in order to improve user satisfaction and offers great business value to the end user. At the same time, smartphones are full of special features that make testing of apps more challenging. Actually, the quality is a must for successful applications and it cannot be achieved without testing and verification. In this paper, we present the behavior driven development methodology and Cucumber framework to automate regression testing for Android apps. Particularly, the proposed methods use the visual programming language for smartphones (Catrobat) as a reference. The Catrobat program scripts communicate via a broadcast mechanism. The objective is to test the broadcast mechanism from different angles and track regression errors as well as specify and diagnose bugs with the help of executable specifications. The results show that the methods are able to effectively reveal deficiencies in the broadcast mechanism, and ensure that the app meets end users' expectations and needs.	Behavior driven development;; Catrobat;; Mobile application;; Regression testing;; Visual programming language	Ali, Zulfiqar; Ayyal Awwad, Aiman Mamdouh; Slany, Wolfgang	International Journal of Interactive Mobile Technologies	https://doi.org/10.3991/ijim.v13i02.9851	Sahrir, M.S., Yahaya, M.F., Ismail, T., Zubir, M.A., Ahmad, W.R.W.; Dirin, A., Nieminen, M.; Monahan, T., Bertolotto, M., McArdle, G.; Nagowah, L., Sowamber, G.; Calame, J., Kulkarni, P., Euteneuer, S.Multi-Platform Mobile Test Automation for the Financial Sector(2014)Testing Experience, (27), pp. 63-65.; Nidagundi, P., Novickis, L.; Silva, T.R., Hak, J.-L., Winckler, M.; Gligoric, M., Eloussi, L., Marinov, D.; Kazmi, R., Jawawi, D.N.A., Mohamad, R., Ghani, I.; Solis, C., Wang, X.; Rahman, M., Gao, J.; Ferguson Smart, J.(2014)BDD in Action.Cited 2 times.Behavior Driven Development for the Whole Software Lifecycle. Manning Publications; Alhaj, M., Arbez, G., Peyton, L.; Engstrom, E., Runeson, P., Ljung, A.; Dalal, S., Sudhir Solanki, K.Challenges of Regression Testing: A Pragmatic Perspective(2018)International Journal of Advanced Research in Computer Science, 9 (1), pp. 499-503.Cited 7 times.https://doi.org/10.26483/ijarcs.v9i1.5424; Gronli, T.-M., Ghinea, G.; Rose, S., Wynne, M., Hellesoy, A.(2015)The Cucumber for Java Book: Behavior-Driven Development for Testers and Developers.Cited 14 times.Pragmatic Bookshelf; Tao, C., Gao, J., Wang, T.; Slany, W.(2010)Catrobat education2018. [Online]https://edu.catrob.at/; Slany, W.; Slany, W.; Slany, W.; Bernaschina, C., Fedorov, R., Frajberg, D., Fraternali, P.	50 - 65	"""@ARTICLE{Ali201950,
    author = ""Ali, Zulfiqar and Ayyal Awwad, Aiman Mamdouh and Slany, Wolfgang"",
    title = ""Using executable specification and regression testing for broadcast mechanism of visual programming language on smartphones"",
    year = ""2019"",
    journal = ""International Journal of Interactive Mobile Technologies"",
    volume = ""13"",
    number = ""2"",
    pages = ""50 - 65"",
    doi = ""10.3991/ijim.v13i02.9851"",
    url = ""https://www.scopus.com/inward/record.uri?eid=2-s2.0-85063355519\&doi=10.3991\%2fijim.v13i02.9851\&partnerID=40\&md5=a0ae5da2c26059bbd68813507d616677"",
    affiliations = ""Graz University of Technology, Austria; Department of Computer Science and IT, Tafila Technical University, Jordan; Institute of Software Technology, Graz University of Technology, Austria"",
    abstract = ""The rapid advancement of mobile computing technology and the rising usage of mobile apps made our daily life more productive. The mobile app should operate all the time bug-free in order to improve user satisfaction and offers great business value to the end user. At the same time, smartphones are full of special features that make testing of apps more challenging. Actually, the quality is a must for successful applications and it cannot be achieved without testing and verification. In this paper, we present the behavior driven development methodology and Cucumber framework to automate regression testing for Android apps. Particularly, the proposed methods use the visual programming language for smartphones (Catrobat) as a reference. The Catrobat program scripts communicate via a broadcast mechanism. The objective is to test the broadcast mechanism from different angles and track regression errors as well as specify and diagnose bugs with the help of executable specifications. The results show that the methods are able to effectively reveal deficiencies in the broadcast mechanism, and ensure that the app meets end users' expectations and needs. (c) 2018, International Association of Online Engineering."",
    author_keywords = ""Behavior driven development; Catrobat; Mobile application; Regression testing; Visual programming language"",
    correspondence_address = ""Z. Ali; Graz University of Technology, Austria; email: zulfiqar.ali@student.tugraz.at"",
    publisher = ""International Association of Online Engineering"",
    issn = ""18657923"",
    language = ""English"",
    abbrev_source_title = ""Int. J. Interact. Mob. Technol."",
    type = ""Article"",
    publication_stage = ""Final"",
    source = ""Scopus"",
    note = ""Cited by: 1; All Open Access, Gold Open Access""
}
"""	Included	Included	new_screen			2	Scopus Signed In		Using executable specification and regression testing for broadcast mechanism of visual programming language on smartphones	https://www.scopus.com/record/display.uri?eid=2-s2.0-85063355519&origin=resultslist&sort=r-f&src=s&sid=d1336f26e22034c2265b466f6a2f2adf&sot=b&sdt=b&s=TITLE%28using+executable+specification+and+regression+testing+for+broadcast+mechanism+of+visual+programming+language+on+smartphones%29&sl=130&sessionSearchId=d1336f26e22034c2265b466f6a2f2adf&relpos=0	International Association of Online Engineering	
254	Behave	Reconciling Requirements and Continuous Integration in an Agile Context	"The RE'18 theme is: ""Crossing Boundaries and Increasing Impact"". In this context we propose a tutorial on Requirements in an Agile context that aims at exploring the boundaries between requirements, specifications, stories, scenarios and tests. It follows the recent work started in the RE community about agility, from a practical point of view."	Requirements engineering; Tutorials; Software; Conferences; Tools; Testing; Pragmatics; Continuous Integration; Agility; Software Development; Software Engineering; Undergraduate Level; Requirements Engineering; Agile Development; Requirements; Stories; DevOps; Behaviour Driven Development; Quality Assessment	Sebastien Mosser; Jean-Michel Bruel	2018 IEEE 26th International Requirements Engineering Conference (RE)	https://doi.org/10.1109/RE.2018.00076	"1.R. Kasauli, G. Liebel, E. Knauss, S. Gopakumar and B. Kanagwa, ""Requirements engineering challenges in large-scale agile system development"", 25th IEEE International Requirements Engineering Conference RE 2017, pp. 352-361, September 4-8, 2017. Google Scholar; 2.S. Saito, Y. Iimura, A. K. Massey and A. I. Anton, ""How much undocumented knowledge is there in agile software development?: Case study on industrial project using issue tracking system and version control system"", 25th IEEE International Requirements Engineering Conference RE 2017, pp. 194-203, September 4-8, 2017. View Article  Google Scholar; 3.M. Wynne and A. Hellesoy, The Cucumber Book: Behaviour-Driven Development for Testers and Developers, Pragmatic Bookshelf, 2012. Google Scholar; 4.M. Cohn, User Stories Applied: For Agile Software Development, Redwood City, CA, USA:Addison Wesley Longman Publishing Co., Inc., 2004. Google Scholar; 5.J. Langr, A. Hunt and D. Thomas, Pragmatic Unit Testing in Java 8 with JUnit, Dallas, TX:Pragmatic Bookshelf, 2015,  [online]  Available: https://www.safaribooksonline.com/library/view/pragmatic-unit-testing/9781680500769/. Google Scholar; 6.S. Stolberg, ""Enabling agile testing through continuous integration"", 2009 Agile Conference, pp. 369-374, Aug 2009. View Article  Google Scholar; 7.25th IEEE International Requirements Engineering Conference RE 2017, September 4-8, 2017,  [online]  Available: http://ieeexplore.ieee.org/xpl/mostRecentIssue.jsp?punumber=8048783. Google Scholar"			Excluded	Excluded	new_screen			2	IEEE		Reconciling requirements and continuous integration in an agile context	https://ieeexplore.ieee.org/document/8491183	IEEE	nan; Pages; Year; Bibtex
255	Behave	The impact of tailoring criteria on agile practices adoption: A survey with novice agile practitioners in Brazil	The software development industry adopts agile methods in different ways by considering contextual requirements. To fulfill organizational needs, adoption strategies consider agile methods tailoring. However, tailoring according to the context of the organization remains a problem to be solved. Literature on criteria for adopting software development methods exists, but not specifically for agile methods. Given this scenario, the following research question arises: what is the impact of software method tailoring criteria on the adoption of agile practices? To answer this question, we conducted a survey among agile practitioners in Brazil to gather data about importance of the. tailoring criteria and agile practices adopted. A model for agile practices adoption based on the tailoring criteria is proposed using the results of the survey with a majority of novice agile practitioners. The proposed model was validated using PLS-SEM (partial least squares structural equation modeling) and the survey data. Results show that adoption of agile practices was influenced by criteria such as external environment, previous knowledge and internal environment. Results also indicate that organizations tend to use hybrid/custom software methods and select agile practices according to their needs.	Agile method tailoring; Tailoring criteria; Agile practices selection; Agile practices adoption; PLS-SEM; Software method tailoring; Agile method tailoring;  Tailoring criteria;  Agile practices selection;  Agile practices adoption;  PLS-SEM;  Software method tailoring	Campanelli, Amadeu Silveira; Camilo, Ronaldo Darwich; Parreiras, Fernando Silva	JOURNAL OF SYSTEMS AND SOFTWARE	https://doi.org/10.1016/j.jss.2017.12.012		366-379	"""@article{WOS:000425572400023,
    Author = ""Campanelli, Amadeu Silveira and Camilo, Ronaldo Darwich and Parreiras, Fernando Silva"",
    Title = ""The impact of tailoring criteria on agile practices adoption: A survey with novice agile practitioners in Brazil"",
    Journal = ""JOURNAL OF SYSTEMS AND SOFTWARE"",
    Year = ""2018"",
    Volume = ""137"",
    Pages = ""366-379"",
    Month = ""MAR"",
    Abstract = ""The software development industry adopts agile methods in different ways by considering contextual requirements. To fulfill organizational needs, adoption strategies consider agile methods tailoring. However, tailoring according to the context of the organization remains a problem to be solved. Literature on criteria for adopting software development methods exists, but not specifically for agile methods. Given this scenario, the following research question arises: what is the impact of software method tailoring criteria on the adoption of agile practices? To answer this question, we conducted a survey among agile practitioners in Brazil to gather data about importance of the. tailoring criteria and agile practices adopted. A model for agile practices adoption based on the tailoring criteria is proposed using the results of the survey with a majority of novice agile practitioners. The proposed model was validated using PLS-SEM (partial least squares structural equation modeling) and the survey data. Results show that adoption of agile practices was influenced by criteria such as external environment, previous knowledge and internal environment. Results also indicate that organizations tend to use hybrid/custom software methods and select agile practices according to their needs. (C) 2017 Elsevier Inc. All rights reserved."",
    Publisher = ""ELSEVIER SCIENCE INC"",
    Address = ""STE 800, 230 PARK AVE, NEW YORK, NY 10169 USA"",
    Type = ""Article"",
    Language = ""English"",
    Affiliation = ""Campanelli, AS (Corresponding Author), FUMEC Univ, LAIS Lab Adv Informat Syst, Av Afonso Pena 3880, BR-30130009 Belo Horizonte, MG, Brazil. Campanelli, Amadeu Silveira; Camilo, Ronaldo Darwich; Parreiras, Fernando Silva, FUMEC Univ, LAIS Lab Adv Informat Syst, Av Afonso Pena 3880, BR-30130009 Belo Horizonte, MG, Brazil."",
    DOI = ""10.1016/j.jss.2017.12.012"",
    ISSN = ""0164-1212"",
    EISSN = ""1873-1228"",
    Keywords = ""Agile method tailoring; Tailoring criteria; Agile practices selection; Agile practices adoption; PLS-SEM; Software method tailoring"",
    Keywords-Plus = ""SOFTWARE"",
    Research-Areas = ""Computer Science"",
    Web-of-Science-Categories = ""Computer Science, Software Engineering; Computer Science, Theory \\& Methods"",
    Author-Email = ""amadeu@fumec.edu.br"",
    ResearcherID-Numbers = ""Silva Parreiras, Fernando/E-6990-2013"",
    ORCID-Numbers = ""Silva Parreiras, Fernando/0000-0002-9832-1501"",
    Number-of-Cited-References = ""58"",
    Times-Cited = ""31"",
    Usage-Count-Last-180-days = ""1"",
    Usage-Count-Since-2013 = ""20"",
    Journal-ISO = ""J. Syst. Softw."",
    Doc-Delivery-Number = ""FW8HN"",
    Web-of-Science-Index = ""Science Citation Index Expanded (SCI-EXPANDED)"",
    Unique-ID = ""WOS:000425572400023"",
    DA = ""2024-10-22""
}
"""	Excluded	Excluded	new_screen			2	Web of Science		The impact of tailoring criteria on agile practices adoption: A survey with novice agile practitioners in Brazil	https://www.webofscience.com/wos/woscc/full-record/WOS:000425572400023	ELSEVIER SCIENCE INC	nan; References
256	Behave	Rules of thumb to increase the software quality through testing	The software maintenance typically requires 40-80\% of the overall project costs, and this considerable variability mostly depends on the software internal quality: the more the software is designed and implemented to constantly welcome new changes, the lower will be the maintenance costs. The internal quality is typically enforced through testing, which in turn also affects the development and maintenance costs. This is the reason why testing methodologies have become a major concern for any company that builds - or is involved in building - software. Although there is no testing approach that suits all contexts, we infer some general guidelines learned during the Development of the Italian Single-dish COntrol System (DISCOS), which is a project aimed at producing the control software for the three INAF radio telescopes (the Medicina and Noto dishes, and the newly-built SRT). These guidelines concern both the development and the maintenance phases, and their ultimate goal is to maximize the DISCOS software quality through a Behavior-Driven Development (BDD) workflow beside a continuous delivery pipeline. We consider different topics and patterns; they involve the proper apportion of the tests (from end-to-end to low-level tests), the choice between hardware simulators and mockers, why and how to apply TDD and the dependency injection to increase the test coverage, the emerging technologies available for test isolation, bug fixing, how to protect the system from the external resources changes (firmware updating, hardware substitution, etc.) and, eventually, how to accomplish BDD starting from functional tests and going through integration and unit tests. We discuss pros and cons of each solution and point out the motivations of our choices either as a general rule or narrowed in the context of the DISCOS project.	Testing; TDD; BDD; DISCOS; Sardinia Radio Telescope; Testing;  TDD;  BDD;  DISCOS;  Sardinia Radio Telescope	Buttu, M.; Bartolini, M.; Migoni, C.; Orlati, A.; Poppi, S.; Righini, S.	SOFTWARE AND CYBERINFRASTRUCTURE FOR ASTRONOMY IV	https://doi.org/10.1117/12.2230626			"""@inproceedings{WOS:000388804600010,
    Author = ""Buttu, M. and Bartolini, M. and Migoni, C. and Orlati, A. and Poppi, S. and Righini, S."",
    Editor = ""Chiozzi, G and Guzman, JC"",
    Title = ""Rules of thumb to increase the software quality through testing"",
    Booktitle = ""SOFTWARE AND CYBERINFRASTRUCTURE FOR ASTRONOMY IV"",
    Series = ""Proceedings of SPIE"",
    Year = ""2016"",
    Volume = ""9913"",
    Note = ""Conference on Software and Cyberinfrastructure for Astronomy IV, Edinburgh, SCOTLAND, JUN 26-30, 2016"",
    Organization = ""SPIE"",
    Abstract = ""The software maintenance typically requires 40-80\\% of the overall project costs, and this considerable variability mostly depends on the software internal quality: the more the software is designed and implemented to constantly welcome new changes, the lower will be the maintenance costs. The internal quality is typically enforced through testing, which in turn also affects the development and maintenance costs. This is the reason why testing methodologies have become a major concern for any company that builds - or is involved in building - software. Although there is no testing approach that suits all contexts, we infer some general guidelines learned during the Development of the Italian Single-dish COntrol System (DISCOS), which is a project aimed at producing the control software for the three INAF radio telescopes (the Medicina and Noto dishes, and the newly-built SRT). These guidelines concern both the development and the maintenance phases, and their ultimate goal is to maximize the DISCOS software quality through a Behavior-Driven Development (BDD) workflow beside a continuous delivery pipeline. We consider different topics and patterns; they involve the proper apportion of the tests (from end-to-end to low-level tests), the choice between hardware simulators and mockers, why and how to apply TDD and the dependency injection to increase the test coverage, the emerging technologies available for test isolation, bug fixing, how to protect the system from the external resources changes (firmware updating, hardware substitution, etc.) and, eventually, how to accomplish BDD starting from functional tests and going through integration and unit tests. We discuss pros and cons of each solution and point out the motivations of our choices either as a general rule or narrowed in the context of the DISCOS project."",
    Publisher = ""SPIE-INT SOC OPTICAL ENGINEERING"",
    Address = ""1000 20TH ST, PO BOX 10, BELLINGHAM, WA 98227-0010 USA"",
    Type = ""Proceedings Paper"",
    Language = ""English"",
    Affiliation = ""Buttu, M (Corresponding Author), INAF, Osservatorio Astron Cagliari, Cagliari, Italy. Buttu, M.; Migoni, C.; Poppi, S., INAF, Osservatorio Astron Cagliari, Cagliari, Italy. Bartolini, M.; Orlati, A.; Righini, S., INAF, Ist Radiostron Bologna, Bologna, Italy."",
    DOI = ""10.1117/12.2230626"",
    Article-Number = ""UNSP 9913013"",
    ISSN = ""0277-786X"",
    ISBN = ""978-1-5106-0205-2; 978-1-5106-0206-9"",
    Keywords = ""Testing; TDD; BDD; DISCOS; Sardinia Radio Telescope"",
    Research-Areas = ""Astronomy \\& Astrophysics; Engineering; Optics"",
    Web-of-Science-Categories = ""Astronomy \\& Astrophysics; Engineering, Electrical \\& Electronic; Optics"",
    Author-Email = ""mbuttu@oa-cagliari.inaf.it"",
    Affiliations = ""Istituto Nazionale Astrofisica (INAF); Istituto Nazionale Astrofisica (INAF)"",
    ORCID-Numbers = ""Poppi, Sergio/0000-0002-4698-2607 Orlati, Andrea/0000-0001-8737-255X Bartolini, Marco/0000-0002-8293-7598 Righini, Simona/0000-0001-7332-5138"",
    Number-of-Cited-References = ""13"",
    Times-Cited = ""1"",
    Usage-Count-Last-180-days = ""0"",
    Usage-Count-Since-2013 = ""2"",
    Doc-Delivery-Number = ""BG4GJ"",
    Web-of-Science-Index = ""Conference Proceedings Citation Index - Science (CPCI-S)"",
    Unique-ID = ""WOS:000388804600010"",
    DA = ""2024-10-22""
}
"""	Excluded	Excluded	new_screen			2	Web of Science		Rules of thumb to increase the software quality through testing	https://www.webofscience.com/wos/woscc/full-record/WOS:000388804600010	SPIE-INT SOC OPTICAL ENGINEERING	nan; References; Pages
257	Behave	Automated Testing Framework Development based on Social Interaction and Communication Principles	The speed of development of the IT industry as well as the computational power which are increasing exponentially, create great competitiveness in the process of development but also in the launching of software products on the market. Automated testing comes to help with these challenges by trying to increase the speed of development by offering fast feedback and trustworthy quality by means of repeated runs of the implemented tests. This isn't a problem just on a technical level, but also on a social level, especially in the area of communication and understanding the requirements of the client. This work presents the implementation of an automated testing framework which also addresses the social problems. BDD or ``Behavior Driven Development{''} includes an approach which would like to line up the area of client requests to the technical area, offering a uniform platform of collaboration and development. The implementation of this principle is applied in an MVP (Minimum Viable Product) type project which is meant to demonstrate the technical solution which may draw together, both socially and communication wise, the business teams and the technical implementation teams.	testing process; BDD; automated testing; Gherkin language; testing process;  BDD;  automated testing;  Gherkin language	Contan, Andrei; Dehelean, Catalin; Miclea, Liviu	2017 14TH INTERNATIONAL CONFERENCE ON ENGINEERING OF MODERN ELECTRIC SYSTEMS (EMES)	https://www.webofscience.com/wos/woscc/full-record/WOS:000427085200032		136-139	"""@inproceedings{WOS:000427085200032,
    Author = ""Contan, Andrei and Dehelean, Catalin and Miclea, Liviu"",
    Book-Group-Author = ""IEEE"",
    Title = ""Automated Testing Framework Development based on Social Interaction and Communication Principles"",
    Booktitle = ""2017 14TH INTERNATIONAL CONFERENCE ON ENGINEERING OF MODERN ELECTRIC SYSTEMS (EMES)"",
    Year = ""2017"",
    Pages = ""136-139"",
    Note = ""14th International Conference on Engineering of Modern Electric Systems (EMES), ORADEA, ROMANIA, JUN 01-02, 2017"",
    Organization = ""IEEE; Univ Oradea, Fac Elect Engn \\& Informat Technol; IEEE Romania CAS CA Chapter; Assoc Romanian Elect \\& Elect Engineers; Assoc Integrated Engn \\& Ind Management"",
    Abstract = ""The speed of development of the IT industry as well as the computational power which are increasing exponentially, create great competitiveness in the process of development but also in the launching of software products on the market. Automated testing comes to help with these challenges by trying to increase the speed of development by offering fast feedback and trustworthy quality by means of repeated runs of the implemented tests. This isn't a problem just on a technical level, but also on a social level, especially in the area of communication and understanding the requirements of the client. This work presents the implementation of an automated testing framework which also addresses the social problems. BDD or ``Behavior Driven Development{''} includes an approach which would like to line up the area of client requests to the technical area, offering a uniform platform of collaboration and development. The implementation of this principle is applied in an MVP (Minimum Viable Product) type project which is meant to demonstrate the technical solution which may draw together, both socially and communication wise, the business teams and the technical implementation teams."",
    Publisher = ""IEEE"",
    Address = ""345 E 47TH ST, NEW YORK, NY 10017 USA"",
    Type = ""Proceedings Paper"",
    Language = ""English"",
    Affiliation = ""Contan, A (Corresponding Author), Tech Univ Cluj Napoca, Dept Automat, Cluj Napoca, Romania. Contan, Andrei; Miclea, Liviu, Tech Univ Cluj Napoca, Dept Automat, Cluj Napoca, Romania. Dehelean, Catalin, Babes Bolyai Univ, Dept Specialized Foreign Languages, Cluj Napoca, Romania."",
    ISBN = ""978-1-5090-6073-3"",
    Keywords = ""testing process; BDD; automated testing; Gherkin language"",
    Research-Areas = ""Energy \\& Fuels; Engineering"",
    Web-of-Science-Categories = ""Energy \\& Fuels; Engineering, Electrical \\& Electronic"",
    Author-Email = ""andreicontan@hotmail.com gravedale01@yahoo.com Liviu.Miclea@aut.utcluj.ro"",
    Affiliations = ""Technical University of Cluj Napoca; Babes Bolyai University from Cluj"",
    ResearcherID-Numbers = ""Miclea, Liviu/G-3326-2016"",
    Number-of-Cited-References = ""8"",
    Times-Cited = ""1"",
    Usage-Count-Last-180-days = ""0"",
    Usage-Count-Since-2013 = ""0"",
    Doc-Delivery-Number = ""BJ7CY"",
    Web-of-Science-Index = ""Conference Proceedings Citation Index - Science (CPCI-S)"",
    Unique-ID = ""WOS:000427085200032"",
    DA = ""2024-10-22""
}
"""	Included	Included	new_screen			2	Web of Science		Automated testing framework development based on social interaction and communication principles	https://www.webofscience.com/wos/woscc/full-record/WOS:000427085200032	IEEE	nan; References
258	Behave	Enabling Faith-Inspired Education on the Sustainable Development Goals Through e-Learning	The Sustainable Development Goals (SDGs) are composed from a variety of universal goals. They come with a heavy load on ethical demands while they do not provide any ethical guidance. One possibility to fill this void is to teach the SDGs with a faith-based narrative. Grown out of a workshop by Bread for World we will present our approach of Ownership-inspired Behavior-driven development, which is a strategy for an e-learning governance to introduce an Android app to support e-learning on the SDGs in theological education in remote areas in the Global South. Our goal is to develop a governance strategy for higher theological education to fill the SDGs with a faith-based narrative by using e-learning technology. Based on the staircase curriculum for the education of future church leaders developed by the British FBO Relay Trust we introduce the theoretical framework for this goal, which makes the transfer from a hierarchical governance structure found in many African societies into a dynamic e-learning framework.	Sustainable development goals; Ownership; e-learning; Governance; Africa; Theology; Faith-based organizations	Judith Gottschalk; Nicolai Winther-Nielsen	Implementing Sustainability in the Curriculum of Universities	https://doi.org/10.1007/978-3-319-70281-0_2		17-30		Excluded	Excluded	new_screen			2	Springer Link		Enabling faith-inspired education on the sustainable development goals through e-learning	https://link.springer.com/chapter/10.1007/978-3-319-70281-0_2	Springer, Cham	nan; References; Year; Bibtex
259	Behave	Using BDD and SBVR to refine business goals into an event-B model:a research idea	The transition from a requirements document to a formal specification in Event-B is usually manual and ad-hoc. In order to bridge this gap, we propose a method based on Behavior-Driven Development, an agile approach, and that uses a structured natural language conformant to the formalism of the Semantics of Business Vocabulary and Business Rules (SBVR) standard. This method will successively refine a list of high-level business goals into an Event-B model using transformations. In this paper we present our research idea, describing the steps of this method and showing an example based on the Train System scenario described by Abrial.	BDD; SBVR; event-B; formal methods; method; requirements	Fabio Levy Siqueira; Thiago C. de Sousa; Paulo S. Muniz Silva	FormaliSE '17: Proceedings of the 5th International FME Workshop on Formal Methods in Software Engineering	https://doi.org/10.5555/3101290.3101300		31-36		Included	Included	new_screen			2	ACM		Using BDD and SBVR to Refine Business Goals into an Event-B Model: A Research Idea	https://dl.acm.org/doi/10.5555/3101290.3101300	IEEE Press	nan; References; Year; Bibtex
260	Behave	Using behaviour-driven development with hardware-software co-design for autonomous load management	The typical approach to designing embedded systems manages the specification and design of the hardware and software separately. HW/SW Co-design is used, in embedded computing, to allow the hardware and the software to be designed and implemented together and make sure that the non-functional properties are met. Behavior-driven development (BDD) is an agile software development approach that spurs collaboration of project stakeholders to ensure the right software is developed to meet their needs. BDD describes the behavior of the system as executable user stories and focuses on how the system behaves for users interact with the system. In this paper, we introduce an approach that integrates BDD with HW/SW Co-design. The approach provides the ability to describe the behavior of the software as executable user stories in a HW/SW Co-design environment. The approach is evaluated using a renewable energy project in collaboration with a private company in Canada to build a system for autonomous load management of self-forming renewable energy nanogrids.	Software; Testing; Hardware; Computer architecture; Batteries; Inverters; Relays; Loading Control; Renewable Energy; Software Development; Collaborative Project; Agile Development; Hardware Specifications; Renewable Energy Projects; Canadian Companies; Testing Procedure; Processing Software; Power Grid; Analog-to-digital Converter; Inverter; Test Environment; Text File; Output Parameters; User Requirements; Test Scenarios; Software Testing; Grid Voltage; Photovoltaic Panels; Photovoltaic Inverter; Hardware Components; Market Today; Hardware Test; Powerful Architecture; Load Shedding; Hardware Technology; Embedded Systems; Behaviour-Driven Development; Hardware-Software Co-Design; Test-driven development; Nanogrid systems; Agile software	Mohammad Alhaj; Gilbert Arbez; Liam Peyton	2017 8th International Conference on Information and Communication Systems (ICICS)	https://doi.org/10.1109/IACS.2017.7921944	"1.K. Petersen, C. Wohlin and D. Baca, ""The Waterfall Model in Large-Scale Development"", Lecture Notes in Business Information Processing, 2009. CrossRef  Google Scholar; 2.P. Kruchten, ""The Rational Unified Process: An Introduction"", Addison-Wesley Professional, 2004. Google Scholar; 3.K. Beck, Extreme Programming Explained: Embrace Change, Addisob-Wesley, 2004. Google Scholar; 4.K. Schwaber, ""SCRUM Development Process"", Business Object Design and Implementation, pp. 117-134, 1997. CrossRef  Google Scholar; 5.K. Beck, Test-driven Development: By Example, Addison-Wesley, pp. 220, 2003. Google Scholar; 6.M. Cohn, User Stories Appliedfor Agile Software Development, Addison-Wesley, 2009. Google Scholar; 7.C. Solis and X. Wang, ""A Study of the Characteristics of Behaviour Driven Development"", Software Engineering and Advanced Applications (SEAA), 2011. View Article  Google Scholar; 8.S. Rolland and G. Glania, Hybrid mini-grids for rural electrification: Lessons learneds, 2011. Google Scholar; 9.B. Bacque et al., ""Solving the Last mile Problem for energy self-forming nanogrids"", Humanitarian Technology Conference (IHTC2015) 2015 IEEE Canada International, 2015. View Article  Google Scholar; 10.J. Schonberger, R. Duke and S. Round, ""Dc bus signaling: A distributed control strategy for a hybrid renewable nanogrid"", IEEE Transactions on Industrial Electronics, vol. 53, no. 5, August 2006. View Article  Google Scholar; 11.W. Dalbon, M. Roscia and D. Zaninelli, ""Hybrid photovoltaic system control for enhancing sustainable energy"", Power Engineering Society Summer Meeting, 2002. View Article  Google Scholar; 12.J. Teich, Hardware/Software Codesign: The Past the Present and Predicting the Future IEEE, 2011. Google Scholar; 13.T. Vandoorn, J. D. Kooning, B. Meersman and L. Vandevelde, ""Review of primary control strategies for islanded microgrids with power-electronic interfaces"", Renewable and Sustainable Energy Reviews, vol. 19, pp. 613-628, March 2013. CrossRef  Google Scholar; 14.B. Nordman, K. Christensen and A. Meier, Think Globally Distribute Power Locally: The Promise of Nanogrids IEEE Computer Society, pp. 89-91, 2012. Google Scholar; 15.D. Dahlby, Applying Agile Methods to Embedded Systems Development, vol. 41, pp. 101-123, 2004. Google Scholar; 16.D. North, Introducing BDD,  [online]  Available: http://dannorth.net/introducing-bdd/. Google Scholar"			Included	Included	new_screen			2	IEEE		Using behaviour-driven development with hardware-software co-design for autonomous load management	https://ieeexplore.ieee.org/document/7921944	IEEE	nan; Pages; Year; Bibtex
261	Behave	Towards Automated Requirements Checking Throughout Development Processes of Interactive Systems	The user-centered development process of interactive systems is iterative and, during multiple iterations, users have the opportunity to bring new requirements that are very likely to have an impact, not only in future development, but also affect previously developed artifacts. Manual testing of all artifacts when new requirements are introduced can be cumbersome and time consuming. For that, we need flexible methods to ensure continuous consistency and accuracy among the various artifacts employed to build interactive systems. The ultimate goal of this position paper is to briefly present our vision on an approach for automating the requirements assessment using a Behavior-Driven Development perspective. Thereby, automated tests can run early in the design process, providing a continuous quality assurance of requirements, and helping clients and teams to identify potential problems and inconsistencies before commitments with software implementation.	Automated requirements checking; Behavior-driven development; Multi-artifact testing	Thiago Rocha Silva; Marco Winckler	2nd Workshop on Continuous Requirements Engineering (CRE 2016) co-located with the 22nd International Conference on Requirements Engineering: Foundation for Software Quality, REFSQ	https://hal.science/hal-01712531/			"""nan"""	Excluded	Excluded	new_screen			2	Google Scholar		Towards automated requirements checking throughout development processes of interactive systems	https://hal.science/hal-01712531/	HAL open science	
262	Behave	Automated Test Input Generation via Model Inference Based on User Story and Acceptance Criteria for Mobile Application Development	There has been observed explosive growth in the development of mobile applications (apps) for Android and iOS operating systems, which has led to the direct impact towards mobile app development. In order to design and propose quality-oriented apps, it is the primary responsibility of developers to devote time and sufficient efforts towards testing to make the apps bug-free and operational in the hands of end-users without any hiccup. Manual testing procedures take a prolonged amount of time in writing test cases, and in some cases, the full testing requirements are not met. Besides, the insufficient knowledge of tester also impacts the overall quality and bug-free apps. To overcome the obstacles of testing, we propose a new testing methodology cum tool called ``AgileUATM{''} which works primarily towards white-box and black-box testing. To evaluate the validity of the proposed tool, we put the tool in a real-time operational environment concerning mobile test apps. By using this tool, all the acceptance criteria are determined via user stories. The testers/developers specify requirements with formal specifications based on programs properties, predicates, invariants, and constraints. The results show that the proposed tool generated effective and accurate test cases, test input. Meanwhile, expected output was also generated in a unified fashion from the user stories to meet acceptance criteria. The proposed solution also reduced the development time to identify test data as compared to manual Behavior-Driven Development (BDD) methodologies. This tool can support the developers to get a better idea about the required tests and able to translate the customer's natural languages to computer languages as well. This paper fulfills an approach to suitably test mobile application development.	AgileUATM; user story; acceptance criteria; agile methodology; BDD; mobile application testing; test generation; model inference; AgileUATM;  user story;  acceptance criteria;  agile methodology;  BDD;  mobile application testing;  test generation;  model inference	Nguyen, Duc-Man; Huynh, Quyet-Thang; Ha, Nhu-Hang; Nguyen, Thanh-Hung	INTERNATIONAL JOURNAL OF SOFTWARE ENGINEERING AND KNOWLEDGE ENGINEERING	https://doi.org/10.1142/S0218194020500163		399-425	"""@article{WOS:000531558900004,
    Author = ""Nguyen, Duc-Man and Huynh, Quyet-Thang and Ha, Nhu-Hang and Nguyen, Thanh-Hung"",
    Title = ""Automated Test Input Generation via Model Inference Based on User Story and Acceptance Criteria for Mobile Application Development"",
    Journal = ""INTERNATIONAL JOURNAL OF SOFTWARE ENGINEERING AND KNOWLEDGE ENGINEERING"",
    Year = ""2020"",
    Volume = ""30"",
    Number = ""3"",
    Pages = ""399-425"",
    Month = ""MAR"",
    Abstract = ""There has been observed explosive growth in the development of mobile applications (apps) for Android and iOS operating systems, which has led to the direct impact towards mobile app development. In order to design and propose quality-oriented apps, it is the primary responsibility of developers to devote time and sufficient efforts towards testing to make the apps bug-free and operational in the hands of end-users without any hiccup. Manual testing procedures take a prolonged amount of time in writing test cases, and in some cases, the full testing requirements are not met. Besides, the insufficient knowledge of tester also impacts the overall quality and bug-free apps. To overcome the obstacles of testing, we propose a new testing methodology cum tool called ``AgileUATM{''} which works primarily towards white-box and black-box testing. To evaluate the validity of the proposed tool, we put the tool in a real-time operational environment concerning mobile test apps. By using this tool, all the acceptance criteria are determined via user stories. The testers/developers specify requirements with formal specifications based on programs properties, predicates, invariants, and constraints. The results show that the proposed tool generated effective and accurate test cases, test input. Meanwhile, expected output was also generated in a unified fashion from the user stories to meet acceptance criteria. The proposed solution also reduced the development time to identify test data as compared to manual Behavior-Driven Development (BDD) methodologies. This tool can support the developers to get a better idea about the required tests and able to translate the customer's natural languages to computer languages as well. This paper fulfills an approach to suitably test mobile application development."",
    Publisher = ""WORLD SCIENTIFIC PUBL CO PTE LTD"",
    Address = ""5 TOH TUCK LINK, SINGAPORE 596224, SINGAPORE"",
    Type = ""Article"",
    Language = ""English"",
    Affiliation = ""Nguyen, DM (Corresponding Author), Duy Tan Univ, Int Sch, Danang 550000, Vietnam. Duc-Man Nguyen, Duy Tan Univ, Int Sch, Danang 550000, Vietnam. Quyet-Thang Huynh; Thanh-Hung Nguyen, Sch Informat \\& Commun Technol HUST, Hanoi 100000, Vietnam. Nhu-Hang Ha, Duy Tan Univ, Grad Sch, Danang 550000, Vietnam."",
    DOI = ""10.1142/S0218194020500163"",
    ISSN = ""0218-1940"",
    EISSN = ""1793-6403"",
    Keywords = ""AgileUATM; user story; acceptance criteria; agile methodology; BDD; mobile application testing; test generation; model inference"",
    Research-Areas = ""Computer Science; Engineering"",
    Web-of-Science-Categories = ""Computer Science, Artificial Intelligence; Computer Science, Software Engineering; Engineering, Electrical \\& Electronic"",
    Author-Email = ""mannd@duytan.edu.vn thanghq@soict.hust.edu.vn hatnhuhang@duytan.edu.vn hungnt@soict.hust.edu.vn"",
    Affiliations = ""Duy Tan University; Hanoi University of Science \\& Technology (HUST); Duy Tan University"",
    ResearcherID-Numbers = ""Nguyen, Duc-Man/GOK-0955-2022 Nguyen, Truong Khang/G-4686-2015"",
    Number-of-Cited-References = ""42"",
    Times-Cited = ""2"",
    Usage-Count-Last-180-days = ""0"",
    Usage-Count-Since-2013 = ""8"",
    Journal-ISO = ""Int. J. Softw. Eng. Knowl. Eng."",
    Doc-Delivery-Number = ""LL4WY"",
    Web-of-Science-Index = ""Science Citation Index Expanded (SCI-EXPANDED)"",
    Unique-ID = ""WOS:000531558900004"",
    DA = ""2024-10-22""
}
"""	Included	Included	new_screen			2	Web of Science		Automated Test Input Generation via Model Inference Based on User Story and Acceptance Criteria for Mobile Application Development	https://www.webofscience.com/wos/woscc/full-record/WOS:000531558900004	WORLD SCIENTIFIC PUBL CO PTE LTD	nan; References
263	Behave	Security and Privacy Behavior Definition for Behavior Driven Development	There is an issue when security measures are implemented and tested while using agile software development techniques such as Behavior Driven Development (BDD). We need to define the necessary levels of security and the privacy behaviors and acceptance criteria for the BDD. A method for defining the acceptance criteria (BehaveSafe) by creating a threat and countermeasure graph called theT&C graphis proposed in this paper. We have estimated the efficiency of our method with a web based system.		Takao Okubo; Yoshio Kakizaki; Takanori Kobashi; Hironori Washizaki; Shinpei Ogata; Haruhiko Kaiya; Nobukazu Yoshioka	International Conference on Product-Focused Software Process Improvement	https://doi.org/10.1007/978-3-319-13835-0_28		306-309		Included	Included	new_screen			2	Springer Link		Security and privacy behavior definition for behavior driven development	https://link.springer.com/chapter/10.1007/978-3-319-13835-0_28	Springer, Cham	nan; Keywords; References; Year; Bibtex
264	Behave	Effort Estimation using Bayesian Networks for Agile Development Case study	This article proposes an automatic method to estimate the effort of development based on narrative texts. Narrative used the agile method. We propose techniques of symbolic analysis of natural language were used for extraction of verbs and nouns, and verbal reduction (verbs in infinitive), and the standardization of keywords through synonyms. For the machine learning was used if the naive Bayesian classifier model. Apply and test the model in real environment that used the narratives in the Portuguese language in the form of BDD (Behavior Driven Development). In these tests, obtaining an accuracy of 83\% in the estimates of the story points.	Bayesian network model; Agile; Estimation; Bayesian network model;  Agile;  Estimation	Ratke, Claudio; Hoffmann, Helcio Hermes; Gaspar, Tercio; Floriani, Pedro Edmundo	2019 2ND INTERNATIONAL CONFERENCE ON COMPUTER APPLICATIONS & INFORMATION SECURITY (ICCAIS)	https://www.webofscience.com/wos/woscc/full-record/WOS:000493114600011			"""@inproceedings{WOS:000493114600011,
    Author = ""Ratke, Claudio and Hoffmann, Helcio Hermes and Gaspar, Tercio and Floriani, Pedro Edmundo"",
    Book-Group-Author = ""IEEE"",
    Title = ""Effort Estimation using Bayesian Networks for Agile Development Case study"",
    Booktitle = ""2019 2ND INTERNATIONAL CONFERENCE ON COMPUTER APPLICATIONS \\& INFORMATION SECURITY (ICCAIS)"",
    Year = ""2019"",
    Note = ""2nd International Conference on Computer Applications and Information Security (ICCAIS), Riyadh, SAUDI ARABIA, MAY 01-03, 2019"",
    Organization = ""IEEE; IEEE Reg 8; Saudi Comp Soc; IEEE Saudi Arabia Sect"",
    Abstract = ""This article proposes an automatic method to estimate the effort of development based on narrative texts. Narrative used the agile method. We propose techniques of symbolic analysis of natural language were used for extraction of verbs and nouns, and verbal reduction (verbs in infinitive), and the standardization of keywords through synonyms. For the machine learning was used if the naive Bayesian classifier model. Apply and test the model in real environment that used the narratives in the Portuguese language in the form of BDD (Behavior Driven Development). In these tests, obtaining an accuracy of 83\\% in the estimates of the story points."",
    Publisher = ""IEEE"",
    Address = ""345 E 47TH ST, NEW YORK, NY 10017 USA"",
    Type = ""Proceedings Paper"",
    Language = ""English"",
    Affiliation = ""Ratke, C (Corresponding Author), Technol Fac SENAC, Blumenau, Brazil. Ratke, Claudio; Hoffmann, Helcio Hermes; Gaspar, Tercio; Floriani, Pedro Edmundo, Technol Fac SENAC, Blumenau, Brazil."",
    ISBN = ""978-1-7281-0108-8"",
    Keywords = ""Bayesian network model; Agile; Estimation"",
    Research-Areas = ""Computer Science"",
    Web-of-Science-Categories = ""Computer Science, Information Systems; Computer Science, Interdisciplinary Applications"",
    Author-Email = ""claudio.ratke@sc.senac.br helcio@sc.senac.br tercio.gaspar@sc.senac.br pedro.floriani@edu.sc.senac.br"",
    Number-of-Cited-References = ""25"",
    Times-Cited = ""0"",
    Usage-Count-Last-180-days = ""0"",
    Usage-Count-Since-2013 = ""0"",
    Doc-Delivery-Number = ""BO0SK"",
    Web-of-Science-Index = ""Conference Proceedings Citation Index - Science (CPCI-S)"",
    Unique-ID = ""WOS:000493114600011"",
    DA = ""2024-10-22""
}
"""	Excluded	Excluded	new_screen			2	Web of Science		Effort Estimation using Bayesian Networks for Agile Development	https://www.webofscience.com/wos/woscc/full-record/WOS:000493114600011	IEEE	nan; References; Pages
265	Behave	Test-Driven Java Development, Second Edition: Invoke TDD principles for end-to-end application development, 2nd Edition	Key Features Explore the most popular TDD tools and frameworks and become more proficient in building applications Create applications with better code design, fewer bugs, and higher test coverage, enabling you to get them to market quickly Implement test-driven programming methods into your development workflowsBook Description  Test-driven development (TDD) is a development approach that relies on a test-first procedure that emphasizes writing a test before writing the necessary code, and then refactoring the code to optimize it.The value of performing TDD with Java, one of the longest established programming languages, is to improve the productivity of programmers and the maintainability and performance of code, and develop a deeper understanding of the language and how to employ it effectively.  Starting with the basics of TDD and understanding why its adoption is beneficial, this book will take you from the first steps of TDD with Java until you are confident enough to embrace the practice in your day-to-day routine.You'll be guided through setting up tools, frameworks, and the environment you need, and we will dive right into hands-on exercises with the goal of mastering one practice, tool, or framework at a time. You'll learn about the Red-Green-Refactor procedure, how to write unit tests, and how to use them as executable documentation.With this book, you'll also discover how to design simple and easily maintainable code, work with mocks, utilize behavior-driven development, refactor old legacy code, and release a half-finished feature to production with feature toggles.You will finish this book with a deep understanding of the test-driven development methodology and the confidence to apply it to application programming with Java. What you will learn Explore the tools and frameworks required for effective TDD development Perform the Red-Green-Refactor process efficiently, the pillar around which all other TDD procedures are based Master effective unit testing in isolation from the rest of your code Design simple and easily maintainable code by implementing different techniques Use mocking frameworks and techniques to easily write and quickly execute tests Develop an application to implement behavior-driven development in conjunction with unit testing Enable and disable features using feature togglesWho this book is for  If you're an experienced Java developer and want to implement more effective methods of programming systems and applications, then this book is for you.		Viktor Farcic; Alex Garcia		https://books.google.ca/books?id=NLZTDwAAQBAJ&dq=Test-Driven+Java+Development+-+Second+Edition:+Invoke+TDD+Principles+for+End-to-End+Application+Development&lr=&source=gbs_navlinks_s		324	"""nan"""	Excluded	Excluded	new_screen			2	Google Scholar		Test-Driven Java Development - Second Edition: Invoke TDD Principles for End-to-End Application Development	https://books.google.ca/books?id=NLZTDwAAQBAJ&dq=Test-Driven+Java+Development+-+Second+Edition:+Invoke+TDD+Principles+for+End-to-End+Application+Development&lr=&source=gbs_navlinks_s	Packt Publishing Ltd	
266	Behave	Behavior-driven development using specification by example: An approach for delivering the right software built in right way	"This chapter highlights a crucial problem seen often in software development that is bridging the communication gap between business and Development"" (BDD) methodology supplemented with ""Specification By Example"" approach of delivering the right software that matters. Effective communication has always been a challenge between clients, business stakeholders, project managers, developers, testers and business analysts because a ""ubiquitous"" language that every one can easily understand and use does not exist. Specification By Example serves as that ubiquitous language for all, helps build right software that matters through effective communication. Specifications are written in plain English language using the Gherkin syntax to describe various behaviors of software. BDD tools help write software specification using gherkin language and also create a living documentation that is automatically generated by programming language reflecting the current state of software at any given point of time."	Boolean functions; Software engineering; Specifications; Automatically generated; Business analysts; Communication gaps; Effective communication; English languages; Project managers; Software Specification; Software design; Boolean functions;  Software engineering;  Specifications;  Automatically generated;  Business analysts;  Communication gaps;  Effective communication;  English languages;  Project managers;  Software Specification;  Software design	Menon, Praveen Ramachandra	Emerging Innovations in Agile Software Development	https://doi.org/10.4018/978-1-4666-9858-1.ch013	Adzic, G.(2009)Bridging the Communication Gap-Specification By Example and Agile Acceptance Testing.Cited 30 times.Academic Press; Manning, M., Kirkland, L.D.; (1968)Brookhaven National Laboratory.Cited 2 times.BNL 50106 (AS-22). T. Brookhaven National Laboratory; Dinwiddie, G.The three amigos(2011)StickyMinds Magazine; McCall Smith, A.(2002)The No. 1 Ladies' Detective Agency.Cited 32 times.New York: Anchor Books; Stankov, S.M., Jakowski, N.; Thomas, S.(2013)Specification by Example versus Behavior Driven DevelopmentAcademic Press; Unni, E.J., Farris, K.B.; Yadgar, A., Grumberg, O., Schuster, A.(2009)Hybrid BDD and All-SAT Method for Model CheckingAcademic Press	237 - 282	"""@BOOK{Menon2016237,
    author = ""Menon, Praveen Ramachandra"",
    title = ""Behavior-driven development using specification by example: An approach for delivering the right software built in right way"",
    year = ""2016"",
    journal = ""Emerging Innovations in Agile Software Development"",
    pages = ""237 - 282"",
    doi = ""10.4018/978-1-4666-9858-1.ch013"",
    url = ""https://www.scopus.com/inward/record.uri?eid=2-s2.0-84981526555\&doi=10.4018\%2f978-1-4666-9858-1.ch013\&partnerID=40\&md5=991083c5dc38f87097780b8e549a8107"",
    affiliations = ""Singapore"",
    abstract = {This chapter highlights a crucial problem seen often in software development that is bridging the communication gap between business and Development"" (BDD) methodology supplemented with ""Specification By Example"" approach of delivering the right software that matters. Effective communication has always been a challenge between clients, business stakeholders, project managers, developers, testers and business analysts because a ""ubiquitous"" language that every one can easily understand and use does not exist. Specification By Example serves as that ubiquitous language for all, helps build right software that matters through effective communication. Specifications are written in plain English language using the Gherkin syntax to describe various behaviors of software. BDD tools help write software specification using gherkin language and also create a living documentation that is automatically generated by programming language reflecting the current state of software at any given point of time. (c) 2016 by IGI Global. All rights reserved.},
    keywords = ""Boolean functions; Software engineering; Specifications; Automatically generated; Business analysts; Communication gaps; Effective communication; English languages; Project managers; Software Specification; Software design"",
    publisher = ""IGI Global"",
    isbn = ""978-146669859-8; 1466698586; 978-146669858-1"",
    language = ""English"",
    abbrev_source_title = ""Emerg. Innov. in Agile Softw. Dev."",
    type = ""Book chapter"",
    publication_stage = ""Final"",
    source = ""Scopus"",
    note = ""Cited by: 1""
}
"""	Excluded	Excluded	new_screen			2	Scopus Signed In		Behavior-driven development using specification by example: An approach for delivering the right software built in right way	https://www.scopus.com/record/display.uri?eid=2-s2.0-84981526555&origin=resultslist&sort=r-f&src=s&sid=77855a1879b89167dafae175c17c0203&sot=b&sdt=b&s=TITLE%28behavior+driven+development+using+specification+by+example+an+approach+for+delivering+the+right+software+built+in+right+way%29&sl=130&sessionSearchId=77855a1879b89167dafae175c17c0203&relpos=0	IGI Global	
267	Behave	The Business Transformation Framework and Enterprise Architecture Framework for Managers in Business Innovation: An Applied Holistic Mathematical Model	This journal article proposes a cross-business domain applied holistic mathematical model (AHMM) that is the result of a lifetime long research on business transformations, applied mathematics, software modelling, business engineering, financial analysis, and global enterprise architecture. This ultimate research is based on an authentic and proprietary mixed research method that is supported by an underlining mainly qualitative holistic reasoning model module. The proposed AHMM formalism attempts to mimic some functions of the human brain, which uses empirical processes that are mainly based on the beam-search, like heuristic decision-making process. The AHMM can be used to implement a decision-making system or an expert system that can integrate in the enterprise's business, information and communication technology environments. The AHMM uses a behaviour driven development environment or a natural language environment that can be easily adopted by the project's development teams. The AHMM offers a high level implementation environment that can be used by any team member without any prior computer sciences qualification. The AHMM can be used also to model enterprise architecture (EA) blueprints, business transformation projects, or knowledge management systems; it is supported by many real-life cases of various business domains. The uniqueness of this research is that the AHMM promotes a holistic unbundling process, the alignment of various EA standards and transformation strategies to support business transformation projects.	Business Applied Mathematics;; Business Transformation Manager;; Business Transformation Project;; Decision-Making Systems;; Engineering;; Enterprise Architecture;; Holisms;; Knowledge Management Systems;; Neural Networks;; Risk Management	Trad, Antoine	International Journal of Service Science, Management, Engineering, and Technology	https://doi.org/10.4018/IJSSMET.20210101.oa1		142 - 181	"""@ARTICLE{Trad2021142,
    author = ""Trad, Antoine"",
    title = ""The Business Transformation Framework and Enterprise Architecture Framework for Managers in Business Innovation: An Applied Holistic Mathematical Model"",
    year = ""2021"",
    journal = ""International Journal of Service Science, Management, Engineering, and Technology"",
    volume = ""12"",
    number = ""1"",
    pages = ""142 - 181"",
    doi = ""10.4018/IJSSMET.20210101.oa1"",
    url = ""https://www.scopus.com/inward/record.uri?eid=2-s2.0-85096757879\&doi=10.4018\%2fIJSSMET.20210101.oa1\&partnerID=40\&md5=24b1dc7ba3987ae79d359eebcd033114"",
    affiliations = ""IBISTM, France"",
    abstract = ""This journal article proposes a cross-business domain applied holistic mathematical model (AHMM) that is the result of a lifetime long research on business transformations, applied mathematics, software modelling, business engineering, financial analysis, and global enterprise architecture. This ultimate research is based on an authentic and proprietary mixed research method that is supported by an underlining mainly qualitative holistic reasoning model module. The proposed AHMM formalism attempts to mimic some functions of the human brain, which uses empirical processes that are mainly based on the beam-search, like heuristic decision-making process. The AHMM can be used to implement a decision-making system or an expert system that can integrate in the enterprise's business, information and communication technology environments. The AHMM uses a behaviour driven development environment or a natural language environment that can be easily adopted by the project's development teams. The AHMM offers a high level implementation environment that can be used by any team member without any prior computer sciences qualification. The AHMM can be used also to model enterprise architecture (EA) blueprints, business transformation projects, or knowledge management systems; it is supported by many real-life cases of various business domains. The uniqueness of this research is that the AHMM promotes a holistic unbundling process, the alignment of various EA standards and transformation strategies to support business transformation projects. (c) 2021 IGI Global. All rights reserved."",
    author_keywords = ""Business Applied Mathematics; Business Transformation Manager; Business Transformation Project; Decision-Making Systems; Engineering; Enterprise Architecture; Holisms; Knowledge Management Systems; Neural Networks; Risk Management"",
    publisher = ""IGI Global"",
    issn = ""1947959X"",
    language = ""English"",
    abbrev_source_title = ""Int. J. Serv. Sci. Manag. Eng. Technol."",
    type = ""Article"",
    publication_stage = ""Final"",
    source = ""Scopus"",
    note = ""Cited by: 14; All Open Access, Hybrid Gold Open Access""
}
"""	Excluded	Excluded	new_screen			2	Scopus Signed In		The Business Transformation Framework and Enterprise Architecture Framework for Managers in Business Innovation: An Applied Holistic Mathematical Model	https://www.scopus.com/record/display.uri?eid=2-s2.0-85096757879&origin=resultslist&sort=r-f&src=s&sid=afa11c6fe2ad707d6be2cf28b34a89b8&sot=b&sdt=b&s=TITLE%28the+business+transformation+framework+and+enterprise+architecture+framework+for+managers+in+business+innovation+an+applied+holistic+mathematical+model%29&sl=157&sessionSearchId=afa11c6fe2ad707d6be2cf28b34a89b8&relpos=0	IGI Global	nan; References
268	Behave	Ontological syntax highlighting	This paper deals with the special type of syntax highlighting which is powered by combination of DEMO methodology (Design & Engineering Methodology for Organizations), BDD technique (Behaviour-Driven Development). Main contribution of this paper is the idea how to highlight business relevant code in IDEs (Integrated Development Environments) and notice a developer about the fact that important part of code base is edited. The proposal of the implementation encounters usage of code coverage technique and user stories derived upon DEMO methodology.		Jiri Matula; Jaroslav Zacek	INTERNATIONAL CONFERENCE OF NUMERICAL ANALYSIS AND APPLIED MATHEMATICS	https://pubs.aip.org/aip/acp/article-abstract/1978/1/060006/796783/Ontological-syntax-highlighting			"""nan"""	Included	Included	new_screen			2	Google Scholar		Ontological syntax highlighting	https://pubs.aip.org/aip/acp/article-abstract/1978/1/060006/796783/Ontological-syntax-highlighting	AIP Publishing	
269	Behave	A history of the Groovy programming language	This paper describes the history of the Groovy programming language. At the time of Groovy's inception, Java was a dominant programming language with a wealth of useful libraries. Despite this, it was perceived by some to be evolving slowing and to have shortcomings for scripting, rapid prototyping and when trying to write minimalistic code. Other languages seemed to be innovating faster than Java and, while overcoming some of Java's shortcomings, used syntax that was less familiar to Java developers. Integration with Java libraries was also non-optimal.	Closure; Domain Specific Languages; Dynamic typing; Extensibility; Functional programming; Metaprogramming; Object-oriented; Scripting; Static typing	Paul King	Proceedings of the ACM on Programming Languages	https://doi.org/10.1145/3386326				Excluded	Excluded	new_screen			2	ACM		A History of the Groovy Programming Language	https://dl.acm.org/doi/10.1145/3386326	Association for Computing Machinery	nan; References; Pages; Year; Bibtex
270	Behave	Integrating Behavior Driven Development and Programming by Contract	This paper developed a Contracted Behavior Driven Development (CBDD) method that extends and combines the ideas behind Test/Behavior Driven Development (TDD/BDD) and Programming by Contract (PBC) to improve the overall stability and quality of a system. A tool is developed to derive unit tests automatically by analyzing human written specifications for preconditions and post-conditions when coupled with data definitions. These results will be used to generate code to be run by a unit testing framework before deployment, either as part of a continuous integration environment or by individual developers. The tool will also generate wireframe classes implementing pre and post-conditions within the code and using runtime contract analysis to generate information when an exception occurs, thereby helping to automate verification of bug fixes.	Software Contracted Behavior Driven Development; Software Development Tools	Schoeneman, Larry; Liu, Jiang B.	International Conference on Computational Science and Its Applications	https://doi.org/10.1007/978-3-642-39640-3_43		590--606	"""@InProceedings{10.1007/978-3-642-39640-3_43,
    author = ""Schoeneman, Larry and Liu, Jiang B."",
    editor = ""Murgante, Beniamino and Misra, Sanjay and Carlini, Maurizio and Torre, Carmelo M. and Nguyen, Hong-Quang and Taniar, David and Apduhan, Bernady O. and Gervasi, Osvaldo"",
    title = ""Integrating Behavior Driven Development and Programming by Contract"",
    booktitle = ""Computational Science and Its Applications -- ICCSA 2013"",
    year = ""2013"",
    publisher = ""Springer Berlin Heidelberg"",
    address = ""Berlin, Heidelberg"",
    pages = ""590--606"",
    abstract = ""This paper developed a Contracted Behavior Driven Development (CBDD) method that extends and combines the ideas behind Test/Behavior Driven Development (TDD/BDD) and Programming by Contract (PBC) to improve the overall stability and quality of a system. A tool is developed to derive unit tests automatically by analyzing human written specifications for preconditions and post-conditions when coupled with data definitions. These results will be used to generate code to be run by a unit testing framework before deployment, either as part of a continuous integration environment or by individual developers. The tool will also generate wireframe classes implementing pre and post-conditions within the code and using runtime contract analysis to generate information when an exception occurs, thereby helping to automate verification of bug fixes."",
    isbn = ""978-3-642-39640-3""
}
"""	Included	Included	new_screen			2	Springer Link		Integrating behavior driven development and programming by contract	https://link.springer.com/chapter/10.1007/978-3-642-39640-3_43	Springer Berlin Heidelberg	nan; References
271	Behave	Transit use and the work commute: Analyzing the role of last mile issues	This paper examines the role that public transport last mile problems play in mode choice decisions of commuters, while controlling for trip, built environment, and decision maker related variables. Last-mile problems arise due to lack of adequate connectivity between transit stops and trip origin or termination points. The paper is motivated by previous literature which has pointed out that high-quality public transit needs to consider end-to end connectivity from trip origins to destinations. In contrast to previous work on transit last mile problems, which has focused on physical distance and sidewalks to transit stops, we consider a wider range of area factors including transit availability, job accessibility, parking costs, the quality of the pedestrian environment and risks to pedestrians from vehicular traffic, and social characteristics such as street-level crime. Using a discrete choice model, our goal is to unpack ways in which such factors contribute to the last-mile problem in home-based work trips, while controlling for these wider range of factors as well as the usual variables such as cost and trip time that inform mode choice. We find that the prevalence of non-domestic violent crimes reduces the odds of using all types of non-motorized alternatives as well as transit that is accessed either by walking or driving. Using compensating variation to measure welfare changes, we show that there are significant benefits that could be brought to transit service users through increasing safety in the transit access trip. By separately controlling for origin and destination transit accessibility, we show that improved destination accessibility significantly boosts transit use to a greater degree than increases in origin level accessibility. These findings argue for improving accessibility and related job densities at employment centers.	Transit use; Last mile problems; Crime; Accessibility; Destination accessibility; Mode choice; Transit use;  Last mile problems;  Crime;  Accessibility;  Destination accessibility;  Mode choice	Tilahun, Nebiyou; Thakuriah, Piyushimita (Vonu); Li, Moyin; Keita, Yaye	JOURNAL OF TRANSPORT GEOGRAPHY	https://doi.org/10.1016/j.jtrangeo.2016.06.021		359-368	"""@article{WOS:000382344800035,
    Author = ""Tilahun, Nebiyou and Thakuriah, Piyushimita (Vonu) and Li, Moyin and Keita, Yaye"",
    Title = ""Transit use and the work commute: Analyzing the role of last mile issues"",
    Journal = ""JOURNAL OF TRANSPORT GEOGRAPHY"",
    Year = ""2016"",
    Volume = ""54"",
    Pages = ""359-368"",
    Month = ""JUN"",
    Abstract = ""This paper examines the role that public transport last mile problems play in mode choice decisions of commuters, while controlling for trip, built environment, and decision maker related variables. Last-mile problems arise due to lack of adequate connectivity between transit stops and trip origin or termination points. The paper is motivated by previous literature which has pointed out that high-quality public transit needs to consider end-to end connectivity from trip origins to destinations. In contrast to previous work on transit last mile problems, which has focused on physical distance and sidewalks to transit stops, we consider a wider range of area factors including transit availability, job accessibility, parking costs, the quality of the pedestrian environment and risks to pedestrians from vehicular traffic, and social characteristics such as street-level crime. Using a discrete choice model, our goal is to unpack ways in which such factors contribute to the last-mile problem in home-based work trips, while controlling for these wider range of factors as well as the usual variables such as cost and trip time that inform mode choice. We find that the prevalence of non-domestic violent crimes reduces the odds of using all types of non-motorized alternatives as well as transit that is accessed either by walking or driving. Using compensating variation to measure welfare changes, we show that there are significant benefits that could be brought to transit service users through increasing safety in the transit access trip. By separately controlling for origin and destination transit accessibility, we show that improved destination accessibility significantly boosts transit use to a greater degree than increases in origin level accessibility. These findings argue for improving accessibility and related job densities at employment centers. (C) 2016 Elsevier Ltd. All rights reserved."",
    Publisher = ""ELSEVIER SCI LTD"",
    Address = ""THE BOULEVARD, LANGFORD LANE, KIDLINGTON, OXFORD OX5 1GB, OXON, ENGLAND"",
    Type = ""Article"",
    Language = ""English"",
    Affiliation = ""Tilahun, N (Corresponding Author), Univ Illinois, Dept Urban Planning \\& Policy, 412 S Peoria St, Chicago, IL 60607 USA. Tilahun, Nebiyou; Li, Moyin; Keita, Yaye, Univ Illinois, Dept Urban Planning \\& Policy, 412 S Peoria St, Chicago, IL 60607 USA. Thakuriah, Piyushimita (Vonu), Univ Glasgow, UK ESRC Urban Big Data Ctr, Sch Engn, Glasgow G12 8QQ, Lanark, Scotland."",
    DOI = ""10.1016/j.jtrangeo.2016.06.021"",
    ISSN = ""0966-6923"",
    EISSN = ""1873-1236"",
    Keywords = ""Transit use; Last mile problems; Crime; Accessibility; Destination accessibility; Mode choice"",
    Keywords-Plus = ""BUILT ENVIRONMENT; TRAVEL BEHAVIOR; MODE CHOICE; URBAN FORM; PUBLIC TRANSPORT; ACCESSIBILITY; SERVICE; WELFARE; ACCESS"",
    Research-Areas = ""Business \\& Economics; Geography; Transportation"",
    Web-of-Science-Categories = ""Economics; Geography; Transportation"",
    Author-Email = ""ntilahun@uic.edu piyushimita.thakuriah@glasgow.ac.uk mli60@uic.edu ykeita2@uic.edu"",
    Affiliations = ""University of Illinois System; University of Illinois Chicago; University of Illinois Chicago Hospital; UK Research \\& Innovation (UKRI); Economic \\& Social Research Council (ESRC); University of Glasgow"",
    ResearcherID-Numbers = ""Thakuriah, Piyushimita/AHE-6298-2022"",
    ORCID-Numbers = ""Keita, Yaye/0000-0003-1412-8681 Thakuriah, Piyushimita/0000-0002-5681-2353 Tilahun, Nebiyou/0000-0001-9127-4581"",
    Funding-Acknowledgement = ""Illinois Department of Transportation {[}H8249-598281]; ESRC {[}ES/L011921/1] Funding Source: UKRI"",
    Funding-Text = ""We gratefully acknowledge the support of the Illinois Department of Transportation (H8249-598281) that provided the funding for the work included in this paper."",
    Number-of-Cited-References = ""34"",
    Times-Cited = ""60"",
    Usage-Count-Last-180-days = ""5"",
    Usage-Count-Since-2013 = ""63"",
    Journal-ISO = ""J. Transp. Geogr."",
    Doc-Delivery-Number = ""DU6SL"",
    Web-of-Science-Index = ""Social Science Citation Index (SSCI)"",
    Unique-ID = ""WOS:000382344800035"",
    DA = ""2024-10-22""
}
"""	Excluded	Excluded	new_screen			2	Web of Science		Transit use and the work commute: Analyzing the role of last mile issues	https://www.webofscience.com/wos/woscc/full-record/WOS:000382344800035	ELSEVIER SCI LTD	nan; References
272	Behave	Extending behavior-driven development for assessing user interface design artifacts	This paper presents a scenario-based approach to specify requirements and tests by extending Behavior-Driven Development (BDD) with the aim of ensuring the consistency between user requirements and user interface design artifacts. The approach has been evaluated by exploiting user requirements specified by a group of potential Product Owners (POs) for a web system to book business trips. Such requirements gave rise to a set of User Stories that have been refined and used to automatically check the consistency of task models, user interface (UI) prototypes, and final UIs of the system. The results have shown our approach was able to identify different types of inconsistencies in the set of analyzed artifacts and consistently keep the semantic traces between them.	Boolean functions; Knowledge engineering; Semantics; Software engineering; Automated requirements assessment; Behavior-Driven Development (BDD); Scenario-based; Task models; User interface designs; User interface prototypes; User requirements; User stories; User interfaces; Boolean functions;  Knowledge engineering;  Semantics;  Software engineering;  Automated requirements assessment;  Behavior-Driven Development (BDD);  Scenario-based;  Task models;  User interface designs;  User interface prototypes;  User requirements;  User stories;  User interfaces	Silva, Thiago Rocha; Winckler, Marco; Traetteberg, Hallvard	Proceedings of the International Conference on Software Engineering and Knowledge Engineering, SEKE	https://doi.org/10.18293/SEKE2019-054	Winckler, M., Palanque, P.; Chelimsky, D., Astels, D., Helmkamp, B., North, D., Dennis, Z., Hellesoy, A.(2010)The RSpec Book: Behaviour Driven Development with RSpec, Cucumber, and Friends.Cited 98 times.Pragmatic Bookshelf; Cohn, M.(2004)User Stories Applied for Agile Software Development.Cited 966 times.Addison-Wesley; Silva, T.R., Winckler, M.A.A.Towards automated requirements checking throughout development processes of interactive systems(2016)2nd Workshop on Continuous Requirements Engineering (CRE), REFSQ 2016, pp. 1-2.Cited 4 times.; Silva, T.R.; Silva, T.R., Hak, J.-L., Winckler, M.; Silva, T.R., Hak, J.-L., Winckler, M.An approach for multi-artifact testing through an ontological perspective for behavior-driven development(2016)Complex Systems Informatics and Modeling Quarterly, (7), pp. 81-107.Cited 8 times.; Silva, T.R., Winckler, M.A scenario-based approach for checking consistency in user interface design artifacts(2017)Proceedings of the 16th Brazilian Symposium on Human Factors in Computing Systems (IHC 2017), 1, pp. 21-30.Cited 5 times.; Smart, J.F.(2014)BDD in Action: Behavior-driven Development for the Whole Software Lifecycle.Cited 86 times.1 edition. Manning Publications; (2019)What's in a Story?[Accessed: 01-Jan-2019]D. North; Paterno, F., Santoro, C., Spano, L.D., Raggett, D.(2017)W3C, MBUI - Task Models.Cited 4 times.http://www.w3.org/TR/task-models/; Martinie, C., Palanque, P., Winckler, M.; Beaudouin-Lafon, M., Mackay, W.E.Prototyping tools and techniques(2000)Prototype Development and Tools, pp. 1-41.Cited 4 times.; Silva, T.R., Hak, J.-L., Winckler, M.; Silva, T.R., Hak, J.-L., Winckler, M.; Silva, T.R., Winckler, M., Bach, C.Evaluating the usage of predefined interactive behaviors for writing user stories: An empirical study with potential product owners(2019)Cognition, Technology & Work.Cited 4 times.	485 - 488	"""@CONFERENCE{Silva2019485,
    author = ""Silva, Thiago Rocha and Winckler, Marco and Traetteberg, Hallvard"",
    title = ""Extending behavior-driven development for assessing user interface design artifacts"",
    year = ""2019"",
    journal = ""Proceedings of the International Conference on Software Engineering and Knowledge Engineering, SEKE"",
    volume = ""2019-July"",
    pages = ""485 - 488"",
    doi = ""10.18293/SEKE2019-054"",
    url = ""https://www.scopus.com/inward/record.uri?eid=2-s2.0-85071379012\&doi=10.18293\%2fSEKE2019-054\&partnerID=40\&md5=afb55bd0b6a5be76befea10acc0f3684"",
    affiliations = ""Department of Computer Science, Norwegian University of Science and Technology (NTNU), Norway; SPARKS-i3S, Universite Nice Sophia Antipolis (Polytech), France"",
    abstract = ""This paper presents a scenario-based approach to specify requirements and tests by extending Behavior-Driven Development (BDD) with the aim of ensuring the consistency between user requirements and user interface design artifacts. The approach has been evaluated by exploiting user requirements specified by a group of potential Product Owners (POs) for a web system to book business trips. Such requirements gave rise to a set of User Stories that have been refined and used to automatically check the consistency of task models, user interface (UI) prototypes, and final UIs of the system. The results have shown our approach was able to identify different types of inconsistencies in the set of analyzed artifacts and consistently keep the semantic traces between them. (c) 2019 Knowledge Systems Institute Graduate School. All rights reserved."",
    author_keywords = ""Automated requirements assessment; Behavior-Driven Development (BDD); User interface design artifacts"",
    keywords = ""Boolean functions; Knowledge engineering; Semantics; Software engineering; Automated requirements assessment; Behavior-Driven Development (BDD); Scenario-based; Task models; User interface designs; User interface prototypes; User requirements; User stories; User interfaces"",
    publisher = ""Knowledge Systems Institute Graduate School"",
    issn = ""23259000"",
    isbn = ""1891706489"",
    language = ""English"",
    abbrev_source_title = ""Proc. Int. Conf. Softw. Eng. Knowl. Eng., SEKE"",
    type = ""Conference paper"",
    publication_stage = ""Final"",
    source = ""Scopus"",
    note = ""Cited by: 6; Conference name: 31st International Conference on Software Engineering and Knowledge Engineering, SEKE 2019; Conference date: 10 July 2019 through 12 July 2019; Conference code: 150462; All Open Access, Bronze Open Access, Green Open Access""
}
"""	Included	Included	new_screen			2	Scopus Signed In		Extending behavior-driven development for assessing user interface design artifacts	https://www.scopus.com/record/display.uri?eid=2-s2.0-85071379012&origin=resultslist&sort=r-f&src=s&sid=39b15bba93509a52eddf0539a82ae4f6&sot=b&sdt=b&s=TITLE%28extending+behavior+driven+development+for+assessing+user+interface+design+artifacts%29&sl=90&sessionSearchId=39b15bba93509a52eddf0539a82ae4f6&relpos=0	Knowledge Systems Institute Graduate School	
273	Behave	Beast methodology: An agile testing methodology for multi-agent systems based on behaviour driven development	This paper presents a testing methodology to apply Behaviour Driven Development (BDD) techniques while developing Multi-Agent Systems (MASs), termed BEhavioural Agent Simple Testing (BEAST) Methodology. This methodology is supported by the open source framework (BEAST Tool) which automatically generates test cases skeletons from BDD scenarios specifications. The developed framework allows the testing of MASs based on JADE or JADEX platforms. In addition, this framework offers a set of configurable Mock Agents with the aim of being able to execute tests while the MAS is under development. The BEAST Methodology presents transparent traceability from user requirements to test cases. Thus, the stakeholders can be aware of the project status. The methodology and the associated tool have been validated in the development of a MAS for fault diagnosis in FTTH (Fiber To The Home) networks. The results have been measured in quantifiable way obtaining a reduction of the tests implementation time.	Test; Behaviour-driven development; Multi-agent systems; Mock-agents; Agile; Methodology; Test;  Behaviour-driven development;  Multi-agent systems;  Mock-agents;  Agile;  Methodology	Carrera, Alvaro; Iglesias, Carlos A.; Garijo, Mercedes	INFORMATION SYSTEMS FRONTIERS	https://doi.org/10.1007/s10796-013-9438-5	"Adzic, G. (2009). Bridging the communication gap: specification by example and agile acceptance testing. UK: Neuri Limited.; Adzic, G. (2011). Specification by example: how successful teams deliver the right software, 1st ed. Greenwich: Manning Publications Co.; citation_journal_title=International Journal of Project Management; citation_title=Defining success for software projects: an exploratory revelation; citation_author=N Agarwal, U Rathod; citation_volume=24; citation_issue=4; citation_publication_date=2006; citation_pages=358-370; citation_doi=10.1016/j.ijproman.2005.11.009; citation_id=CR3; citation_journal_title=Information Systems Frontiers; citation_title=Requirements traceability in model-driven development: applying model and transformation conformance; citation_author=J Almeida, ME Iacob, P Eck; citation_volume=9; citation_issue=4; citation_publication_date=2007; citation_pages=327-342; citation_doi=10.1007/s10796-007-9038-3; citation_id=CR4; citation_title=Developing multi-agent systems with JADE, Wiley series in agent technology (Vol. 5).; citation_publication_date=2007; citation_id=CR5; citation_author=FL Bellifemine; citation_author=G Caire; citation_author=D Greenwood; citation_publisher=Wiley; citation_title=Programming multi-agent systems in AgentSpeak using Jason (Vol. 8); citation_publication_date=2007; citation_id=CR6; citation_author=RH Bordini; citation_author=JF Hubner; citation_author=M Wooldridge; citation_publisher=Wiley; Braubach, L., Pokahr, A., Lamersdorf, W. (2005). Jadex: A BDIagent system combining middleware and reasoning. In R.Unland, M. Calisti, M. Klusch, M. Walliser, S. Brantschen, T. Hempfling (Eds.), Software agent-based applications, platforms and development kits. Whitestein series in software agent technologies and autonomic computing (pp. 143-168). Basel: Birkhauser.; Clynch, N., & Collier, R. (2007). Sadaam: software agent development-an agile methodology. In Proceedings of the workshop of languages, methodologies, and development tools for multi-agent systems (LADS007). Durham.; Coelho, R., Kulesza, U., von Staa, A., Lucena, C. (2006). Unit testing in multi-agent systems using mock agents and aspects. In Proceedings of the 2006 international workshop on software engineering for large-scale multi-agent systems, SELMAS 06 (pp. 83-90). New York: ACM.; Dikenelli, O., Erdur, R.C., Gumus, O. (2005). Seagent: a platform for developing semantic web based multi agent systems. In Proceedings of the fourth international joint conference on autonomous agents and multiagent systems, AAMAS '05 (pp. 1271-1272). New York: ACM.; Evans, E. (2004). Domain-driven design: tackling complexity in the heart of software. Boston:Addison-Wesley Professional.; Foundation TAS (2011). Apache maven project. Accessed 23 October 2012. 
                    http://maven.apache.org
                    
                  .; Garcia-Magarino, I., Gomez-Rodriguez, A., Gomez-Sanz, J., Gonzalez-Moreno, J. (2009). Ingenias-scrum development process for multi-agent development. In International symposium on distributed computing and artificial intelligence 2008 (DCAI 2008) (pp. 108-117). Springer.; Gomez-Sanz, J., Botia J., Serrano, E., Pavon, J. (2009). Testing and debugging of MAS interactions with INGENIAS. In M. Luck, & J. Gomez-Sanz (Eds.), Agent-oriented software engineering IX. Lecture notes in computer science (Vol. 5386, pp. 199-212). Heidelberg: Springer.; citation_journal_title=Information Systems Frontiers; citation_title=Capturing data quality requirements for web applications by means of dqwebre; citation_author=C Guerra-Garcia, I Caballero, M Piattini; citation_volume=15; citation_issue=3; citation_publication_date=2013; citation_pages=433-445; citation_doi=10.1007/s10796-012-9401-x; citation_id=CR15; Hamill, P. (2004). Unit test frameworks, 1st edn. California:O'Reilly.; Haugset, B., Hanssen, G. (2008). Automated acceptance testing: A literature review and an industrial case study. In Agile, 2008. AGILE '08. Conference (pp. 27-38).; citation_journal_title=International Journal of Advanced Computer Science and Applications (IJACSA); citation_title=Multi-agent system testing: a survey; citation_author=Z Houhamdi; citation_volume=2; citation_issue=6; citation_publication_date=2011; citation_pages=135-141; citation_id=CR18; Iglesias, C., Garijo, M., Gonzalez, J., Velasco, J. (1998). Analysis and design of multiagent systems using mas-commonkads. In M. Singh, A. Rao, M. Wooldridge (Eds.), Intelligent agents IV agent theories, architectures, and languages. Lecture notes in computer science (Vol. 1365, pp. 313-327). Berlin: Springer.; citation_journal_title=Simulation; citation_title=Mason: a multiagent simulation environment; citation_author=S Luke, C Cioffi-Revilla, L Panait, K Sullivan, G Balan; citation_volume=81; citation_issue=7; citation_publication_date=2005; citation_pages=517-527; citation_doi=10.1177/0037549705058073; citation_id=CR20; Marnewick, A., Pretorius, J.H., Pretorius, L. (2011). A perspective on human factors contributing to quality requirements: a cross-case analysis. In 2011 IEEE international conference on industrial engineering and engineering management (IEEM) (pp. 389-393).; citation_journal_title=IEEE Software; citation_title=Tests and requirements, requirements and tests: a mobius strip; citation_author=R Martin, G Melnik; citation_volume=25; citation_issue=1; citation_publication_date=2008; citation_pages=54-59; citation_doi=10.1109/MS.2008.24; citation_id=CR22; Mockito Project (2012). Mockito framework. Accessed 25 March 2012. 
                    http://mockito.org
                    
                  .; Mugridge, R., & Cunningham, W. (2005). Fit for developing software: framework for integrated tests. Upper Saddle River, NJ:Prentice Hall.; Nguyen, C.D. (2009). Testing techniques for software agents. PhD thesis. International Doctorate School in Information and Communication Technologies.; Nguyen, D., Perini, A., Tonella, P. (2008). A goal-oriented software testing methodology. In M. Luck, & L. Padgham (Eds.), Agent oriented software engineering VIII. Lecture notes in computer science (Vol. 4951, pp. 58-72). Berlin: Springer.; citation_journal_title=International Journal of Agent-Oriented Software Engineering; citation_title=Goal oriented test ing for mass; citation_author=CD Nguyen, A Perini, P Tonella; citation_volume=4; citation_issue=1; citation_publication_date=2010; citation_pages=79-109; citation_doi=10.1504/IJAOSE.2010.029810; citation_id=CR27; Nguyen, C., Perini, A., Bernon, C., Pavon, J., Thangarajah, J. (2011). Testing in multi-agent systems. In M.P. Gleizes, & J. Gomez-Sanz (Eds.), Agent-oriented software engineering X. Lecture notes in computer science (Vol. 6038, pp. 180-190). Berlin: Springer.; North, D. (2007). Introducing: behaviour-driven development. Accessed 28 March 2012. 
                    http://dannorth.net/introducing-bdd
                    
                  .; North, D. (2011). JBehave. A framework for behaviour driven development (BDD). Accessed 28 March 2012. 
                    http://jbehave.org
                    
                  .; Padgham, L., & Winikoff, M. (2003). Prometheus: a methodology for developing intelligent agents. In F. Giunchiglia, J. Odell, G. Weiss (Eds.), Agent-oriented software engineering III. Lecture notes in computer science (Vol. 2585, pp. 174-185). Berlin: Springer.; citation_journal_title=Agent-Oriented Methodologies; citation_title=The ingenias methodology and tools; citation_author=J Pavon, JJ Gomez-Sanz, R Fuentes; citation_volume=9; citation_publication_date=2005; citation_pages=236-276; citation_doi=10.4018/978-1-59140-581-8.ch009; citation_id=CR32; citation_journal_title=Scrum Alliance; citation_title=Scrum guide; citation_author=K Schwaber, J Sutherland; citation_volume=19; citation_issue=6; citation_publication_date=2009; citation_pages=21; citation_id=CR33; Solis, C., & Wang, X. (2011). A study of the characteristics of behaviour driven development. In 2011 37th EUROMICRO conference on software engineering and advanced applications (SEAA) (pp. 383-387).; citation_journal_title=Information Systems Frontiers; citation_title=An ontological modelling of user requirements for personalised information provision; citation_author=L Sun, K Ousmanou, M Cross; citation_volume=12; citation_issue=3; citation_publication_date=2010; citation_pages=337-356; citation_doi=10.1007/s10796-008-9144-x; citation_id=CR35; Thangarajah, J., Jayatilleke, G., Padgham, L. (2011). Scenarios for system requirements traceability and testing. In The 10th international conference on autonomous agents and multiagent systems international foundation for autonomous agents and multiagent systems, AAMAS '11 (Vol. 1, pp. 285-292). Richland.; Tiryaki, A., ztuna, S., Dikenelli, O., Erdur, R. (2007). SUNIT: a unit testing framework for test driven development of multi-agent systems. In L. Padgham, & F. Zambonelli (Eds.), Agent-oriented software engineering VII. Lecture notes in computer science (Vol. 4405, pp. 156-173). Berlin: Springer.; citation_title=Multi-agent systems: simulation and applications; citation_publication_date=2009; citation_id=CR38; citation_author=AM Uhrmacher; citation_author=A Uhrmacher; citation_author=D Weyns; citation_publisher=FL: CRC Press; Wooldridge, M., Jennings, N.R., Kinny, D. (2000). The Gaia methodology for agent-oriented analysis and design. Autonomous Agents and Multi-Agent Systems, 3(3), 285-312.; Wynne, M., & Hellesoy, A. (2008). Cucumber. Behaviour driven development with elegance and joy. Accessed 28 March 2012. 
                    http://cukes.info
                    
                  .; Zhang, Z., Thangarajah, J., Padgham, L. (2011). Automated testing for intelligent agent systems. In M.P. Gleizes, & J. Gomez-Sanz (Eds.), Agent-oriented software engineering X. Lecture notes in computer science (Vol. 6038, pp. 66-79). Berlin: 925 Springer."	169-182	"""@article{WOS:000335231700002,
    Author = ""Carrera, Alvaro and Iglesias, Carlos A. and Garijo, Mercedes"",
    Title = ""Beast methodology: An agile testing methodology for multi-agent systems based on behaviour driven development"",
    Journal = ""INFORMATION SYSTEMS FRONTIERS"",
    Year = ""2014"",
    Volume = ""16"",
    Number = ""2"",
    Pages = ""169-182"",
    Month = ""APR"",
    Abstract = ""This paper presents a testing methodology to apply Behaviour Driven Development (BDD) techniques while developing Multi-Agent Systems (MASs), termed BEhavioural Agent Simple Testing (BEAST) Methodology. This methodology is supported by the open source framework (BEAST Tool) which automatically generates test cases skeletons from BDD scenarios specifications. The developed framework allows the testing of MASs based on JADE or JADEX platforms. In addition, this framework offers a set of configurable Mock Agents with the aim of being able to execute tests while the MAS is under development. The BEAST Methodology presents transparent traceability from user requirements to test cases. Thus, the stakeholders can be aware of the project status. The methodology and the associated tool have been validated in the development of a MAS for fault diagnosis in FTTH (Fiber To The Home) networks. The results have been measured in quantifiable way obtaining a reduction of the tests implementation time."",
    Publisher = ""SPRINGER"",
    Address = ""VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS"",
    Type = ""Article"",
    Language = ""English"",
    Affiliation = ""Carrera, A (Corresponding Author), Univ Politecn Madrid, Dept Ingn Sistemas Telemat, Av Complutense 30, E-28040 Madrid, Spain. Carrera, Alvaro; Iglesias, Carlos A.; Garijo, Mercedes, Univ Politecn Madrid, Dept Ingn Sistemas Telemat, E-28040 Madrid, Spain."",
    DOI = ""10.1007/s10796-013-9438-5"",
    ISSN = ""1387-3326"",
    EISSN = ""1572-9419"",
    Keywords = ""Test; Behaviour-driven development; Multi-agent systems; Mock-agents; Agile; Methodology"",
    Keywords-Plus = ""REQUIREMENTS"",
    Research-Areas = ""Computer Science"",
    Web-of-Science-Categories = ""Computer Science, Information Systems; Computer Science, Theory \\& Methods"",
    Author-Email = ""a.carrera@dit.upm.es cif@dit.upm.es mga@dit.upm.es"",
    Affiliations = ""Universidad Politecnica de Madrid"",
    ResearcherID-Numbers = ""Carrera, Alvaro/F-3455-2017 Garijo, Mercedes/H-8818-2015 IGLESIAS FERNANDEZ, CARLOS ANGEL/I-2181-2015"",
    ORCID-Numbers = ""Garijo, Mercedes/0000-0002-7910-9767 Carrera, Alvaro/0000-0002-0319-036X IGLESIAS FERNANDEZ, CARLOS ANGEL/0000-0002-1755-2712"",
    Funding-Acknowledgement = ""Ministry of Economy and Competitiveness under the R\\&D project CALISTA {[}TEC2012-32457]"",
    Funding-Text = ""This research work is supported by the Ministry of Economy and Competitiveness under the R\\&D project CALISTA (TEC2012-32457). The authors want to acknowledge the cooperation of Telefonica R\\&D, and Javier Garcia-Algarra, Javier Garcia-Ordas, Beatriz Fuentes, Raquel Toribio and Andres Sedano-Frade."",
    Number-of-Cited-References = ""41"",
    Times-Cited = ""18"",
    Usage-Count-Last-180-days = ""0"",
    Usage-Count-Since-2013 = ""29"",
    Journal-ISO = ""Inf. Syst. Front."",
    Doc-Delivery-Number = ""AG2FO"",
    Web-of-Science-Index = ""Science Citation Index Expanded (SCI-EXPANDED)"",
    Unique-ID = ""WOS:000335231700002"",
    DA = ""2024-10-22""
}
"""	Excluded	Excluded	new_screen			2	Web of Science		Beast Methodology: An Agile Testing Methodology for Multi-Agent Systems Based on Behaviour Driven Development	https://www.webofscience.com/wos/woscc/full-record/WOS:000335231700002	SPRINGER	
274	Behave	Beast methodology: An agile testing methodology for multi-agent systems based on behaviour driven development	This paper presents a testing methodology to apply Behaviour Driven Development (BDD) techniques while developing Multi-Agent Systems (MASs), termed BEhavioural Agent Simple Testing (BEAST) Methodology. This methodology is supported by the open source framework (BEAST Tool) which automatically generates test cases skeletons from BDD scenarios specifications. The developed framework allows the testing of MASs based on JADE or JADEX platforms. In addition, this framework offers a set of configurable Mock Agents with the aim of being able to execute tests while the MAS is under development. The BEAST Methodology presents transparent traceability from user requirements to test cases. Thus, the stakeholders can be aware of the project status. The methodology and the associated tool have been validated in the development of a MAS for fault diagnosis in FTTH (Fiber To The Home) networks. The results have been measured in quantifiable way obtaining a reduction of the tests implementation time.	Test; Behaviour-driven development; Multi-agent systems; Mock-agents; Agile; Methodology	Alvaro Carrera; Carlos A. Iglesias; Mercedes Garijo	Information Systems Frontiers	https://doi.org/10.1007/s10796-013-9438-5	"Adzic, G. (2009). Bridging the communication gap: specification by example and agile acceptance testing. UK: Neuri Limited.; Adzic, G. (2011). Specification by example: how successful teams deliver the right software, 1st ed. Greenwich: Manning Publications Co.; citation_journal_title=International Journal of Project Management; citation_title=Defining success for software projects: an exploratory revelation; citation_author=N Agarwal, U Rathod; citation_volume=24; citation_issue=4; citation_publication_date=2006; citation_pages=358-370; citation_doi=10.1016/j.ijproman.2005.11.009; citation_id=CR3; citation_journal_title=Information Systems Frontiers; citation_title=Requirements traceability in model-driven development: applying model and transformation conformance; citation_author=J Almeida, ME Iacob, P Eck; citation_volume=9; citation_issue=4; citation_publication_date=2007; citation_pages=327-342; citation_doi=10.1007/s10796-007-9038-3; citation_id=CR4; citation_title=Developing multi-agent systems with JADE, Wiley series in agent technology (Vol. 5).; citation_publication_date=2007; citation_id=CR5; citation_author=FL Bellifemine; citation_author=G Caire; citation_author=D Greenwood; citation_publisher=Wiley; citation_title=Programming multi-agent systems in AgentSpeak using Jason (Vol. 8); citation_publication_date=2007; citation_id=CR6; citation_author=RH Bordini; citation_author=JF Hubner; citation_author=M Wooldridge; citation_publisher=Wiley; Braubach, L., Pokahr, A., Lamersdorf, W. (2005). Jadex: A BDIagent system combining middleware and reasoning. In R.Unland, M. Calisti, M. Klusch, M. Walliser, S. Brantschen, T. Hempfling (Eds.), Software agent-based applications, platforms and development kits. Whitestein series in software agent technologies and autonomic computing (pp. 143-168). Basel: Birkhauser.; Clynch, N., & Collier, R. (2007). Sadaam: software agent development-an agile methodology. In Proceedings of the workshop of languages, methodologies, and development tools for multi-agent systems (LADS007). Durham.; Coelho, R., Kulesza, U., von Staa, A., Lucena, C. (2006). Unit testing in multi-agent systems using mock agents and aspects. In Proceedings of the 2006 international workshop on software engineering for large-scale multi-agent systems, SELMAS 06 (pp. 83-90). New York: ACM.; Dikenelli, O., Erdur, R.C., Gumus, O. (2005). Seagent: a platform for developing semantic web based multi agent systems. In Proceedings of the fourth international joint conference on autonomous agents and multiagent systems, AAMAS '05 (pp. 1271-1272). New York: ACM.; Evans, E. (2004). Domain-driven design: tackling complexity in the heart of software. Boston:Addison-Wesley Professional.; Foundation TAS (2011). Apache maven project. Accessed 23 October 2012. 
                    http://maven.apache.org
                    
                  .; Garcia-Magarino, I., Gomez-Rodriguez, A., Gomez-Sanz, J., Gonzalez-Moreno, J. (2009). Ingenias-scrum development process for multi-agent development. In International symposium on distributed computing and artificial intelligence 2008 (DCAI 2008) (pp. 108-117). Springer.; Gomez-Sanz, J., Botia J., Serrano, E., Pavon, J. (2009). Testing and debugging of MAS interactions with INGENIAS. In M. Luck, & J. Gomez-Sanz (Eds.), Agent-oriented software engineering IX. Lecture notes in computer science (Vol. 5386, pp. 199-212). Heidelberg: Springer.; citation_journal_title=Information Systems Frontiers; citation_title=Capturing data quality requirements for web applications by means of dqwebre; citation_author=C Guerra-Garcia, I Caballero, M Piattini; citation_volume=15; citation_issue=3; citation_publication_date=2013; citation_pages=433-445; citation_doi=10.1007/s10796-012-9401-x; citation_id=CR15; Hamill, P. (2004). Unit test frameworks, 1st edn. California:O'Reilly.; Haugset, B., Hanssen, G. (2008). Automated acceptance testing: A literature review and an industrial case study. In Agile, 2008. AGILE '08. Conference (pp. 27-38).; citation_journal_title=International Journal of Advanced Computer Science and Applications (IJACSA); citation_title=Multi-agent system testing: a survey; citation_author=Z Houhamdi; citation_volume=2; citation_issue=6; citation_publication_date=2011; citation_pages=135-141; citation_id=CR18; Iglesias, C., Garijo, M., Gonzalez, J., Velasco, J. (1998). Analysis and design of multiagent systems using mas-commonkads. In M. Singh, A. Rao, M. Wooldridge (Eds.), Intelligent agents IV agent theories, architectures, and languages. Lecture notes in computer science (Vol. 1365, pp. 313-327). Berlin: Springer.; citation_journal_title=Simulation; citation_title=Mason: a multiagent simulation environment; citation_author=S Luke, C Cioffi-Revilla, L Panait, K Sullivan, G Balan; citation_volume=81; citation_issue=7; citation_publication_date=2005; citation_pages=517-527; citation_doi=10.1177/0037549705058073; citation_id=CR20; Marnewick, A., Pretorius, J.H., Pretorius, L. (2011). A perspective on human factors contributing to quality requirements: a cross-case analysis. In 2011 IEEE international conference on industrial engineering and engineering management (IEEM) (pp. 389-393).; citation_journal_title=IEEE Software; citation_title=Tests and requirements, requirements and tests: a mobius strip; citation_author=R Martin, G Melnik; citation_volume=25; citation_issue=1; citation_publication_date=2008; citation_pages=54-59; citation_doi=10.1109/MS.2008.24; citation_id=CR22; Mockito Project (2012). Mockito framework. Accessed 25 March 2012. 
                    http://mockito.org
                    
                  .; Mugridge, R., & Cunningham, W. (2005). Fit for developing software: framework for integrated tests. Upper Saddle River, NJ:Prentice Hall.; Nguyen, C.D. (2009). Testing techniques for software agents. PhD thesis. International Doctorate School in Information and Communication Technologies.; Nguyen, D., Perini, A., Tonella, P. (2008). A goal-oriented software testing methodology. In M. Luck, & L. Padgham (Eds.), Agent oriented software engineering VIII. Lecture notes in computer science (Vol. 4951, pp. 58-72). Berlin: Springer.; citation_journal_title=International Journal of Agent-Oriented Software Engineering; citation_title=Goal oriented test ing for mass; citation_author=CD Nguyen, A Perini, P Tonella; citation_volume=4; citation_issue=1; citation_publication_date=2010; citation_pages=79-109; citation_doi=10.1504/IJAOSE.2010.029810; citation_id=CR27; Nguyen, C., Perini, A., Bernon, C., Pavon, J., Thangarajah, J. (2011). Testing in multi-agent systems. In M.P. Gleizes, & J. Gomez-Sanz (Eds.), Agent-oriented software engineering X. Lecture notes in computer science (Vol. 6038, pp. 180-190). Berlin: Springer.; North, D. (2007). Introducing: behaviour-driven development. Accessed 28 March 2012. 
                    http://dannorth.net/introducing-bdd
                    
                  .; North, D. (2011). JBehave. A framework for behaviour driven development (BDD). Accessed 28 March 2012. 
                    http://jbehave.org
                    
                  .; Padgham, L., & Winikoff, M. (2003). Prometheus: a methodology for developing intelligent agents. In F. Giunchiglia, J. Odell, G. Weiss (Eds.), Agent-oriented software engineering III. Lecture notes in computer science (Vol. 2585, pp. 174-185). Berlin: Springer.; citation_journal_title=Agent-Oriented Methodologies; citation_title=The ingenias methodology and tools; citation_author=J Pavon, JJ Gomez-Sanz, R Fuentes; citation_volume=9; citation_publication_date=2005; citation_pages=236-276; citation_doi=10.4018/978-1-59140-581-8.ch009; citation_id=CR32; citation_journal_title=Scrum Alliance; citation_title=Scrum guide; citation_author=K Schwaber, J Sutherland; citation_volume=19; citation_issue=6; citation_publication_date=2009; citation_pages=21; citation_id=CR33; Solis, C., & Wang, X. (2011). A study of the characteristics of behaviour driven development. In 2011 37th EUROMICRO conference on software engineering and advanced applications (SEAA) (pp. 383-387).; citation_journal_title=Information Systems Frontiers; citation_title=An ontological modelling of user requirements for personalised information provision; citation_author=L Sun, K Ousmanou, M Cross; citation_volume=12; citation_issue=3; citation_publication_date=2010; citation_pages=337-356; citation_doi=10.1007/s10796-008-9144-x; citation_id=CR35; Thangarajah, J., Jayatilleke, G., Padgham, L. (2011). Scenarios for system requirements traceability and testing. In The 10th international conference on autonomous agents and multiagent systems international foundation for autonomous agents and multiagent systems, AAMAS '11 (Vol. 1, pp. 285-292). Richland.; Tiryaki, A., ztuna, S., Dikenelli, O., Erdur, R. (2007). SUNIT: a unit testing framework for test driven development of multi-agent systems. In L. Padgham, & F. Zambonelli (Eds.), Agent-oriented software engineering VII. Lecture notes in computer science (Vol. 4405, pp. 156-173). Berlin: Springer.; citation_title=Multi-agent systems: simulation and applications; citation_publication_date=2009; citation_id=CR38; citation_author=AM Uhrmacher; citation_author=A Uhrmacher; citation_author=D Weyns; citation_publisher=FL: CRC Press; Wooldridge, M., Jennings, N.R., Kinny, D. (2000). The Gaia methodology for agent-oriented analysis and design. Autonomous Agents and Multi-Agent Systems, 3(3), 285-312.; Wynne, M., & Hellesoy, A. (2008). Cucumber. Behaviour driven development with elegance and joy. Accessed 28 March 2012. 
                    http://cukes.info
                    
                  .; Zhang, Z., Thangarajah, J., Padgham, L. (2011). Automated testing for intelligent agent systems. In M.P. Gleizes, & J. Gomez-Sanz (Eds.), Agent-oriented software engineering X. Lecture notes in computer science (Vol. 6038, pp. 66-79). Berlin: 925 Springer."			Included	Included	new_screen			2	Springer Link		Beast methodology: An agile testing methodology for multi-agent systems based on behaviour driven development	https://link.springer.com/article/10.1007/s10796-013-9438-5	Springer Link	nan; Pages; Year; Bibtex
275	Behave	A study of test techniques for integration with Domain Driven Design	This paper presents an exploratory study on agile techniques for software testing Test-Driven Development and Behaviour-Driven Development for integration with the agile software development technique known as Domain-Driven Design. It also comprises a comparison between both test approaches, enhancing the strengths and weaknesses of each one. To make it feasible the integration proposal, an example of domain using Apache Isis framework was developed. According to the study performed, the possibility of creating an automatic test generator to make it agile the validation of entities attributes of the domain model was noted.	Software Test; Domain-Driven Development; Test-Driven Development; Behaviour-Driven Development; Apache Isis; Software Test;  Domain-Driven Development;  Test-Driven Development;  Behaviour-Driven Development;  Apache Isis	Silva Santos, Eloisa Cristina; Beder, Delano Medeiros; Dellosso Penteado, Rosangela A.	Proceedings - 12th International Conference on Information Technology: New Generations, ITNG 2015	https://doi.org/10.1109/ITNG.2015.66	"1.Aniche, Mauricio Finavaro, ""Como a pratica de TDD influencia o projeto de classes em sistemas orientados a objetos"", 2012. Google Scholar; 2.Apache Isis is a framework for rapidilly developing domain-driven apps in Java, January 2014. Google Scholar; 3.K. Beck, ""Test Driven Development: By Example"" in , Addilson-Wesley, 2012. Google Scholar; 4.I. Burnstein, ""Practical software testing: a process-oriented approach"" in , Springer, 2003. Google Scholar; 5.D. Chelimsky, ""The RSPec Book Behaviour Driven Development with RSPec Cucumber and Friends"", The Pragmatic Programmers, 2010. Google Scholar; 6.Cucumber behaviour driven development with elegance and joy, January 2014. Google Scholar; 7.E. Evans, ""Domain-driven design: tackling complexity in the heart of software"" in , Addison-Wesley, 2004. Google Scholar; 8.D. Haywood, ""Apache Isis: Developing Domain-Driven Java Apps"", January 2014. Google Scholar; 9.C. Johansen, ""Test-driven JavaScript development"" in , Addison-Wesley, 2011. Google Scholar; 10.A programmer-oriented testing framework for Java, January 2014. Google Scholar; 11.Landre Einar, Wesenberg Harald and Olmhein Jorn, ""Agile enterprise software development using domain-driven design and test first"", Companion to the 22nd ACM SIGPLAN conference on Object-oriented programming systems and applications companion (OOPSLA '07), pp. 983-993, 2007. Google Scholar; 12.Fabio Roberto Lapolli, Cristiane Moura Cruz, Claudia Lage Rebello Motta and Carlo Emmanuel Tolla, ""Modelo de Desenvolvimento de Objetos de Aprendizagem Baseado em Metodologias Ageis e Scaffoldings"", Revista Brasileira de Informatica na Educacao, vol. 18, no. 02, pp. 17, 2010. CrossRef  Google Scholar; 13.Ioan Lazar, Simona Motogna and Parv Bazil, ""Behaviour-driven development of foundational UML components"", Electronic Notes in Theoretical Computer Science, vol. 264.1, pp. 91-105, 2010. CrossRef  Google Scholar; 14.Glenford J. Myers, Corey Sandler and Tom Badgett, ""The art of software testing"" in , John Wiley & Sons, 2011. Google Scholar; 15.S. Millett, Practicing Domain-Driven Design, 2014. Google Scholar; 16.D. North, ""Introducing Behaviour-Driven Development"", Better Software Magazine. 2006, January 2014. Google Scholar; 17.J. Palermo, ""Guidelines for Test-Driven Development"", January 2014. Google Scholar; 18.Solis Carlos and Xiaofeng Wang, ""A study of the characteristics of behaviour driven development"", Software Engineering and Advanced Applications (SEAA) 2011 37th EUROMICRO Conference on, pp. 383-387, 2011. Google Scholar; 19.P. Silveira, Introducao a arquitetura e design de software: Uma visao sobre a plataforma JAVA, 2012. Google Scholar; 20.Joao Pedro Manacas Sitefane, ""Desenvolvimento de Software Centrado no Dominio"", 2007. Google Scholar; 21.Odd Petter N. Slyngstad, Jingyue Li, Reidar Conradi, H. Ronneberg, Einar Landre and Harald Wesenberg, ""The impact of test driven development on the evolution of a reusable framework of components-an industrial case study"", Software Engineering Advances 2008. ICSEA'08. The Third International Conference on, pp. 214-223, 2008. View Article  Google Scholar; 22.I. Sommerville, ""Engenharia de Software"" in , Sao Paulo:Pearson Addilson-Wesley, 2007. Google Scholar; 23.Viana, Matheus Carvalho, ""Desenvolvimento e o reuso de frameworks com base nas caracteristicas do dominio"", 2014. Google Scholar; 24.Williams Laurie, E. Michael Maximilien and Mladen Vouk, ""Test-driven development as a defect-reduction practice"", Software Reliability Engineering 2003. ISSRE 2003. 14th International Symposium on. IEEE, 2003. Google Scholar"	373-378	"""@inproceedings{WOS:000380407500062,
    Author = ""Silva Santos, Eloisa Cristina and Beder, Delano Medeiros and Dellosso Penteado, Rosangela A."",
    Editor = ""Latifi, S and Arai, K and Carneiro, G and Debnath, N and Dias, LAV and Hashemi, R"",
    Title = ""A study of test techniques for integration with Domain Driven Design"",
    Booktitle = ""2015 12TH INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY - NEW GENERATIONS"",
    Year = ""2015"",
    Pages = ""373-378"",
    Note = ""12th International Conference on Information Technology: New Generations ITNG, Las Vegas, NV, APR 13-15, 2015"",
    Organization = ""Premier Hall for Science and Engineering (PHASE), USA; HUAWEI TECHNOLOGIES, Duesseldorf, Germany; Conf Publishing Serv"",
    Abstract = ""This paper presents an exploratory study on agile techniques for software testing Test-Driven Development and Behaviour-Driven Development for integration with the agile software development technique known as Domain-Driven Design. It also comprises a comparison between both test approaches, enhancing the strengths and weaknesses of each one. To make it feasible the integration proposal, an example of domain using Apache Isis framework was developed. According to the study performed, the possibility of creating an automatic test generator to make it agile the validation of entities attributes of the domain model was noted."",
    Publisher = ""IEEE"",
    Address = ""345 E 47TH ST, NEW YORK, NY 10017 USA"",
    Type = ""Proceedings Paper"",
    Language = ""English"",
    Affiliation = ""Santos, ECS (Corresponding Author), Fed Univ Sao Carlos UFSCar, Dept Comp, Sao Carlos, SP, Brazil. Silva Santos, Eloisa Cristina; Beder, Delano Medeiros; Dellosso Penteado, Rosangela A., Fed Univ Sao Carlos UFSCar, Dept Comp, Sao Carlos, SP, Brazil."",
    DOI = ""10.1109/ITNG.2015.66"",
    ISBN = ""978-1-4799-8828-0"",
    Keywords = ""Software Test; Domain-Driven Development; Test-Driven Development; Behaviour-Driven Development; Apache Isis"",
    Research-Areas = ""Computer Science"",
    Web-of-Science-Categories = ""Computer Science, Information Systems"",
    Author-Email = ""eloisa.santos@dc.ufscar.br delano@dc.ufscar.br rosangela@dc.ufscar.br"",
    Affiliations = ""Universidade Federal de Sao Carlos"",
    ResearcherID-Numbers = ""Beder, Delano/M-3647-2014"",
    Number-of-Cited-References = ""24"",
    Times-Cited = ""3"",
    Usage-Count-Last-180-days = ""1"",
    Usage-Count-Since-2013 = ""9"",
    Doc-Delivery-Number = ""BF1LM"",
    Web-of-Science-Index = ""Conference Proceedings Citation Index - Science (CPCI-S)"",
    Unique-ID = ""WOS:000380407500062"",
    DA = ""2024-10-22""
}
"""	Included	Included	new_screen			2	Web of Science		A Study of Test Techniques for Integration with Domain Driven Design	https://www.webofscience.com/wos/woscc/full-record/WOS:000380407500062	IEEE	
276	Behave	A Behaviour-Driven Development Approach for Cyber-Physical Production Systems	This paper proposes a method for iterative engineering of cyber-physical production systems (CPPS) that allows early testing of virtual prototypes and early involvement of domain experts. It is based on behaviour-driven development (BDD) from agile software engineering, which is adapted to address a set of issues relevant for CPPS engineering including the use of standardised CPPS models, integration testing, test environments, and brownfield development. The paper describes these adaptations and synthesises them into a procedural model of BDD for CPPS. Finally, a prototypical test system for CPPS is presented that partially implements the approach.	Testing; Modeling; Unified modeling language; Software; Production systems; Task analysis; Iterative methods; Production Systems; Cyber-physical Systems; Cyber-physical Production Systems; Standardised; Prototype; Test System; Systems Engineering; Test Environment; Domain Experts; Software Engineering; Prototype Testing; Involvement Of Experts; Behavioral Model; Actuator; Software Development; State Machine; Physical World; Testing Tools; Test Scenarios; Open Task; Executive Tests; Digital Twin; Productive Assets; Agile Development; Test Metrics; CPPS; Behaviour-Driven Development; Testing; Iterative Development	Udo Kannengiesser; Florian Krenn; Christian Stary	2020 IEEE Conference on Industrial Cyberphysical Systems (ICPS)	https://doi.org/10.1109/ICPS48405.2020.9274755				Included	Included	new_screen			2	IEEE		A Behaviour-Driven Development Approach for Cyber-Physical Production Systems	https://ieeexplore.ieee.org/abstract/document/9274755	IEEE	nan; References; Pages; Year; Bibtex
277	Behave	Lu-Lu: A framework for collaborative decision making games	This paper proposes Lu-Lu as an add-on architecture to open MMOGs and social network games, which has been developed to utilise a key set of ingredients that underline collaborative decision making games as reported within the research literature: personalisation, team matching, non-optimal decision making, leading, decisiveness index, scoring, levelling, and multiple stages. The implementation of Lu-Lu is demonstrated as an add-on to the classic supply chain beer game, including customisation of Lu-Lu to facilitate information exchange through the Facebook games platform, e.g., Graph API and Scores API. Performance assessment of Lu-Lu using Behaviour-Driven Development suggests a successful integration of all key ingredients within Lu-Lu's architecture, yielding autonomous behaviour that improves both player enjoyment and decision making.	Collaborative;  Decision making;  Game;  Profiling;  Personalisation;  MPEG-7; Collaborative, Decision making, Game, Profiling, Personalisation, MPEG-7	Daylamani-Zad, Damon; Angelides, Marios C.; Agius, Harry	Decision Support Systems	https://www.sciencedirect.com/science/article/pii/S0167923616300227		49-61	"""@article{DAYLAMANIZAD201649,
    author = ""Daylamani-Zad, Damon and Angelides, Marios C. and Agius, Harry"",
    title = ""Lu-Lu: A framework for collaborative decision making games"",
    journal = ""Decision Support Systems"",
    volume = ""85"",
    pages = ""49-61"",
    year = ""2016"",
    issn = ""0167-9236"",
    doi = ""https://doi.org/10.1016/j.dss.2016.02.011"",
    url = ""https://www.sciencedirect.com/science/article/pii/S0167923616300227"",
    keywords = ""Collaborative, Decision making, Game, Profiling, Personalisation, MPEG-7"",
    abstract = ""This paper proposes Lu-Lu as an add-on architecture to open MMOGs and social network games, which has been developed to utilise a key set of ingredients that underline collaborative decision making games as reported within the research literature: personalisation, team matching, non-optimal decision making, leading, decisiveness index, scoring, levelling, and multiple stages. The implementation of Lu-Lu is demonstrated as an add-on to the classic supply chain beer game, including customisation of Lu-Lu to facilitate information exchange through the Facebook games platform, e.g., Graph API and Scores API. Performance assessment of Lu-Lu using Behaviour-Driven Development suggests a successful integration of all key ingredients within Lu-Lu's architecture, yielding autonomous behaviour that improves both player enjoyment and decision making.""
}
"""	Excluded	Excluded	new_screen			2	Science Direct		Lu-Lu	https://www.sciencedirect.com/science/article/pii/S0167923616300227	Science Direct	nan; References
278	Behave	Lu-Lu: A framework for collaborative decision making games	This paper proposes Lu-Lu as an add-on architecture to open MMOGs and social network games, which has been developed to utilise a key set of ingredients that underline collaborative decision making games as reported within the research literature: personalisation, team matching, non-optimal decision making, leading, decisiveness index, scoring, levelling, and multiple stages. The implementation of Lu-Lu is demonstrated as an add-on to the classic supply chain beer game, including customisation of Lu-Lu to facilitate information exchange through the Facebook games platform, e.g., Graph API and Scores API. Performance assessment of Lu-Lu using Behaviour Driven Development suggests a successful integration of all key ingredients within Lu-Lu's architecture, yielding autonomous behaviour that improves both player enjoyment and decision making.	Collaborative; Decision making; Game; Profiling; Personalisation; MPEG-7; Collaborative;  Decision making;  Game;  Profiling;  Personalisation;  MPEG-7	Daylamani-Zad, Damon; Angelides, Marios C.; Agius, Harry	DECISION SUPPORT SYSTEMS	https://doi.org/10.1016/j.dss.2016.02.011		49-61	"""@article{WOS:000375508900005,
    Author = ""Daylamani-Zad, Damon and Angelides, Marios C. and Agius, Harry"",
    Title = ""Lu-Lu: A framework for collaborative decision making games"",
    Journal = ""DECISION SUPPORT SYSTEMS"",
    Year = ""2016"",
    Volume = ""85"",
    Pages = ""49-61"",
    Month = ""MAY"",
    Abstract = ""This paper proposes Lu-Lu as an add-on architecture to open MMOGs and social network games, which has been developed to utilise a key set of ingredients that underline collaborative decision making games as reported within the research literature: personalisation, team matching, non-optimal decision making, leading, decisiveness index, scoring, levelling, and multiple stages. The implementation of Lu-Lu is demonstrated as an add-on to the classic supply chain beer game, including customisation of Lu-Lu to facilitate information exchange through the Facebook games platform, e.g., Graph API and Scores API. Performance assessment of Lu-Lu using Behaviour Driven Development suggests a successful integration of all key ingredients within Lu-Lu's architecture, yielding autonomous behaviour that improves both player enjoyment and decision making. (C) 2016 Elsevier B.V. All rights reserved."",
    Publisher = ""ELSEVIER"",
    Address = ""RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS"",
    Type = ""Article"",
    Language = ""English"",
    Affiliation = ""Angelides, MC (Corresponding Author), Brunel Univ London, Dept Elect \\& Comp Engn, Coll Engn Design \\& Phys Sci, Uxbridge UB8 3PH, Middx, England. Daylamani-Zad, Damon, Univ Greenwich, Fac Architecture Comp \\& Humanities, Dept Comp \\& Informat Syst, London SE10 9LS, England. Angelides, Marios C.; Agius, Harry, Brunel Univ London, Dept Elect \\& Comp Engn, Coll Engn Design \\& Phys Sci, Uxbridge UB8 3PH, Middx, England."",
    DOI = ""10.1016/j.dss.2016.02.011"",
    ISSN = ""0167-9236"",
    EISSN = ""1873-5797"",
    Keywords = ""Collaborative; Decision making; Game; Profiling; Personalisation; MPEG-7"",
    Keywords-Plus = ""STUDENTS LEARNING-PERFORMANCE; VIDEO-GAME; DESIGN; STRATEGY; SUPPORT; EFFICACY; BEHAVIOR; SYSTEM; IMPACT; LEADER"",
    Research-Areas = ""Computer Science; Operations Research \\& Management Science"",
    Web-of-Science-Categories = ""Computer Science, Artificial Intelligence; Computer Science, Information Systems; Operations Research \\& Management Science"",
    Author-Email = ""d.d.zad@greenwich.ac.uk marios.angelides@brunel.ac.uk harryagius@acm.org"",
    Affiliations = ""University of Greenwich; Brunel University"",
    ResearcherID-Numbers = ""Daylamani-Zad, Damon/JXM-8824-2024"",
    ORCID-Numbers = ""Daylamani-Zad, Damon/0000-0001-7849-458X"",
    Number-of-Cited-References = ""79"",
    Times-Cited = ""13"",
    Usage-Count-Last-180-days = ""1"",
    Usage-Count-Since-2013 = ""42"",
    Journal-ISO = ""Decis. Support Syst."",
    Doc-Delivery-Number = ""DL3BJ"",
    Web-of-Science-Index = ""Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)"",
    Unique-ID = ""WOS:000375508900005"",
    OA = ""Green Submitted, Green Accepted"",
    DA = ""2024-10-22""
}
"""	Excluded	Excluded	new_screen			2	Web of Science		Lu-Lu: A framework for collaborative decision making games	https://www.webofscience.com/wos/woscc/full-record/WOS:000375508900005	ELSEVIER	nan; References
279	Behave	An approach for guiding developers in the choice of security solutions and in the generation of concrete test cases	This paper tackles the problems of choosing security solutions and writing concrete security test cases for software, which are two tasks of the software life cycle requiring time, expertise and experience. We propose in this paper a method, based upon the notion of knowledge base, for helping developers devise more secure applications from the threat modelling step up to the testing one. The first stage of the approach consists of the acquisition and integration of publicly available security data into a data store. This one is used to assist developers in the design of attack-defense trees expressing the attacker possibilities to compromise an application and the defenses that may be implemented. These defenses are given under the form of security pattern combinations, a security pattern being a generic and reusable solution to design more secure applications. In the second stage, these trees are used to guide developers in the test case generation. Test verdicts show whether an application is vulnerable to the threats modelled by an ADTree and whether the consequences of the chosen security patterns are observed from the application (a consequence leading to some observable events partly showing that a pattern is correctly implemented). We applied this approach to web applications and evaluated it on 24 participants. The results are very encouraging in terms of the two criteria: comprehensibility and effectiveness.	Security; Security patterns; Attack-defense trees; Test case generation; Security;  Security patterns;  Attack-defense trees;  Test case generation	Salva, Sebastien; Regainia, Loukmen	SOFTWARE QUALITY JOURNAL	https://doi.org/10.1007/s11219-018-9438-2	"Aleem, A.K., & Zulkernine, M. (2012). A comparative study of software security pattern classifications seventh international conference on availability. Reliability and Security, 582-589.; Bozic, J., Simos, D.E., Wotawa, F. (2014). Attack pattern-based combinatorial testing. In Proceedings of the 9th international workshop on automation of software test. AST 2014 (pp. 1-7). New York: ACM.; Daun, M, Hubscher, C, Weyer, T. (2017). Controlled experiments with student participants in software engineering: preliminary results from a systematic mapping study. CoRR, arXiv:
                    1708.04662
                    
                  .; citation_journal_title=Science of Computer Programming; citation_title=Analyzing best practices on web development frameworks: the lift approach; citation_author=M del Pilar Salas-Zarate, G Alor-Hernandez, R Valencia-Garcia, L Rodriguez-Mazahua, A Rodriguez-Gonzalez, JLL Cuadrado; citation_volume=102; citation_publication_date=2015; citation_pages=1-19; citation_doi=10.1016/j.scico.2014.12.004; citation_id=CR4; citation_journal_title=Information and Software Technology; citation_title=Automated verification of security pattern compositions; citation_author=J Dong, T Peng, Y Zhao; citation_volume=52; citation_issue=3; citation_publication_date=2010; citation_pages=274-295; citation_doi=10.1016/j.infsof.2009.10.001; citation_id=CR5; El Ariss, O., & Xu, D. (2011). Modeling security attacks with statecharts. In Proceedings of the Joint ACM SIGSOFT conference - QoSA and ACM SIGSOFT symposium - ISARCS on quality of software architectures - QoSA and architecting critical systems - ISARCS. QoSA-ISARCS '11 (pp. 123-132). New York: ACM.; Fernandez, E.B., Washizaki, H., Yoshioka, N., Kubo, A., Fukazawa, Y. (2008). Classifying security patterns. In Lecture notes in computer science (including subseries lecture notes in artificial intelligence and lecture notes in bioinformatics) (Vol. 4976 LNCS, pp. 342-347).; Hamid, B., Percebois, C., Gouteux, D. (2012). A methodology for integration of patterns with validation purpose. In Proceedings of the 17th European conference on pattern languages of programs. EuroPLoP '12 (pp. 8:1-8:14). New York: ACM.; Howard, M., & LeBlanc, D. (2003). Writing secure code.; Jhawar, R., Kordy, B., Mauw, S., Radomirovic, S., Trujillo-Rasua, R. (2015). Attack trees with sequential conjunction. In IFIP International information security conference (pp. 339-353). Springer.; Kobashi, T., Yoshizawa, M., Washizaki, H., Fukazawa, Y., Yoshioka, N., Okubo, T., Kaiya, H. (2015). TESEM: a tool for verifying security design pattern applications by model testing. In 2015 IEEE 8th International conference on software testing, verification and validation (ICST) (pp. 1-8).; Kordy, B., Mauw, S., Radomirovic, S, Schweitzer, P. (2012). Attack-defense trees. Journal of Logic and Computation p exs029.; Kordy, B., Kordy, P., Mauw, S., Schweitzer, P. (2013). ADTool: security analysis with attack-defense trees. In International conference on quantitative evaluation of systems (pp. 173-176). Springer.; Marback, A., Do, H., He, K., Kondamarri, S., Xu, D. (2009). Security test generation using threat trees. In 2009 ICSE Workshop on automation of software test (pp. 62-69).; citation_journal_title=Softw Pract Exper; citation_title=A threat model-based approach to security testing; citation_author=A Marback, H Do, K He, S Kondamarri, D Xu; citation_volume=43; citation_issue=2; citation_publication_date=2013; citation_pages=241-258; citation_doi=10.1002/spe.2111; citation_id=CR15; Mitre corporation. (2015). Common attack pattern enumeration and classification. 
                    https://capec.mitre.org/
                    
                  .; Morais, A., Martins, E., Cavalli, A., Jimenez, W. (2009). Security protocol testing using attack trees. In 2009 International conference on computational science and engineering (Vol. 2, pp. 690-697).; Offensive Security. (2017). Exploit database archive. 
                    https://capec.mitre.org/
                    
                  .; OWASP. (2016). Owasp testing guide v3.0 project. 
                    http://www.owasp.org/index.php/Category:OWASP_Testing_Project#OWASP_Testing_Guide
                    
                  .; Regaigna, L., Bouhours, C., Salva, S. (2016). A systematic approach to assist designers in security pattern integration. In Second international conference on advances and trends in software engineering (SOFTENG 2016). Lisbon.; Regainia, L., & Salva, S. (2017). Security pattern classification, companion site. 
                    http://regainia.com/research/companion.html
                    
                  .; Rojas, J.M., Fraser, G., Arcuri, A. (2015). Automated unit test generation during software development: a controlled experiment and think-aloud observations. In Proceedings of the 2015 international symposium on software testing and analysis. ISSTA 2015 (pp. 338-349). New York: ACM.; Salva, S., & Regainia, L. (2017a). Using data integration for security testing. In Testing software and systems - 29th IFIP WG 6.1 international conference, ICTSS 2017, St. Petersburg, Russia, October 9-11, 2017, Proceedings (pp. 178-194).; Salva, S., & Regainia, L. (2017b). Using data integration to help design more secure applications. In Proceedings of the 12th international conference on risks and security of internet and systems. Dinard: Springer.; Schieferdecker, I., Grossmann, J., Schneider, M.A. (2012). Model-based security testing. In Proceedings 7th workshop on model-based testing, MBT 2012, Tallinn, Estonia, 25 March 2012 (pp. 1-12).; citation_title=Security engineering with patterns: origins, theoretical models, and new applications; citation_publication_date=2003; citation_id=CR26; citation_author=M Schumacher; citation_publisher=Springer-Verlag New York, Inc.; citation_journal_title=Information and Software Technology; citation_title=An advanced approach for modeling and detecting software vulnerabilities; citation_author=N Shahmehri, A Mammar, E Montes De Oca, D Byers, A Cavalli, S Ardi, W Jimenez; citation_volume=54; citation_issue=9; citation_publication_date=2012; citation_pages=997-1013; citation_doi=10.1016/j.infsof.2012.03.004; citation_id=CR27; Slavin, R., & Niu, J. (2017). Security patterns repository. 
                    http://sefm.cs.utsa.edu/repository/
                    
                  .; citation_journal_title=IEEE Security Privacy; citation_title=Demystifying the threat modeling process; citation_author=P Torr; citation_volume=3; citation_issue=5; citation_publication_date=2005; citation_pages=66-70; citation_doi=10.1109/MSP.2005.119; citation_id=CR29; citation_journal_title=IEEE Transactions on Dependable and Secure Computing; citation_title=Automated security test generation with formal threat models; citation_author=D Xu, M Tu, M Sanford, L Thomas, D Woodraska, W Xu; citation_volume=9; citation_issue=4; citation_publication_date=2012; citation_pages=526-540; citation_doi=10.1109/TDSC.2012.24; citation_id=CR30; citation_journal_title=Proceedings of PLoP; citation_title=Architectural patterns for enabling application security; citation_author=J Yoder, J Yoder, J Barcalow, J Barcalow; citation_volume=1997; citation_issue=51; citation_publication_date=1998; citation_pages=31; citation_id=CR31; Yoshizawa, M., Kobashi, T., Washizaki, H., Fukazawa, Y., Okubo, T., Kaiya, H., Yoshioka, N. (2014). Verifying implementation of security design patterns using a test template. In 2014 Ninth international conference on availability, reliability and security (pp. 178-183).; Yskout, K., Heyman, T., Scandariato, R., Joosen, W. (2006). A system of security patterns.; Yskout, K., Scandariato, R., Joosen, W. (2015). Do security patterns really help designers?. In Proceedings of the 37th international conference on software engineering. ICSE '15, (Vol. 1 pp. 292-302). Piscataway: IEEE Press."	675-701	"""@article{WOS:000470767500008,
    Author = ""Salva, Sebastien and Regainia, Loukmen"",
    Title = ""An approach for guiding developers in the choice of security solutions and in the generation of concrete test cases"",
    Journal = ""SOFTWARE QUALITY JOURNAL"",
    Year = ""2019"",
    Volume = ""27"",
    Number = ""2, SI"",
    Pages = ""675-701"",
    Month = ""JUN"",
    Abstract = ""This paper tackles the problems of choosing security solutions and writing concrete security test cases for software, which are two tasks of the software life cycle requiring time, expertise and experience. We propose in this paper a method, based upon the notion of knowledge base, for helping developers devise more secure applications from the threat modelling step up to the testing one. The first stage of the approach consists of the acquisition and integration of publicly available security data into a data store. This one is used to assist developers in the design of attack-defense trees expressing the attacker possibilities to compromise an application and the defenses that may be implemented. These defenses are given under the form of security pattern combinations, a security pattern being a generic and reusable solution to design more secure applications. In the second stage, these trees are used to guide developers in the test case generation. Test verdicts show whether an application is vulnerable to the threats modelled by an ADTree and whether the consequences of the chosen security patterns are observed from the application (a consequence leading to some observable events partly showing that a pattern is correctly implemented). We applied this approach to web applications and evaluated it on 24 participants. The results are very encouraging in terms of the two criteria: comprehensibility and effectiveness."",
    Publisher = ""SPRINGER"",
    Address = ""VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS"",
    Type = ""Article"",
    Language = ""English"",
    Affiliation = ""Salva, S (Corresponding Author), Univ Clermont Auvergne, IUT Clermont Ferrand, F-63000 Clermont Ferrand, France. Salva, Sebastien, Univ Clermont Auvergne, IUT Clermont Ferrand, F-63000 Clermont Ferrand, France. Regainia, Loukmen, Univ Clermont Auvergne, F-63000 Clermont Ferrand, France."",
    DOI = ""10.1007/s11219-018-9438-2"",
    ISSN = ""0963-9314"",
    EISSN = ""1573-1367"",
    Keywords = ""Security; Security patterns; Attack-defense trees; Test case generation"",
    Research-Areas = ""Computer Science"",
    Web-of-Science-Categories = ""Computer Science, Software Engineering"",
    Author-Email = ""sebastien.salva@uca.fr loukmen.regainia@uca.fr"",
    Affiliations = ""Universite Clermont Auvergne (UCA); Universite Clermont Auvergne (UCA)"",
    Number-of-Cited-References = ""33"",
    Times-Cited = ""2"",
    Usage-Count-Last-180-days = ""0"",
    Usage-Count-Since-2013 = ""2"",
    Journal-ISO = ""Softw. Qual. J."",
    Doc-Delivery-Number = ""IC2CN"",
    Web-of-Science-Index = ""Science Citation Index Expanded (SCI-EXPANDED)"",
    Unique-ID = ""WOS:000470767500008"",
    DA = ""2024-10-22""
}
"""	Excluded	Excluded	new_screen			2	Web of Science		An Approach for Guiding Developers in the Choice of Security Solutions and in the Generation of Concrete Test Cases	https://www.webofscience.com/wos/woscc/full-record/WOS:000470767500008	SPRINGER	
280	Behave	Parsing BDD Stories for Automated Verification of Software Artefacts	This position paper reports on our ongoing developments towards the automated verification of software artefacts by parsing sentences on Behaviour-Driven Development (BDD) stories. The solution we propose is based on different strategies for analysing the consistency of user requirements specified in BDD stories on task models, graphical user interfaces (GUIs), GUI prototypes, and domain models. We illustrate our solution through concrete examples and discuss its challenges and limitations.	Automated Verification;; Behaviour-Driven Development (BDD);; Software Artefacts;; User Requirements Assessment	Silva, Thiago Rocha; Fitzgerald, Brian	Electronic Communications of the EASST	https://www.scopus.com/record/display.uri?eid=2-s2.0-85110665625&origin=resultslist&sort=r-f&src=s&sid=880e8de5cdc47e2527e2f2420070bff5&sot=b&sdt=b&s=TITLE%28parsing+bdd+stories+for+automated+verification+of+software+artefacts%29&sl=75&sessionSearchId=880e8de5cdc47e2527e2f2420070bff5&relpos=0	Cohn, M.(2004)User Stories Applied for Agile Software Development.Cited 966 times.[1] Addison-Wesley; North, D.Introducing BDD(2006)Better Software.Cited 16 times.[2]; North, D.(2019)What's in a Story?.Cited 4 times.[3] [Online]. Availablehttps://dannorth.net/whats-in-a-story/; Chechik, M., Gannon, J.; Silva, T.R., Hak, J.-L., Winckler, M.; Silva, T.R., Hak, J.-L., Winckler, M.; Silva, T.R., Winckler, M., Traetteberg, H.; Silva, T. R., Hak, J.-L., Winckler, M.An Approach for Multi-Artifact Testing Through an Ontological Perspective for Behavior-Driven Development(2016)Complex Syst. Informatics Model. Q, (7), pp. 81-107.Cited 8 times.[8]; Silva, T.R., Hak, J.-L., Winckler, M.; Silva, T.R.; Silva, T.R., Winckler, M.; Paterno, F., Santoro, C., Spano, L. D., Raggett, D.(2017)W3C, MBUI - Task Models.Cited 4 times.[12] [Online]. Availablehttp://www.w3.org/TR/task-models/; Beaudouin-Lafon, M., Mackay, W. E.Prototyping Tools and Techniques(2000)Prototype Development and Tools, pp. 1-41.Cited 4 times.[13] in; Larman, C.(2004)Applying UML and Patterns: An Introduction to Object-Oriented Analysis and Design and Iterative Development.Cited 1477 times.[14] Addison Wesley Professional; Jacobson, I., Booch, G., Rumbaugh, J.(1999)The Unified Software Development Process.Cited 2368 times.[15] 1st ed. Addison-Wesley Professional; Lucassen, G., Robeer, M., Dalpiaz, F., van der Werf, J.M.E.M., Brinkkemper, S.; De Marneffe, M.-C., MacCartney, B., Manning, C.D.; Miller, G.A.; Soeken, M., Wille, R., Drechsler, R.; Arora, C., Sabetzadeh, M., Briand, L., Zimmer, F.; Rocha Silva, T., Winckler, M., Traetteberg, H.; Rocha Silva, T., Winckler, M., Traetteberg, H.; Rocha Silva, T., Winckler, M., Traetteberg, H.; Rocha Silva, T., Winckler, M., Bach, C.	1 - 9	"""@ARTICLE{Silva20201,
    author = ""Silva, Thiago Rocha and Fitzgerald, Brian"",
    title = ""Parsing BDD Stories for Automated Verification of Software Artefacts"",
    year = ""2020"",
    journal = ""Electronic Communications of the EASST"",
    volume = ""79"",
    pages = ""1 - 9"",
    url = ""https://www.scopus.com/inward/record.uri?eid=2-s2.0-85110665625\&partnerID=40\&md5=20fd590a86a2cd49b5a2f6d40fa89be3"",
    affiliations = ""University of Limerick (UL), Limerick, Ireland"",
    abstract = ""This position paper reports on our ongoing developments towards the automated verification of software artefacts by parsing sentences on Behaviour-Driven Development (BDD) stories. The solution we propose is based on different strategies for analysing the consistency of user requirements specified in BDD stories on task models, graphical user interfaces (GUIs), GUI prototypes, and domain models. We illustrate our solution through concrete examples and discuss its challenges and limitations. (c) 2020, Electronic Communications of the EASST. All rights reserved."",
    author_keywords = ""Automated Verification; Behaviour-Driven Development (BDD); Software Artefacts; User Requirements Assessment"",
    correspondence_address = ""T.R. Silva; University of Limerick (UL), Limerick, Ireland; email: thiago.silva@lero.ie"",
    publisher = ""Universitatsbibliothek TU Berlin"",
    issn = ""18632122"",
    language = ""English"",
    abbrev_source_title = ""Electron. Commun. EASST"",
    type = ""Article"",
    publication_stage = ""Final"",
    source = ""Scopus"",
    note = ""Cited by: 2""
}
"""	Included	Included	new_screen			2	Scopus Signed In		Parsing BDD Stories for Automated Verification of Software Artefacts	https://www.scopus.com/record/display.uri?eid=2-s2.0-85110665625&origin=resultslist&sort=r-f&src=s&sid=880e8de5cdc47e2527e2f2420070bff5&sot=b&sdt=b&s=TITLE%28parsing+bdd+stories+for+automated+verification+of+software+artefacts%29&sl=75&sessionSearchId=880e8de5cdc47e2527e2f2420070bff5&relpos=0	Universitatsbibliothek TU Berlin	
281	Behave	Tit for tat and big steps: The case of Swedish banks' internationalization 1961-2010	This study examines four major Swedish banks' internationalization process patterns during the period 1961-2010. The study complements earlier studies by also considering the banks' levels of market commitment. One objective is to determine if `Tit for tat'-behaviour seen in earlier studies of Swedish banks still prevails after the deregulation. Adding to earlier studies, this study also considers the level of market activities and commitments. A secondary purpose is to examine how the financial crisis has affected the banks with reference to the banks' internationalization patterns. The empirical study is based on archival data on the studied banks' foreign operations. The results show that the banks' behaviour follows `Tit for tat'-behaviour but that the internationalization has accelerated after the deregulation, hence being carried out with `big steps' rather than small steps. The analysis also shows that the mimetic behaviour is complemented by other types of internationalization behaviours. The differences in bank internationalization also mean that the effect of a financial crisis varies depending on how the banks have internationalized.	Banks; Commitment; Financial crisis; Internationalization process; Longitudinal study; Banks;  Commitment;  Financial crisis;  Internationalization process;  Longitudinal study	Ekman, Peter; Hadjikhani, Annoch Isa; Pajuvirta, Andreas; Thilenius, Peter	INTERNATIONAL BUSINESS REVIEW	https://doi.org/10.1016/j.ibusrev.2014.06.014		1049-1063	"""@article{WOS:000343391300003,
    Author = ""Ekman, Peter and Hadjikhani, Annoch Isa and Pajuvirta, Andreas and Thilenius, Peter"",
    Title = ""Tit for tat and big steps: The case of Swedish banks' internationalization 1961-2010"",
    Journal = ""INTERNATIONAL BUSINESS REVIEW"",
    Year = ""2014"",
    Volume = ""23"",
    Number = ""6"",
    Pages = ""1049-1063"",
    Month = ""DEC"",
    Abstract = ""This study examines four major Swedish banks' internationalization process patterns during the period 1961-2010. The study complements earlier studies by also considering the banks' levels of market commitment. One objective is to determine if `Tit for tat'-behaviour seen in earlier studies of Swedish banks still prevails after the deregulation. Adding to earlier studies, this study also considers the level of market activities and commitments. A secondary purpose is to examine how the financial crisis has affected the banks with reference to the banks' internationalization patterns. The empirical study is based on archival data on the studied banks' foreign operations. The results show that the banks' behaviour follows `Tit for tat'-behaviour but that the internationalization has accelerated after the deregulation, hence being carried out with `big steps' rather than small steps. The analysis also shows that the mimetic behaviour is complemented by other types of internationalization behaviours. The differences in bank internationalization also mean that the effect of a financial crisis varies depending on how the banks have internationalized. (C) 2014 Elsevier Ltd. All rights reserved."",
    Publisher = ""ELSEVIER SCIENCE BV"",
    Address = ""PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS"",
    Type = ""Article"",
    Language = ""English"",
    Affiliation = ""Ekman, P (Corresponding Author), Malardalen Univ Coll, Sch Business Soc \\& Engn, Vasteras, Sweden. Ekman, Peter, Malardalen Univ Coll, Sch Business Soc \\& Engn, Vasteras, Sweden. Hadjikhani, Annoch Isa; Pajuvirta, Andreas; Thilenius, Peter, Uppsala Univ, Dept Business Studies, Uppsala, Sweden."",
    DOI = ""10.1016/j.ibusrev.2014.06.014"",
    ISSN = ""0969-5931"",
    EISSN = ""1873-6149"",
    Keywords = ""Banks; Commitment; Financial crisis; Internationalization process; Longitudinal study"",
    Keywords-Plus = ""FOREIGN DIRECT-INVESTMENT; QUALITATIVE METHODS; PROCESS MODEL; PERFORMANCE; EXPANSION; PATTERNS; STRATEGY; CHOICE; SCALE; ENTRY"",
    Research-Areas = ""Business \\& Economics"",
    Web-of-Science-Categories = ""Business"",
    Author-Email = ""peter.ekman@mdh.se peter.thilenius@fek.uu.se"",
    Affiliations = ""Malardalen University; Uppsala University"",
    ResearcherID-Numbers = ""Hadjikhani, Annoch/M-3140-2013"",
    ORCID-Numbers = ""Ekman, Peter/0000-0001-7334-2480"",
    Number-of-Cited-References = ""74"",
    Times-Cited = ""15"",
    Usage-Count-Last-180-days = ""1"",
    Usage-Count-Since-2013 = ""32"",
    Journal-ISO = ""Int. Bus. Rev."",
    Doc-Delivery-Number = ""AR2CN"",
    Web-of-Science-Index = ""Social Science Citation Index (SSCI)"",
    Unique-ID = ""WOS:000343391300003"",
    DA = ""2024-10-22""
}
"""	Excluded	Excluded	new_screen			2	Web of Science		Tit for tat and big steps: The case of Swedish banks’ internationalization 1961–2010	https://www.webofscience.com/wos/woscc/full-record/WOS:000343391300003	ELSEVIER SCIENCE BV	nan; References
282	Behave	A case study of agile software development for safety-Critical systems projects	This study explores the introduction of agile software development within an avionics company engaged in safety-critical system engineering. There is increasing pressure throughout the software industry for development efforts to adopt agile software development in order to respond more rapidly to changing requirements and make more frequent deliveries of systems to customers for review and integration. This pressure is also being experienced in safety-critical industries, where release cycles on typically large and complex systems may run to several years on projects spanning decades. However, safety-critical system developments are normally highly regulated, which may constrain the adoption of agile software development or require adaptation of selected methods or practices. To investigate this potential conflict, we conducted a series of interviews with practitioners in the company, exploring their experiences of adopting agile software development and the challenges encountered. The study also explores the opportunities for altering the existing software process in the company to better fit agile software development to the constraints of software development for safety-critical systems. We conclude by identifying immediate future research directions to better align the tempo of software development for safety-critical systems and agile software development.	Accident prevention; Agile manufacturing systems; Security systems; Agile software development; Future research directions; Potential conflict; Release cycles; Safety critical systems; Software industry; Software process; Software design; Accident prevention;  Agile manufacturing systems;  Security systems;  Agile software development;  Future research directions;  Potential conflict;  Release cycles;  Safety critical systems;  Software industry;  Software process;  Software design	Islam, Gibrail; Storer, Tim	RELIABILITY ENGINEERING \& SYSTEM SAFETY	https://doi.org/10.1016/j.ress.2020.106954			"""@article{WOS:000531606400019,
    Author = ""Islam, Gibrail and Storer, Tim"",
    Title = ""A case study of agile software development for safety-Critical systems projects"",
    Journal = ""RELIABILITY ENGINEERING \\& SYSTEM SAFETY"",
    Year = ""2020"",
    Volume = ""200"",
    Month = ""AUG"",
    Abstract = ""This study explores the introduction of agile software development within an avionics company engaged in safety-critical system engineering. There is increasing pressure throughout the software industry for development efforts to adopt agile software development in order to respond more rapidly to changing requirements and make more frequent deliveries of systems to customers for review and integration. This pressure is also being experienced in safety-critical industries, where release cycles on typically large and complex systems may run to several years on projects spanning decades. However, safety-critical system developments are normally highly regulated, which may constrain the adoption of agile software development or require adaptation of selected methods or practices. To investigate this potential conflict, we conducted a series of interviews with practitioners in the company, exploring their experiences of adopting agile software development and the challenges encountered. The study also explores the opportunities for altering the existing software process in the company to better fit agile software development to the constraints of software development for safety-critical systems. We conclude by identifying immediate future research directions to better align the tempo of software development for safety-critical systems and agile software development."",
    Publisher = ""ELSEVIER SCI LTD"",
    Address = ""THE BOULEVARD, LANGFORD LANE, KIDLINGTON, OXFORD OX5 1GB, OXON, ENGLAND"",
    Type = ""Article"",
    Language = ""English"",
    Affiliation = ""Islam, G (Corresponding Author), Univ Glasgow, 18 Lilybank Gardens, Glasgow G12 8QQ, Lanark, Scotland. Islam, Gibrail; Storer, Tim, Univ Glasgow, 18 Lilybank Gardens, Glasgow G12 8QQ, Lanark, Scotland."",
    DOI = ""10.1016/j.ress.2020.106954"",
    Article-Number = ""106954"",
    ISSN = ""0951-8320"",
    EISSN = ""1879-0836"",
    Keywords-Plus = ""DEVELOPMENT METHODOLOGIES"",
    Research-Areas = ""Engineering; Operations Research \\& Management Science"",
    Web-of-Science-Categories = ""Engineering, Industrial; Operations Research \\& Management Science"",
    Author-Email = ""gibrailislam@gmail.com"",
    Affiliations = ""University of Glasgow"",
    ORCID-Numbers = ""Islam, Gibrail/0009-0004-2779-8769"",
    Number-of-Cited-References = ""80"",
    Times-Cited = ""13"",
    Usage-Count-Last-180-days = ""2"",
    Usage-Count-Since-2013 = ""19"",
    Journal-ISO = ""Reliab. Eng. Syst. Saf."",
    Doc-Delivery-Number = ""LL5OC"",
    Web-of-Science-Index = ""Science Citation Index Expanded (SCI-EXPANDED)"",
    Unique-ID = ""WOS:000531606400019"",
    OA = ""Green Accepted"",
    DA = ""2024-10-22""
}
"""	Excluded	Excluded	new_screen			2	Web of Science		A case study of agile software development for safety-Critical systems projects	https://www.webofscience.com/wos/woscc/full-record/WOS:000531606400019	ELSEVIER SCI LTD	nan; References; Pages
283	Behave	Does IT team climate matter? An empirical study of the impact of co-workers and the Confucian work ethic on deviance behavior	This study seeks to determine the impact of IT co-workers on individual deviance behavior in organizations. Using data collected from 322 IT employees and their supervisors in Chinese software companies, we also examine the impact of the Confucian work ethic on deviant behavior. The results suggest that both co-workers' production deviance and the Confucian work ethic have impacts on individuals' production deviance. The influence of IT co-workers' production deviance was greater in high team climates and low team climates than in neutral team climates. The Confucian work ethic has no significant influence on production deviance in low team climates.	Confucian work ethic; IT co-worker production deviance; IT team climate; Confucian work ethic;  IT co-worker production deviance;  IT team climate	Zhang, Hanpeng; Luo, Xin (Robert); Liao, Qinyu; Peng, Lifang	INFORMATION \& MANAGEMENT	https://doi.org/10.1016/j.im.2015.05.006		658-667	"""@article{WOS:000360252900004,
    Author = ""Zhang, Hanpeng and Luo, Xin (Robert) and Liao, Qinyu and Peng, Lifang"",
    Title = ""Does IT team climate matter? An empirical study of the impact of co-workers and the Confucian work ethic on deviance behavior"",
    Journal = ""INFORMATION \\& MANAGEMENT"",
    Year = ""2015"",
    Volume = ""52"",
    Number = ""6"",
    Pages = ""658-667"",
    Month = ""SEP"",
    Abstract = ""This study seeks to determine the impact of IT co-workers on individual deviance behavior in organizations. Using data collected from 322 IT employees and their supervisors in Chinese software companies, we also examine the impact of the Confucian work ethic on deviant behavior. The results suggest that both co-workers' production deviance and the Confucian work ethic have impacts on individuals' production deviance. The influence of IT co-workers' production deviance was greater in high team climates and low team climates than in neutral team climates. The Confucian work ethic has no significant influence on production deviance in low team climates. (C) 2015 Elsevier B.V. All rights reserved."",
    Publisher = ""ELSEVIER"",
    Address = ""RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS"",
    Type = ""Article"",
    Language = ""English"",
    Affiliation = ""Peng, LF (Corresponding Author), Xiamen Univ, Sch Management, Xiamen, Fujian, Peoples R China. Zhang, Hanpeng, Southwestern Univ Finance \\& Econ, Sch Business Adm, Chengdu, Peoples R China. Luo, Xin (Robert), Univ New Mexico, Anderson Sch Management, Albuquerque, NM 87131 USA. Liao, Qinyu, Univ Texas Brownsville, Sch Business, Brownsville, TX 78520 USA. Peng, Lifang, Xiamen Univ, Sch Management, Xiamen, Fujian, Peoples R China."",
    DOI = ""10.1016/j.im.2015.05.006"",
    ISSN = ""0378-7206"",
    EISSN = ""1872-7530"",
    Keywords = ""Confucian work ethic; IT co-worker production deviance; IT team climate"",
    Keywords-Plus = ""PERCEIVED ORGANIZATIONAL SUPPORT; INTERPERSONAL DEVIANCE; ABUSIVE SUPERVISION; WORKPLACE DEVIANCE; AGGRESSION; FREQUENCY; SABOTAGE; JUSTICE"",
    Research-Areas = ""Computer Science; Information Science \\& Library Science; Business \\& Economics"",
    Web-of-Science-Categories = ""Computer Science, Information Systems; Information Science \\& Library Science; Management"",
    Author-Email = ""lfpeng@xmu.edu.cn"",
    Affiliations = ""Southwestern University of Finance \\& Economics - China; University of New Mexico; University of Texas System; University of Texas Rio Grande Valley; Xiamen University"",
    Funding-Acknowledgement = ""National Natural Science Foundation of China {[}71471125]; Fundamental Research Funds for the Central Universities {[}JBK150502]"",
    Funding-Text = ""This work is supported by the National Natural Science Foundation of China (Project No. 71471125) and Fundamental Research Funds for the Central Universities (No. JBK150502)."",
    Number-of-Cited-References = ""87"",
    Times-Cited = ""15"",
    Usage-Count-Last-180-days = ""3"",
    Usage-Count-Since-2013 = ""78"",
    Journal-ISO = ""Inf. Manage."",
    Doc-Delivery-Number = ""CP9YX"",
    Web-of-Science-Index = ""Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)"",
    Unique-ID = ""WOS:000360252900004"",
    DA = ""2024-10-22""
}
"""	Excluded	Excluded	new_screen			2	Web of Science		Does IT team climate matter? An empirical study of the impact of co-workers and the Confucian work ethic on deviance behavior	https://www.webofscience.com/wos/woscc/full-record/WOS:000360252900004	ELSEVIER	nan; References
284	Behave	Legislation-driven development of a Gift Aid system using Event-B	This work presents our approach to formally model the Swiftaid system design, a digital platform that enables donors to automatically add Gift Aid to donations made via card payments. Following principles of Behaviour-Driven Development, we use Gherkin to capture requirements specified in legislation, specifically the UK Charity (Gift Aid Declarations) Regulations 2016. The Gherkin scenarios provide a basis for subsequent formal modelling and analysis using Event-B, Rodin and ProB. Interactive model simulations assist communication between domain experts, software architects and other stakeholders during requirements capture and system design, enabling the emergent system behaviour to be validated. Our approach was employed within the development of the real Swiftaid product, launched by Streeva in February 2019. Our analysis helped conclude that there was not a strong enough business case for one of the features, whichwas shown to provide nominal user convenience at the expense of increased complexity. This work provides a case study in allying formal and agile software development to enable rapid development of robust software.	Behaviour-driven development; Formal modelling; Gherkin; Event-B; Gift Aid; Swiftaid	David M. Williams; Salaheddin Darwish; Steve Schneider; David R. Michael	Formal Aspects of Computing	https://doi.org/10.1007/s00165-020-00512-5		251-273		Included	Included	new_screen			2	ACM		Legislation-driven development of a Gift Aid system using Event-B	https://dl.acm.org/doi/10.1007/s00165-020-00512-5	Springer-Verlag	nan; References; Year; Bibtex
285	Behave	Test descriptions with ETSI TDL	To address the need for abstract, high-level test descriptions that can be shared among different stakeholders, the European Telecommunications Standards Institute (ETSI) commissioned the design of the Test Description Language (TDL). TDL is designed as a domain-specific language for testing, consisting of a standardised abstract syntax (meta-model) and concrete syntaxes for textual specification, graphical design, and model exchange between tools. Its main purpose is to support a test methodology that is followed in the standardisation work for software-intense systems at ETSI and is applicable in industrial projects as well. TDL enables the formal specification of both test objectives derived from system requirements and test descriptions refining the test objectives. The latter serve as blueprint for the implementation of executable tests. A standardised mapping of TDL specifications to test scripts in the standardised test execution language TTCN-3 widens the reach of TDL to ensure compatibility and consistency of generated executable tests. An open-source toolset has been developed as a common platform to accelerate the adoption of TDL and lower the barrier to entry for users and tool vendors. Reports from pilot applications within three ETSI standardisation groups demonstrate the practicality of the chosen approach.	Model-based testing; Test description language; Domain-specific modelling; Test methodology; Testing in standardisation; Model-based testing;  Test description language;  Domain-specific modelling;  Test methodology;  Testing in standardisation	Makedonski, Philip; Adamis, Gusztav; Kaarik, Martti; Kristoffersen, Finn; Carignani, Michele; Ulrich, Andreas; Grabowski, Jens	SOFTWARE QUALITY JOURNAL	https://doi.org/10.1007/s11219-018-9423-9	"ASAM ATX (2012). Automotive test exchange format (ATX) v1.0.0. ASAM standard. 
                    https://www.asam.net/standards/detail/atx/
                    
                  .; Bouquet, F, Grandpierre, C, Legeard, B, Peureux, F, Vacelet, N, Utting, M. (2007). A subset of precise uml for model-based testing. In Proceedings of the 3rd Int'l workshop on advances in model-based testing (A-MOST'07) (pp. 95-104). New York: ACM.; ETSI EG 203 130 (2013). Methods for Testing and Specification (MTS); Model-Based Testing (MBT); methodology for standardised test specification development, v1.1.1 European Telecommunications Standards Institute (ETSI). Sophia-Antipolis, France.; ETSI ES 201 873-1 (2016). Methods for Testing and Specification (MTS); the testing and test control notation version 3; Part 1: core language, v4.8.1 European Telecommunications Standards Institute (ETSI). Sophia-Antipolis, France.; ETSI ES 202 553 (2009). Methods for Testing and Specification (MTS); TPLan: a notation for expressing test purposes, v1.2.1 European Telecommunications Standards Institute (ETSI). Sophia-Antipolis, France.; ETSI ES 202 782 (2015). Methods for Testing and Specification (MTS); The Testing and Test Control Notation version 3; TTCN-3 extensions: performance and real-time testing, v1.3.1 European Telecommunications Standards Institute (ETSI). Sophia-Antipolis, France.; ETSI ES 202 786 (2017). Methods for Testing and Specification (MTS); The Testing and Test Control Notation version 3; TTCN-3 Extensions: support of interfaces with continuous signals, v1.4.1 European Telecommunications Standards Institute (ETSI). Sophia-Antipolis, France.; ETSI ES 202 951 (2011). Methods for Testing and Specification (MTS); Model-Based Testing (MBT); requirements for modelling notations, v1.1.1 European Telecommunications Standards Institute (ETSI). Sophia-Antipolis, France.; ETSI ES 203 119-1 (2018). Methods for Testing and Specification (MTS); The Test Description Language (TDL); Part 1: abstract syntax and associated semantics, v1.4.1 European Telecommunications Standards Institute (ETSI). Sophia-Antipolis, France.; ETSI ES 203 119-2 (2018). Methods for Testing and Specification (MTS); The Test Description Language (TDL); Part 2: graphical syntax, v1.3.1 European Telecommunications Standards Institute (ETSI). Sophia-Antipolis, France.; ETSI ES 203 119-3 (2018). Methods for Testing and Specification (MTS); The Test Description Language (TDL); Part 3: exchange format, v1.3.1 European Telecommunications Standards Institute (ETSI). Sophia-Antipolis, France.; ETSI ES 203 119-4 (2018). Methods for Testing and Specification (MTS); The Test Description Language (TDL); Part 4: structured test objective specification (extension), v1.3.1 European Telecommunications Standards Institute (ETSI). Sophia-Antipolis, France.; ETSI ES 203 119-5 (2018). Methods for Testing and Specification (MTS); The Test Description Language (TDL); Part 5: UML profile for TDL, v1.1.1 European Telecommunications Standards Institute (ETSI). Sophia-Antipolis, France.; ETSI ES 203 119-6 (2018). Methods for Testing and Specification (MTS); The Test Description Language (TDL); Part 6: mapping to TTCN-3, v1.1.1 European Telecommunications Standards Institute (ETSI). Sophia-Antipolis, France.; ETSI ES 203 119-7 (2018). Methods for Testing and Specification (MTS); The Test Description Language (TDL); Part 7: extended test configurations, v1.1.1 European Telecommunications Standards Institute (ETSI). Sophia-Antipolis, France.; ETSI TR 102 840 (2011). Methods for Testing and Specification (MTS); Model-Based Testing (MBT); Model-Based Testing in Standardisation, v1.2.1 European Telecommunications Standards Institute (ETSI). Sophia-Antipolis, France.; Grossmann, J, & Muller, W. (2006). A formal behavioral semantics for testML. In Second international symposium on leveraging applications of formal methods, verification and validation, 2006. ISoLA 2006 (pp. 441-448).; Guduvan, A, Waeselynck, H, Wiels, V, Durrieu, G, Fusero, Y, Schieber, M. (2013). A meta-model for tests of avionics embedded systems. In Proc. of the 1st Int'l conference on model-driven engineering and software development (MODELSWARD) (pp. 5-13). Barcelona.; Hammond, S, & Umphress, D. (2012). Test driven development: the state of the practice. In Proc. of the 50th annual southeast regional conference (pp. 158-163). ACM.; ISO 13209 (2011). Road vehicles - Open Test sequence eXchange format (OTX) - Parts 1-3. International ISO multipart standard No. 13209-1 to 3. 
                    https://www.iso.org/ics/43.020/x/
                    
                  .; ISO/IEC 9646-1 (1994). Information technology - open systems interconnection - conformance testing methodology and framework - Part 1: general concepts. International ISO/IEC multipart standard No. 9646-1. 
                    https://www.iso.org/standard/17473.html
                    
                  .; ISO/IEC/IEEE 29119-3 (2013). ISO/IEC/IEEE international standard - software and systems engineering - software testing - part 3: test documentation. Tech. rep., ISO/IEC/IEEE. 
                    https://ieeexplore.ieee.org/servlet/opac?punumber=6588538
                    
                  .; ITU-T Z120 (2011). Series Z: languages and general software aspect for telecommunication systems - formal description techniques (FDT) - message sequence chart (MSC). International Telecommunication Union, Recommendation Z.120 (02/11), document 
                    http://www.itu.int/rec/T-REC-Z.120-201102-I/en
                    
                  .; ITU-T Z120 Annex B (1998). Formal semantics of message sequence charts, 04/98. International telecommunication union, recommendation Z.120 Annex B (04/98), document 
                    http://www.itu.int/rec/T-REC-Z.120-199804-I!AnnB/en
                    
                  .; Kaner, C. (2003). On scenario testing. STQE Magazine, 16-22.; Kanstren, T., Puolitaival, O.P, Rytky, V.M., Saarela, A., Keranen, J.S. (2012). Experiences in setting up domain-specific model-based testing. In 2012 IEEE International conference on industrial technology (ICIT) (pp. 319-324).; Kolovos, D.S., Paige, R.F., Polack, F.A.C. (2009). On the evolution of OCL for capturing structural constraints in modelling languages. In Rigorous methods for software construction and analysis. Essays Dedicated to Egon Borger on the Occasion of His 60th Birthday (pp. 204- 218).; Makedonski, P, Adamis, G, Kaarik, M, Kristoffersen, F, Zeitoun, X. (2016). Evolving the ETSI test description language. In Proc. of the 9th system analysis and modelling conference (SAM 2016). Springer.; citation_journal_title=Software & Systems Modeling; citation_title=The many meanings of UML 2 Sequence Diagrams: A survey; citation_author=Z Micskei, H Waeselynck; citation_volume=10; citation_issue=4; citation_publication_date=2010; citation_pages=489-514; citation_doi=10.1007/s10270-010-0157-9; citation_id=CR29; OMG MARTE. (2011). UML profile for MARTE: modeling and analysis of real-time embedded systems, version 1.1. object management group, document number: formal/2011-06-02, document 
                    http://www.omg.org/spec/MARTE/1.1/
                    
                  .; OMG MOF (2014). Meta object facility core, version 2.4.2. Object management group, document number: formal/2014-04-05, document 
                    http://www.omg.org/spec/MOF/2.4.2/
                    
                  .; OMG OCL (2012). Object constraint language, version 2.3.1. Object management group, document number: formal/2012-05-09, document 
                    http://www.omg.org/spec/OCL/2.3.1/
                    
                  .; OMG UML (2015). Unified modeling language, version 2.5, chapter 12.3 (profiles). Object management group, document number: formal/2015-03-01, document 
                    http://www.omg.org/spec/UML/2.5/
                    
                  .; OMG UTP (2013). UML testing profile, version 1.2. Object management group, document number: formal/2013-04-03, document 
                    http://www.omg.org/spec/UTP/1.2/
                    
                  .; OMG XMI (2014). XML metadata interchange, version 2.4.2. Object management group, document number: formal/2014-04-06, document 
                    http://www.omg.org/spec/XMI/2.5.1/
                    
                  .; Pajunen, T, Takala, T, Katara, M. (2011). Model-based testing with a general purpose keyword-driven test automation framework. In 4th IEEE Int'l conference on software testing, verification and validation, ICST 2012 (pp. 242-251). Berlin: Workshop Proceedings.; Razorcat (2014). CCDL whitepaper. Razorcat Technical Report, 23 January 2014. 
                    https://www.razorcat.com/de/downloads-ccdl.html
                    
                  .; Solis, C, & Wang, X. (2011). A study of the characteristics of behaviour driven development. In 2011 37th EUROMICRO Conference on software engineering and advanced applications (SEAA) (pp. 383-387). IEEE.; Ulrich, A, Jell, S, Votintseva, A, Kull, A. (2014). The ETSI test description language TDL and its application. In 2nd Int'l conference on model-driven engineering and software development (MODELSWARD) (pp. 601-608)."	885-917	"""@article{WOS:000470767500015,
    Author = ""Makedonski, Philip and Adamis, Gusztav and Kaarik, Martti and Kristoffersen, Finn and Carignani, Michele and Ulrich, Andreas and Grabowski, Jens"",
    Title = ""Test descriptions with ETSI TDL"",
    Journal = ""SOFTWARE QUALITY JOURNAL"",
    Year = ""2019"",
    Volume = ""27"",
    Number = ""2, SI"",
    Pages = ""885-917"",
    Month = ""JUN"",
    Abstract = ""To address the need for abstract, high-level test descriptions that can be shared among different stakeholders, the European Telecommunications Standards Institute (ETSI) commissioned the design of the Test Description Language (TDL). TDL is designed as a domain-specific language for testing, consisting of a standardised abstract syntax (meta-model) and concrete syntaxes for textual specification, graphical design, and model exchange between tools. Its main purpose is to support a test methodology that is followed in the standardisation work for software-intense systems at ETSI and is applicable in industrial projects as well. TDL enables the formal specification of both test objectives derived from system requirements and test descriptions refining the test objectives. The latter serve as blueprint for the implementation of executable tests. A standardised mapping of TDL specifications to test scripts in the standardised test execution language TTCN-3 widens the reach of TDL to ensure compatibility and consistency of generated executable tests. An open-source toolset has been developed as a common platform to accelerate the adoption of TDL and lower the barrier to entry for users and tool vendors. Reports from pilot applications within three ETSI standardisation groups demonstrate the practicality of the chosen approach."",
    Publisher = ""SPRINGER"",
    Address = ""VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS"",
    Type = ""Article"",
    Language = ""English"",
    Affiliation = ""Makedonski, P (Corresponding Author), Univ Gottingen, Inst Comp Sci, Gottingen, Germany. Makedonski, Philip; Grabowski, Jens, Univ Gottingen, Inst Comp Sci, Gottingen, Germany. Adamis, Gusztav, Ericsson Hungary Ltd, Test Competence Ctr, Budapest, Hungary. Kaarik, Martti, Elvior OU, Tallinn, Estonia. Kristoffersen, Finn, Cinderella ApS, Tool Vendor, Copenhagen, Denmark. Carignani, Michele, European Telecommun Stand Inst, Ctr Testing \\& Interoperabil, Sophia Antipolis, France. Ulrich, Andreas, Siemens AG, Corp Technol, Munich, Germany."",
    DOI = ""10.1007/s11219-018-9423-9"",
    ISSN = ""0963-9314"",
    EISSN = ""1573-1367"",
    Keywords = ""Model-based testing; Test description language; Domain-specific modelling; Test methodology; Testing in standardisation"",
    Research-Areas = ""Computer Science"",
    Web-of-Science-Categories = ""Computer Science, Software Engineering"",
    Author-Email = ""makedonski@cs.uni-goettingen.de gusztav.adamis@ericsson.com martti.kaarik@elvior.com finn@cinderella.dk michele.carignani@etsi.org andreas.ulrich@siemens.com grabowski@cs.uni-goettingen.de"",
    Affiliations = ""University of Gottingen; Ericsson; Siemens AG; Siemens Germany"",
    ORCID-Numbers = ""Makedonski, Philip/0000-0001-7752-0029"",
    Funding-Acknowledgement = ""European Telecommunications Standards Institute (ETSI)"",
    Funding-Text = ""The work on Test Description Language (TDL) has been partially funded by the European Telecommunications Standards Institute (ETSI) in the context of the Specialist Task Force (STF) projects 454, 476, 492, and 522 between 2013 and 2017."",
    Number-of-Cited-References = ""39"",
    Times-Cited = ""6"",
    Usage-Count-Last-180-days = ""0"",
    Usage-Count-Since-2013 = ""2"",
    Journal-ISO = ""Softw. Qual. J."",
    Doc-Delivery-Number = ""IC2CN"",
    Web-of-Science-Index = ""Science Citation Index Expanded (SCI-EXPANDED)"",
    Unique-ID = ""WOS:000470767500015"",
    DA = ""2024-10-22""
}
"""	Excluded	Excluded	new_screen			2	Web of Science		Test Descriptions with ETSI TDL	https://www.webofscience.com/wos/woscc/full-record/WOS:000470767500015	SPRINGER	
286	Behave	Enabling IoT Platform Interoperability Using a Systematic Development Approach by Example	Today, the IoT landscape consists of a large number of vertical IoT platforms that are rarely interconnected. To enable creation of applications across platforms and domain boundaries interoperability needs to be established between IoT platforms. In this paper we present how this task can be simplified by utilizing a systematic software development process based on behavior-and domain-driven development. This process is illustrated using an example that uses the open source IoT interoperability framework symbIoTe to connect two indoor navigation platforms. We show that developers can actually profit from this approach but existing IoT interoperability frameworks are still cumbersome to use.	Internet of Things; IoT; interoperability; semantic interoperability; behavior-driven development; domain-driven design; Internet of Things;  IoT;  interoperability;  semantic interoperability;  behavior-driven development;  domain-driven design	Schneider, Michael; Hippchen, Benjamin; Abeck, Sebastian; Jacoby, Michael; Herzog, Reinhard	2018 Global Internet of Things Summit, GIoTS 2018	https://doi.org/10.1109/GIOTS.2018.8534549	Hippchen, B., Giessler, P., Steinegger, R., Schneider, M., Abeck, S.Designing microservice-based applications by using a domain-driven design approach(2017)International Journal on Advances in Software. IARIA, pp. 432-445.Cited 17 times.; Bruegge, B., Dutoit, A.H.(2004)Object-Oriented Software Engineering Using UML, Patterns and Java-(Required).Cited 543 times.Prentice Hall; Wynne, M., Hellesoy, A., Tooke, S.(2017)The Cucumber Book: Behaviourdriven Development for Testers and Developers.Cited 108 times.Pragmatic Bookshelf; Beck, K.(2003)Test-Driven Development: By Example.Cited 1665 times.Addison-Wesley Professional; North, D.(2009)BDD & DDD. QCon London 2009[retrieved: 2017.11.30]https://www.infoq.com/presentations/bdd-and-ddd; Evans, E.(2004)Domain-Driven Design: Tackling Complexity in the Heart of Software.Cited 1067 times.Addison-Wesley Professional; Soursos, S., Zarko, I.P., Zwickl, P., Gojmerac, I., Bianchi, G., Carrozzo, G.; Jacoby, M., Antonic, A., Kreiner, K., Apacz, R., Pielorz, J.Semantic interoperability as key to iot platform federation(2016)International Workshop on Interoperability and Open-Source Solutions, pp. 3-19.Cited 5 times.Springer; Broring, A., Schmid, S., Schindhelm, C.-K., Khelil, A., Kabisch, S., Kramer, D., Le Phuoc, D., (...), Teniente, E.; BIoTope Project.Cited 2 times.http://www.biotope-project.eu; Fortino, G., Savaglio, C., Palau, C.E., de Puga, J.S., Ghanza, M., Paprzycki, M., Montesinos, M., (...), Llop, M.; Ganzha, M., Paprzycki, M., Pawlowski, W., Szmeja, P., Wasielewska, K.; Lassila, O., Swick, R.R.Resource description framework (rdf) model and syntax specification(1998)W3C.Cited 16 times.; Fielding, R.T.(2000)Rest: Architectural Styles and the Design of Networkbased Software Architectures.Cited 4258 times.Doctoral dissertation, University of California; North, D.(2016)What's in A Story.Cited 20 times.https://dannorth.net/whats-in-a-story	331-336	"""@inproceedings{WOS:000456099600056,
    Author = ""Schneider, Michael and Hippchen, Benjamin and Abeck, Sebastian and Jacoby, Michael and Herzog, Reinhard"",
    Book-Group-Author = ""IEEE"",
    Title = ""Enabling IoT Platform Interoperability Using a Systematic Development Approach by Example"",
    Booktitle = ""2018 GLOBAL INTERNET OF THINGS SUMMIT (GIOTS)"",
    Year = ""2018"",
    Pages = ""331-336"",
    Note = ""Global Internet of Things Summit (GIoTS), Bilbao, SPAIN, JUN 04-07, 2018"",
    Abstract = ""Today, the IoT landscape consists of a large number of vertical IoT platforms that are rarely interconnected. To enable creation of applications across platforms and domain boundaries interoperability needs to be established between IoT platforms. In this paper we present how this task can be simplified by utilizing a systematic software development process based on behavior-and domain-driven development. This process is illustrated using an example that uses the open source IoT interoperability framework symbIoTe to connect two indoor navigation platforms. We show that developers can actually profit from this approach but existing IoT interoperability frameworks are still cumbersome to use."",
    Publisher = ""IEEE"",
    Address = ""345 E 47TH ST, NEW YORK, NY 10017 USA"",
    Type = ""Proceedings Paper"",
    Language = ""English"",
    Affiliation = ""Schneider, M (Corresponding Author), KIT, Res Grp Cooperat \\& Management, Zirkel 2, D-76131 Karlsruhe, Germany. Schneider, Michael; Hippchen, Benjamin; Abeck, Sebastian, KIT, Res Grp Cooperat \\& Management, Zirkel 2, D-76131 Karlsruhe, Germany. Jacoby, Michael; Herzog, Reinhard, Fraunhofer IOSB, Dept Informat Management \\& Prod Control, Fraunhoferstr 1, D-76131 Karlsruhe, Germany."",
    ISBN = ""978-1-5386-6451-3"",
    Keywords = ""Internet of Things; IoT; interoperability; semantic interoperability; behavior-driven development; domain-driven design"",
    Research-Areas = ""Computer Science; Engineering"",
    Web-of-Science-Categories = ""Computer Science, Theory \\& Methods; Engineering, Electrical \\& Electronic"",
    Author-Email = ""michael.schneider@kit.edu benjamin.hippchen@kit.edu abeck@kit.edu michael.jacoby@iosb.fraunhofer.de reinhard.herzog@iosb.fraunhofer.de"",
    Affiliations = ""Helmholtz Association; Karlsruhe Institute of Technology"",
    ORCID-Numbers = ""Jacoby, Michael/0000-0002-1479-9242 Herzog, Reinhard/0000-0001-7198-5247"",
    Funding-Acknowledgement = ""H2020 symbIoTe project, European Union's Horizon 2020 research and innovation programme {[}688156]"",
    Funding-Text = ""This work is supported by the H2020 symbIoTe project, which has received funding from the European Union's Horizon 2020 research and innovation programme under grant agreement No 688156."",
    Number-of-Cited-References = ""14"",
    Times-Cited = ""1"",
    Usage-Count-Last-180-days = ""0"",
    Usage-Count-Since-2013 = ""1"",
    Doc-Delivery-Number = ""BL8DO"",
    Web-of-Science-Index = ""Conference Proceedings Citation Index - Science (CPCI-S)"",
    Unique-ID = ""WOS:000456099600056"",
    DA = ""2024-10-22""
}
"""	Included	Included	new_screen			2	Web of Science		Enabling IoT Platform Interoperability Using a Systematic Development Approach by Example	https://www.webofscience.com/wos/woscc/full-record/WOS:000456099600056	IEEE	
287	Behave	Mining reading patterns from eye-tracking data: method and demonstration	Understanding how developers interact with different software artifacts when performing comprehension tasks has a potential to improve developers' productivity. In this paper, we propose a method to analyze eye-tracking data using process mining to find distinct reading patterns of how developers interacted with the different artifacts. To validate our approach, we conducted an exploratory study using eye-tracking involving 11 participants. We applied our method to investigate how developers interact with different artifacts during domain and code understanding tasks. To contextualize the reading patterns and to better understand the perceived benefits and challenges participants associated with the different artifacts and their choice of reading patterns, we complemented the eye-tracking data with the data obtained from think aloud. The study used behavior-driven development, a development practice that is increasingly used in Agile software development contexts, as a setting. The study shows that our method can be used to explore developers' behavior at an aggregated level and identify behavioral patterns at varying levels of granularity.	Process mining; Eye-tracking; Reading patterns; Source code; Behavior-driven development; Process mining;  Eye-tracking;  Reading patterns;  Source code;  Behavior-driven development	Ioannou, Constantina; Nurdiani, Indira; Burattin, Andrea; Weber, Barbara	SOFTWARE AND SYSTEMS MODELING	https://doi.org/10.1007/s10270-019-00759-4	"Abrahamsson, P., Salo, O., Ronkainen, J., Warsta, J.: Agile software development methods--review and analysis, Technical Report 478. VTT Publications (2002); Binamungu, L.P., Embury, S.M., Konstantinou, N.: Maintaining behaviour driven development specifications: challenges and opportunities. In: IEEE 25th International Conference on Software Analysis, Evolution and Reengineering (SANER), pp. 175-184 (2018); Blinman, S., Cockburn, A.: Program comprehension: investigating the effects of naming style and documentation. In: Proceedings of the 6th Australasian Conference on User Interface, vol. 40, AUIC '05, pp. 73-78. Australian Computer Society, Inc, Darlinghurst (2005); citation_journal_title=IEEE Trans. Softw. Eng.; citation_title=Software engineering economics; citation_author=B Boehm; citation_volume=10; citation_publication_date=1984; citation_pages=4-21; citation_doi=10.1109/TSE.1984.5010193; citation_id=CR4; citation_journal_title=Int. J. Man-Mach. Stud.; citation_title=Towards a theory of the comprehension of computer programs; citation_author=R Brooks; citation_volume=18; citation_issue=6; citation_publication_date=1983; citation_pages=543-554; citation_doi=10.1016/S0020-7373(83)80031-5; citation_id=CR5; Busjahn, T., Schulte, C., Busjahn, A.: Analysis of code reading to gain more insight in program comprehension. In: Proceedings of the 11th Koli Calling International Conference on Computing Education Research, Koli Calling '11, pp. 1-9. ACM, New York (2011); citation_title=Data Mining Methods for Knowledge Discovery; citation_publication_date=1998; citation_id=CR7; citation_author=KJ Cios; citation_author=W Pedrycz; citation_author=RW Swiniarski; citation_publisher=Springer; citation_journal_title=Computer; citation_title=How do we read algorithms? A case study; citation_author=ME Crosby, J Stelovsky; citation_volume=23; citation_issue=1; citation_publication_date=1990; citation_pages=25-35; citation_doi=10.1109/2.48797; citation_id=CR8; de Souza, P.L., do Prado, A.F., de Souza, W.L., dos Santos Forghieri Pereira, S.M., Pires, L.F.: Combining behaviour-driven development with scrum for software development in the education domain. In: ICEIS (2), pp. 449-458. SciTePress (2017); Fritz, T., Begel, A., Muller, S.C., Yigit-Elliott, S., Zuger, M.: Using psycho-physiological measures to assess task difficulty in software development. In: Proceedings of the 36th International Conference on Software Engineering, pp. 402-413. ACM, New York (2014); citation_journal_title=Requir. Eng.; citation_title=A framework for empirical evaluation of conceptual modeling techniques; citation_author=A Gemino, Y Wand; citation_volume=9; citation_issue=4; citation_publication_date=2004; citation_pages=248-260; citation_doi=10.1007/s00766-004-0204-6; citation_id=CR11; citation_journal_title=Int. J. Ind. Ergon.; citation_title=Computer interface evaluation using eye movements: methods and constructs; citation_author=JH Goldberg, XP Kotval; citation_volume=24; citation_issue=6; citation_publication_date=1999; citation_pages=631-645; citation_doi=10.1016/S0169-8141(98)00068-7; citation_id=CR12; citation_journal_title=J. Softw. Evol. Process; citation_title=Do feelings matter? On the correlation of affects and the self-assessed productivity in software engineering; citation_author=D Graziotin, X Wang, P Abrahamsson; citation_volume=27; citation_issue=7; citation_publication_date=2015; citation_pages=467-487; citation_doi=10.1002/smr.1673; citation_id=CR13; Gulden, J., Burattin, A., Andaloussi, A.A., Weber, B.: From analytical purposes to data visualizations: a decision process guided by a conceptual framework and eye tracking. Softw. Syst. Model. (2019); citation_title=Eye Tracking: A Comprehensive Guide to Methods and Measures; citation_publication_date=2011; citation_id=CR15; citation_author=K Holmqvist; citation_author=M Nystrom; citation_author=R Andersson; citation_author=R Dewhurst; citation_author=H Jarodzka; citation_author=J Weijer; citation_publisher=OUP; IEEE Task Force on Process Mining.: Process Mining Manifesto. Business Process Management Workshops, pp. 169-194 (2011); citation_title=Mining developers' workflows from IDE usage; citation_inbook_title=Advanced Information Systems Engineering Workshops; citation_publication_date=2018; citation_pages=167-179; citation_id=CR17; citation_author=C Ioannou; citation_author=A Burattin; citation_author=B Weber; citation_publisher=Springer; citation_title=The Coding Manual for Qualitative Researchers; citation_publication_date=2012; citation_id=CR18; citation_author=S Johnny; citation_publisher=SAGE Publications Limited; Kevic, K., Walters, B.M., Shaffer, T.R., Sharif, B., Shepherd, D.C., Fritz, T.: Tracing software developers' eyes and interactions for change tasks. In Proceedings of the 10th Joint Meeting on Foundations of Software Engineering, ESEC/FSE 2015, pp. 202-213. ACM, New York (2015); citation_journal_title=Inf. Syst. Res.; citation_title=How do we understand a system with (so) many diagrams? Cognitive integration processes in diagrammatic reasoning; citation_author=J Kim, J Hahn, H Hahn; citation_volume=11; citation_issue=3; citation_publication_date=2000; citation_pages=284-303; citation_doi=10.1287/isre.11.3.284.12206; citation_id=CR20; citation_title=Incremental Workflow Mining Based on Document Versioning Information; citation_inbook_title=Unifying the Software Process Spectrum; citation_publication_date=2006; citation_pages=287-301; citation_id=CR21; citation_author=Ekkart Kindler; citation_author=Vladimir Rubin; citation_author=Wilhelm Schafer; citation_publisher=Springer Berlin Heidelberg; King, T.M., Nunez, G., Santiago, D., Cando, A., Mack, C.: Legend: An Agile DSL Toolset for Web Acceptance Testing. pp. 409-412 (2014); citation_journal_title=Innov. Syst. Softw. Eng.; citation_title=Effective identifier names for comprehension and memory; citation_author=D Lawrie, C Morrell, H Feild, D Binkley; citation_volume=3; citation_issue=4; citation_publication_date=2007; citation_pages=303-318; citation_doi=10.1007/s11334-007-0031-2; citation_id=CR23; Leemans, M., van der Aalst, W.M.P.: Process mining in software systems: discovering real-life business transactions and process models from distributed systems. In: Proceedings of MODELS, pp. 44-53 (2015); Leemans, M., van der Aalst, W.M.P., van den Brand, M.G..J.: Recursion aware modeling and discovery for hierarchical software event log analysis (extended). CoRR, abs/1710.09323 (2017); Leemans, Sander J. J., Fahland, Dirk, van der Aalst, Wil M. P.: Discovering block-structured process models from event logs - a constructive approach. In Application and Theory of Petri Nets and Concurrency. Springer, (2013); citation_journal_title=J. Syst. Softw.; citation_title=Behavioral software engineering: a definition and systematic literature review; citation_author=P Lenberg, R Feldt, L Wallgren; citation_volume=107; citation_publication_date=2015; citation_pages=15-37; citation_doi=10.1016/j.jss.2015.04.084; citation_id=CR27; citation_journal_title=J. Syst. Softw.; citation_title=Cognitive processes in program comprehension; citation_author=S Letovsky; citation_volume=7; citation_issue=4; citation_publication_date=1987; citation_pages=325-339; citation_doi=10.1016/0164-1212(87)90032-X; citation_id=CR28; Liu, C., van Dongen, B.F., Assy, N., Aalst, W.M.P.: Software architectural model discovery from execution data. In: 13th International Conference on Evaluation of Novel Approaches to Software Engineering, 03 (2018); Liu, C., van Dongen, B., Assy, N., van der Aalst, W.M.P.: Component behavior discovery from software execution data. In: IEEE Symposium Series on Computational Intelligence (SSCI), pp. 1-8, (2016); Mller, S.C., Fritz, T.: Stakeholders' information needs for artifacts and their dependencies in a real world context. In: IEEE International Conference on Software Maintenance, pp 290-299 (2013); Nancy, P.: Empirical studies of programmers: Second workshop. In: Comprehension Strategies in Programming, pp. 100-113. Ablex Publishing Corp., Norwood (1987); North, D.: Introducing BDD (2006). 
http://dannorth.net/introducing-bdd/

. Last Accessed October 2018; Rubin, V., Gunther, C.W., van der Aalst, W.M.P., Kindler, E., van Dongen, B.F., Schafer, W.: Process mining framework for software processes. In Proceedings of ICSP 2007, pp. 169-181. Springer (2007); citation_journal_title=J. Syst. Softw.; citation_title=The impacts of agile and lean practices on project constraints: a tertiary study; citation_author=I Nurdiani, J Borstler, S Fricker; citation_volume=119; citation_publication_date=2016; citation_pages=162-183; citation_doi=10.1016/j.jss.2016.06.043; citation_id=CR35; citation_title=On the understanding of bdd scenarios' quality: Preliminary practitioners' opinions; citation_inbook_title=Requirements Engineering: Foundation for Software Quality; citation_publication_date=2018; citation_pages=290-296; citation_id=CR36; citation_author=G Oliveira; citation_author=S Marczak; citation_publisher=Springer; Salviulo, F., Scanniello, G.: Dealing with identifiers and comments in source code comprehension and maintenance: results from an ethnographically-informed study with students and professionals. In: Proceedings of the 18th International Conference on Evaluation and Assessment in Software Engineering, EASE '14, pp. 48:1-48:10. ACM, New York (2014); Schroter, I., Kruger, J., Siegmund, J., Leich, T.: Comprehending studies on program comprehension. In: IEEE/ACM 25th International Conference on Program Comprehension (ICPC), pp. 308-311 (2017); Shaffer, T.R., Wise, J.L., Walters, B.M., Muller, S.C., Falcone, M., Sharif, B.: itrace: Enabling eye tracking on software artifacts within the ide to support software engineering tasks. In: Proceedings of the 2015 10th Joint Meeting on Foundations of Software Engineering, ESEC/FSE 2015, pp. 954-957. ACM, New York (2015); Sharafi, Z., Soh, Z., Gueheneuc, Y., Antoniol, G.: Women and men--different but equal: on the impact of identifier style on source code reading. In: 20th IEEE International Conference on Program Comprehension (ICPC), pp. 27-36 (2012); citation_journal_title=Inf. Softw. Technol.; citation_title=A systematic literature review on the usage of eye-tracking in software engineering; citation_author=Z Sharafi, Z Soh, Y-G Gueheneuc; citation_volume=67; citation_publication_date=2015; citation_pages=79-107; citation_doi=10.1016/j.infsof.2015.06.008; citation_id=CR41; Siau, K.Leng: Empirical studies in information modeling: Interpretation of the object relationship. PhD thesis, University of British Columbia (1996); citation_title=BDD in Action; citation_publication_date=2014; citation_id=CR43; citation_author=JF Smart; citation_publisher=Manning Publications; IEEE Computer Society, Bourque, P., Fairley, R.E.: Guide to the Software Engineering Body of Knowledge (SWEBOK(R)): Version 3.0., 3rd edn. IEEE Computer Society Press, Los Alamitos (2014); Solis, C., Wang, X.: A study of the characteristics of behaviour driven development. In: 37th EUROMICRO Conference on Software Engineering and Advanced Applications, pp. 383-387 (2011); citation_journal_title=Nat. Expert.; citation_title=Knowledge and processes in the comprehension of computer programs; citation_author=E Soloway, B Adelson, K Ehrlich; citation_volume=129; citation_publication_date=1988; citation_pages=152; citation_id=CR46; van der Aalst, W.: Big software on the run: In vivo software analytics based on process mining (keynote). In: Proceedings of ICSSP 2015, pp. 1-5. ACM (2015); citation_title=Process Mining: Data Science in Action; citation_publication_date=2016; citation_id=CR48; citation_author=WMP Aalst; citation_publisher=Springer; citation_journal_title=Computer; citation_title=Program comprehension during software maintenance and evolution; citation_author=AM Vans, A Mayrhauser; citation_volume=28; citation_issue=8; citation_publication_date=1995; citation_pages=44-55; citation_doi=10.1109/2.402076; citation_id=CR49; Version One.: 12th Annual State of Agile(tm) Report, 2017. Last Accessed December 2018; Vessey, I., Conger, S.A.: Requirements Specification: Learning Object, Process, and Data Methodologies. Communications of the ACM (1994); Walters, B., Shaffer, T., Sharif, B., Kagdi, H.: Capturing software traceability links from developers' eye gazes. In: Proceedings of the 22nd International Conference on Program Comprehension, ICPC 2014, pp. 201-204. ACM, New York (2014); citation_title=Combining stpa and bdd for safety analysis and verification in agile development: a controlled experiment; citation_inbook_title=Agile Processes in Software Engineering and Extreme Programming; citation_publication_date=2018; citation_pages=37-53; citation_id=CR53; citation_author=Y Wang; citation_author=S Wagner; citation_publisher=Springer; citation_title=Design Science Methodology for Information Systems and Software Engineering; citation_publication_date=2014; citation_id=CR54; citation_author=RJ Wieringa; citation_publisher=Springer"	345-369	"""@article{WOS:000492219500001,
    Author = ""Ioannou, Constantina and Nurdiani, Indira and Burattin, Andrea and Weber, Barbara"",
    Title = ""Mining reading patterns from eye-tracking data: method and demonstration"",
    Journal = ""SOFTWARE AND SYSTEMS MODELING"",
    Year = ""2020"",
    Volume = ""19"",
    Number = ""2"",
    Pages = ""345-369"",
    Month = ""MAR"",
    Abstract = ""Understanding how developers interact with different software artifacts when performing comprehension tasks has a potential to improve developers' productivity. In this paper, we propose a method to analyze eye-tracking data using process mining to find distinct reading patterns of how developers interacted with the different artifacts. To validate our approach, we conducted an exploratory study using eye-tracking involving 11 participants. We applied our method to investigate how developers interact with different artifacts during domain and code understanding tasks. To contextualize the reading patterns and to better understand the perceived benefits and challenges participants associated with the different artifacts and their choice of reading patterns, we complemented the eye-tracking data with the data obtained from think aloud. The study used behavior-driven development, a development practice that is increasingly used in Agile software development contexts, as a setting. The study shows that our method can be used to explore developers' behavior at an aggregated level and identify behavioral patterns at varying levels of granularity."",
    Publisher = ""SPRINGER HEIDELBERG"",
    Address = ""TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY"",
    Type = ""Article"",
    Language = ""English"",
    Affiliation = ""Nurdiani, I (Corresponding Author), Univ Southern Denmark, Maersk Mc Kinney Moller Inst, SDU Software Engn, DK-5230 Odense M, Denmark. Ioannou, Constantina; Burattin, Andrea; Weber, Barbara, Tech Univ Denmark, DTU Compute Software \\& Proc Engn, DK-2800 Lyngby, Denmark. Nurdiani, Indira, Univ Southern Denmark, Maersk Mc Kinney Moller Inst, SDU Software Engn, DK-5230 Odense M, Denmark. Weber, Barbara, Univ St Gallen, CH-9000 St Gallen, Switzerland."",
    DOI = ""10.1007/s10270-019-00759-4"",
    EarlyAccessDate = ""OCT 2019"",
    ISSN = ""1619-1366"",
    EISSN = ""1619-1374"",
    Keywords = ""Process mining; Eye-tracking; Reading patterns; Source code; Behavior-driven development"",
    Keywords-Plus = ""COMPREHENSION; FRAMEWORK"",
    Research-Areas = ""Computer Science"",
    Web-of-Science-Categories = ""Computer Science, Software Engineering"",
    Author-Email = ""inj@mmmi.sdu.dk"",
    Affiliations = ""Technical University of Denmark; University of Southern Denmark; University of St Gallen"",
    ResearcherID-Numbers = ""Burattin, Andrea/K-4485-2016 Nurdiani, Indira/G-2954-2019"",
    ORCID-Numbers = ""Nurdiani, Indira/0000-0001-9355-6179 Weber, Barbara/0000-0002-6004-4860"",
    Number-of-Cited-References = ""54"",
    Times-Cited = ""6"",
    Usage-Count-Last-180-days = ""0"",
    Usage-Count-Since-2013 = ""14"",
    Journal-ISO = ""Softw. Syst. Model."",
    Doc-Delivery-Number = ""KT6YX"",
    Web-of-Science-Index = ""Science Citation Index Expanded (SCI-EXPANDED)"",
    Unique-ID = ""WOS:000492219500001"",
    DA = ""2024-10-22""
}
"""	Excluded	Excluded	new_screen			2	Web of Science		Mining reading patterns from eye-tracking data: method and demonstration	https://www.webofscience.com/wos/woscc/full-record/WOS:000492219500001	SPRINGER HEIDELBERG	
288	Behave	Testing web applications with state objects	Use states to drive your tests.		Arie van Deursen	Communications of the ACM	https://doi.org/10.1145/2755501		36-43		Excluded	Excluded	new_screen			2	ACM		Testing Web Applications with State Objects	https://dl.acm.org/doi/10.1145/2755501	Association for Computing Machinery	nan; Keywords; References; Year; Bibtex
289	Behave	User interface prototype generation from agile requirements specifications written in concordia	User interface prototypes (UIP) are widely used to get feedback before building a software feature. They can prevent misunderstandings between the software development team and other stakeholders (e.g., users, investors) that lead to rework or a resulting software that does not meet their needs. UIP can also be a valuable resource in Agile software development, in which feedback is key. In this paper, we present an approach to generate UIP automatically from Agile requirements specifications written in Concordia and its corresponding prototype tool. The tool is able to generate UIP for web-based applications. We evaluated the approach and the tool with questionnaires, and the results revealed that: (i) the generated UIP are very similar to those drawn by respondents; (ii) the generated source code has good enough quality to be reused by developers; and (iii) they save design and development time.	agile; concordia; generation; user interface; user story	Thiago Delgado Pinto; Willian Inacio Goncalves; Pablo Veiga Costa	WebMedia '19: Proceedings of the 25th Brazillian Symposium on Multimedia and the Web	https://doi.org/10.1145/3323503.3360639		61-64		Included	Included	new_screen			2	ACM		User Interface Prototype Generation from Agile Requirements Specifications Written in Concordia	https://dl.acm.org/doi/10.1145/3323503.3360639	Association for Computing Machinery	nan; References; Year; Bibtex
290	Behave	Remote but Connected: Ownership-Inspired Behavior-Driven Development and What an E-Learning Governance System for Africa Could Look like	Using e-learning technology is one key for developing sustainable education in urban and remote areas in Western Africa as it reduced the demands on students who are well integrated in their rural society to leave their homes for an expensive education. In this chapter we present Ownership-inspired Behavior-Driven Development (OIBBD), a development strategy designed for e-learning governance in remote areas in Africa to support sustainable education as part of the agenda 2030 and the Sustainable Development Goals (SDGs) and show how the design of a User Experience (UX), which is based on user-centered design and feedback from the African target group can be used to support the implementation of e-learning in Africa. We reflect on how a governance for sustainable development in theological education on the African continent can look like. We ask how such an e-learning governance can support remote e-learning in hard to reach areas in Africa and how this can be designed specifically of the needs of the African socio-culture. The guiding hypothesis of this chapter is, that especially leadership and its activation in African teachers can trigger them to develop ownership in using e-learning technology and this way supports the reaching of SDG 4, which deals with sustainable education.	E-learning; Development cooperation; Sustainability; Africa; E-learning governance; Hard-to-reach regions	Judith Gottschalk; Nicolai Winther-Nielsen	Lifelong Learning and Education in Healthy and Sustainable Cities	https://doi.org/10.1007/978-3-319-69474-0_15		249-261		Excluded	Excluded	new_screen			2	Springer Link		Remote but Connected: Ownership-Inspired Behavior-Driven Development and What an E-Learning Governance System for Africa Could Look like	https://link.springer.com/chapter/10.1007/978-3-319-69474-0_15	Springer, Cham	nan; References; Year; Bibtex
291	Behave	APPROACH OF INTEGRATING BEHAVIOUR-DRIVEN DEVELOPMENT WITH HARDWARE/SOFTWARE CODESIGN	Using typical approaches in designing embedded systems to manage the specification and design of the hardware and software is not suitable in today's projects. In this paper, we propose a model-driven approach to integrate Hardware/Software codesign with Behaviour-Driven Development. Hardware/Software codesign approach allows the hardware and the software to be designed and implemented concurrently and optimizes the project design constraint, such as performance and cost. Behaviour-Driven Development spurs project stakeholders to collaborate to ensure the right software is developed to meet their needs and ensures that all project participants communicate in the same language. The approach exploits the advantages of each approach and provides the ability to describe the behaviour of the software as executable user stories in a Hardware/Software codesign environment. The approach is evaluated using a renewable energy project in collaboration with a private company in Canada to build a system for autonomous load management of self-forming renewable energy nanogrids.	Embedded systems; Behaviour-Driven Development; Hardware/Software codesign; Test-driven development; Nanogrid systems; Agile software; Embedded systems;  Behaviour-Driven Development;  Hardware/Software codesign;  Test-driven development;  Nanogrid systems;  Agile software	Alhaj, Mohammad; Arbez, Gilbert; Peyton, Liam	INTERNATIONAL JOURNAL OF INNOVATIVE COMPUTING INFORMATION AND CONTROL	https://doi.org/10.24507/ijicic.15.03.1177		1177-1191	"""@article{WOS:000466788900025,
    Author = ""Alhaj, Mohammad and Arbez, Gilbert and Peyton, Liam"",
    Title = ""APPROACH OF INTEGRATING BEHAVIOUR-DRIVEN DEVELOPMENT WITH HARDWARE/SOFTWARE CODESIGN"",
    Journal = ""INTERNATIONAL JOURNAL OF INNOVATIVE COMPUTING INFORMATION AND CONTROL"",
    Year = ""2019"",
    Volume = ""15"",
    Number = ""3"",
    Pages = ""1177-1191"",
    Month = ""JUN"",
    Abstract = ""Using typical approaches in designing embedded systems to manage the specification and design of the hardware and software is not suitable in today's projects. In this paper, we propose a model-driven approach to integrate Hardware/Software codesign with Behaviour-Driven Development. Hardware/Software codesign approach allows the hardware and the software to be designed and implemented concurrently and optimizes the project design constraint, such as performance and cost. Behaviour-Driven Development spurs project stakeholders to collaborate to ensure the right software is developed to meet their needs and ensures that all project participants communicate in the same language. The approach exploits the advantages of each approach and provides the ability to describe the behaviour of the software as executable user stories in a Hardware/Software codesign environment. The approach is evaluated using a renewable energy project in collaboration with a private company in Canada to build a system for autonomous load management of self-forming renewable energy nanogrids."",
    Publisher = ""ICIC INTERNATIONAL"",
    Address = ""TOKAI UNIV, 9-1-1, TOROKU, KUMAMOTO, 862-8652, JAPAN"",
    Type = ""Article"",
    Language = ""English"",
    Affiliation = ""Alhaj, M (Corresponding Author), Al Ahliyya Amman Univ, Fac Engn, Amman 19328, Jordan. Alhaj, Mohammad, Al Ahliyya Amman Univ, Fac Engn, Amman 19328, Jordan. Arbez, Gilbert; Peyton, Liam, Univ Ottawa, Sch Elect Engn \\& Comp Sci, 800 King Edward Ave, Ottawa, ON K1N 6N5, Canada."",
    DOI = ""10.24507/ijicic.15.03.1177"",
    ISSN = ""1349-4198"",
    EISSN = ""1349-418X"",
    Keywords = ""Embedded systems; Behaviour-Driven Development; Hardware/Software codesign; Test-driven development; Nanogrid systems; Agile software"",
    Research-Areas = ""Computer Science"",
    Web-of-Science-Categories = ""Computer Science, Artificial Intelligence"",
    Author-Email = ""m.alhaj@ammanu.edu.jo garbez@uottawa.ca lpeyton@uottawa.ca"",
    Affiliations = ""Al-Ahliyya Amman University; University of Ottawa"",
    ResearcherID-Numbers = ""Alhaj, Mohammad/JED-7176-2023"",
    ORCID-Numbers = ""Alhaj, Mohammad/0000-0002-4517-8895"",
    Funding-Acknowledgement = ""NSERC"",
    Funding-Text = ""The authors would like to thank Solantro Semiconductor Inc. for giving us an opportunity to work closely with their team and use their facilities. We would also like to thank NSERC for funding this research with an engage grant."",
    Number-of-Cited-References = ""28"",
    Times-Cited = ""4"",
    Usage-Count-Last-180-days = ""0"",
    Usage-Count-Since-2013 = ""5"",
    Journal-ISO = ""Int. J. Innov. Comp. Inf. Control"",
    Doc-Delivery-Number = ""HW6HA"",
    Web-of-Science-Index = ""Emerging Sources Citation Index (ESCI)"",
    Unique-ID = ""WOS:000466788900025"",
    DA = ""2024-10-22""
}
"""	Included	Included	new_screen			2	Web of Science		Approach of integrating behaviour-driven development with hardware/software codesign	https://www.webofscience.com/wos/woscc/full-record/WOS:000466788900025	ICIC INTERNATIONAL	nan; References
292	Behave	Modeling Test Cases in BPMN for Behavior-Driven Development	Testing large-scale process integration solutions is complex and cumbersome. To tackle this problem, researchers employed behavior-driven development. They used the Business Process Model and Notation language to model domain-specific test cases. These test cases can be understood by both developers and business stakeholders and can be executed automatically.		Daniel Lubke; Tammo van Lessen	IEEE Software	https://doi.org/10.1109/MS.2016.117		15- 21		Excluded	Excluded	new_screen			2	IEEE		Modeling test cases in BPMN for behavior-driven development (extended abstract)	https://ieeexplore.ieee.org/abstract/document/7548916?casa_token=IM-oio8bhCQAAAAA:wqhQf0T4mFWzKsfZkQcLqf58Kl2DANcVWMJ351Wg3zHM8ow0zFjPDUx0RG2s65nOPOOJ7RbiAViqvI8	IEEE	nan; Keywords; References; Year; Bibtex
293	Behave	Chapter 11 - Validation of DEVS Models Using AGILE-Based Methods	Validation of discrete event system specification (DEVS) models at the early phases of the discrete-event modeling and simulation design process is a crucial topic when dealing with complex DEVS models. Based on software engineering test methods, we present in this chapter a new approach, which integrates Agile test methods in the process of the simulation in order to design and test DEVS models. We propose an implementation in Python language based on the use of aspect programming concepts (patch, mocking objects, and decorators). This implementation is performed in the framework of the DEVSimPy environment with the definition of a plug-in dedicated to the automatic generation and execution of test scenario.	Modeling;  Simulation;  Discrete event;  Formalism;  AGILE;  Validation; Modeling, Simulation, Discrete event, Formalism, AGILE, Validation	Capocchi, L.; Santucci, J.F.	Model Engineering for Simulation	https://www.sciencedirect.com/science/article/pii/B9780128135433000111		233-250	"""@incollection{CAPOCCHI2019233,
    editor = ""Zhang, Lin and Zeigler, Bernard P. and laili, Yuanjun"",
    author = ""Capocchi, L. and Santucci, J.F."",
    title = ""Chapter 11 - Validation of DEVS Models Using AGILE-Based Methods"",
    booktitle = ""Model Engineering for Simulation"",
    publisher = ""Academic Press"",
    pages = ""233-250"",
    year = ""2019"",
    isbn = ""978-0-12-813543-3"",
    doi = ""https://doi.org/10.1016/B978-0-12-813543-3.00011-1"",
    url = ""https://www.sciencedirect.com/science/article/pii/B9780128135433000111"",
    keywords = ""Modeling, Simulation, Discrete event, Formalism, AGILE, Validation"",
    abstract = ""Validation of discrete event system specification (DEVS) models at the early phases of the discrete-event modeling and simulation design process is a crucial topic when dealing with complex DEVS models. Based on software engineering test methods, we present in this chapter a new approach, which integrates Agile test methods in the process of the simulation in order to design and test DEVS models. We propose an implementation in Python language based on the use of aspect programming concepts (patch, mocking objects, and decorators). This implementation is performed in the framework of the DEVSimPy environment with the definition of a plug-in dedicated to the automatic generation and execution of test scenario.""
}
"""	Excluded	Excluded	new_screen			2	Science Direct		Chapter 11 - Validation of DEVS Models Using AGILE-Based Methods	https://www.sciencedirect.com/science/article/pii/B9780128135433000111	Academic Press	nan; References
294	Behave	Gherkin Syntax Extension for Parameterization of Network Switch Configurations in Test Specification	We applied test automation in the style of Behavior-Driven Development (BDD), an agile software development technique. In applying BDD, the problem is that a large amount of similar configurations of network switches have to be written in the BDD test specification files. To solve this problem, parameterization of configurations is considered effective. However, Gherkin, the BDD test specification language, does not provide syntax for parameterization. In this paper, we propose a syntax extension of Gherkin, which enables parameterization of configurations. From experiments on 11 configurations, parameterization using the proposed syntax extension can reduce the number of the lines used to describe configurations by 39%.	Syntactics; Switches; Automation; Specification languages; Testing; Generators; Switching Network; Agile Development; Development Of Styles; Side Effects; Programming Language; Step Test; Transmission Frame; test specification; parameterization; BDD; Gherkin; syntax extension; network switch; configuration	Tianyao Li; Shigeru Tsubota; Koji Hirono	2017 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW)	https://doi.org/10.1109/ISSREW.2017.30	1. [online]  Available: http://pythonhosted.org/behave/philosophy.html.; 2. [online]  Available: https://cucumber.io/.; 3. [online]  Available: http://pythonhosted.org/behave/index.html.			Included	Included	new_screen			2	IEEE		Gherkin Syntax Extension for Parameterization of Network Switch Configurations in Test Specification	https://ieeexplore.ieee.org/document/8109238	IEEE	nan; Pages; Year; Bibtex
295	Behave	Automation and consistency analysis of test cases written in natural language: An industrial context	We present here a novel test automation strategy that receives as input a freestyle natural language (NL) test case (consisting of a sequence of test steps) and produces executable test scripts. This strategy relies on a database of previously automated seed test steps, available for reuse. New steps are automated via a capturing process by a tester, without requiring any programming knowledge. Automated tests can be executed by a replay facility. We discuss the reuse improvement, implementation effort, and user feedback regarding the industrial applicability and usability of our capture \& replay tool. We then show that restricting the input textual description to obey a proposed Controlled NL (CNL) brings significant advantages: (1) reuse improvement; (2) the possibility of integration with a test generation framework; and (3) definition of consistency notions for test actions and test action sequences, that ensure, respectively, well-formedness of each action and a proper configuration to safely execute a sequence of actions. We formalize these consistency notions in Alloy and use the Alloy Analyzer to carry out the consistency check; the scalability of the analysis is assessed via an evaluation considering a repository with real test cases; the practical context of our work is mobile device testing, involving a partnership with Motorola Mobility, a Lenovo company.	Test automation; Controlled natural language; Alloy; Test case consistency; Test automation;  Controlled natural language;  Alloy;  Test case consistency	Arruda, Filipe; Barros, Flavia; Sampaio, Augusto	SCIENCE OF COMPUTER PROGRAMMING	https://doi.org/10.1016/j.scico.2019.102377			"""@article{WOS:000515199800001,
    Author = ""Arruda, Filipe and Barros, Flavia and Sampaio, Augusto"",
    Title = ""Automation and consistency analysis of test cases written in natural language: An industrial context"",
    Journal = ""SCIENCE OF COMPUTER PROGRAMMING"",
    Year = ""2020"",
    Volume = ""189"",
    Month = ""APR 1"",
    Note = ""19th Brazilian Symposium on Formal Methods (SBMF), Natal, BRAZIL, NOV 23-25, 2016"",
    Abstract = ""We present here a novel test automation strategy that receives as input a freestyle natural language (NL) test case (consisting of a sequence of test steps) and produces executable test scripts. This strategy relies on a database of previously automated seed test steps, available for reuse. New steps are automated via a capturing process by a tester, without requiring any programming knowledge. Automated tests can be executed by a replay facility. We discuss the reuse improvement, implementation effort, and user feedback regarding the industrial applicability and usability of our capture \\& replay tool. We then show that restricting the input textual description to obey a proposed Controlled NL (CNL) brings significant advantages: (1) reuse improvement; (2) the possibility of integration with a test generation framework; and (3) definition of consistency notions for test actions and test action sequences, that ensure, respectively, well-formedness of each action and a proper configuration to safely execute a sequence of actions. We formalize these consistency notions in Alloy and use the Alloy Analyzer to carry out the consistency check; the scalability of the analysis is assessed via an evaluation considering a repository with real test cases; the practical context of our work is mobile device testing, involving a partnership with Motorola Mobility, a Lenovo company. (C) 2019 Elsevier B.V. All rights reserved."",
    Publisher = ""ELSEVIER"",
    Address = ""RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS"",
    Type = ""Article; Proceedings Paper"",
    Language = ""English"",
    Affiliation = ""Arruda, F (Corresponding Author), Univ Fed Pernambuco, Ctr Informat, BR-50670901 Recife, PE, Brazil. Arruda, Filipe; Barros, Flavia; Sampaio, Augusto, Univ Fed Pernambuco, Ctr Informat, BR-50670901 Recife, PE, Brazil."",
    DOI = ""10.1016/j.scico.2019.102377"",
    Article-Number = ""102377"",
    ISSN = ""0167-6423"",
    EISSN = ""1872-7964"",
    Keywords = ""Test automation; Controlled natural language; Alloy; Test case consistency"",
    Keywords-Plus = ""TEST-GENERATION"",
    Research-Areas = ""Computer Science"",
    Web-of-Science-Categories = ""Computer Science, Software Engineering"",
    Author-Email = ""fmca@cin.ufpe.br fab@cin.ufpe.br acas@cin.ufpe.br"",
    Affiliations = ""Universidade Federal de Pernambuco"",
    ORCID-Numbers = ""Arruda, Filipe/0009-0008-1111-9142"",
    Funding-Acknowledgement = ""Motorola Mobility, a Lenovo company"",
    Funding-Text = ""We thank Motorola Mobility, a Lenovo company, for the long-term partnership and for the financial support that has allowed the applicability of research results on test case generation and automation in an industrial context."",
    Number-of-Cited-References = ""42"",
    Times-Cited = ""0"",
    Usage-Count-Last-180-days = ""0"",
    Usage-Count-Since-2013 = ""2"",
    Journal-ISO = ""Sci. Comput. Program."",
    Doc-Delivery-Number = ""KN9XE"",
    Web-of-Science-Index = ""Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)"",
    Unique-ID = ""WOS:000515199800001"",
    OA = ""Bronze"",
    DA = ""2024-10-22""
}
"""	Excluded	Excluded	new_screen			2	Web of Science		Automation and consistency analysis of test cases written in natural language: An industrial context	https://www.webofscience.com/wos/woscc/full-record/WOS:000515199800001	ELSEVIER	nan; References; Pages
296	Behave	Automatic acceptance testing of the web application security with ITU-T X.805 framework	Web application development companies should ensure the high quality of their products. This can be achieved through high quality of the software development lifecycle. Web applications are mostly running on the Internet and are being exposed to many security threats and malicious operations. The mission of EUCISE2020 project (EUropean test bed for the maritime Common Information Sharing Environment in the 2020 perspective) is to enhance interoperability between systems and networks. The interconnections must be established in a decentralized way using cutting-edge technologies. Hence, it requires innovative and practical solutions from the web development companies. The research problem is being addressed with the Stanford Research Institute NABC (Needs, Approach, Benefits and Competition) method. Our approach is to conceptualize a testing scenario for the web application development process. The concept utilizes the International Telecommunication Union recommended standard security framework (ITU-T X.805) in the context of test automation for end-to-end communications. This study presents a new holistic solution in feature driven fashion. As a result, we propose that building acceptance test scenarios using ITU-T X.805 guidelines in Software Development Lifecycle is a sustainable approach.	Buildings; Companies; Testing; Guidelines; Security; Web Application; Testing Tools; Acceptable Test; Development Process; Software Development; Processing Software; Security Threats; Test Scenarios; Security Framework; Security Standards; Service Providers; Service Quality; Web Server; Cucumber; Architectural Design; Data Exchange; Consumption Of Services; Information Security; Business Processes; Vulnerability Assessment; Service-oriented Architecture; Agile Development; Secure Communication; Security Architecture; Dimensions Of Security; Security Mechanisms; Present Ideas; Significant Number Of Participants; EUCISE 2020; ITU-T Recommendation X.805; NABC analysis; web application development; automated testing scenario; behavior-driven development (BDD)	Paresh Rathod; Viljami Julkunen; Tero Kaisti; Janne Nissila	2015 Second International Conference on Computer Science, Computer Engineering, and Social Media (CSCESM)	https://doi.org/10.1109/CSCESM.2015.7331876	"1.D. Rafi, K. Moses, K. Petersen and M. Mantyla, ""Benefits and limitations of automated software testing: Systematic literature review and practitioner survey"", 7th International Workshop on Automation of Software Test (AST), pp. 36-42, 2012. Google Scholar; 2.Governing Europe's Marine Environment: Europeanization of Regional Seas or Regionalization of EU Policies?, Ashgate Publishing, Ltd., 2015. Google Scholar; 3.M. Papazoglou, Web Services and SOA: Principles and Technology, Canada:Pearson Education, 2012. Google Scholar; 4.T. Erl, SOA: Principles of Service Design, Upper Saddle River:Prentice Hall, 2008. Google Scholar; 5.D. Winder, ""The Network Cheat Sheet - ISO 27001"", PC Pro, pp. 108, Feb 2015. Google Scholar; 6.International Telecommunication Union Security Architecture for Systems Providing End-to-End Communications ITU-T Rec. X.805, 2003. Google Scholar; 7.C. Solari, Security in a Web 2.0 World: A Standards-Based Approach. John Wiley & Sons, 2009. Google Scholar; 8.K. Beck, M. Beedle, A. Van, A. Cockburn, W. Cunningham, M. Fowler, et al., ""Manifesto for agile software development"", 2001. Google Scholar; 9.P. Abrahamsson, J. Warsta, M. Siponen and J. Ronkainen, ""New directions on agile methods: a comparative analysis"", Proceedings. 25th International Conference on Software Engineering, 2003. View Article  Google Scholar; 10.C. R. Carlson and W. W. Wilmot, Innovation: The Five Disciplines for Creating what Customers Want. Crown Business, 2006. Google Scholar; 11.J. Granneman, (2013 September) IT security frameworks and standards: Choosing the right one. TechTarget Network. Google Scholar; 12.C. Geuer-Pollmann and J. Claessens, ""Web services and web service security standards"", Information Security Technical Report, vol. 10, no. 1, pp. 15-24, 2005. CrossRef  Google Scholar; 13.L. Kagal, T. Finin and A. Joshi, ""A policy based approach to security for the semantic web"", International Semantic Web Conference, pp. 402-418, 2003. CrossRef  Google Scholar; 14.A. K. Gupta, U. Chandrashekhar, S. V. Sabnis and F. A. Bastry, ""Building secure products and solutions"", Bell Labs Technical Journal, vol. 12, pp. 21-38, 2007. CrossRef  Google Scholar; 15.M. Wynne and A. Hellesoy, The Cucumber Book: Behaviour-Driven Development for Testers and Developers. Pragmatic Bookshelf, 2012. Google Scholar; 16.P Nastase, F. Nastase and C. Ionescu, ""Challenges generated by the implementation of the IT standards CobiT 4.1 ITIL v3 and ISO/IEC 27002 in enterprises"", Economic Computation & Economic Cybernetics Studies & Research, vol. 43, no. 1, pp. 16, 2009. Google Scholar"			Excluded	Excluded	new_screen			2	IEEE		Automatic acceptance testing of the web application security with ITU-T X.805 framework	https://ieeexplore.ieee.org/document/7331876	IEEE	nan; Pages; Year; Bibtex
297	Behave	Testing of Web Services using Behavior-Driven Development	Web services are commonly used in the communication of software over the web. To fully trust a web service, it should be tested and certified, but testing of web services provoke new challenges. Behavior-Driven Development (BDD) can be applied to the testing of web services. Gherkin language is used to define scenarios in BDD. We used Gherkin language to define test cases for web services and we developed a tool to convert these test cases into JMeter test scripts.	Behavior-Driven Development; Gherkin; JMeter; Software Testing; Testing of Web Services; Web Services; Behavior-Driven Development;  Gherkin;  JMeter;  Software Testing;  Testing of Web Services;  Web Services	Oruc, Ahmet Furkan; Ovatman, Tolga	PROCEEDINGS OF THE 6TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING AND SERVICES SCIENCE, VOL 2 (CLOSER)	https://doi.org/10.5220/0005911400850092		85-92	"""@inproceedings{WOS:000393155000007,
    Author = ""Oruc, Ahmet Furkan and Ovatman, Tolga"",
    Editor = ""Cardoso, J and Ferguson, D and Munoz, VM and Helfert, M"",
    Title = ""Testing of Web Services using Behavior-Driven Development"",
    Booktitle = ""PROCEEDINGS OF THE 6TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING AND SERVICES SCIENCE, VOL 2 (CLOSER)"",
    Year = ""2016"",
    Pages = ""85-92"",
    Note = ""6th International Conference on Cloud Computing and Services Science (CLOSER), Rome, ITALY, APR 23-25, 2016"",
    Abstract = ""Web services are commonly used in the communication of software over the web. To fully trust a web service, it should be tested and certified, but testing of web services provoke new challenges. Behavior-Driven Development (BDD) can be applied to the testing of web services. Gherkin language is used to define scenarios in BDD. We used Gherkin language to define test cases for web services and we developed a tool to convert these test cases into JMeter test scripts."",
    Publisher = ""SCITEPRESS"",
    Address = ""AV D MANUELL, 27A 2 ESQ, SETUBAL, 2910-595, PORTUGAL"",
    Type = ""Proceedings Paper"",
    Language = ""English"",
    Affiliation = ""Oruc, AF (Corresponding Author), Istanbul Tech Univ, Dept Comp Engn, TR-34469 Istanbul, Turkey. Oruc, Ahmet Furkan; Ovatman, Tolga, Istanbul Tech Univ, Dept Comp Engn, TR-34469 Istanbul, Turkey."",
    DOI = ""10.5220/0005911400850092"",
    ISBN = ""978-989-758-182-3"",
    Keywords = ""Behavior-Driven Development; Gherkin; JMeter; Software Testing; Testing of Web Services; Web Services"",
    Research-Areas = ""Computer Science"",
    Web-of-Science-Categories = ""Computer Science, Information Systems; Computer Science, Interdisciplinary Applications; Computer Science, Theory \\& Methods"",
    Affiliations = ""Istanbul Technical University"",
    ResearcherID-Numbers = ""Ovatman, Tolga/N-9296-2013"",
    ORCID-Numbers = ""Ovatman, Tolga/0000-0001-5918-3145"",
    Number-of-Cited-References = ""12"",
    Times-Cited = ""2"",
    Usage-Count-Last-180-days = ""0"",
    Usage-Count-Since-2013 = ""2"",
    Doc-Delivery-Number = ""BG9FT"",
    Web-of-Science-Index = ""Conference Proceedings Citation Index - Science (CPCI-S)"",
    Unique-ID = ""WOS:000393155000007"",
    OA = ""hybrid, Green Submitted"",
    DA = ""2024-10-22""
}
"""	Included	Included	new_screen			2	Web of Science		Testing of Web Services Using Behavior-Driven Development	https://www.webofscience.com/wos/woscc/full-record/WOS:000393155000007	SCITEPRESS	nan; References
298	Behave	ScrumOntoBDD: Agile software development based on scrum, ontologies and behaviour-driven development	When developing a Learning Management System (LMS) using Scrum, we noticed that it was quite often necessary to redefine some system behaviour scenarios, due to ambiguities in the requirement specifications, or due to misinterpretations of stories reported by the Product Owners (POs). The definition of test suites was also cumbersome, resulting in test suites that were incomplete or did not at all comply with the system requirements. Based on this experience and to deal with these problems, in this paper, we propose the ScrumOntoBDD approach to agile software development, which combines Scrum, ontologies and Behaviour-Driven Development (BDD). This approach is centred on the concepts and techniques of Scrum and BDD and focuses on the planning and analysis phases of the software life cycle, since the BDD tools currently provide little support to these phases, while most of the problems during the LMS development were found exactly there. We claim that our approach improves the software development practices in this respect. Furthermore, ScrumOntoBDD employs ontologies in order to reduce ambiguities intrinsic to the use of a natural language as a BDD ubiquitous language. In this paper, we illustrate and systematically evaluate our approach, showing that it is beneficial since it improves the communication between members of an agile development team.	Agile manufacturing systems; Boolean functions; Life cycle; Ontology; Agile development; Agile software development; Learning management system; Natural languages; Requirement specification; Software development practices; Software life cycles; System requirements; Software design; Agile manufacturing systems;  Boolean functions;  Life cycle;  Ontology;  Agile development;  Agile software development;  Learning management system;  Natural languages;  Requirement specification;  Software development practices;  Software life cycles;  System requirements;  Software design	Lopes de Souza, Pedro; Lopes de Souza, Wanderley; Ferreira Pires, Luis	Journal of the Brazilian Computer Society	https://doi.org/10.1186/s13173-021-00114-w	"citation_journal_title=Int Sci J Manage Inform Syst; citation_title=Comparison some of ontology editors; citation_author=E Alatrish; citation_volume=8; citation_issue=2; citation_publication_date=2013; citation_pages=18-24; citation_id=CR1; Beck K et al (2001) Manifesto for agile software development. 
                  www.agilemanifesto.org/
                  
                . Accessed 5 Sept 2017; Beck K (2002) Test Driven Development: by example. Addison-Wesley, 240 pgs; Beck K (2012) Extreme programming explained: embrace change. Second edition, Addison-Wesley, 189 pgs; Berners-Lee T (2009) The Semantic Web as a language of logic. Available at 
                  https://www.w3.org/DesignIssues/Logic.html#Crawf90
                  
                . Accessed 14 May 2018; Bogdan RC, Biklen SK (2007) Qualitative research for education: an introduction to theory and methods. Fifth edition, Pearson Education Inc, USA; citation_journal_title=Nurs Educ Today; citation_title=Practice-based learning: the role of practice education facilitators in supporting mentors; citation_author=C Carlisle, L Calman, T Ibbotson; citation_volume=29; citation_issue=7; citation_publication_date=2009; citation_pages=715-721; citation_doi=10.1016/j.nedt.2009.02.018; citation_id=CR7; citation_journal_title=Comput Educ; citation_title=Ubiquitous learning website: scaffold learners by mobile devices with information-aware techniques; citation_author=GD Chen, CK Chang, CY Wang; citation_volume=50; citation_issue=1; citation_publication_date=2008; citation_pages=77-90; citation_doi=10.1016/j.compedu.2006.03.004; citation_id=CR8; Cockburn A (2004) Crystal Clear: a human-powered methodology for small teams. Addison-Wesley, p. 336; Concordion (2015). Available at 
                  https://concordion.org/
                  
                . Accessed 26 Jan 2021; Cucumber (2014) Cucumber. Available at 
                  http://cukes.info/
                  
                . Accessed 10 Oct 2016; citation_journal_title=MIS Q; citation_title=Perceived usefulness, perceived ease of use, and user acceptance of information technology; citation_author=FD Davis; citation_volume=13; citation_issue=3; citation_publication_date=1989; citation_pages=318-341; citation_doi=10.2307/249008; citation_id=CR12; Diepenbeek M et al (2015) Behavior Driven Development for tests and verification. Tests and Proofs, Lectures Notes in Computer Science (LNCS), Springer International Publishing AG, USA, Vol. 8570, pp. 61-77; citation_journal_title=J Softw Eng Res Dev; citation_title=Distinguishing extended finite state machine configurations using predicate abstraction; citation_author=K El-Fakih; citation_volume=4; citation_issue=1; citation_publication_date=2016; citation_pages=26; citation_doi=10.1186/s40411-016-0027-4; citation_id=CR14; Evans E (2003) Domain-driven design: tackling complexity in the heart of software. Addison-Wesley Professional, USA, p. 529; Fabbri S et al (2016) Improvements in the Start tool to better support the systematic review process. In Proceedings of the 20th International Conference on Evaluation and Assessment in Software Engineering (EASE'16), Association for Computing Machinery, USA, paper 21, p. 05; citation_journal_title=Int J Med Inform; citation_title=A ubiquitous reflective E-portfolio architecture; citation_author=M Forte; citation_volume=82; citation_issue=11; citation_publication_date=2013; citation_pages=1111-1122; citation_doi=10.1016/j.ijmedinf.2013.06.005; citation_id=CR17; Gangemi A et al (2006) Modelling ontology evaluation and validation. Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics), Vol. 4011, pp. 140-154; citation_journal_title=Int J Hum Comput Stud; citation_title=Toward principles for the design of ontologies used for knowledge sharing; citation_author=TR Gruber; citation_volume=43; citation_issue=Issues 5-6; citation_publication_date=1995; citation_pages=907-928; citation_doi=10.1006/ijhc.1995.1081; citation_id=CR19; Gruber TR (2008) Ontology. Encyclopedia of Database Systems, Springer-Verlag, p. 04. Available 
                  http://tomgruber.org/writing/ontology-in-encyclopedia-of-dbs.pdf
                  
                . Accessed 20 Apr 2018; Guarino N (1998) Formal ontology and information systems. In Proceedings of 1st International Conference on Formal Ontology in Information Systems (FOIS'98), N. Guarino (ed.), Frontiers in Artificial Intelligence and Applications, IOS Press, Vol. 46, pp. 3-15; citation_journal_title=Knowledge-Based Syst; citation_title=Ontology languages for the semantic web: a never completely updated review; citation_author=JR Gutierrez-Pulido; citation_volume=19; citation_issue=7; citation_publication_date=2006; citation_pages=489-497; citation_doi=10.1016/j.knosys.2006.04.013; citation_id=CR22; citation_journal_title=Qual Quantity Int J Method; citation_title=Empirical research consolidation: a generic overview and a classification scheme for methods; citation_author=N Haneef; citation_volume=47; citation_issue=1; citation_publication_date=2011; citation_pages=383-410; citation_doi=10.1007/s11135-011-9524-z; citation_id=CR23; Harith A, Kieron O, Nigel S (2005) Common features of killer apps: a comparison with Protege. In Proceedings of 8th International Protege Conference, p. 04. Available at 
                  https://eprints.soton.ac.uk/260989/1/protege05-Alani.pdf
                  
                . Accessed 29 May 2018; Hayashi ECS et al (2008) ""Avaliando a Qualidade Afetiva de Sistemas Computacionais Interativos no Cenario Brasileiro"". Resultados do Workshop Usabilidade, Acessibilidade e Inteligibilidade Aplicadas em Interfaces para Analfabetos, Idosos e Pessoas com Deficiencia Usabilidade (in Portuguese), VIII Brazilian Symposium on Human Factors in Computing Systems (IHC 2008), Brazil, pp. 55-62; Highsmith JA (2000) Adaptive software development: a collaborative approach to managing complex systems. Dorset House Publishing, USA, p. 358; citation_journal_title=Qual Quantity; citation_title=Action research is similar to design science; citation_author=P Jarvinen; citation_volume=41; citation_issue=1; citation_publication_date=2007; citation_pages=37-54; citation_doi=10.1007/s11135-005-5427-1; citation_id=CR27; JBehave (2015) JBehave. Available at 
                  http://jbehave.org/
                  
                . Accessed 19 Oct 2016; JUnit (2016) JUnit. Available at 
                  http://junit.org/junit4/
                  
                . Accessed 14 Oct 2016; JMeter (2016) JMeter graphical server performance testing tool. Available at 
                  http://jmeter.apache.org/
                  
                . Accessed 19 Dec 2016; Koskela L (2008) Test Driven: TDD and acceptance TDD for Java Developers. Manning Publications Co., p. 513; Lewin K (1988) Group decision and social change. The Action Research Reader, S. Kemmis (ed.), Deakin University Press, Australia, pp. 47-56; citation_journal_title=Integrated Comput Aided Eng; citation_title=Multi-agent system for intelligent Scrum project management; citation_author=Y Lin; citation_volume=22; citation_issue=3; citation_publication_date=2015; citation_pages=281-296; citation_doi=10.3233/ICA-150491; citation_id=CR33; citation_journal_title=IEEE Softw; citation_title=Modelling test cases in bpmn for behavior-driven development; citation_author=D Lubke, T Lessen; citation_volume=33; citation_issue=5; citation_publication_date=2016; citation_pages=15-21; citation_doi=10.1109/MS.2016.117; citation_id=CR34; citation_journal_title=Requirements Eng; citation_title=Improving agile requirements: the Quality User Story framework and tool; citation_author=G Lucassen; citation_volume=21; citation_issue=3; citation_publication_date=2016; citation_pages=283-403; citation_doi=10.1007/s00766-016-0250-x; citation_id=CR35; citation_title=OntoSoft Process: towards an agile process for ontology-based software; citation_inbook_title=Proceedings of 49th Hawaii International Conference on System Sciences, IEEE Computer Society; citation_publication_date=2016; citation_pages=5813-5822; citation_id=CR36; citation_author=JB Machado; Machado JB (2017); Mealy GH (1967) Another look at data. In Proceedings of Fall Joint Computer Conference, pp. 525-534. Available at 
                  https://www.computer.org/csdl/proceedings/afips/1967/5070/00/50700525.pdf
                  
                . Accessed 20 Apr 2018; Mejia-Gutierrez R, Carvajal-Arango R (2017) Design Verification through virtual prototyping techniques based on Systems Engineering. Res Eng Design 28(4):477-494; Moodle (2018) Moodle: community driven globally supported. Moodle Partners. Available at 
                  https://moodle.org/?lang=en
                  
                . Accessed 04 June 2018; MSpec (2008) MSpec. Available at https://github.com/machine/machine. specifications. Accessed 19 Oct 2016; Musen MA (2015) The Protege project: a look back and a look forward. AI Matters, Association of Computing Machinery Specific Interest Group in Artificial Intelligence 1(4):4-12, 
                  https://doi.org/10.1145/2557001.25757003
                  
                . Available at 
                  https://protege.stanford.edu/
                  
                . Accessed 25 May 2018; NBehave (2011) NBehave. Available at 
                  https://github.com/nbehave/
                  
                . Accessed 29 Jan 2017; North D (2006) Introducing BDD. Dan North & Associates. Available at 
                  http://dannorth.net/introducing-bdd
                  
                . Accessed 5 Sept 2017; North D (2017) What's in a Story?. Dan North & Associates. Available at 
                  https://dannorth.net/whats-in-a-story
                  
                . Accessed 5 Sept 2017; Okolnychyi A, Fogen K (2016) A study of tools for behavior-driven development. Full-scale Software Engineering/Current Trends in Release Engineering, Seminar Winter Term 2015/2016, Research Group Software Construction, RWTH Aachen University, pp. 7-12; OMG (2011) About the Business Process Model and Notation Specification 2.0. Object Management Group. Available at: 
                  https://www.omg.org/spec/BPMN/2.0
                  
                . Accessed 04 June 2018; Oruc AF, Ovatman T (2016) Testing of web services using behavior-driven development. In: CLOSER 2016 - In Proceedings of 6th International Conference on Cloud Computing and Services Science, Vol. 2, pp. 85-92; Palmer SR, Felsing JM (2002) A practical guide to Feature-Driven Development. Prentice Hall, USA, p. 271; Protege (2017) A free, open-source ontology editor and framework for building intelligent systems. Available at 
                  https://protege.stanford.edu/
                  
                . Accessed 20 Sept 2017; Rhem J (1998) Problem Based Learning an Introduction. Natl Teach Learn Forum, Vol. 8, No 1, p. 07. Available at 
                  http://www1.udel.edu/pbl/deu-june2006/supplemental/NTLF-PBL-introduction.pdf
                  
                . Accessed 5 Sept 2017; Rocha FG et al (2019) Agile Teaching Practices: Using TDD and BDD in Software Development Teaching. In Proceedings of XXXIII Brazilian Symposium on Software Engineering (SBES 2019), Brazil, p. 10. Available at 
                  https://doi.org/10.1145/3350768.3351799
                  
                . Accessed 19 Jan 2021; Rodrigues RJS et al (2020) MyHealth: a system for monitoring non-communicable diseases. Advances in Intelligent Systems and Computing, Vol. 1134, Chap. 58, pp. 439-444. Springer International Publishing. Available at 
                  https://link.springer.com/chapter/10.1007%2F978-3-030-43020-7_58
                  
                . Accessed 20 Jan 2021; RSpec (2016) RSpec. Available at 
                  http://rspec.info/
                  
                . Accessed 19 Oct 2016; Ross DT (1977) Structured analysis (sa): a language for communicating ideas. IEEE Transact Softw Eng 3:16-34; Rubin KS (2012) Essential Scum: a practical guide to the most popular agile process. Addison-Wesley, USA, p. 482; Santos HF et al (2016) Augmented Reality Approach for Knowledge Visualization and Production (ARAKVP) in Educational and Academic Management System for Courses Based on Active Learning Methodologies (EAMS-CBALM). In Proceedings of 13th International Conference on Information Technology: New Generations (ITNG 2016), Advances in Intelligent Systems and Computing, Springer International Publishing AG, Vol. 448, pp. 1113-1123; citation_journal_title=Nucleic acids research; citation_title=Human Disease Ontology 2018 update: classification, content and workflow expansion; citation_author=LM Schriml; citation_volume=47; citation_issue=D1; citation_publication_date=2018; citation_pages=D955-D962; citation_doi=10.1093/nar/gky1032; citation_id=CR58; Schwaber K, Sutherland J (2017) The Scrum Guide(tm) - the definitive guide to Scrum: the rules of the game. Scrum.Org and ScrumInc, p. 19. Available at 
                  https://www.scrumguides.org/docs/scrumguide/v2017/2017-Scrum-Guide-US.pdf#zoom=100
                  
                . Accessed 12 Mar 2018; Seidman I (2006) Interviewing as Qualitative Research: a guide for researchers in education and the social sciences. Third edition, Teachers College Press, USA.; citation_journal_title=Lecture Notes Comput Sci; citation_title=Testing prototypes and final user interfaces through an ontological perspective for behavior-driven development; citation_author=T Silva, J-L Hak, M Winckler; citation_volume=9856; citation_publication_date=2016; citation_pages=86-107; citation_doi=10.1007/978-3-319-44902-9_7; citation_id=CR61; citation_title=A behavior-based ontology for supporting automated assessment of interactive systems; citation_inbook_title=Proceedings of 11th International Conference on Semantic Computing, IEEE Computer Society; citation_publication_date=2017; citation_pages=250-257; citation_id=CR62; citation_author=T Silva; Smith B, Welty C (2001) Ontology: towards a new synthesis. Second International Conference on Formal Ontology and Information Systems, p. 07. Available at 
                  http://mba.eci.ufmg.br/downloads/recol/piii-foreword.pdf
                  
                . Accessed 20 Apr 2018; citation_journal_title=Lecture Notes Comput Sci; citation_title=Assisted behavior driven development using natural language processing; citation_author=M Soeken, R Wille, R Drechsler; citation_volume=7304; citation_publication_date=2012; citation_pages=269-287; citation_doi=10.1007/978-3-642-30561-0_19; citation_id=CR64; Solis C, Wang X (2011) A study of the characteristics of Behaviour Driven Development. In Proceedings of SEAA 2011: 37th EUROMICRO Conference on Software Engineering and Advanced Applications, IEEE Computer Society, ISBN 978-0769544885, pp. 383-387; citation_title=Combining Behaviour-Driven Development with Scrum for software development in the education domain; citation_inbook_title=Proceedings of 19th International Conference on Enterprise Information Systems (ICEIS 2017), SCITEPRESS - Science and Technology Publications Lda, Vol. 2; citation_publication_date=2017; citation_pages=449-458; citation_id=CR66; citation_author=PL Souza; citation_title=Improving Agile Software Development with Domain Ontologies; citation_inbook_title=Proceedings of 15th International Conference on Information Technology: New Generations (ITNG 2018), Advances in Intelligent Systems and Computing, Springer International Publishing AG, Vol. 738, Chapter 37; citation_publication_date=2018; citation_pages=267-274; citation_id=CR67; citation_author=PL Souza; Souza PL (2018) ScrumOntoBDD: an approach based on Scrum, Ontology and BDD for agile software development. MSc's dissertation, Graduate Program in Computer Science (PPG-CC) of Federal University of Sao Carlos (UFSCar), Brazil, p. 179; SpecFlow (2016) SpecFlow. Available at 
                  http://www.specflow.org/
                  
                . Accessed 19 Oct 2016; Stapleton J (2003); StoryQ (2010) StoryQ. Available at 
                  http://storyq.codeplex.com/
                  
                . Accessed 19 Oct 2016; TllyFy (2018) 9 Best business process modeling techniques (with examples). TllyFy. Available at 
                  https://tallyfy.com/business-process-modeling-techniques/
                  
                . Accessed 04 June 2018; UFSCar (2007) ""Curso de Medicina - CCBS Projeto Politico Pedagogico"". Medicina UFSCar (in Portuguese), p. 139. Available at: 
                  http://www.prograd.ufscar.br/cursos/cursos-oferecidos-1/medicina/medicina-projeto-pedagogico.pdf
                  
                . Accessed 12 Oct 2016; W3C (2012) Web Ontology Language (OWL). W3C Semantic Web. Available at 
                  https://www.w3.org/2001/sw/wiki/OWL
                  
                . Accessed 18 May 2018; W3C (2014) Resource Description Framework (RDF). RDF Working Group. Available at 
                  https://www.w3.org/2001/sw/wiki/RDF
                  
                . Accessed 22 Jan 2021; W3C (2014) RDF Schema 1.1. W3C Recommendation. Available at 
                  https://www.w3.org/TR/rdf-schema/
                  
                . Accessed 22 Jan 2021; Wohlin C et al (2000) Experimentation in software engineering: an introduction. Kluwer Academic Publishers, USA; Wynne M, Hellesoy A (2012) The Cucumber Book: Behaviour-Driven Development for testers and developers. Pragmatic Programmers LLC, Pragmatic Bookshelf, USA, p. 309; Zemmouchi-Ghomari L et al (2013) Process of Building Reference Ontology for Higher Education. In Proceedings of World Congress on Engineering, Vol. III, p. 06; Zubizarreta J (2009) The learning portfolio: reflective practice for improving student learning. Second edition, John Wiley & Sons Inc, USA, p. 354"		"""@ARTICLE{LopesdeSouza2021,
    author = ""Lopes de Souza, Pedro and Lopes de Souza, Wanderley and Ferreira Pires, Luis"",
    title = ""ScrumOntoBDD: Agile software development based on scrum, ontologies and behaviour-driven development"",
    year = ""2021"",
    journal = ""Journal of the Brazilian Computer Society"",
    volume = ""27"",
    number = ""1"",
    doi = ""10.1186/s13173-021-00114-w"",
    url = ""https://www.scopus.com/inward/record.uri?eid=2-s2.0-85107864405\&doi=10.1186\%2fs13173-021-00114-w\&partnerID=40\&md5=67385a84d8b4a597e35c91a44ad0599b"",
    affiliations = ""Department of Computing, Federal University of Sao Carlos, Sao Carlos, SP, Brazil; Faculty of Electrical Engineering, Mathematics and Computer Science, University of Twente, Enschede, Netherlands"",
    abstract = ""When developing a Learning Management System (LMS) using Scrum, we noticed that it was quite often necessary to redefine some system behaviour scenarios, due to ambiguities in the requirement specifications, or due to misinterpretations of stories reported by the Product Owners (POs). The definition of test suites was also cumbersome, resulting in test suites that were incomplete or did not at all comply with the system requirements. Based on this experience and to deal with these problems, in this paper, we propose the ScrumOntoBDD approach to agile software development, which combines Scrum, ontologies and Behaviour-Driven Development (BDD). This approach is centred on the concepts and techniques of Scrum and BDD and focuses on the planning and analysis phases of the software life cycle, since the BDD tools currently provide little support to these phases, while most of the problems during the LMS development were found exactly there. We claim that our approach improves the software development practices in this respect. Furthermore, ScrumOntoBDD employs ontologies in order to reduce ambiguities intrinsic to the use of a natural language as a BDD ubiquitous language. In this paper, we illustrate and systematically evaluate our approach, showing that it is beneficial since it improves the communication between members of an agile development team. (c) 2021, The Author(s)."",
    author_keywords = ""Active Learning Methodologies; Agile Software Development; BDD; Learning Management Systems; Medical Education; Ontologies; Problem-Based Learning; Scrum"",
    keywords = ""Agile manufacturing systems; Boolean functions; Life cycle; Ontology; Agile development; Agile software development; Learning management system; Natural languages; Requirement specification; Software development practices; Software life cycles; System requirements; Software design"",
    correspondence_address = ""P. Lopes de Souza; Department of Computing, Federal University of Sao Carlos, Sao Carlos, Brazil; email: plsouza@estudante.ufscar.br"",
    publisher = ""Springer Science and Business Media Deutschland GmbH"",
    issn = ""01046500"",
    language = ""English"",
    abbrev_source_title = ""J. Braz. Comput. Soc."",
    type = ""Article"",
    publication_stage = ""Final"",
    source = ""Scopus"",
    note = ""Cited by: 5; All Open Access, Gold Open Access""
}
"""	Included	Included	new_screen			2	Scopus Signed In		ScrumOntoBDD: Agile software development based on scrum, ontologies and behaviour-driven development	https://link.springer.com/article/10.1186/s13173-021-00114-w	Springer Science and Business Media Deutschland GmbH	nan; Pages
299	Behave	Formal Model Validation Through Acceptance Tests	When formal systems modelling is used as part of the development process, modellers need to understand the requirements in order to create appropriate models, and domain experts need to validate the final models to ensure they fit the needs of stakeholders. A suitable mechanism for such a validation are acceptance tests.In this paper we discuss how the principles of Behaviour-Driven Development (BDD) can be applied to (i) formal modelling and (ii) validation of behaviour specifications, thus coupling those two tasks. We show how to close the gap between the informal domain specification and the formal model, thus enabling the domain expert to write acceptance tests in a high-level language matching the formal specification.We analyse the applicability of this approach by providing the Gherkin scenarios for anformal model of a 'fixed virtual block' approach to train movement control, developed according to the Hybrid ERTMS/ETCS Level 3 principles specified by the EEIG ERTMS Users Group and presented as a case study on the 6. International ABZ Conference 2018.	Formal methods; Validation; Acceptance tests; Event-B; iUML-B; Gherkin; Cucumber	Tomas Fischer; Dana Dghyam	International Conference on Reliability, Safety, and Security of Railway Systems	https://doi.org/10.1007/978-3-030-18744-6_10		159-169		Included	Included	new_screen			2	Springer Link		Formal Model Validation Through Acceptance Tests	https://link.springer.com/chapter/10.1007/978-3-030-18744-6_10	Springer, Cham	nan; References; Year; Bibtex
300	Behave	Executable Requirements in a Safety-Critical Context with Ada	When people who need the software and people who build the software do not understand each other, the success of a project may be impacted. In the same way, when it is difficult to know which test case corresponds to a given requirement, or if each and every requirement is fully covered by the test suite, we have a traceability issue that may also impact the success of the project. During the last few years, the agile community has suggested a new development paradigm in order to address this traceability issue. This approach is called Behaviour Driven Development (BDD). It is based on a new way of expressing requirements using a common language understandable by all parties at stake. After having described the Behaviour Driven Development in details, we introduce the XReq tool, an Open Source project developed by SOGILIS and part of the Open-DO project. It is designed to bring the Behaviour Driven Development to the Ada language and other statically typed languages. It also aims at facilitating the traceability of High and Low Level Tests in the context of DO-178B projects.	Behaviour Driven Development; Ada, Requirements; Testing; Safety-Critical Projects; DO- 178B	Christophe Baillon; Shanti Bouchez-Mongarde	Ada User Journal	https://ada-europe.org/archive/auj/auj-31-2.pdf#page=51		5	"""nan"""	Included	Included	new_screen			2	Google Scholar		Executable requirements in a safety-critical context with Ada	https://ada-europe.org/archive/auj/auj-31-2.pdf#page=51	Ada Europe	
301	Behave	Creation of Multiple Conceptual Models from User Stories -- A Natural Language Processing Approach	While Agile methodologies are used in software development, researchers have identified many issues related to requirements engineering in Agile approaches. Some of these issues relate to ambiguity in user stories, which is a widely-used requirements specification mechanism in Agile methodologies. This research proposes the use of conceptual models while developing user stories. We posit that the use of conceptual models helps reducing ambiguity in user stories. An important aspect of our research is the creation of an algorithm for automatic generation of such models while developing the user stories.	User stories; Agile development; Conceptual models; Natural language processing; Behavior driven development	Gupta, Abhimanyu; Poels, Geert; Bera, Palash	International Conference on Conceptual Modeling	https://doi.org/10.1007/978-3-030-34146-6_5		47--57	"""@InProceedings{10.1007/978-3-030-34146-6_5,
    author = ""Gupta, Abhimanyu and Poels, Geert and Bera, Palash"",
    editor = ""Guizzardi, Giancarlo and Gailly, Frederik and Suzana Pitangueira Maciel, Rita"",
    title = ""Creation of Multiple Conceptual Models from User Stories -- A Natural Language Processing Approach"",
    booktitle = ""Advances in Conceptual Modeling"",
    year = ""2019"",
    publisher = ""Springer International Publishing"",
    address = ""Cham"",
    pages = ""47--57"",
    abstract = ""While Agile methodologies are used in software development, researchers have identified many issues related to requirements engineering in Agile approaches. Some of these issues relate to ambiguity in user stories, which is a widely-used requirements specification mechanism in Agile methodologies. This research proposes the use of conceptual models while developing user stories. We posit that the use of conceptual models helps reducing ambiguity in user stories. An important aspect of our research is the creation of an algorithm for automatic generation of such models while developing the user stories."",
    isbn = ""978-3-030-34146-6""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Creation of multiple conceptual models from user stories – a natural language processing approach	https://link.springer.com/chapter/10.1007/978-3-030-34146-6_5	Springer International Publishing	nan; References
302	Behave	Test Automation with the Gauge Framework: Experience and Best Practices	"While Behavior-driven development (BDD) tools such as Cucumber are powerful tools for automated testing, they have certain limitations. For example, they often enforce strict syntax for test cases, like the ""Given-When-Then"" format, which may not always be easy to write for a given test case. A new test automation framework named Gauge (gauge.org) addresses that limitation since it does not prescribe the BDD testing process with a strict syntax. In Gauge, writing a test case is as easy as writing down the flow of test cases in several itemized sentences in a natural language, like English.In the context of Testinium (testinium.com), a large software testing company which provides software testing services, tools and solutions to a large number of clients, we have actively used the Gauge framework since 2018 to develop large automated front-end test suites for several large web applications.In this paper/talk, the speakers will share several examples and best practices of developing automated tests in natural-language requirements using the Gauge framework. By learning from the ideas presented in the talk, readers (attendees) will be able to consider applying the Gauge framework in their own test automation projects."	Software testing; Test automation; Gauge framework; Industrial experience; Best practices	Vahid Garousi,; Alper Bugra Keles; Yunus Balaman; Zeynep Ozdemir Guler	International Conference on Computational Science and Its Applications	https://doi.org/10.1007/978-3-030-58802-1_33		458-470		Excluded	Excluded	new_screen			2	Springer Link		Test Automation with the Gauge Framework: Experience and Best Practices	https://link.springer.com/chapter/10.1007/978-3-030-58802-1_33	Springer, Cham	nan; References; Year; Bibtex
303	Behave	Leveraging Semi-formal Approaches for DepDevOps	While formal methods have long been praised by the dependable Cyber-Physical System community, continuous software engineering practices are now employing or promoting semi-formal approaches for achieving lean and agile processes. This paper is a discussion about using Behaviour Driven Development, particularly Gherkin and RSpec for DepDevOps, DevOps for dependable Cyber-Physical Systems.	Semi-formal approaches; Dependable systems; Agile	Wanja Zaeske; Umut Durak	International Conference on Computer Safety, Reliability, and Security	https://doi.org/10.1007/978-3-030-55583-2_16		217-222		Included	Included	new_screen			2	Springer Link		Leveraging Semi-formal Approaches for DepDevOps	https://link.springer.com/chapter/10.1007/978-3-030-55583-2_16	Springer, Cham	nan; References; Year; Bibtex
304	Behave	FormTester:effective integration of model-based and manually specified test cases	Whilst Model Based Testing (MBT) is an improvement over manual test specification, the leap from it to MBT can be hard. Only recently MBT tools for web applications have emerged that can recover models from existing manually specified test cases. However, there are further requirements for supporting both MBT and manually specified tests. First, we need support for the generation of test initialization procedures. Also, we want to identify areas of the system that are not testable due to defects. We present FormTester, a new MBT tool addressing these limitations. An evaluation with real web applications shows that FormTester helps to reduce the time spent on developing test cases.		Rahul Dixit; Christof Lutteroth; Gerald Weber	ICSE '15: Proceedings of the 37th International Conference on Software Engineering - Volume 2	https://doi.org/10.5555/2819009.2819154		745-748		Excluded	Excluded	new_screen			2	ACM		FormTester: Effective Integration of Model-Based and Manually Specified Test Cases	https://dl.acm.org/doi/10.5555/2819009.2819154	IEEE Press	nan; Keywords; References; Year; Bibtex
305	Behave	"""Software Automation Testing Secrets Revealed"""	Widely acknowledged one of the best practical guide to software test automation, Narayanan Palani's Automation Labs has been helping freshers write better automation test scripts for the last three years! Now this classic book has been fully updated and revised with leading-testing tools--and hundreds of new script samples--illustrating the art and science of automation testing. Capturing the body of knowledge available from strong professional experience and industry best practices, Palani synthesizes the most effective techniques and must-know principles into clear, pragmatic guidance. No matter what your experience level,test environment, or project size, this book will inform and stimulate your thinking--and help you build the highest quality automation scripts. Discover the timeless techniques and framework designing methods that help you:Design for TestNG, Visual Studio, Jenkins, Excel VBA, Selenium, HP UFT (formerly QTP), Ranorex, RFT and other wide ranged QA Testing Tools. Reap the benefits of well built selenium webdriver automation framework! Apply powerful programming techniques to build well-estabilished data driven framework, keyword driven framework, hybrid framework, Agile Continuous Integration Automation Framework. Exploit opportunities to design Web services based SOAP Automation Frameworks with the help of SOA, ETL basics and SQL Automation scripts to validate Database Systems! Use construction practices using Object Recognition Technology of test automation tools and capture dynamic web elements. Debug problems in software development life cycle to improve testing process using test estimation techniques, tool selection process. Build quality automation scripts by understanding the machine learning basics of selenium automation framework Resolve automation issues and introduce cucumber, Specflow based Behaviour Driven Development and Test Driven Development in functional testing.		Palani, Narayanan	"""Software Automation Testing Secrets Revealed"""	https://doi.org/10.5555/3019443			"""@book{10.5555/3019443,
    author = ""Palani, Narayanan"",
    title = {""Software Automation Testing Secrets Revealed""},
    year = ""2016"",
    isbn = ""9383952954"",
    publisher = ""Becomeshakespeare.com"",
    address = ""Mumbai, Maharashtra, IND"",
    abstract = ""Widely acknowledged one of the best practical guide to software test automation, Narayanan Palani's Automation Labs has been helping freshers write better automation test scripts for the last three years! Now this classic book has been fully updated and revised with leading-testing tools--and hundreds of new script samples--illustrating the art and science of automation testing. Capturing the body of knowledge available from strong professional experience and industry best practices, Palani synthesizes the most effective techniques and must-know principles into clear, pragmatic guidance. No matter what your experience level,test environment, or project size, this book will inform and stimulate your thinking--and help you build the highest quality automation scripts. Discover the timeless techniques and framework designing methods that help you:Design for TestNG, Visual Studio, Jenkins, Excel VBA, Selenium, HP UFT (formerly QTP), Ranorex, RFT and other wide ranged QA Testing Tools. Reap the benefits of well built selenium webdriver automation framework! Apply powerful programming techniques to build well-estabilished data driven framework, keyword driven framework, hybrid framework, Agile Continuous Integration Automation Framework. Exploit opportunities to design Web services based SOAP Automation Frameworks with the help of SOA, ETL basics and SQL Automation scripts to validate Database Systems! Use construction practices using Object Recognition Technology of test automation tools and capture dynamic web elements. Debug problems in software development life cycle to improve testing process using test estimation techniques, tool selection process. Build quality automation scripts by understanding the machine learning basics of selenium automation framework Resolve automation issues and introduce cucumber, Specflow based Behaviour Driven Development and Test Driven Development in functional testing.""
}
"""	Excluded	Excluded	new_screen			2	ACM		Software Automation Testing Secrets Revealed	https://dl.acm.org/doi/abs/10.5555/3019443	Becomeshakespeare.com	nan; Keywords; References; Pages
306	Behave	ATDD by Example: A Practical Guide to Acceptance Test-Driven Development	With Acceptance Test-Driven Development (ATDD), business customers, testers, and developers can collaborate to produce testable requirements that help them build higher quality software more rapidly. However, ATDD is still widely misunderstood by many practitioners. ATDD by Example is the first practical, entry-level, hands-on guide to implementing and successfully applying it.  ATDD pioneer Markus Gartner walks readers step by step through deriving the right systems from business users, and then implementing fully automated, functional tests that accurately reflect business requirements, are intelligible to stakeholders, and promote more effective development.  Through two end-to-end case studies, Gartner demonstrates how ATDD can be applied using diverse frameworks and languages. Each case study is accompanied by an extensive set of artifacts, including test automation classes, step definitions, and full sample implementations. These realistic examples illuminate ATDD's fundamental principles, show how ATDD fits into the broader development process, highlight tips from Gartner's extensive experience, and identify crucial pitfalls to avoid. Readers will learn to      Master the thought processes associated with successful ATDD implementation     Use ATDD with Cucumber to describe software in ways businesspeople can understand     Test web pages using ATDD tools     Bring ATDD to Java with the FitNesse wiki-based acceptance test framework     Use examples more effectively in Behavior-Driven Development (BDD)     Specify software collaboratively through innovative workshops     Implement more user-friendly and collaborative test automation     Test more cleanly, listen to test results, and refactor tests for greater value  If you're a tester, analyst, developer, or project manager, this book offers a concrete foundation for achieving real benefits with ATDD now, and it will help you reap even more value as you gain experience.		Markus Gartner	Addison-Wesley Signature Series (Beck)	https://books.google.ca/books?id=RzOUlMjtfcEC&dq=ATDD+by+Example:+A+Practical+Guide+to+Acceptance+Test-Driven+Development&lr=&source=gbs_navlinks_s		240	"""nan"""	Excluded	Excluded	new_screen			2	Google Scholar		ATDD by Example: A Practical Guide to Acceptance Test-Driven Development	https://books.google.ca/books?id=RzOUlMjtfcEC&dq=ATDD+by+Example:+A+Practical+Guide+to+Acceptance+Test-Driven+Development&lr=&source=gbs_navlinks_s	Addison-Wesley Professional	
307	Behave	A serious gaming framework for decision support on hydrological hazards	With increasing population and human intervention on the natural environment, hazards are a growing threat, coming in many forms, including floods, droughts, soil erosion, and water pollution. A key approach to mitigate hydrological disaster risk at the community level is informed planning with decision support systems. The literature shows emerging efforts on multi-hazard decision support systems for hydrological disasters and demonstrates the need for an engaging, accessible, and collaborative serious game environment facilitating the relationship between the environment and communities. In this study, a web-based decision support tool (DST) was developed for hydrological multi-hazard analysis while employing gamification techniques to introduce a competitive element. The serious gaming environment provides functionalities for intuitive management, visualization, and analysis of geospatial, hydrological, and economic data to help stakeholders in the decision-making process regarding hydrological hazard preparedness and response. Major contributions of the presented DST include involving the community in environmental decision making by reducing the technical complexity required for analysis, increasing community awareness for the environmental and socio-economic consequences of hydrological hazards, and allowing stakeholders to discover and discuss potential trade-offs to hazardous scenarios considering the limitations in budget, regulations, and technicality. The paper describes the software design approaches and system architecture applied for a modular, secure, and scalable software as well as the framework's intuitive web-based user interfaces for real-time and collaborative data analysis and damage assessment. Finally, a case study was conducted to demonstrate the usability of DST in a formal setting and to measure user satisfaction with surveys.	Serious games; Multi-hazard tournament; Decision support systems; Hydrological data management and visualization; Web-based systems; Serious games;  Multi-hazard tournament;  Decision support systems;  Hydrological data management and visualization;  Web-based systems	Sermet, Yusuf; Demir, Ibrahim; Muste, Marian	SCIENCE OF THE TOTAL ENVIRONMENT	https://doi.org/10.1016/j.scitotenv.2020.138895			"""@article{WOS:000541009200024,
    Author = ""Sermet, Yusuf and Demir, Ibrahim and Muste, Marian"",
    Title = ""A serious gaming framework for decision support on hydrological hazards"",
    Journal = ""SCIENCE OF THE TOTAL ENVIRONMENT"",
    Year = ""2020"",
    Volume = ""728"",
    Month = ""AUG 1"",
    Abstract = ""With increasing population and human intervention on the natural environment, hazards are a growing threat, coming in many forms, including floods, droughts, soil erosion, and water pollution. A key approach to mitigate hydrological disaster risk at the community level is informed planning with decision support systems. The literature shows emerging efforts on multi-hazard decision support systems for hydrological disasters and demonstrates the need for an engaging, accessible, and collaborative serious game environment facilitating the relationship between the environment and communities. In this study, a web-based decision support tool (DST) was developed for hydrological multi-hazard analysis while employing gamification techniques to introduce a competitive element. The serious gaming environment provides functionalities for intuitive management, visualization, and analysis of geospatial, hydrological, and economic data to help stakeholders in the decision-making process regarding hydrological hazard preparedness and response. Major contributions of the presented DST include involving the community in environmental decision making by reducing the technical complexity required for analysis, increasing community awareness for the environmental and socio-economic consequences of hydrological hazards, and allowing stakeholders to discover and discuss potential trade-offs to hazardous scenarios considering the limitations in budget, regulations, and technicality. The paper describes the software design approaches and system architecture applied for a modular, secure, and scalable software as well as the framework's intuitive web-based user interfaces for real-time and collaborative data analysis and damage assessment. Finally, a case study was conducted to demonstrate the usability of DST in a formal setting and to measure user satisfaction with surveys."",
    Publisher = ""ELSEVIER"",
    Address = ""RADARWEG 29, 1043 NX AMSTERDAM, NETHERLANDS"",
    Type = ""Article"",
    Language = ""English"",
    Affiliation = ""Sermet, Y (Corresponding Author), 300 S Riverside Dr, Iowa City, IA 52246 USA. Sermet, Yusuf, Univ Iowa, Dept Elect \\& Comp Engn, Iowa City, IA 52242 USA. Demir, Ibrahim, Univ Iowa, Dept Civil \\& Environm Engn, Iowa City, IA 52242 USA. Muste, Marian, Univ Iowa, IIHR Hydrosci \\& Engn, Iowa City, IA USA."",
    DOI = ""10.1016/j.scitotenv.2020.138895"",
    Article-Number = ""138895"",
    ISSN = ""0048-9697"",
    EISSN = ""1879-1026"",
    Keywords = ""Serious games; Multi-hazard tournament; Decision support systems; Hydrological data management and visualization; Web-based systems"",
    Keywords-Plus = ""DISASTER RISK-MANAGEMENT; MULTI-HAZARD; RIVER-BASIN; GAMES; CHALLENGES; COMMUNITIES; SIMULATION; KNOWLEDGE"",
    Research-Areas = ""Environmental Sciences \\& Ecology"",
    Web-of-Science-Categories = ""Environmental Sciences"",
    Author-Email = ""msermet@uiowa.edu"",
    Affiliations = ""University of Iowa; University of Iowa; University of Iowa"",
    ResearcherID-Numbers = ""Muste, Marian/A-9768-2009 Sermet, Yusuf/AAA-2166-2020 Demir, Ibrahim/F-1273-2011"",
    ORCID-Numbers = ""Muste, Marian/0000-0002-5975-462X Demir, Ibrahim/0000-0002-0461-1242 Sermet, Yusuf/0000-0003-1516-8335"",
    Funding-Acknowledgement = ""U.S. Army Corps of Engineers, USA {[}W912HQ-17-SN-0005]; Institute for Water Resources (Fort Worth District); San Antonio River Authority"",
    Funding-Text = ""This project is based uponwork funded by the U.S. Army Corps of Engineers, USA (W912HQ-17-SN-0005) and studied in collaboration with The Institute for Water Resources (Fort Worth District) and the San Antonio River Authority. Special thanks to our agency colleagues Aarin Teague, Andrea Carson, Harvey Hill, and Rolf Olsen. Haowen Xu and Haider Hameed, graduate students with IIHR-Hydroscience and Engineering, provided valuable input and assistance towards the development of the presented framework."",
    Number-of-Cited-References = ""42"",
    Times-Cited = ""30"",
    Usage-Count-Last-180-days = ""3"",
    Usage-Count-Since-2013 = ""43"",
    Journal-ISO = ""Sci. Total Environ."",
    Doc-Delivery-Number = ""LZ1SJ"",
    Web-of-Science-Index = ""Science Citation Index Expanded (SCI-EXPANDED)"",
    Unique-ID = ""WOS:000541009200024"",
    OA = ""Green Submitted, Bronze"",
    DA = ""2024-10-22""
}
"""	Excluded	Excluded	new_screen			2	Web of Science		A serious gaming framework for decision support on hydrological hazards	https://www.webofscience.com/wos/woscc/full-record/WOS:000541009200024	ELSEVIER	nan; References; Pages
308	Behave	Towards Accountability Driven Development for Machine Learning Systems	With rapid deployment of Machine Learning (ML) systems into diverse domains such as healthcare and autonomous driving, important questions regarding accountability in case of incidents resulting from ML errors remain largely unsolved. To improve accountability of ML systems, we introduce a framework called Accountability Driven Development (ADD). Our framework reuses Behaviour Driven Development (BDD) approach to describe testing scenarios and system behaviours in ML Systems' development using natural language, guides and forces developers and intended users to actively record necessary accountability information in the design and implementation stages. In this paper, we illustrate how to transform accountability requirements to specific scenarios and provide syntax to describe them. The use of natural language allows non technical collaborators such as stakeholders and non ML domain experts deeply engaged in ML system development to provide more comprehensive evidence to support system's accountability. This framework also attributes the responsibility to the whole project team including the intended users rather than putting all the accountability burden on ML engineers only. Moreover, this framework can be considered as a combination of both system test and acceptance test, thus making the development more efficient. We hope this work can attract more engineers to use our idea, which enables them to create more accountable ML systems.	Accountability; Behaviour driven development; Machine learning; Model card	Chiu Pang Fung; Wei Pang; Iman Naja; Milan Markovic; Peter Edwards	CEUR Workshop Proceedings	https://researchportal.hw.ac.uk/en/publications/towards-accountability-driven-development-for-machine-learning-sy		8	"""nan"""	Included	Included	new_screen			2	Google Scholar		Towards accountability driven development for machine learning systems	https://researchportal.hw.ac.uk/en/publications/towards-accountability-driven-development-for-machine-learning-sy	CEUR-WS	
309	Behave	Automated acceptance test refactoring	With the increasing popularity of agile software development and Test-Driven-Development, also maintenance of acceptance test has become an important issue. In this paper, we describe a concept and a tool for automated acceptance test maintenance using a refactoring approach. Acceptance tests are user tests which are used to determine if a system satisfies acceptance criteria and to enable a customer to determine whether or not to accept the system. In agile development acceptance test are also used as a mean for specification, i.e. acceptance tests are written in advance to the production code (called Behavior-Driven-Development - BDD). In an agile project this poses three major challenges with respect to maintenance of acceptance tests: new requirements may cause changes in the acceptance criteria, which require the system under test to be adapted; when the system under test undergoes a major restructuring, even the acceptance test might have to be adapted; with the increasing acceptance test suite in an agile project the tests themselves may undergo a major reorganization. Having a large acceptance test base, doing these refactorings manually is error prone and causes a lot of effort. In this paper we present a concept and tool for executing automated refactoring for Fit acceptance tests, which significantly reduces the effort for test maintenance and makes them much less error prone.	acceptance test; automation; eclipse; maintenance; plug-in; refactoring	Rodrick Borg; Martin Kropp	WRT '11: Proceedings of the 4th Workshop on Refactoring Tools	https://doi.org/10.1145/1984732.1984736		15-21		Excluded	Excluded	new_screen			2	ACM		Automated Acceptance Test Refactoring	https://dl.acm.org/doi/10.1145/1984732.1984736	Association for Computing Machinery	nan; References; Year; Bibtex
310	Behave	Automated acceptance test refactoring	With the increasing popularity of agile software development and Test-Driven-Development, also maintenance of acceptance test has become an important issue. In this paper, we describe a concept and a tool for automated acceptance test maintenance using a refactoring approach. Acceptance tests are user tests which are used to determine if a system satisfies acceptance criteria and to enable a customer to determine whether or not to accept the system. In agile development acceptance test are also used as a mean for specification, i.e. acceptance tests are written in advance to the production code (called Behavior-Driven-Development - BDD). In an agile project this poses three major challenges with respect to maintenance of acceptance tests: new requirements may cause changes in the acceptance criteria, which require the system under test to be adapted; when the system under test undergoes a major restructuring, even the acceptance test might have to be adapted; with the increasing acceptance test suite in an agile project the tests themselves may undergo a major reorganization. Having a large acceptance test base, doing these refactorings manually is error prone and causes a lot of effort. In this paper we present a concept and tool for executing automated refactoring for Fit acceptance tests, which significantly reduces the effort for test maintenance and makes them much less error prone.	acceptance test;  automation;  eclipse;  maintenance;  plug-in;  refactoring; acceptance test, automation, eclipse, maintenance, plug-in, refactoring	Borg, Rodrick; Kropp, Martin	WRT '11: Proceedings of the 4th Workshop on Refactoring Tools	https://doi.org/10.1145/1984732.1984736		15-21	"""@inproceedings{10.1145/1984732.1984736,
    author = ""Borg, Rodrick and Kropp, Martin"",
    title = ""Automated acceptance test refactoring"",
    year = ""2011"",
    isbn = ""9781450305792"",
    publisher = ""Association for Computing Machinery"",
    address = ""New York, NY, USA"",
    url = ""https://doi.org/10.1145/1984732.1984736"",
    doi = ""10.1145/1984732.1984736"",
    abstract = ""With the increasing popularity of agile software development and Test-Driven-Development, also maintenance of acceptance test has become an important issue. In this paper, we describe a concept and a tool for automated acceptance test maintenance using a refactoring approach. Acceptance tests are user tests which are used to determine if a system satisfies acceptance criteria and to enable a customer to determine whether or not to accept the system. In agile development acceptance test are also used as a mean for specification, i.e. acceptance tests are written in advance to the production code (called Behavior-Driven-Development - BDD). In an agile project this poses three major challenges with respect to maintenance of acceptance tests: new requirements may cause changes in the acceptance criteria, which require the system under test to be adapted; when the system under test undergoes a major restructuring, even the acceptance test might have to be adapted; with the increasing acceptance test suite in an agile project the tests themselves may undergo a major reorganization. Having a large acceptance test base, doing these refactorings manually is error prone and causes a lot of effort. In this paper we present a concept and tool for executing automated refactoring for Fit acceptance tests, which significantly reduces the effort for test maintenance and makes them much less error prone."",
    booktitle = ""Proceedings of the 4th Workshop on Refactoring Tools"",
    pages = ""15-21"",
    numpages = ""7"",
    keywords = ""acceptance test, automation, eclipse, maintenance, plug-in, refactoring"",
    location = ""Waikiki, Honolulu, HI, USA"",
    series = ""WRT '11""
}
"""	Excluded	Excluded	new_screen			2	ACM		Automated acceptance test refactoring	https://dl.acm.org/doi/10.1145/1984732.1984736	Association for Computing Machinery	nan; References
311	Behave	Building applications with Scala	Write modern, scalable, and reactive applications with the power of ScalaAbout This BookDelves into the intricacies of functional reactive programming with ScalaExplores frameworks like Akka, Play and Slick used to develop efficient applications A step by step guide with plenty of examples showing practical implementation of essential concepts Who This Book Is ForIf you are a Java or JVM developer who wants to use Scala to build reactive functional applications for the JVM platform, then this book is for you. Prior knowledge of Java or functional programing would help. No Scala knowledge is required. What You Will Learn Use Akka to create a chat service for your appEquip yourself with the techniques and tools to build reports and build database persistence with Scala and Slick Develop a customer-facing Rest API that makes use of Scala and SprayMake use of the Scala web development principles and scale up the architecture of your applicationGet familiar with the core principles and concepts of Functional Programming Use the Play framework to create models, controllers, and views Develop reactive backing frameworks by writing code with RxScala Discover what proper testing entails with Scala using behavior-driven development In DetailScala is known for incorporating both object-oriented and functional programming into a concise and extremely powerful package. However, creating an app in Scala can get a little tricky because of the complexity the language has. This book will help you dive straight into app development by creating a real, reactive, and functional application. We will provide you with practical examples and instructions using a hands-on approach that will give you a firm grounding in reactive functional principles. The book will take you through all the fundamentals of app development within Scala as you build an application piece by piece. We've made sure to incorporate everything you need from setting up to building reports and scaling architecture. This book also covers the most useful tools available in the Scala ecosystem, such as Slick, Play, and Akka, and a whole lot more. It will help you unlock the secrets of building your own up-to-date Scala application while maximizing performance and scalability. Style and approach This book takes a step-by-step approach to app development with Scala. It will place special emphasis on functional language. It will teach you the core benefits of Scala and the fundamentals of functional programming by developing a robust application.		Pacheco, Diego	Building applications with Scala	https://doi.org/10.5555/3133464			"""@book{10.5555/3133464,
    author = ""Pacheco, Diego"",
    title = ""Building applications with Scala"",
    year = ""2016"",
    isbn = ""178646148X"",
    publisher = ""Packt Publishing"",
    abstract = ""Write modern, scalable, and reactive applications with the power of ScalaAbout This BookDelves into the intricacies of functional reactive programming with ScalaExplores frameworks like Akka, Play and Slick used to develop efficient applications A step by step guide with plenty of examples showing practical implementation of essential concepts Who This Book Is ForIf you are a Java or JVM developer who wants to use Scala to build reactive functional applications for the JVM platform, then this book is for you. Prior knowledge of Java or functional programing would help. No Scala knowledge is required. What You Will Learn Use Akka to create a chat service for your appEquip yourself with the techniques and tools to build reports and build database persistence with Scala and Slick Develop a customer-facing Rest API that makes use of Scala and SprayMake use of the Scala web development principles and scale up the architecture of your applicationGet familiar with the core principles and concepts of Functional Programming Use the Play framework to create models, controllers, and views Develop reactive backing frameworks by writing code with RxScala Discover what proper testing entails with Scala using behavior-driven development In DetailScala is known for incorporating both object-oriented and functional programming into a concise and extremely powerful package. However, creating an app in Scala can get a little tricky because of the complexity the language has. This book will help you dive straight into app development by creating a real, reactive, and functional application. We will provide you with practical examples and instructions using a hands-on approach that will give you a firm grounding in reactive functional principles. The book will take you through all the fundamentals of app development within Scala as you build an application piece by piece. We've made sure to incorporate everything you need from setting up to building reports and scaling architecture. This book also covers the most useful tools available in the Scala ecosystem, such as Slick, Play, and Akka, and a whole lot more. It will help you unlock the secrets of building your own up-to-date Scala application while maximizing performance and scalability. Style and approach This book takes a step-by-step approach to app development with Scala. It will place special emphasis on functional language. It will teach you the core benefits of Scala and the fundamentals of functional programming by developing a robust application.""
}
"""	Excluded	Excluded	new_screen			2	ACM		Building Applications with Scala	https://dl.acm.org/doi/abs/10.5555/3133464	Packt Publishing	nan; Keywords; References; Pages
312	Behave	Documentation by Example	Writing documentation can be fun and rewarding, but keeping up with an ever-changing system can take a toll on that joy. The documentation tends to get either expensive (duplication-intense), outdated or non-existing. This demonstration will present an open source tool that addresses these shortcomings by extending the BDD{[}1] approach to provide rich and human readable documents automatically from a JUnit{[}2] test suite. You'll learn how to include snippets, run-time data and more in your documents, all this with minimal effort and intrusion. This approach is suitable both for APIs and GUIs, as will be shown.	documentation; behavior-driven development; test-driven development; Java; JUnit; Bumblebee; example; snippet; documentation;  behavior-driven development;  test-driven development;  Java;  JUnit;  Bumblebee;  example;  snippet	Brolund, Daniel	AGILE PROCESSES IN SOFTWARE ENGINEERING AND EXTREME PROGRAMMING	https://www.webofscience.com/wos/woscc/full-record/WOS:000267057500054		251-252	"""@inproceedings{WOS:000267057500054,
    Author = ""Brolund, Daniel"",
    Editor = ""Abrahamsson, P and Marchesi, M and Maurer, F"",
    Title = ""Documentation by Example"",
    Booktitle = ""AGILE PROCESSES IN SOFTWARE ENGINEERING AND EXTREME PROGRAMMING"",
    Series = ""Lecture Notes in Business Information Processing"",
    Year = ""2009"",
    Volume = ""31"",
    Pages = ""251-252"",
    Note = ""10th International Conference on Agile Processes in Software Engineering and Extreme Programming, Pula, ITALY, MAY 25-29, 2009"",
    Abstract = ""Writing documentation can be fun and rewarding, but keeping up with an ever-changing system can take a toll on that joy. The documentation tends to get either expensive (duplication-intense), outdated or non-existing. This demonstration will present an open source tool that addresses these shortcomings by extending the BDD{[}1] approach to provide rich and human readable documents automatically from a JUnit{[}2] test suite. You'll learn how to include snippets, run-time data and more in your documents, all this with minimal effort and intrusion. This approach is suitable both for APIs and GUIs, as will be shown."",
    Publisher = ""SPRINGER-VERLAG BERLIN"",
    Address = ""HEIDELBERGER PLATZ 3, D-14197 BERLIN, GERMANY"",
    Type = ""Proceedings Paper"",
    Language = ""English"",
    Affiliation = ""Brolund, D (Corresponding Author), Ag AB, Vasterlanggatan 79, Stockholm, Sweden. Ag AB, Stockholm, Sweden."",
    ISSN = ""1865-1348"",
    ISBN = ""978-3-642-01852-7"",
    Keywords = ""documentation; behavior-driven development; test-driven development; Java; JUnit; Bumblebee; example; snippet"",
    Research-Areas = ""Computer Science"",
    Web-of-Science-Categories = ""Computer Science, Software Engineering"",
    Author-Email = ""daniel.brolund@agical.com"",
    Number-of-Cited-References = ""0"",
    Times-Cited = ""1"",
    Usage-Count-Last-180-days = ""0"",
    Usage-Count-Since-2013 = ""0"",
    Doc-Delivery-Number = ""BJR99"",
    Web-of-Science-Index = ""Conference Proceedings Citation Index - Science (CPCI-S)"",
    Unique-ID = ""WOS:000267057500054"",
    DA = ""2024-10-22""
}
"""	Included	Included	new_screen			2	Web of Science		Documentation by example	https://www.webofscience.com/wos/woscc/full-record/WOS:000267057500054	SPRINGER-VERLAG BERLIN	nan; References
313	Behave	Discovery: Explore behaviour using examples (Volume 1)	Written by the creator of SpecFlow and the author of The Cucumber for Java Book, this book provides inside information on how to get the most out of the discovery phase of Behaviour Driven Development (BDD). This practical guide demonstrates good collaboration techniques, illustrated by concrete examples. This book is written for everyone involved in the specification and delivery of software (including product owners, business analysts, developers, and testers). The book starts by explaining the reasons BDD exists in the first place and describes techniques for getting the most out of collaboration between business and delivery team members. This is the first in the BDD Books series that will guide you through the entire development process, including specific technical practices needed to successfully drive development using collaboratively-authored specifications and living documentation.		Nagy, Gaspar; Rose, Seb	Discovery:Explore behaviour using examples (Volume 1)	https://doi.org/10.5555/3217593			"""@book{10.5555/3217593,
    author = ""Nagy, Gaspar and Rose, Seb"",
    title = ""Discovery: Explore behaviour using examples (Volume 1)"",
    year = ""2018"",
    isbn = ""1983591254"",
    publisher = ""CreateSpace Independent Publishing Platform"",
    address = ""North Charleston, SC, USA"",
    edition = ""1st"",
    abstract = ""Written by the creator of SpecFlow and the author of The Cucumber for Java Book, this book provides inside information on how to get the most out of the discovery phase of Behaviour Driven Development (BDD). This practical guide demonstrates good collaboration techniques, illustrated by concrete examples. This book is written for everyone involved in the specification and delivery of software (including product owners, business analysts, developers, and testers). The book starts by explaining the reasons BDD exists in the first place and describes techniques for getting the most out of collaboration between business and delivery team members. This is the first in the BDD Books series that will guide you through the entire development process, including specific technical practices needed to successfully drive development using collaboratively-authored specifications and living documentation.""
}
"""	Excluded	Excluded	new_screen			2	ACM		Discovery: Explore Behaviour Using Examples (Volume 1)	https://dl.acm.org/doi/abs/10.5555/3217593	CreateSpace Independent Publishing Platform	nan; Keywords; References; Pages
314	Behave	The RSpec Book: Behaviour-driven Development with RSpec, Cucumber, and Friends	"Behaviour-Driven Development (BDD) gives you the best of Test Driven Development, Domain Driven Design, and Acceptance Test Driven Planning techniques, so you can create better software with self-documenting, executable tests that bring users and developers together with a common language.  Get the most out of BDD in Ruby with The RSpec Book, written by the lead developer of RSpec, David Chelimsky.  You'll get started right away with RSpec 2 and Cucumber by developing a simple game, using Cucumber to express high-level requirements in language your customer understands, and RSpec to express more granular requirements that focus on the behavior of individual objects in the system. You'll learn how to use test doubles (mocks and stubs) to control the environment and focus the RSpec examples on one object at a time, and how to customize RSpec to ""speak"" in the language of your domain.  You'll develop Rails 3 applications and use companion tools such as Webrat and Selenium to express requirements for web applications both in memory and in the browser. And you'll learn to specify Rails views, controllers, and models, each in complete isolation from the other.  Whether you're developing applications, frameworks, or the libraries that power them, The RSpec Book will help you write better code, better tests, and deliver better software to happier users."		David Chelimsky	Pragmatic Bookshelf Series	https://books.google.ca/books/about/The_RSpec_Book.html?id=0rxoPgAACAAJ&source=kp_book_description&redir_esc=y		420	"""nan"""	Excluded	Excluded	new_screen			2	Google Scholar		The RSpec Book: Behaviour Driven Development with Rspec, Cucumber, and Friends	https://books.google.ca/books/about/The_RSpec_Book.html?id=0rxoPgAACAAJ&source=kp_book_description&redir_esc=y	Pragmatic Bookshelf	
315	Behave	The Cucumber Book: Behaviour-Driven Development for Testers and Developers	Your customers want rock-solid, bug-free software that does exactly what they expect it to do. Yet they can't always articulate their ideas clearly enough for you to turn them into code. The Cucumber Book dives straight into the core of the problem: communication between people. Cucumber saves the day; it's a testing, communication, and requirements tool - all rolled into one. We'll show you how to express your customers' wild ideas as a set of clear, executable specifications that everyone on the team can read. You'll learn how to feed those examples into Cucumber and let it guide your development. You'll build just the right code to keep your customers happy, and not a line more. The first part of the book teaches you how to use the core features of Cucumber. You'll learn how to use Cucumber's Gherkin DSL to describe-- in plain language - the behavior your customers want from the system. You'll learn how to write Ruby code that interprets those plain language specifications and checks them against your application. In Part 2, you'll consolidate the knowledge you just gained with a worked example. Although it was born in the Ruby community, you can use Cucumber to test almost any system, from a simple shell script or a Perl script, to enterprise PHP or a Java web application. In Part 3, you'll find a selection of recipes for some of the most common situations you'll encounter using Cucumber in the wild. You'll learn how to test Ajax-heavy web applications with Capybara and Selenium, REST web services, Ruby on Rails applications, command-line applications, legacy applications and lots more! Written by the creator of Cucumber and one of its most experienced users and contributors, The Cucumber Book is an authoritative guide that will give you and your team all the knowledge you need to start using Cucumber with confidence. What You Need: Windows, Mac OS X (with XCode) or Linux Ruby 1.9.2 and upwards		Wynne, Matt; Hellesoy, Aslak		https://dl.acm.org/doi/10.5555/2331446			"""@book{10.5555/2331446,
    author = ""Wynne, Matt and Hellesoy, Aslak"",
    title = ""The Cucumber Book: Behaviour-Driven Development for Testers and Developers"",
    year = ""2012"",
    isbn = ""1934356808"",
    publisher = ""Pragmatic Bookshelf"",
    abstract = ""Your customers want rock-solid, bug-free software that does exactly what they expect it to do. Yet they can't always articulate their ideas clearly enough for you to turn them into code. The Cucumber Book dives straight into the core of the problem: communication between people. Cucumber saves the day; it's a testing, communication, and requirements tool - all rolled into one. We'll show you how to express your customers' wild ideas as a set of clear, executable specifications that everyone on the team can read. You'll learn how to feed those examples into Cucumber and let it guide your development. You'll build just the right code to keep your customers happy, and not a line more. The first part of the book teaches you how to use the core features of Cucumber. You'll learn how to use Cucumber's Gherkin DSL to describe-- in plain language - the behavior your customers want from the system. You'll learn how to write Ruby code that interprets those plain language specifications and checks them against your application. In Part 2, you'll consolidate the knowledge you just gained with a worked example. Although it was born in the Ruby community, you can use Cucumber to test almost any system, from a simple shell script or a Perl script, to enterprise PHP or a Java web application. In Part 3, you'll find a selection of recipes for some of the most common situations you'll encounter using Cucumber in the wild. You'll learn how to test Ajax-heavy web applications with Capybara and Selenium, REST web services, Ruby on Rails applications, command-line applications, legacy applications and lots more! Written by the creator of Cucumber and one of its most experienced users and contributors, The Cucumber Book is an authoritative guide that will give you and your team all the knowledge you need to start using Cucumber with confidence. What You Need: Windows, Mac OS X (with XCode) or Linux Ruby 1.9.2 and upwards""
}
"""	Excluded	Excluded	new_screen			2	ACM		The Cucumber Book: Behaviour-Driven Development for Testers and Developers	https://dl.acm.org/doi/10.5555/2331446	Pragmatic Bookshelf	nan; Venue; Keywords; References; Pages
316	Behave	A Basic Spring Boot Application	We could start writing code directly, but that, even while being pragmatic, would be far from being a real case. Instead, we'll define a product that we want to build, and we'll split it into small chunks. This requirements-oriented approach is used throughout the book to make it more practical. In real life, you'll always have these business requirements.	specific testing technologies/languages	Macero Garc{\'i}a, Mois{\'e}s	Learn Microservices with Spring Boot	https://doi.org/10.1007/978-1-4842-6131-6_3		25--74	"""@Inbook{MaceroGarcia2020,
    author = ""Macero Garc{\'i}a, Mois{\'e}s"",
    title = ""A Basic Spring Boot Application"",
    bookTitle = ""Learn Microservices with Spring Boot: A Practical Approach to RESTful Services Using an Event-Driven Architecture, Cloud-Native Patterns, and Containerization"",
    year = ""2020"",
    publisher = ""Apress"",
    address = ""Berkeley, CA"",
    pages = ""25--74"",
    abstract = ""We could start writing code directly, but that, even while being pragmatic, would be far from being a real case. Instead, we'll define a product that we want to build, and we'll split it into small chunks. This requirements-oriented approach is used throughout the book to make it more practical. In real life, you'll always have these business requirements."",
    isbn = ""978-1-4842-6131-6"",
    doi = ""10.1007/978-1-4842-6131-6\_3"",
    url = ""https://doi.org/10.1007/978-1-4842-6131-6\_3""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		A Basic Spring Boot Application	https://doi.org/10.1007/978-1-4842-6131-6_3	Apress	nan; Keywords; References; Link
317	Behave	A Beginner's Guide to Scala, Object Orientation and Functional Programming		Functional Programming; Hybrid Programming Paradigm; Object Orientation; Scala Swing; Web Applications and Services	John Hunt		https://link.springer.com/book/10.1007/978-3-319-75771-1				Excluded	Excluded	new_screen			2	Springer Link		A Beginner's Guide to Scala, Object Orientation and Functional Programming	https://link.springer.com/book/10.1007/978-3-319-75771-1	Springer Link	nan; Venue; Abstract; References; Pages; Year; Bibtex
318	Behave	A Circumstantial Methodological Analysis of Recent Studies on NLP-driven Test Automation Approaches	From manual testing to test automation, test generation is advancing. With the emergence of new challenges---and legacy challenges already persisting---there is a great need of turning test creation activity into a way that is more responsive and effortless. Natural language processing, with its applicability in different domains, is swiftly adopted by researchers in software testing discipline to perform automation of such activities. Attempts like this will bring in prominent paradigm shifts in the conventional and mundane non-automated frameworks of test cases creation (software development activity) from requirement specifications. To explore, as how natural language processing could be employed to assist software testing, this paper presents a detailed article with methodological investigation of some recent research studies. The detailed knowledge will help the practitioners to get insights of how natural language processing (NLP) is being carried out in testing domain and what specific role does each term associated with it will play.	NLP in testing	Gupta, Atulya; Mahapatra, Rajendra Prasad	Intelligent Systems	https://doi.org/10.1007/978-981-33-6081-5_14		155--167	"""@InProceedings{10.1007/978-981-33-6081-5_14,
    author = ""Gupta, Atulya and Mahapatra, Rajendra Prasad"",
    editor = ""Udgata, Siba K. and Sethi, Srinivas and Srirama, Satish N."",
    title = ""A Circumstantial Methodological Analysis of Recent Studies on NLP-driven Test Automation Approaches"",
    booktitle = ""Intelligent Systems"",
    year = ""2021"",
    publisher = ""Springer Singapore"",
    address = ""Singapore"",
    pages = ""155--167"",
    abstract = ""From manual testing to test automation, test generation is advancing. With the emergence of new challenges---and legacy challenges already persisting---there is a great need of turning test creation activity into a way that is more responsive and effortless. Natural language processing, with its applicability in different domains, is swiftly adopted by researchers in software testing discipline to perform automation of such activities. Attempts like this will bring in prominent paradigm shifts in the conventional and mundane non-automated frameworks of test cases creation (software development activity) from requirement specifications. To explore, as how natural language processing could be employed to assist software testing, this paper presents a detailed article with methodological investigation of some recent research studies. The detailed knowledge will help the practitioners to get insights of how natural language processing (NLP) is being carried out in testing domain and what specific role does each term associated with it will play."",
    isbn = ""978-981-33-6081-5""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		A Circumstantial Methodological Analysis of Recent Studies on NLP-driven Test Automation Approaches	https://doi.org/10.1007/978-981-33-6081-5_14	Springer Singapore	nan; Keywords; References; Link
319	Behave	A distributable event-oriented architecture for activity recognition in smart homes	In this paper, a new architecture is proposed for continuously generating, propagating, and delivering information by using event-based communication between independent agents. The resulting system can both handle heterogeneous smart environments and compute information in multiple places. With a communication method working as an abstraction layer, the proposed solution enables the use of multiple technologies at once. Additionally, different options for delivering the resulting data to client applications are explored. The implementation of this design as a platform written in Java with the Spring Framework is also presented, along with its handling of ten housing facilities equipped with various sensors (electromagnetic contacts, smart plugs, motion detectors, humidity, temperature, and light sensors). This paper is then concluded by an analysis of the platform workloads incurred by the tracking of a set of low-level activities. Finally, the code is distributed online for the benefit of the community.	Artificial Intelligence; Activity recognition; Complex event processing	Cedric Demongivert; Kevin Bouchard; Sebastien Gaboury; Bruno Bouchard; Maxime Lussier; Maxime Parenteau; Catherine Laliberte; Melanie Couture,; Nathalie Bier; Sylvain Giroux	Journal of Reliable Intelligent Environments	https://doi.org/10.1007/s40860-020-00125-y	"citation_journal_title=J Biomed Inf; citation_title=Automatic assessment of functional health decline in older adults based on smart home data; citation_author=A Alberdi Aramendi, A Weakley, A Aztiria Goenaga, M Schmitter-Edgecombe, DJ Cook; citation_volume=81; citation_publication_date=2018; citation_pages=119-130; citation_doi=10.1016/j.jbi.2018.03.009; citation_id=CR1; citation_journal_title=Pervasive Mobile Comput; citation_title=Enhancing activity recognition using cpd-based activity segmentation; citation_author=S Aminikhanghahi, DJ Cook; citation_volume=53; citation_publication_date=2019; citation_pages=75-89; citation_doi=10.1016/j.pmcj.2019.01.004; citation_id=CR2; Arthur J, Azadegan S (2005) Spring framework for rapid open source j2ee web application development: a case study. Sixth International Conference on Software Engineering. Artificial Intelligence, Networking and Parallel/Distributed Computing and First ACIS International Workshop on self-assembling wireless network, pp 90-95; citation_journal_title=Appl Artif Intell; citation_title=A smart environments architecture (search); citation_author=J Augusto, J Gimenez-Manuel, M Quinde, C Oguego, M Ali, C James-Reynolds; citation_volume=34; citation_issue=2; citation_publication_date=2020; citation_pages=155-186; citation_doi=10.1080/08839514.2020.1712778; citation_id=CR4; citation_journal_title=Human Cent Comput Inf Sci; citation_title=intelligent environments: a manifesto; citation_author=JC Augusto, V Callaghan, D Cook, A Kameas, I Satoh; citation_volume=3; citation_issue=1; citation_publication_date=2013; citation_pages=12; citation_doi=10.1186/2192-1962-3-12; citation_id=CR5; citation_journal_title=ACM Comput Surv; citation_title=A survey on reactive programming; citation_author=E Bainomugisha, AL Carreton, Tv Cutsem, S Mostinckx, Wd Meuter; citation_volume=45; citation_issue=4; citation_publication_date=2013; citation_pages=1-34; citation_doi=10.1145/2501654.2501666; citation_id=CR6; citation_journal_title=Expert Syst Appl; citation_title=Tracking objects within a smart home; citation_author=F Bergeron, K Bouchard, S Gaboury, S Giroux; citation_volume=113; citation_publication_date=2018; citation_pages=428-442; citation_doi=10.1016/j.eswa.2018.07.009; citation_id=CR7; citation_journal_title=Sensors; citation_title=A semi-automatic annotation approach for human activity recognition; citation_author=P Bota, J Silva, D Folgado, H Gamboa; citation_volume=19; citation_publication_date=2019; citation_pages=501; citation_doi=10.3390/s19030501; citation_id=CR8; Bouchard K, Bouchard B, Bouzouanea A (2014) Practical guidelines to build smart homes: lessons learned. Opportunistic networking, smart home, smart city, smart systems (book chapter), pp 1-37; Bozdag E, Mesbah A, van Deursen A (2007) A comparison of push and pull techniques for ajax. In: 2007 9th IEEE International Workshop on web site evolution, pp 15-22; Cigno RL, Russo A, Carra D (2008) On some fundamental properties of p2p push/pull protocols. In: 2008 Second International Conference on communications and electronics, pp 67-73; citation_journal_title=Computer; citation_title=Casas: a smart home in a box; citation_author=D Cook, A Crandall, B Thomas, N Krishnan; citation_volume=46; citation_publication_date=2013; citation_pages=62-69; citation_doi=10.1109/MC.2012.328; citation_id=CR12; citation_journal_title=J Ambient Intell Smart Environ; citation_title=Multi-agent smart environments; citation_author=DJ Cook; citation_volume=1; citation_issue=1; citation_publication_date=2009; citation_pages=51-55; citation_doi=10.3233/AIS-2009-0007; citation_id=CR13; citation_journal_title=IEEE Intell Syst; citation_title=Learning setting-generalized activity models for smart spaces; citation_author=DJ Cook; citation_volume=2010; citation_publication_date=2019; citation_pages=1; citation_id=CR14; Fielding RT, Taylor RN (2000) Architectural styles and the design of network-based software architectures. Ph.D. thesis, University of California, Irvine; citation_journal_title=IEEE Intell Syst; citation_title=Exploiting passive rfid technology for activity recognition in smart homes; citation_author=D Fortin-Simard; citation_volume=30; citation_issue=4; citation_publication_date=2015; citation_pages=7-15; citation_doi=10.1109/MIS.2015.18; citation_id=CR16; citation_title=Web applications with spring boot; citation_publication_date=2019; citation_id=CR17; citation_author=F Gutierrez; citation_publisher=Apress; citation_journal_title=J Reliab Intell Environ; citation_title=Complex behavioral pattern mining in non-intrusive sensor-based smart homes using an intelligent activity inference engine; citation_author=J Hao, A Bouzouane, S Gaboury; citation_volume=3; citation_publication_date=2017; citation_pages=99-116; citation_doi=10.1007/s40860-017-0041-2; citation_id=CR18; citation_journal_title=Computer; citation_title=The gator tech smart house: a programmable pervasive space; citation_author=S Helal, CW Mann, H El-Zabadani, J King, Y Kaddoura, E Jansen; citation_volume=38; citation_publication_date=2005; citation_pages=50-60; citation_doi=10.1109/MC.2005.107; citation_id=CR19; citation_journal_title=J Reliab Intell Environ; citation_title=Smart home in a box: usability study for a large scale self-installation of smart home technologies; citation_author=Y Hu; citation_volume=2; citation_publication_date=2016; citation_pages=93-106; citation_doi=10.1007/s40860-016-0021-y; citation_id=CR20; Kaewkasi C, Gurd JR (2008) Groovy aop: a dynamic aop system for a JVM-based language. In: Proceedings of the 2008 AOSD Workshop on software engineering properties of languages and aspect technologies, SPLAT '08. ACM, New York, pp 3:1-3:6; citation_journal_title=J Interdiscip Res; citation_title=Supporting the development of gerontechnology as part of silver economy building; citation_author=A Klimczuk; citation_volume=2; citation_publication_date=2012; citation_pages=52-56; citation_id=CR22; citation_title=Activity recognition from accelerometer data using symbolic data approach; citation_inbook_title=Data analytics and learning; citation_publication_date=2019; citation_pages=317-329; citation_id=CR23; citation_author=PG Lavanya; citation_author=S Mallappa; citation_publisher=Springer; citation_journal_title=Disabil Rehabil Assistive Technol; citation_title=Identifying participation needs of people with acquired brain injury in the development of a collective community smart home; citation_author=M Levasseur; citation_volume=11; citation_issue=8; citation_publication_date=2016; citation_pages=636-644; citation_doi=10.3109/17483107.2015.1029536; citation_id=CR24; Lucassen G, Dalpiaz F, van der Werf JME, Brinkkemper S, Zowghi D (2017) Behavior-driven requirements traceability via automated acceptance tests. In: 2017 IEEE 25th International Requirements Engineering Conference Workshops (REW). IEEE, pp 431-434; citation_journal_title=J Alzheimers Dis; citation_title=Smart home technology: a new approach for performance measurements of activities of daily living and prediction of mild cognitive impairment in older adults; citation_author=M Lussier; citation_volume=68; citation_publication_date=2019; citation_pages=85-96; citation_doi=10.3233/JAD-180652; citation_id=CR26; Lussier M et al (2020) Using ambient assisted living to monitor older adults with alzheimer's disease: a single-case study to validate monitoring report. JMIR Med Inf; citation_journal_title=Signal Process Image Commun; citation_title=Ts-lstm and temporal-inception: Exploiting spatiotemporal dynamics for activity recognition; citation_author=CY Ma, MH Chen, Z Kira, G AlRegib; citation_volume=71; citation_publication_date=2019; citation_pages=76-87; citation_doi=10.1016/j.image.2018.09.003; citation_id=CR28; citation_journal_title=Pervasive Mobile Comput; citation_title=Adaptive monitoring system for e-health smart homes; citation_author=H Mshali, T Lemlouma, D Magoni; citation_volume=43; citation_publication_date=2018; citation_pages=1-19; citation_doi=10.1016/j.pmcj.2017.11.001; citation_id=CR29; citation_journal_title=J Ambient Intell Smart Environ; citation_title=Sensor-based activity recognition in the context of ambient assisted living systems: a review; citation_author=A Patel, J Shah; citation_volume=11; citation_issue=4; citation_publication_date=2019; citation_pages=301-322; citation_doi=10.3233/AIS-190529; citation_id=CR30; citation_journal_title=Sensors; citation_title=The light node communication framework: A new way to communicate inside smart homes; citation_author=V Plantevin, A Bouzouane, S Gaboury; citation_volume=17; citation_issue=10; citation_publication_date=2017; citation_pages=2397; citation_doi=10.3390/s17102397; citation_id=CR31; Redux website (2020). 
                  https://redux.js.org/introduction/getting-started
                  
                . Accessed 07 May 2020; Solis C, Wang X (2011) A study of the characteristics of behaviour driven development. In: 2011 37th EUROMICRO Conference on software engineering and advanced applications, pp 383-387; citation_journal_title=Inf Softw Technol; citation_title=Test case design for context-aware applications: are we there yet?; citation_author=Santos I Sousa, RM Castro Andrade, LS Rocha, S Matalonga, KM Oliveira, GH Travassos; citation_volume=88; citation_publication_date=2017; citation_pages=1-16; citation_doi=10.1016/j.infsof.2017.03.008; citation_id=CR34; Spock Framework website (2019). 
                  http://spockframework.org
                  
                . Accessed 22 May 2019; citation_journal_title=Computer; citation_title=Using smart homes to detect and analyze health events; citation_author=G Sprint, D Cook, R Fritz, M Schmitter-Edgecombe; citation_volume=49; citation_publication_date=2016; citation_pages=29-37; citation_doi=10.1109/MC.2016.338; citation_id=CR36; Stuart Russell PN (2011) Artificial intelligence: a mordern approach, chap 2, 3rd edn. Pearson, pp 34-63; citation_title=Activity recognition in the home using simple and ubiquitous sensors; citation_inbook_title=Pervasive Computing; citation_publication_date=2004; citation_pages=158-175; citation_id=CR38; citation_author=EM Tapia; citation_author=SS Intille; citation_author=K Larson; citation_publisher=Springer; United Nations DoE, Social Affairs PD (2017) World population ageing 2017. Tech. Rep. ST/ESA/SER.A/408, United Nations; citation_journal_title=Pervasive Mobile Comput; citation_title=A communication efficient distributed learning framework for smart environments; citation_author=L Valerio, A Passarella, M Conti; citation_volume=41; citation_publication_date=2017; citation_pages=46-68; citation_doi=10.1016/j.pmcj.2017.07.014; citation_id=CR40; Wang J, Chen Y, Hao S, Peng X, Hu L (2019) Deep learning for sensor-based activity recognition: A survey. Pattern Recogn Lett 119:3 - 11 (deep Learning for Pattern Recognition); citation_title=Testing and code quality; citation_publication_date=2015; citation_id=CR42; citation_author=G Wielenga; citation_publisher=Apress; Wimo PA, et al (2015) World Alzheimer report 2015. Tech. rep., Alzheimer's Disease International; citation_journal_title=Pattern Recogn; citation_title=Open-set human activity recognition based on micro-doppler signatures; citation_author=Y Yang; citation_volume=85; citation_publication_date=2019; citation_pages=60-69; citation_doi=10.1016/j.patcog.2018.07.030; citation_id=CR44; citation_journal_title=Computing; citation_title=Wits: an iot-endowed computational framework for activity recognition in personalized smart homes; citation_author=L Yao; citation_volume=100; citation_issue=4; citation_publication_date=2018; citation_pages=369-385; citation_doi=10.1007/s00607-018-0603-z; citation_id=CR45; citation_journal_title=IEEE Softw; citation_title=Comprehensive multiplatform dynamic program analysis for java and android; citation_author=Y Zheng, S Kell, L Bulej, H Sun, W Binder; citation_volume=33; citation_issue=4; citation_publication_date=2016; citation_pages=55-63; citation_doi=10.1109/MS.2015.151; citation_id=CR46"			Excluded	Excluded	new_screen			2	Springer Link		A distributable event-oriented architecture for activity recognition in smart homes	https://doi.org/10.1007/s40860-020-00125-y	Springer Link	nan; Pages; Year; Bibtex; Link
320	Behave	A domain-specific language to design false data injection tests for air traffic control systems	The ADS-B--automatic dependent surveillance-broadcast--technology requires aircraft to broadcast their position and velocity periodically. As compared to legacy radar technologies, coupled with alarming cyber security issues (the ADS-B protocol provides no encryption nor identification), the reliance on aircraft to communicate this surveillance information exposes air transport to new cyber security threats, and especially to FDIAs--false data injection attacks--where an attacker modifies, blocks, or emits fake ADS-B messages to dupe controllers and surveillance systems. This paper is part of an ongoing research initiative toward the generation of FDIA test scenarios and focuses on supporting the test design activity, i.e., supporting ATC experts to meticulously craft test cases in order to assess the resilience of surveillance systems against FDIAs. To achieve this goal, we propose a complete and powerful domain-specific language (DSL), close to natural language, that provides a large expressiveness to support ATC business experts in creating FDIA's test scenarios. We demonstrate the design capabilities of this approach and its productivity gain with respect to manually creating the FDIAs test scenarios.	Artificial Intelligence; Domain-specific language; Air traffic control; ADS-B protocol; Cyber security; False data injection attacks; Automated test generation	Alexandre Vernotte; Aymeric Cretin; Bruno Legeard,; Fabien Peureux	International Journal on Software Tools for Technology Transfer	https://doi.org/10.1007/s10009-021-00604-4	"51, E.W.G.: Safety, performance and interoperability requirements document for ADS-B/NRA application. Tech. rep., The European Organisation for Civil Aviation Equipment (2005). 
                  http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.129.6059&rep=rep1&type=pdf; Akerman, S., Habler, E., Shabtai, A.: VizADS-B: Analyzing sequences of ADS-B images using explainable convolutional LSTM encoder-decoder to detect cyber attacks (2019). arXiv preprint 
                  arXiv:1906.07921; citation_journal_title=J. ACM; citation_title=A new method of interpolation and smooth curve fitting based on local procedures; citation_author=H Akima; citation_volume=17; citation_publication_date=1970; citation_pages=589-602; citation_doi=10.1145/321607.321609; citation_id=CR3; Asia, I.C.A.O., (ICAO), P.O.: Guidance material on issues to be considered in atc multi-sensor fusion processing including the integration of ADS-B data. Tech. rep., APANPIRG/19 (2008). 
                  https://www.icao.int/APAC/Documents/edocs/cns/grpt_atcmulti_adsbdata.pdf; Baader, F., Horrocks, I., Sattler, U.: Description logics. In: Handbook on Ontologies, pp. 3-28. Springer (2004); Barreto, A.B., Hieb, M., Yano, E.: Developing a complex simulation environment for evaluating cyber attacks. In: Interservice/Industry Training, Simulation, and Education Conference (I/ITSEC), vol. 12248, pp. 1-9 (2012); Belta, C., Yordanov, B., Aydin Gol, E.: Temporal Logics and Automata, pp. 27-38. Springer International Publishing, Cham (2017); citation_journal_title=Sci. Am.; citation_title=The semantic web; citation_author=T Berners-Lee, J Hendler, O Lassila; citation_volume=284; citation_issue=5; citation_publication_date=2001; citation_pages=34-43; citation_doi=10.1038/scientificamerican0501-34; citation_id=CR8; citation_journal_title=J. Navig.; citation_title=Sesar and nextgen: investing in new paradigms; citation_author=P Brooker; citation_volume=61; citation_issue=2; citation_publication_date=2008; citation_pages=195-208; citation_doi=10.1017/S0373463307004596; citation_id=CR9; citation_journal_title=Comput. Sci. Inf. Syst.; citation_title=Ontology driven development of domain-specific languages; citation_author=I Ceh, M Crepinsek, T Kosar, M Mernik; citation_volume=8; citation_issue=2; citation_publication_date=2011; citation_pages=317-342; citation_doi=10.2298/CSIS101231019C; citation_id=CR10; citation_journal_title=IEEE Trans. Signal Process.; citation_title=A simple and efficient estimator for hyperbolic location; citation_author=YT Chan, K Ho; citation_volume=42; citation_issue=8; citation_publication_date=1994; citation_pages=1905-1915; citation_doi=10.1109/78.301830; citation_id=CR11; citation_journal_title=IEEE Softw.; citation_title=Commonality and variability in software engineering; citation_author=J Coplien, D Hoffman, D Weiss; citation_volume=15; citation_issue=6; citation_publication_date=1998; citation_pages=37-45; citation_doi=10.1109/52.730836; citation_id=CR12; Cretin, A., Legeard, B., Peureux, F., Vernotte, A.: Increasing the resilience of ATC systems against false data injection attacks using DSL-based testing. In: Proceedings of the 8th International Conference on Research in Air Transportation (ICRAT'18), Doctoral Symposium, pp. 1-4. Barcelona, Spain (2018); Cretin, A., Vernotte, A., Chevrot, A., Peureux, F., Legeard, B.: Test data generation for false data injection attack testing in air traffic surveillance. In: 4th International Workshop on Testing Extra-Functional Properties and Quality Characteristics of Software Systems (ITEQS 2020). Porto, Portugal (2020); Dan, G., Sandberg, H.: Stealth attacks and protection schemes for state estimators in power systems. In: Smart Grid Communications (SmartGridComm), 2010 First IEEE International Conference on, pp. 214-219. IEEE (2010); citation_journal_title=Am. Math. Mon.; citation_title=On the runge example; citation_author=JF Epperson; citation_volume=94; citation_issue=4; citation_publication_date=1987; citation_pages=329-341; citation_doi=10.1080/00029890.1987.12000642; citation_id=CR16; EUROCONTROL: D23--security assessment for ADS-B ground system--3rd iteration 00.01.02. Tech. rep., Sesar Joint Undertaking (SJU) (2014); citation_journal_title=Ann. Softw. Eng.; citation_title=Dare: Domain analysis and reuse environment; citation_author=W Frakes, R Prieto, C Fox; citation_volume=5; citation_issue=1; citation_publication_date=1998; citation_pages=125-141; citation_doi=10.1023/A:1018972323770; citation_id=CR18; citation_journal_title=J. Autom. Reason.; citation_title=Hermit: an owl 2 reasoner; citation_author=B Glimm, I Horrocks, B Motik, G Stoilos, Z Wang; citation_volume=53; citation_issue=3; citation_publication_date=2014; citation_pages=245-269; citation_doi=10.1007/s10817-014-9305-1; citation_id=CR19; citation_journal_title=Comput. Secur.; citation_title=Using lstm encoder-decoder algorithm for detecting anomalous ADS-B messages; citation_author=E Habler, A Shabtai; citation_volume=78; citation_publication_date=2018; citation_pages=155-173; citation_doi=10.1016/j.cose.2018.07.004; citation_id=CR20; citation_title=A case of visitor versus interpreter pattern; citation_inbook_title=Objects, Models, Components, Patterns; citation_publication_date=2011; citation_pages=228-243; citation_id=CR21; citation_author=M Hills; citation_author=P Klint; citation_author=T Storm; citation_author=J Vinju; citation_publisher=Springer; Jafer, S., Chhaya, B., Durak, U.: Owl ontology to ecore metamodel transformation for designing a domain specific language to develop aviation scenarios. In: Proceedings of the Symposium on Model-Driven Approaches for Simulation Engineering, pp. 1-11 (2017); citation_title=Feature-Oriented Domain Analysis (FODA) Feasibility Study; citation_publication_date=1990; citation_id=CR23; citation_author=KC Kang; citation_author=SG Cohen; citation_author=JA Hess; citation_author=WE Novak; citation_author=AS Peterson; citation_publisher=Carnegie-Mellon Univ Pittsburgh Pa Software Engineering Inst; citation_journal_title=Inf. Softw. Technol.; citation_title=Domain-specific languages: a systematic mapping study; citation_author=T Kosar, S Bohra, M Mernik; citation_volume=71; citation_publication_date=2016; citation_pages=77-91; citation_doi=10.1016/j.infsof.2015.11.001; citation_id=CR24; Lassila, O., Swick, R.R., et al.: Resource description framework (rdf) model and syntax specification (1998); citation_journal_title=Inf. Softw. Technol.; citation_title=A systematic review of domain analysis tools; citation_author=LB Lisboa, VC Garcia, D Lucredio, ES Almeida, SR Lemos Meira, RP Mattos Fortes; citation_volume=52; citation_issue=1; citation_publication_date=2010; citation_pages=1-13; citation_doi=10.1016/j.infsof.2009.05.001; citation_id=CR26; citation_journal_title=ACM Trans. Inf. Syst. Secur. (TISSEC); citation_title=False data injection attacks against state estimation in electric power grids; citation_author=Y Liu, P Ning, MK Reiter; citation_volume=14; citation_issue=1; citation_publication_date=2011; citation_pages=13; citation_doi=10.1145/1952982.1952995; citation_id=CR27; Ma, M.: Resilience against false data injection attack in wireless sensor networks. In: Handbook of Research on Wireless Security, pp. 628-635. IGI Global (2008); Maciel, D., Paiva, A.C., da Silva, A.R.: From requirements to automated acceptance tests of interactive apps: an integrated model-based testing approach. In: Proceedings of the 14th International Conference on Evaluation of Novel Approaches to Software Engineering, pp. 265-272. SCITEPRESS-Science and Technology Publications, Lda (2019); citation_journal_title=Int. J. Crit. Infrastruct. Prot.; citation_title=Analysis of vulnerabilities, attacks, countermeasures and overall risk of the automatic dependent surveillance-broadcast (ADS-B) system; citation_author=MR Manesh, N Kaabouch; citation_volume=19; citation_publication_date=2017; citation_pages=16-31; citation_doi=10.1016/j.ijcip.2017.10.002; citation_id=CR30; Manesh, M.R., Mullins, M., Foerster, K., Kaabouch, N.: A preliminary effort toward investigating the impacts of ADS-B message injection attack. In: 2018 IEEE Aerospace Conference, pp. 1-6. IEEE (2018); Martinovic, I., Strohmeier, M.: Security of ADS-B: State of the art and beyond. DCS (2013); McGuinness, D.L., Van Harmelen, F., et al.: Owl web ontology language overview. W3C Recommend. 10(10): 2004 (2004); Menzel, T., Bagschik, G., Maurer, M.: Scenarios for development, test and validation of automated vehicles. In: 2018 IEEE Intelligent Vehicles Symposium (IV), pp. 1821-1827. IEEE (2018); citation_journal_title=ACM Comput. Surv.; citation_title=When and how to develop domain-specific languages; citation_author=M Mernik, J Heering, AM Sloane; citation_volume=37; citation_issue=4; citation_publication_date=2005; citation_pages=316-344; citation_doi=10.1145/1118890.1118892; citation_id=CR35; citation_journal_title=ACM Comput. Surv. (CSUR); citation_title=When and how to develop domain-specific languages; citation_author=M Mernik, J Heering, AM Sloane; citation_volume=37; citation_issue=4; citation_publication_date=2005; citation_pages=316-344; citation_doi=10.1145/1118890.1118892; citation_id=CR36; Mernik, M., Hrncic, D., Bryant, B.R., Javed, F.: Applications of grammatical inference in software engineering: domain specific language development, pp. 421-457. Imperial College Press (2010). 
                  https://doi.org/10.1142/9781848165458_0008; citation_journal_title=J. Aerosp. Inf. Syst.; citation_title=Automated generation of air traffic encounters for testing conflict-resolution software; citation_author=RA Paielli; citation_volume=10; citation_issue=5; citation_publication_date=2013; citation_pages=209-217; citation_id=CR38; citation_journal_title=IEEE Trans. Parallel Distrib. Syst.; citation_title=The design and implementation of a domain-specific language for network performance testing; citation_author=S Pakin; citation_volume=18; citation_issue=10; citation_publication_date=2007; citation_pages=1436-1449; citation_doi=10.1109/TPDS.2007.1065; citation_id=CR39; citation_journal_title=Comput. Lang. Syst. Struct.; citation_title=Ontological approach for dsl development; citation_author=MJAV Pereira, JA Fonseca, PR Henriques; citation_volume=45; citation_issue=C; citation_publication_date=2016; citation_pages=35-52; citation_doi=10.1016/j.cl.2015.12.004; citation_id=CR40; Queiroz, R., Berger, T., Czarnecki, K.: Geoscenario: an open dsl for autonomous driving scenario representation. In: 2019 IEEE Intelligent Vehicles Symposium (IV), pp. 287-294. IEEE (2019); citation_journal_title=IEEE Trans. Signal Process.; citation_title=Elliptic localization: performance study and optimum receiver placement; citation_author=L Rui, K Ho; citation_volume=62; citation_issue=18; citation_publication_date=2014; citation_pages=4673-4688; citation_doi=10.1109/TSP.2014.2338835; citation_id=CR42; Savvides, A., Park, H., Srivastava, M.B.: The bits and flops of the n-hop multilateration primitive for node localization problems. In: Proceedings of the 1st ACM International Workshop on Wireless Sensor Networks and Applications, pp. 112-121. ACM (2002); Schafer, M., Lenders, V., Martinovic, I.: Experimental analysis of attacks on next generation air traffic communication. In: International Conference on Applied Cryptography and Network Security, pp. 253-271. Springer (2013); Skolnik, M.I.: Radar Handbook. 3rd edn (2008); Smith, A., Cassell, R., Breen, T., Hulstrom, R., Evers, C.: Methods to provide system-wide ADS-B back-up, validation and security. In: 25th Digital Avionics Systems Conference, pp. 1-7. IEEE (2006); Strohmeier, M.: Security in next generation air traffic communication networks. Ph.D. thesis, Oxford University (2016); citation_journal_title=IEEE Trans. Intell. Transp. Syst.; citation_title=On perception and reality in wireless air traffic communications security; citation_author=M Strohmeier, M Schafer, R Pinheiro, V Lenders, I Martinovic; citation_volume=18; citation_issue=6; citation_publication_date=2017; citation_pages=1338-1357; citation_doi=10.1109/TITS.2016.2612584; citation_id=CR48; citation_journal_title=Data Knowl. Eng.; citation_title=Knowledge engineering: principles and methods; citation_author=R Studer, VR Benjamins, D Fensel; citation_volume=25; citation_issue=1-2; citation_publication_date=1998; citation_pages=161-197; citation_doi=10.1016/S0169-023X(97)00056-6; citation_id=CR49; Tairas, R., Mernik, M., Gray, J.: Using ontologies in the domain analysis of domain-specific languages. In: International Conference on Model Driven Engineering Languages and Systems, pp. 332-342. Springer (2008); citation_journal_title=ACM SIGSOFT Softw. Eng. Notes; citation_title=Software development using domain-specific software architectures: Cdrl a011-a curriculum module in the sei style; citation_author=RN Taylor, W Tracz, L Coglianese; citation_volume=20; citation_issue=5; citation_publication_date=1995; citation_pages=27-38; citation_doi=10.1145/217030.217034; citation_id=CR51; citation_journal_title=Electron. Commun. Eng. J.; citation_title=Mode s: an introduction and overview (secondary surveillance radar); citation_author=R Trim; citation_volume=2; citation_issue=2; citation_publication_date=1990; citation_pages=53-59; citation_doi=10.1049/ecej:19900017; citation_id=CR52; Tsarkov, D., Horrocks, I.: Fact++ description logic reasoner: system description. In: International Joint Conference on Automated Reasoning, pp. 292-297. Springer (2006); citation_journal_title=J. Comput. Inf. Technol.; citation_title=Domain-specific language design requires feature descriptions; citation_author=A Deursen, P Klint; citation_volume=10; citation_issue=1; citation_publication_date=2002; citation_pages=1-17; citation_doi=10.2498/cit.2002.01.01; citation_id=CR54; Wesson, K.D., Humphreys, T.E., Evans, B.L.: Can cryptography secure next generation air traffic surveillance? IEEE Secur. Privacy Mag. (2014); Xie, L., Mo, Y., Sinopoli, B.: False data injection attacks in electricity markets. In: Smart Grid Communications (SmartGridComm), First International Conference on, pp. 226-231. IEEE (2010); Zhang, R., Liu, G., Liu, J., Nees, J.P.: Analysis of message attacks in aviation datalink communication. IEEE Access (2017)"			Excluded	Excluded	new_screen			2	Springer Link		A domain-specific language to design false data injection tests for air traffic control systems	https://doi.org/10.1007/s10009-021-00604-4	Springer Link	nan; Pages; Year; Bibtex; Link
321	Behave	A Dynamic System Model Using Agile Method Techniques Applied to Geomatics	In this paper we propose the use of a model that represents a territory across a dynamic system. As part of the process in the definition of the model we used techniques adaptive software engineering, particularly construction tools associated with agile methods. The dynamic system modeling serves to simulate territorial scenarios and analyze their characteristics using geographical information systems. The approach is to design user stories as artifacts that can be used for example by decision makers, urban planners or researchers to more easily observe and read territorial scenarios that can be to present in the evolution of land-use changes in a geographical area of interest. This represents an important advantage because it reduces reading complexity and facilitates analysis because combining agile methods with a simulation model provide a macroscopic and simplified view of a scenario of nature complex.	Dynamic systems; Geomatics; GIS; Agile methods	Rodr{\'i}guez Zamora, Ren{\'e}; Peraza Garz{\'o}n, {\'A}lvaro; Silva Hern{\'a}ndez, Iliana Amabely	International Congress of Telematics and Computing	https://doi.org/10.1007/978-3-030-33229-7_7		71--82	"""@InProceedings{10.1007/978-3-030-33229-7_7,
    author = ""Rodr{\'i}guez Zamora, Ren{\'e} and Peraza Garz{\'o}n, {\'A}lvaro and Silva Hern{\'a}ndez, Iliana Amabely"",
    editor = ""Mata-Rivera, Miguel Felix and Zagal-Flores, Roberto and Barr{\'i}a-Huidobro, Cristian"",
    title = ""A Dynamic System Model Using Agile Method Techniques Applied to Geomatics"",
    booktitle = ""Telematics and Computing"",
    year = ""2019"",
    publisher = ""Springer International Publishing"",
    address = ""Cham"",
    pages = ""71--82"",
    abstract = ""In this paper we propose the use of a model that represents a territory across a dynamic system. As part of the process in the definition of the model we used techniques adaptive software engineering, particularly construction tools associated with agile methods. The dynamic system modeling serves to simulate territorial scenarios and analyze their characteristics using geographical information systems. The approach is to design user stories as artifacts that can be used for example by decision makers, urban planners or researchers to more easily observe and read territorial scenarios that can be to present in the evolution of land-use changes in a geographical area of interest. This represents an important advantage because it reduces reading complexity and facilitates analysis because combining agile methods with a simulation model provide a macroscopic and simplified view of a scenario of nature complex."",
    isbn = ""978-3-030-33229-7""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		A Dynamic System Model Using Agile Method Techniques Applied to Geomatics	https://doi.org/10.1007/978-3-030-33229-7_7	Springer International Publishing	nan; References; Link
322	Behave	A Four-Leaf Clover Shape Methodology for Prosumer Service Developments	Software development in software development organizations is a complex process and may require knowledge management techniques. If the development is oriented to the creation of a prosumer platform for managing ambient intelligence scenarios, the development could be even more complex. In this paper we present a prosumer model based on our experiences developing prosumer platforms for ambient intelligence scenarios. The model we proposed is composed of a set of six roles (users, service consumers, prosumers, advanced prosumers, platform developers and domain experts), a lifecycle for the prosumer services with eight different states and a methodology where four of the mentioned roles cooperate to develop a service provisioning platform and to propose new add-ons to improve the platform functionality in order to create services in a concrete ambient intelligence scenario.		Mart{\'i}n, Diego; Alcarria, Ramon; S{\'a}nchez-Picot, Alvaro; Robles, Tom{\'a}s; S{\'a}nchez de Rivera, Diego	International Conference on Ubiquitous Computing and Ambient Intelligence	https://doi.org/10.1007/978-3-319-13102-3_78		488--495	"""@InProceedings{10.1007/978-3-319-13102-3_78,
    author = ""Mart{\'i}n, Diego and Alcarria, Ramon and S{\'a}nchez-Picot, Alvaro and Robles, Tom{\'a}s and S{\'a}nchez de Rivera, Diego"",
    editor = ""Herv{\'a}s, Ram{\'o}n and Lee, Sungyoung and Nugent, Chris and Bravo, Jos{\'e}"",
    title = ""A Four-Leaf Clover Shape Methodology for Prosumer Service Developments"",
    booktitle = ""Ubiquitous Computing and Ambient Intelligence. Personalisation and User Adapted Services"",
    year = ""2014"",
    publisher = ""Springer International Publishing"",
    address = ""Cham"",
    pages = ""488--495"",
    abstract = ""Software development in software development organizations is a complex process and may require knowledge management techniques. If the development is oriented to the creation of a prosumer platform for managing ambient intelligence scenarios, the development could be even more complex. In this paper we present a prosumer model based on our experiences developing prosumer platforms for ambient intelligence scenarios. The model we proposed is composed of a set of six roles (users, service consumers, prosumers, advanced prosumers, platform developers and domain experts), a lifecycle for the prosumer services with eight different states and a methodology where four of the mentioned roles cooperate to develop a service provisioning platform and to propose new add-ons to improve the platform functionality in order to create services in a concrete ambient intelligence scenario."",
    isbn = ""978-3-319-13102-3""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		A Four-Leaf Clover Shape Methodology for Prosumer Service Developments	https://doi.org/10.1007/978-3-319-13102-3_78	Springer International Publishing	nan; Keywords; References; Link
323	Behave	A Lightweight Semi-automated Acceptance Test-Driven Development Approach for Web Applications	Applying Acceptance Test Driven Development (ATDD) in the context of web applications is a difficult task due to the intricateness of existing tools/frameworks and, more in general, of the proposed approaches. In this work, we present a simple approach for developing web applications in ATDD mode, based on the usage of Screen Mockups and Selenium IDE.	Test Suite; User Story; Agile Development; Test Script; Real Industrial Case	Clerissi, Diego; Leotta, Maurizio; Reggio, Gianna; Ricca, Filippo	International Conference on Web Engineering	https://doi.org/10.1007/978-3-319-38791-8_55		593--597	"""@InProceedings{10.1007/978-3-319-38791-8_55,
    author = ""Clerissi, Diego and Leotta, Maurizio and Reggio, Gianna and Ricca, Filippo"",
    editor = ""Bozzon, Alessandro and Cudre-Maroux, Philippe and Pautasso, Cesare"",
    title = ""A Lightweight Semi-automated Acceptance Test-Driven Development Approach for Web Applications"",
    booktitle = ""Web Engineering"",
    year = ""2016"",
    publisher = ""Springer International Publishing"",
    address = ""Cham"",
    pages = ""593--597"",
    abstract = ""Applying Acceptance Test Driven Development (ATDD) in the context of web applications is a difficult task due to the intricateness of existing tools/frameworks and, more in general, of the proposed approaches. In this work, we present a simple approach for developing web applications in ATDD mode, based on the usage of Screen Mockups and Selenium IDE."",
    isbn = ""978-3-319-38791-8""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		A Lightweight Semi-automated Acceptance Test-Driven Development Approach for Web Applications	https://doi.org/10.1007/978-3-319-38791-8_55	Springer International Publishing	nan; References; Link
324	Behave	A Literature Review on Story Test Driven Development	This paper presents a literature review on story-test driven development. Our findings suggest that there are many lessons learned papers that provide anecdotal evidence about the benefits and issues related to the story test driven development. We categorized these findings into seven themes: cost, time, people, code design, testing tools, what to test and test automation. We analyzed research papers on story test driven development to find out how many of these anecdotal findings were critically examined by researchers and analyzed the gaps in between. The analysis can be used by researchers as a ground for further empirical investigation.	Story Test Driven Development; Executable Acceptance Test Driven Development; Requirements; Systematic Review; Testing; Empirical software engineering; Agile software development	Park, Shelly; Maurer, Frank	International Conference on Agile Software Development	https://doi.org/10.1007/978-3-642-13054-0_20		208--213	"""@InProceedings{10.1007/978-3-642-13054-0_20,
    author = ""Park, Shelly and Maurer, Frank"",
    editor = ""Sillitti, Alberto and Martin, Angela and Wang, Xiaofeng and Whitworth, Elizabeth"",
    title = ""A Literature Review on Story Test Driven Development"",
    booktitle = ""Agile Processes in Software Engineering and Extreme Programming"",
    year = ""2010"",
    publisher = ""Springer Berlin Heidelberg"",
    address = ""Berlin, Heidelberg"",
    pages = ""208--213"",
    abstract = ""This paper presents a literature review on story-test driven development. Our findings suggest that there are many lessons learned papers that provide anecdotal evidence about the benefits and issues related to the story test driven development. We categorized these findings into seven themes: cost, time, people, code design, testing tools, what to test and test automation. We analyzed research papers on story test driven development to find out how many of these anecdotal findings were critically examined by researchers and analyzed the gaps in between. The analysis can be used by researchers as a ground for further empirical investigation."",
    isbn = ""978-3-642-13054-0""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		A Literature Review on Story Test Driven Development	https://doi.org/10.1007/978-3-642-13054-0_20	Springer Berlin Heidelberg	nan; References; Link
325	Behave	A New Ontology-Based Approach for Construction of Domain Model	Domain model is one of the most important artefacts in software engineering. It can be built with the use of domain ontologies. The objective of the authors' research is to elaborate an effective approach to domain model construction based on knowledge extraction from existing ontologies. A significant element of the approach is knowledge extraction algorithm. In this paper, a modified, more flexible version of the extraction algorithm is presented. A comparison of the new algorithm with the old one is conducted based on a case study. Both algorithms produce similar results regarding quality measures. In contrast to the old algorithm, the new is parameterized and therefore can be applied in an incremental way what is a valuable feature.	Ontology; Knowledge acquisition; Conceptual modeling	Hnatkowska, Bogumi{\l}a; Huzar, Zbigniew; Tuzinkiewicz, Lech; Dubielewicz, Iwona	Asian Conference on Intelligent Information and Database Systems	https://doi.org/10.1007/978-3-319-54472-4_8		75--85	"""@InProceedings{10.1007/978-3-319-54472-4_8,
    author = ""Hnatkowska, Bogumi{\l}a and Huzar, Zbigniew and Tuzinkiewicz, Lech and Dubielewicz, Iwona"",
    editor = ""Nguyen, Ngoc Thanh and Tojo, Satoshi and Nguyen, Le Minh and Trawi{\'{n}}ski, Bogdan"",
    title = ""A New Ontology-Based Approach for Construction of Domain Model"",
    booktitle = ""Intelligent Information and Database Systems"",
    year = ""2017"",
    publisher = ""Springer International Publishing"",
    address = ""Cham"",
    pages = ""75--85"",
    abstract = ""Domain model is one of the most important artefacts in software engineering. It can be built with the use of domain ontologies. The objective of the authors' research is to elaborate an effective approach to domain model construction based on knowledge extraction from existing ontologies. A significant element of the approach is knowledge extraction algorithm. In this paper, a modified, more flexible version of the extraction algorithm is presented. A comparison of the new algorithm with the old one is conducted based on a case study. Both algorithms produce similar results regarding quality measures. In contrast to the old algorithm, the new is parameterized and therefore can be applied in an incremental way what is a valuable feature."",
    isbn = ""978-3-319-54472-4""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		A New Ontology-Based Approach for Construction of Domain Model	https://doi.org/10.1007/978-3-319-54472-4_8	Springer International Publishing	nan; References; Link
326	Behave	A scalable Cloud-based system for data-intensive spatial analysis	Advances in Cloud computing technology and the availability of affordable and easy to use Cloud services are enabling a multitude of scientific applications to use these resources as primary or secondary computing infrastructure. The urban and built environment research domain is one area that can benefit greatly from Cloud computing. The global population growth and increase in the size and population of cities raise many challenges for governments, planners and researchers alike. The Australian Urban Research Infrastructure Network (AURIN--http://www.aurin.org.au) project has been tasked with developing an advanced platform (e-Infrastructure) across Australia to tackle these challenges. The platform leverages large-scale Cloud resources to provide federated data access to, at present over 1100 data sets from major and often definitive government and industry data-rich organisations, and for scalable data processing and visualisation. The original AURIN tools were developed using the object modelling system (OMS) and supported integrated workflows to define and enact/re-enact scientific processes. More recently the work has evolved to focus more on delivery of a workbench offering a rich range of tools delivered through an extensible workflow environment. In this paper, we provide the background to AURIN including the scientific drivers that are shaping the work and the realisation of the Cloud-based AURIN environment. We focus in particular on the workflow environment and show how it seamlessly utilizes the Cloud for urban research processes focused especially on data-intensive spatial analysis. We illustrate the utilisation of this workflow environment across a range of case studies reflecting urban research activities.	Artificial Intelligence; e-Infrastructure; Urban research; Cloud computing; Geospatial systems; Spatial analysis	R. O. Sinnott; W. Voorsluys	International Journal on Software Tools for Technology Transfer	https://doi.org/10.1007/s10009-015-0398-6	"Hey, A.J., Trefethen, A.E.: The data Deluge: An e-science perspective (2003); citation_journal_title=Comm. ACM; citation_title=A view of cloud computing; citation_author=M Armbrust, A Fox, R Griffith, AD Joseph, R Katz, A Konwinski, G Lee, D Patterson, A Rabkin, I Stoica; citation_volume=53; citation_publication_date=2010; citation_pages=50-58; citation_doi=10.1145/1721654.1721672; citation_id=CR2; citation_journal_title=MIS Quart. Exec.; citation_title=Service-oriented architecture: Myths, realities, and a maturity model; citation_author=R Hirschheim, R Welke, A Schwarz; citation_volume=9; citation_issue=1; citation_publication_date=2010; citation_pages=37-48; citation_id=CR3; citation_journal_title=Science; citation_title=Cyberinfrastructure for e-Science; citation_author=AJ Hey, AE Trefethen; citation_volume=308; citation_publication_date=2005; citation_pages=817-821; citation_doi=10.1126/science.1110410; citation_id=CR4; citation_journal_title=Ecol. Model.; citation_title=An architecture for developing service-oriented and component-based environmental models; citation_author=P Papajorgji, HW Beck, JL Braga; citation_volume=179; citation_publication_date=2004; citation_pages=61-76; citation_doi=10.1016/j.ecolmodel.2004.05.013; citation_id=CR5; citation_journal_title=Comp. Physic. Comm.; citation_title=The worldwide LHC computing grid (worldwide LCG); citation_author=J Shiers; citation_volume=177; citation_issue=1; citation_publication_date=2007; citation_pages=219-223; citation_doi=10.1016/j.cpc.2007.02.021; citation_id=CR6; citation_journal_title=Nature; citation_title=Biology: the big challenges of big data; citation_author=V Marx; citation_volume=498; citation_issue=7453; citation_publication_date=2013; citation_pages=255-260; citation_doi=10.1038/498255a; citation_id=CR7; Hoffa, C., Mehta, G., Freeman, T., Deelman, E., Keahey, K., Berriman, B., Good, J.: On the use of cloud computing for scientific workflows. In: eScience, 2008. eScience'08. IEEE Fourth International Conference on (pp. 640-645) [IEEE (2008, December)]; Sinnott, R.O., Galang, G., Tomko, M., Stimson, R.: Towards an e-Infrastructure for Urban Research Across Australia, IEEE e-Science Conference, Stockholm, Sweden (December 2011); Stimson, R., Tomko, M., Sinnott, R.O.: The Australian Urban Research Infrastructure Network (AURIN) Initiative: A Platform Offering Data and Tools for Urban and Built Environment Researchers across Australia, State of Australian Cities, Melbourne, Australia (November 2011); Pettit, C., Stimson, R., Barton, J., Goldie, X., Sinnott, R.O., Kvan, T.: The Australian Urban Intelligence Network supporting Smart Cities, to appear in CUPUM 2015 Conference book on Smart Cities and Planning Support Systems, eds: Geertman, S., Stillwell, J., Ferreira, J., Goodspeed, R. (February 2015); Sinnott, R.O., Bayliss, C., Galang, G., Greenwood, P., Koetsier, G., Mannix, D., Morandini, L., Nino-Ruiz, M., Pettit, C., Tomko, M., Sarwar, M., Stimson, R., Voorsluys, W., Widjaja, I.: A Data-driven Urban Research Environment for Australia, IEEE e-Science Conference, Chicago USA, (October 2012); citation_journal_title=Genome Biol.; citation_title=Galaxy: a comprehensive approach for supporting accessible, reproducible, and transparent computational research in the life sciences; citation_author=J Goecks, A Nekrutenko, J Taylor; citation_volume=11; citation_issue=8; citation_publication_date=2010; citation_pages=R86; citation_doi=10.1186/gb-2010-11-8-r86; citation_id=CR13; Javadi, B., Tomko, M., Sinnott, R.O.: Decentralised Orchestration of Data-centric Workflows in Cloud Environments. Future Gene. Comp. Syst. (2013). doi:
                    10.1016/j.future.2013.01.008; citation_journal_title=Sci. Program.; citation_title=Pegasus: a framework for mapping complex scientific workflows onto distributed systems; citation_author=E Deelman, G Singh, M Su, J Blythe, Y Gil, C Kesselman, D Katz; citation_volume=13; citation_issue=3; citation_publication_date=2005; citation_pages=219-237; citation_id=CR15; Wolstencroft, K., Haines, R., Fellows, D., Williams, A., Withers, D., Owen, S., Goble, C.: The Taverna workflow suite: designing and executing workflows of Web Services on the desktop, web or in the cloud. Nucleic acids research, gkt328 (2013); Barker, A., Van Hemert, J.: Scientific workflow: a survey and research directions. In Parallel Processing and Applied Mathematics (pp. 746-753). Springer Berlin Heidelberg (2008); Sinnott, R.O., Chhetri, P., Gong, Y., Macaulay, A., Voorsluys, W.: Privacy-preserving Data Linkage through Blind Geo-spatial Data Aggregation, The IEEE International Symposium on Big Data Security on Cloud (BigDataSecurity 2015), New York, USA, (August 2015); Sinnott, R.O., Bayliss, C., Bromage, A., Galang, G., Grazioli, G., Greenwood, P., Macauley, G., Morandini, L., Nino-Ruiz, M., Nogoorani, G., Pettit, C., Tomko, M., Sarwar, M., Stimson, R., Voorsluys, W., Widjaja, I.: The Australian Urban Research Gateway. Journal of Concurrency and Computation: Practice and Experience (April 2014). doi:
                    10.1002/cpe.3282; Widjaja, I., Russo, P., Pettit, C., Sinnott, R.O., Tomko, M.: Modeling Coordinated Multiple Views of Heterogeneous Data Cubes for Urban Visual Analytics, International Journal of Digital Earth (October 2013)"			Excluded	Excluded	new_screen			2	Springer Link		A scalable Cloud-based system for data-intensive spatial analysis	https://doi.org/10.1007/s10009-015-0398-6	Springer Link	nan; Pages; Year; Bibtex; Link
327	Behave	A Survey on Agile Practices and Challenges of a Global Software Development Team	The Agile Manifesto describes that the most efficient and effective method of conveying information to and within a development team is through face-to-face conversation. However that is not always possible when teams are working in a Global Software Development (GSD) environment. Based on this scenario, this study presents an exploratory data analysis using survey results to explore agile practices and challenges of a global software development team that uses Scaled Agile Framework (SAFe), which is designed for the need of larger organizations. The goal of this study is to understand the team's level of knowledge in some agile practices and which types of communication are usually prioritized. As in GSD environments team members are geographically spread across multiple regions and time zones, we aim to identify challenges this environment can present. As a result of this exploratory analysis, it has been identified that communication is one of main challenges in GSD environment and that phone calls are considered to be the most efficient type of communication. Additionally, we have also identified that professionals have different levels of confidence in Agile practices and concluded that knowledge transfers among the professionals could help those team members that are not confident in some agile practices to increase their overall confidence and knowledge.	Agile methodologies; Survey; Global Software Development; SAFe	Lautert, Tatiane; Neto, Adolfo Gustavo Serra Seca; Kozievitch, N{\'a}dia P.	Brazilian Workshop on Agile Methods	https://doi.org/10.1007/978-3-030-36701-5_11		128--143	"""@InProceedings{10.1007/978-3-030-36701-5_11,
    author = ""Lautert, Tatiane and Neto, Adolfo Gustavo Serra Seca and Kozievitch, N{\'a}dia P."",
    editor = ""Meirelles, Paulo and Nelson, Maria Augusta and Rocha, Carla"",
    title = ""A Survey on Agile Practices and Challenges of a Global Software Development Team"",
    booktitle = ""Agile Methods"",
    year = ""2019"",
    publisher = ""Springer International Publishing"",
    address = ""Cham"",
    pages = ""128--143"",
    abstract = ""The Agile Manifesto describes that the most efficient and effective method of conveying information to and within a development team is through face-to-face conversation. However that is not always possible when teams are working in a Global Software Development (GSD) environment. Based on this scenario, this study presents an exploratory data analysis using survey results to explore agile practices and challenges of a global software development team that uses Scaled Agile Framework (SAFe), which is designed for the need of larger organizations. The goal of this study is to understand the team's level of knowledge in some agile practices and which types of communication are usually prioritized. As in GSD environments team members are geographically spread across multiple regions and time zones, we aim to identify challenges this environment can present. As a result of this exploratory analysis, it has been identified that communication is one of main challenges in GSD environment and that phone calls are considered to be the most efficient type of communication. Additionally, we have also identified that professionals have different levels of confidence in Agile practices and concluded that knowledge transfers among the professionals could help those team members that are not confident in some agile practices to increase their overall confidence and knowledge."",
    isbn = ""978-3-030-36701-5""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		A Survey on Agile Practices and Challenges of a Global Software Development Team	https://doi.org/10.1007/978-3-030-36701-5_11	Springer International Publishing	nan; References; Link
328	Behave	A Systematic Approach to Automatically Derive Test Cases from Use Cases Specified in Restricted Natural Languages	In many domains, such as avionics, oil and gas, and maritime, a common practice is to derive and execute test cases manually from requirements, where both requirements and test cases are specified in natural language (NL) by domain experts. The manual execution of test cases is largely dependent on the domain experts who wrote the test cases. The process of manual writing of requirements and test cases introduces ambiguity in their description and, in addition, test cases may not be effective since they may not be derived by systematically applying coverage criteria. In this paper, we report on a systematic approach to support automatic derivation of manually executable test cases from use cases. Both use cases and test cases are specified in restricted NLs along with carefully-defined templates implemented in a tool. We evaluate our approach with four case studies (in total having 30 use cases and 579 steps from flows of events), two of which are industrial case studies from the oil/gas and avionics domains. Results show that our tool was able to correctly process all the case studies and systematically (by following carefully-defined structure coverage criteria) generate 30 TCSs and 389 test cases. Moreover, our approach allows defining different test coverage criteria on requirements other than the one already implemented in our tool.		Zhang, Man; Yue, Tao; Ali, Shaukat; Zhang, Huihui; Wu, Ji	International Conference on System Analysis and Modeling	https://doi.org/10.1007/978-3-319-11743-0_10		142--157	"""@InProceedings{10.1007/978-3-319-11743-0_10,
    author = ""Zhang, Man and Yue, Tao and Ali, Shaukat and Zhang, Huihui and Wu, Ji"",
    editor = ""Amyot, Daniel and Fonseca i Casas, Pau and Mussbacher, Gunter"",
    title = ""A Systematic Approach to Automatically Derive Test Cases from Use Cases Specified in Restricted Natural Languages"",
    booktitle = ""System Analysis and Modeling: Models and Reusability"",
    year = ""2014"",
    publisher = ""Springer International Publishing"",
    address = ""Cham"",
    pages = ""142--157"",
    abstract = ""In many domains, such as avionics, oil and gas, and maritime, a common practice is to derive and execute test cases manually from requirements, where both requirements and test cases are specified in natural language (NL) by domain experts. The manual execution of test cases is largely dependent on the domain experts who wrote the test cases. The process of manual writing of requirements and test cases introduces ambiguity in their description and, in addition, test cases may not be effective since they may not be derived by systematically applying coverage criteria. In this paper, we report on a systematic approach to support automatic derivation of manually executable test cases from use cases. Both use cases and test cases are specified in restricted NLs along with carefully-defined templates implemented in a tool. We evaluate our approach with four case studies (in total having 30 use cases and 579 steps from flows of events), two of which are industrial case studies from the oil/gas and avionics domains. Results show that our tool was able to correctly process all the case studies and systematically (by following carefully-defined structure coverage criteria) generate 30 TCSs and 389 test cases. Moreover, our approach allows defining different test coverage criteria on requirements other than the one already implemented in our tool."",
    isbn = ""978-3-319-11743-0""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		A Systematic Approach to Automatically Derive Test Cases from Use Cases Specified in Restricted Natural Languages	https://doi.org/10.1007/978-3-319-11743-0_10	Springer International Publishing	nan; Keywords; References; Link
329	Behave	A Taxonomy on Continuous Integration and Deployment Tools and Frameworks	Software development has become a critical activity in modern companies. Competitive advantage and customer satisfaction depend strongly on the efficient delivery of new software capabilities. This requires the application of agile methodologies and the use of tools and frameworks which allow a fast and reliable integration and evolution of software systems. Currently, there exist several tools which are used for different purposes all along the software development process. Therefore, it is important for researchers on software engineering and developers to have a wide overview and understanding of the capabilities and limitations of current technology. This paper presents an insightful study of the state of the art on continuous integration and deployment tools. It depicts a taxonomy of current approaches based on their usability during the software development process. Furthermore, it discusses the current challenges and propose a set of study opportunities which could lead further research in this field.		Cano, Patricia Ortegon; Mejia, Ayrton Mondragon; De Gyves Avila, Silvana; Dominguez, Gloria Eva Zagal; Moreno, Ismael Solis; Lepe, Arianne Navarro	International Conference on Software Process Improvement	https://doi.org/10.1007/978-3-030-63329-5_22		323--336	"""@InProceedings{10.1007/978-3-030-63329-5_22,
    author = ""Cano, Patricia Ortegon and Mejia, Ayrton Mondragon and De Gyves Avila, Silvana and Dominguez, Gloria Eva Zagal and Moreno, Ismael Solis and Lepe, Arianne Navarro"",
    editor = ""Mejia, Jezreel and Mu{\\textasciitilde {n}}oz, Mirna and Rocha, {\'A}lvaro and Qui{\\textasciitilde {n}}onez, Yadira"",
    title = ""A Taxonomy on Continuous Integration and Deployment Tools and Frameworks"",
    booktitle = ""New Perspectives in Software Engineering"",
    year = ""2021"",
    publisher = ""Springer International Publishing"",
    address = ""Cham"",
    pages = ""323--336"",
    abstract = ""Software development has become a critical activity in modern companies. Competitive advantage and customer satisfaction depend strongly on the efficient delivery of new software capabilities. This requires the application of agile methodologies and the use of tools and frameworks which allow a fast and reliable integration and evolution of software systems. Currently, there exist several tools which are used for different purposes all along the software development process. Therefore, it is important for researchers on software engineering and developers to have a wide overview and understanding of the capabilities and limitations of current technology. This paper presents an insightful study of the state of the art on continuous integration and deployment tools. It depicts a taxonomy of current approaches based on their usability during the software development process. Furthermore, it discusses the current challenges and propose a set of study opportunities which could lead further research in this field."",
    isbn = ""978-3-030-63329-5""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		A Taxonomy on Continuous Integration and Deployment Tools and Frameworks	https://doi.org/10.1007/978-3-030-63329-5_22	Springer International Publishing	nan; Keywords; References; Link
330	Behave	A Test Specification Language for Information Systems Based on Data Entities, Use Cases and State Machines	Testing is one of the most important activities to ensure the quality of a software system. This paper proposes and discusses the TSL (Test Specification Language) that adopts a model-based testing approach for both human-readable and computer-executable specifications of test cases. TSL is strongly inspired on the grammar, nomenclature and writing style as defined by the RSLingo RSL, which is a rigorous requirements specification language. Both RSL and TSL are controlled natural languages that share common concepts such as data entities, use cases and state machines. However, by applying black-box functional testing design techniques, TSL includes and supports four complementary testing strategies, namely: domain analysis testing; use case tests; state machine testing; and acceptance criteria. This paper focuses on the first three testing strategies of TSL. Finally, a simple but effective case study illustrates the overall approach and supports the discussion.	Test Specification Language (TSL); Test case specification; Model based Testing (MBT); Test case generation	da Silva, Alberto Rodrigues; Paiva, Ana C. R.; da Silva, Valter E. R.	International Conference on Model-Driven Engineering and Software Development	https://doi.org/10.1007/978-3-030-11030-7_20		455--474	"""@InProceedings{10.1007/978-3-030-11030-7_20,
    author = ""da Silva, Alberto Rodrigues and Paiva, Ana C. R. and da Silva, Valter E. R."",
    editor = ""Hammoudi, Slimane and Pires, Lu{\'i}s Ferreira and Selic, Bran"",
    title = ""A Test Specification Language for Information Systems Based on Data Entities, Use Cases and State Machines"",
    booktitle = ""Model-Driven Engineering and Software Development"",
    year = ""2019"",
    publisher = ""Springer International Publishing"",
    address = ""Cham"",
    pages = ""455--474"",
    abstract = ""Testing is one of the most important activities to ensure the quality of a software system. This paper proposes and discusses the TSL (Test Specification Language) that adopts a model-based testing approach for both human-readable and computer-executable specifications of test cases. TSL is strongly inspired on the grammar, nomenclature and writing style as defined by the RSLingo RSL, which is a rigorous requirements specification language. Both RSL and TSL are controlled natural languages that share common concepts such as data entities, use cases and state machines. However, by applying black-box functional testing design techniques, TSL includes and supports four complementary testing strategies, namely: domain analysis testing; use case tests; state machine testing; and acceptance criteria. This paper focuses on the first three testing strategies of TSL. Finally, a simple but effective case study illustrates the overall approach and supports the discussion."",
    isbn = ""978-3-030-11030-7""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		A Test Specification Language for Information Systems Based on Data Entities, Use Cases and State Machines	https://doi.org/10.1007/978-3-030-11030-7_20	Springer International Publishing	nan; References; Link
331	Behave	A Textual Domain Specific Language for User Interface Modelling	User interface development is one of the hardest parts of the software application development. It could be made more efficient by introducing model-driven development approaches and user interface modelling. This paper introduces a textual domain specific language and a corresponding meta-model for describing user interaction using abstract UI patterns that can be transformed into more platform specific UI patterns during application generation. The language also follows use case description format and provides possibilities to add free-form documenting context to the formal constructs used in the language, making the models described in the language suitable both for model driven engineering and requirements elicitation.	User interface modelling; Model driven development; Textual domain specific languages; Domain specific languages; User interface patterns	Karu, Mart	Emerging Trends in Computing, Informatics, Systems Sciences, and Engineering	https://doi.org/10.1007/978-1-4614-3558-7_84		985--996	"""@InProceedings{10.1007/978-1-4614-3558-7_84,
    author = ""Karu, Mart"",
    editor = ""Sobh, Tarek and Elleithy, Khaled"",
    title = ""A Textual Domain Specific Language for User Interface Modelling"",
    booktitle = ""Emerging Trends in Computing, Informatics, Systems Sciences, and Engineering"",
    year = ""2013"",
    publisher = ""Springer New York"",
    address = ""New York, NY"",
    pages = ""985--996"",
    abstract = ""User interface development is one of the hardest parts of the software application development. It could be made more efficient by introducing model-driven development approaches and user interface modelling. This paper introduces a textual domain specific language and a corresponding meta-model for describing user interaction using abstract UI patterns that can be transformed into more platform specific UI patterns during application generation. The language also follows use case description format and provides possibilities to add free-form documenting context to the formal constructs used in the language, making the models described in the language suitable both for model driven engineering and requirements elicitation."",
    isbn = ""978-1-4614-3558-7""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		A Textual Domain Specific Language for User Interface Modelling	https://doi.org/10.1007/978-1-4614-3558-7_84	Springer New York	nan; References; Link
332	Behave	A Very Brief History of Test-Driven Development	My intention in writing this chapter is not to copy and paste clich{\'e}s from blogs (the following excerpt aside) or pretend I was part of the historic events (like the agile manifesto or Extreme Programming activities) that led to the creation of test-driven development as a methodology -- trust me, I'm not that old.	General books on testing	Qiu, Juntao	Test-Driven Development with React	https://doi.org/10.1007/978-1-4842-6972-5_1		1--13	"""@Inbook{Qiu2021,
    author = ""Qiu, Juntao"",
    title = ""A Very Brief History of Test-Driven Development"",
    bookTitle = ""Test-Driven Development with React: Apply Test-Driven Development in Your Applications"",
    year = ""2021"",
    publisher = ""Apress"",
    address = ""Berkeley, CA"",
    pages = ""1--13"",
    abstract = ""My intention in writing this chapter is not to copy and paste clich{\'e}s from blogs (the following excerpt aside) or pretend I was part of the historic events (like the agile manifesto or Extreme Programming activities) that led to the creation of test-driven development as a methodology -- trust me, I'm not that old."",
    isbn = ""978-1-4842-6972-5"",
    doi = ""10.1007/978-1-4842-6972-5\_1"",
    url = ""https://doi.org/10.1007/978-1-4842-6972-5\_1""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		A Very Brief History of Test-Driven Development	https://doi.org/10.1007/978-1-4842-6972-5_1	Apress	nan; Keywords; References; Link
333	Behave	Lean-agile acceptance test-driven development:better software through collaboration by Ken Pugh	No abstract available.		Gary Downs	ACM SIGSOFT Software Engineering Notes	https://doi.org/10.1145/1988997.1989006				Excluded	Excluded	new_screen			2	ACM		Acceptance Test Driven Development	https://dl.acm.org/doi/10.1145/1988997.1989006	Association for Computing Machinery	nan; Keywords; References; Pages; Year; Bibtex
334	Behave	Acceptance tests for validating ARIA requirements in widgets	Accessibility refers to a quality requirement for web applications. However, current accessibility automatic evaluation tools cannot evaluate dynamic generated content that characterizes Ajax applications and RIAs. In this context, this paper describes an approach for evaluating Accessible Rich Internet Applications (ARIA) requirements, by using acceptance tests. The authors implemented a set of disabled user interaction scenarios as acceptance tests in order to verify keyboard accessibility in RIA and automatically evaluate ARIA conformance in widgets. The inclusion of disabled user interaction scenarios in the evaluation process is necessary to analyse ARIA requirements since dynamic changes are accommodated in the DOM structure. Two evaluation tool prototypes were developed and validated in separate case studies. The results show evidence that the proposed evaluation approach is capable of evaluating ARIA conformance in RIA widgets.	Artificial Intelligence; Web accessibility; ARIA; Accessible Rich Internet Applications; ARIA evaluation	Willian Massami Watanabe; Renata P. M. Fortes; Ana Luiza Dias	Universal Access in the Information Society	https://doi.org/10.1007/s10209-015-0437-9	"Araujo, B.C., Rocha, A.C., Xavier, A., Muniz, A.I., Garcia, F.P.: Web-based tool for automatic acceptance test execution and scripting for programmers and customers. In: Proceedings of the 2007 Euro American Conference on Telematics and Information Systems, EATIS '07, vol. 1, pp. 56:1-56:4. ACM, New York, NY (2007). doi:
https://doi.org/10.1145/1352694.1352752; Borodin, Y., Bigham, J.P., Dausch, G., Ramakrishnan, I.V.: More than meets the eye: a survey of screen-reader browsing strategies. In: Proceedings of the 2010 International Cross Disciplinary Conference on Web Accessibility (W4A), W4A '10, vol. 1, pp. 13:1-13:10. ACM, New York, NY, USA (2010). doi:
https://doi.org/10.1145/1805986.1806005; Brajnik, G.: Beyond conformance: the role of accessibility evaluation methods. In: Web Information Systems Engineering--WISE 2008 Workshops, Lecture Notes in Computer Science, vol. 5176, pp. 63-80. Springer Berlin/Heidelberg (2008). doi:
https://doi.org/10.1007/978-3-540-85200-1_9

. 
http://www.springerlink.com/content/p3l7030k62j65029/; Brajnik, G., Yesilada, Y., Harper, S.: Testability and validity of WCAG 2.0: the expertise effect. In: Proceedings of the 12th international ACM SIGACCESS Conference on Computers and Accessibility, ASSETS '10, vol. 1, pp. 43-50. ACM, New York, NY (2010). doi:
https://doi.org/10.1145/1878803.1878813; Cannizzo, F., Clutton, R., Ramesh, R.: Pushing the boundaries of testing and continuous integration. In: Proceedings of the Agile 2008, pp. 501-505. IEEE Computer Society, Washington, DC, USA (2008). doi:
https://doi.org/10.1109/Agile.2008.31

. 
http://dl.acm.org/citation.cfm?id=1443221.1443547; citation_journal_title=World Wide Web; citation_title=Widget identification: A high-level approach to accessibility; citation_author=A Chen, S Harper, D Lunn, A Brown; citation_volume=16; citation_issue=1; citation_publication_date=2013; citation_pages=73-89; citation_doi=10.1007/s11280-012-0156-6; citation_id=CR6; Cooper, M.: Accessibility of emerging rich web technologies: web 2.0 and the semantic web. In: Proceedings of the 2007 International Cross-Disciplinary Conference on Web Accessibility (W4A), W4A '07, vol. 1, pp. 93-98. ACM, New York, NY (2007). doi:
https://doi.org/10.1145/1243441.1243463; citation_journal_title=Advances in Engineering Software; citation_title=The design of RIA accessibility evaluation tool; citation_author=Iyad Abu Doush, Faisal Alkhateeb, Eslam Al Maghayreh, Mohammed Azmi Al-Betar; citation_volume=57; citation_publication_date=2013; citation_pages=1-7; citation_doi=10.1016/j.advengsoft.2012.11.004; citation_id=CR8; Fernandes, N., Batista, A.S., Costa, D., Duarte, C., Carrico, L.: Three web accessibility evaluation perspectives for RIA. In: Proceedings of the 10th International Cross-Disciplinary Conference on Web Accessibility, W4A '13, vol. 1, pp. 12:1-12:9. ACM, New York, NY, USA (2013). doi:
https://doi.org/10.1145/2461121.2461122; Fernandes, N., Costa, D., Neves, S., Duarte, C., Carrico, L.: Evaluating the accessibility of rich internet applications. In: Proceedings of the International Cross-Disciplinary Conference on Web Accessibility, W4A '12, vol. 1, pp. 13:1-13:4. ACM, New York, NY, USA (2012). doi:
https://doi.org/10.1145/2207016.2207019; Fernandes, N., Lopes, R., Carrico, L.: On web accessibility evaluation environments. In: Proceedings of the International Cross-Disciplinary Conference on Web Accessibility, W4A '11, vol. 1, pp. 4:1-4:10. ACM, New York, NY, USA (2011). doi:
https://doi.org/10.1145/1969289.1969295; Fowler, M., Foemmel, M.: Continuous integration, 
http://www.martinfowler.com/articles/continuousIntegration.html

 (2005); Freire, A.P.: Disabled people and the web: user-based measurement of accessibility. Ph.D. thesis, University of York, Department of Computer Science, Submitted for the degree of Doctor of Philosophy, York, England (2012); Freire, A.P., Fortes, R.P.M., Turine, M.A.S., Paiva, D.M.B.: An evaluation of web accessibility metrics based on their attributes. In: SIGDOC '08: Proceedings of the 26th Annual ACM International Conference on Design of Communication, vol. 1, pp. 73-80. ACM, New York, NY, USA (2008). doi:
https://doi.org/10.1145/1456536.1456551; Freire, A.P., Goularte, R., Fortes, R.P.M.: Techniques for developing more accessible web applications: a survey towards a process classification. In: SIGDOC '07: Proceedings of the 25th Annual ACM International Conference on Design of Communication, vol. 1, pp. 162-169. ACM, New York, NY, USA (2007). doi:
https://doi.org/10.1145/1297144.1297177; Freire, A.P., Russo, C.M., Fortes, R.P.M.: A survey on the accessibility awareness of people involved in web development projects in Brazil. In: W4A '08: Proceedings of the 2008 International Cross-Disciplinary Conference on Web Accessibility (W4A), vol. 1, pp. 87-96. ACM, New York, NY, USA (2008). doi:
https://doi.org/10.1145/1368044.1368064; Gehtland, J., Almaer, D., Galbraith, B.: Pragmatic Ajax: A Web 2.0 Primer. Pragmatic Bookshelf (2006); Gibson, B.: Enabling an accessible web 2.0. In: Proceedings of the 2007 International Cross-Disciplinary Conference on Web Accessibility (W4A), W4A '07, vol. 1, pp. 1-6. ACM, New York, NY, USA (2007). doi:
https://doi.org/10.1145/1243441.1243442; Henry, S.L., Grossnickle, M.: Accessibility in the User-Centered Design Process. Georgia Tech Research Corporation, Atlanta, Georgia, USA (2004). 
http://www.uaiaccess.com/accessucd

(On-line book); Hsia, P., Gao, J., Samuel, J., Kung, D., Toyoshima, Y., Chen, C.: Behavior-based acceptance testing of software systems: a formal scenario approach. In: Computer Software and Applications Conference, 1994. COMPSAC 94. Proceedings, Eighteenth Annual International, pp. 293 -298 (1994). doi:
https://doi.org/10.1109/CMPSAC.1994.342789; IEEE, I.o.E.a.E.E.: IEEE standard for software verification and validation plans. IEEE Std 1012-1986, pp. I (1986). doi:
https://doi.org/10.1109/IEEESTD.1986.79647; Kelly, B., Sloan, D., Brown, S., Seale, J., Petrie, H., Lauke, P., Ball, S.: Accessibility 2.0: people, policies and processes. In: W4A '07: Proceedings of the 2007 International Cross-Disciplinary Conference on Web Accessibility (W4A), pp. 138-147. ACM, New York, NY, USA (2007). doi:
https://doi.org/10.1145/1243441.1243471; Kelly, B., Sloan, D., Phipps, L., Petrie, H., Hamilton, F.: Forcing standardization or accommodating diversity? A framework for applying the wcag in the real world. In: W4A '05: Proceedings of the 2005 International Cross-Disciplinary Workshop on Web Accessibility (W4A), pp. 46-54. ACM, New York, NY, USA (2005). doi:
https://doi.org/10.1145/1061811.1061820; citation_title=Research Methods in Human-Computer Interaction; citation_publication_date=2010; citation_id=CR24; citation_author=J Lazar; citation_author=JH Feng; citation_author=H Hochheiser; citation_publisher=Wiley; citation_journal_title=Software Quality Control; citation_author=HARETON K.N. LEUNG, PETER W.L. WONG; citation_volume=6; citation_issue=2; citation_publication_date=1997; citation_pages=137-149; citation_doi=10.1023/A:1018503800709; citation_id=CR25; citation_title=Usability Inspection Methods; citation_publication_date=1994; citation_id=CR26; citation_publisher=Wiley; North, D.: Introducing BDD (2006). 
http://dannorth.net/introducing-bdd/; Reid, L.G., Snow-Weaver, A.: WCAG 2.0: a web accessibility standard for the evolving web. In: W4A '08: Proceedings of the 2008 International Cross-Disciplinary Conference on Web Accessibility (W4A), pp. 109-115. ACM, New York, NY, USA (2008). doi:
https://doi.org/10.1145/1368044.1368069; citation_title=The Universal Access Handbook; citation_publication_date=2009; citation_id=CR29; citation_author=C Stephanidis; citation_publisher=CRC Press Inc; Tateishi, T., Miyashita, H., Naoshi, T., Saito, S., Ono, K.: DHTML accessibility checking based on static javascript analysis. In: Stephanidis, C. (ed.) Universal Access in Human-Computer Interaction. Applications and Services, Lecture Notes in Computer Science, vol. 4556, pp. 167-176. Springer, Berlin(2007). doi:
https://doi.org/10.1007/978-3-540-73283-9_20

. 
http://dx.doi.org/10.1007/978-3-540-73283-9_20; Thiessen, P., Hockema, S.: WAI-ARIA live regions: eBuddy IM as a case example. In: Proceedings of the 2010 International Cross Disciplinary Conference on Web Accessibility (W4A), W4A '10, vol. 1, pp. 33:1-33:9. ACM, New York, NY (2010). doi:
https://doi.org/10.1145/1805986.1806030; Velasco, C.A., Denev, D., Stegemann, D., Mohamad, Y.: A web compliance engineering framework to support the development of accessible rich internet applications. In: W4A '08: Proceedings of the 2008 International Cross-Disciplinary Conference on Web Accessibility (W4A), pp. 45-49. ACM, New York, NY (2008). doi:
https://doi.org/10.1145/1368044.1368054; Vigo, M., Arrue, M., Brajnik, G., Lomuscio, R., Abascal, J.: Quantitative metrics for measuring web accessibility. In: W4A '07: Proceedings of the 2007 International Cross-Disciplinary Conference on Web Accessibility (W4A), pp. 99-107. ACM, New York, NY, USA (2007). doi:
https://doi.org/10.1145/1243441.1243465; W3C: Web content accessibility guidelines 1.0. W3C Recommendation (1999). 
http://www.w3.org/TR/WCAG10/; W3C: Web content accessibility guidelines 2.0. W3C Recommendation (2008). 
http://www.w3.org/TR/WCAG20/; W3C: WAI-ARIA 1.0 authoring practices--an author's guide to understanding and implementing accessible rich internet applications. W3C Working Draft (2013). 
http://www.w3.org/TR/wai-aria-practices/; W3C: Accessible rich internet applications--version 1.0. W3C Recommendation (2014). 
http://www.w3.org/TR/wai-aria/; Watanabe, T.: Experimental evaluation of usability and accessibility of heading elements. In: W4A '07: Proceedings of the 2007 International Cross-Disciplinary Conference on Web Accessibility (W4A), pp. 157-164. ACM, New York, NY (2007). doi:
https://doi.org/10.1145/1243441.1243473; Watanabe, W.M., Neto, D.F., Bittar, T.J., Fortes, R.P.M.: WCAG conformance approach based on model-driven development and WebML. In: Proceedings of the 28th ACM International Conference on Design of Communication, SIGDOC '10, vol. 1, pp. 167-174. ACM, New York, NY (2010). doi:
10.1145/1878450.1878479"			Excluded	Excluded	new_screen			2	Springer Link		Acceptance tests for validating ARIA requirements in widgets	https://doi.org/10.1007/s10209-015-0437-9	Springer Link	nan; Pages; Year; Bibtex; Link
335	Behave	Adopting Agile Software Development Combined with User-Centered Design and Lean Startup: A Systematic Literature Review on Maturity Models	The use of Agile in the software development industry in the past two decades revealed that it is lackluster in some aspects, such as in guaranteeing user involvement and assuring that the right software is being built. There are reports that combining Agile with Lean Startup and User-Centered Design (UCD) helps in overcoming these shortcomings while also yielding several other benefits. However, there is not much documentation on how to use this ``combined approach'' and adapting existing organizations to use it is a challenge in of itself, in which the use of an instrument to guide or assess such transformations is typically pivotal to their success. As such, in this paper we seek to identify maturity models that assess the use of Agile, Lean Startup, and UCD. We conducted a systematic literature review of maturity models for these three methods published between 2001 and 2020. We characterized the maturity models and determined how they see maturity, how they are applied, and how they were evaluated. As an extended version of a previous paper, we augmented our analysis criteria and further classified the models in how they interpret maturity and what strategy they suggest when undergoing an improvement process, in addition to providing new insight on various aspects of the models. We found 35 maturity models, of which 23 were for Agile, 5 for Lean thinking, 5 for UCD, and 2 for Agile and UCD combined. No models for the combination of the three methods were found (nor for Lean Startup), as expected due to the novelty of the approach. Existing models mostly focus on practice adoption and acquiring continuous improvement capabilities, and are typically developed with a specific context in mind. We also note a lack of proper evaluation procedures being conducted on the majority of models, which could be due to the lack of well-established maturity model development methods and guidelines.	Systematic literature review; Maturity model; Agile software development; Lean startup; User-Centered Design	Zorzetti, Maximilian; Moralles, Cassiano; Salerno, Larissa; Pereira, Eliana; Marczak, Sabrina; Bastos, Ricardo	International Conference on Enterprise Information Systems	https://doi.org/10.1007/978-3-030-75418-1_24		517--541	"""@InProceedings{10.1007/978-3-030-75418-1_24,
    author = ""Zorzetti, Maximilian and Moralles, Cassiano and Salerno, Larissa and Pereira, Eliana and Marczak, Sabrina and Bastos, Ricardo"",
    editor = ""Filipe, Joaquim and {\'{S}}mia{\l}ek, Micha{\l} and Brodsky, Alexander and Hammoudi, Slimane"",
    title = ""Adopting Agile Software Development Combined with User-Centered Design and Lean Startup: A Systematic Literature Review on Maturity Models"",
    booktitle = ""Enterprise Information Systems"",
    year = ""2021"",
    publisher = ""Springer International Publishing"",
    address = ""Cham"",
    pages = ""517--541"",
    abstract = ""The use of Agile in the software development industry in the past two decades revealed that it is lackluster in some aspects, such as in guaranteeing user involvement and assuring that the right software is being built. There are reports that combining Agile with Lean Startup and User-Centered Design (UCD) helps in overcoming these shortcomings while also yielding several other benefits. However, there is not much documentation on how to use this ``combined approach'' and adapting existing organizations to use it is a challenge in of itself, in which the use of an instrument to guide or assess such transformations is typically pivotal to their success. As such, in this paper we seek to identify maturity models that assess the use of Agile, Lean Startup, and UCD. We conducted a systematic literature review of maturity models for these three methods published between 2001 and 2020. We characterized the maturity models and determined how they see maturity, how they are applied, and how they were evaluated. As an extended version of a previous paper, we augmented our analysis criteria and further classified the models in how they interpret maturity and what strategy they suggest when undergoing an improvement process, in addition to providing new insight on various aspects of the models. We found 35 maturity models, of which 23 were for Agile, 5 for Lean thinking, 5 for UCD, and 2 for Agile and UCD combined. No models for the combination of the three methods were found (nor for Lean Startup), as expected due to the novelty of the approach. Existing models mostly focus on practice adoption and acquiring continuous improvement capabilities, and are typically developed with a specific context in mind. We also note a lack of proper evaluation procedures being conducted on the majority of models, which could be due to the lack of well-established maturity model development methods and guidelines."",
    isbn = ""978-3-030-75418-1""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Adopting Agile Software Development Combined with User-Centered Design and Lean Startup: A Systematic Literature Review on Maturity Models	https://doi.org/10.1007/978-3-030-75418-1_24	Springer International Publishing	nan; References; Link
336	Behave	Advanced Guide to Python 3 Programming	http://link.springer.com/book/10.1007/978-3-030-25943-3	Concurrent Python; Games in Python; Databases in Python; Reactive Programming; Python Graphics and Graphical User Interfaces; Graphics; Games; Databases; Logging; Concurrency; Advanced Language Concepts; Networking and Data Science	John Hunt		https://link.springer.com/book/10.1007/978-3-031-40336-1				Excluded	Excluded	new_screen			2	Springer Link		Advanced Guide to Python 3 Programming	https://link.springer.com/book/10.1007/978-3-031-40336-1	Springer Link	nan; Venue; Abstract; References; Pages; Year; Bibtex
337	Behave	Advances in infrastructures and tools for multiagent systems	http://link.springer.com/article/10.1007/s10796-014-9493-6		Juan M. Alberola; Vicent Botti; Jose M. Such	Information Systems Frontiers	https://doi.org/10.1007/s10796-014-9493-6	"Alberola, J. M., Burdalo, L., Julian, V., Terrasa, A., & Garcia-Fornes, A. (2014). An adaptive framework for monitoring agent organizations. Information Systems Frontiers, 16(2). doi:
                    10.1007/s10796-013-9478-x
                    
                  .; Alfonso, B., Botti, V., Garrido, A., & Giret, A. (2014). A MAS-based infrastructure for negotiation and its application to a water-right market. Information Systems Frontiers, 16(2). doi:
                    10.1007/s10796-013-9443-8
                    
                  .; citation_title=(Social) norm dynamics; citation_inbook_title=Normative multi-agent systems; citation_publication_date=2013; citation_pages=135-170; citation_id=CR3; citation_author=G Andrighetto; citation_author=C Castelfranchi; citation_author=E Mayor; citation_author=J McBreen; citation_author=M Lopez-Sanchez; citation_author=S Parsons; citation_publisher=Schloss Dagstuhl--Leibniz-Zentrum fuer Informatik; citation_journal_title=Artificial Intelligence; citation_title=Evaluating practical negotiating agents: results and analysis of the 2011 international competition; citation_author=T Baarslag, K Fujita, EH Gerding, K Hindriks, T Ito, NR Jennings; citation_volume=198; citation_publication_date=2013; citation_pages=73-103; citation_doi=10.1016/j.artint.2012.09.004; citation_id=CR4; citation_journal_title=Science of Computer Programming; citation_title=Multi-agent oriented programming with JaCaMo; citation_author=O Boissier, RH Bordini, JF Hubner, A Ricci, A Santi; citation_volume=78; citation_issue=6; citation_publication_date=2013; citation_pages=747-761; citation_doi=10.1016/j.scico.2011.10.004; citation_id=CR5; citation_journal_title=Computing; citation_title=Organisational adaptation of multi-agent systems in a peer-to-peer scenario; citation_author=J Campos, M Esteva, M Lopez-Sanchez, J Morales, M Salamo; citation_volume=91; citation_issue=2; citation_publication_date=2011; citation_pages=169-215; citation_doi=10.1007/s00607-010-0141-9; citation_id=CR6; Carrera, A., Iglesias, C. A., & Garijo, M. (2014). Beast methodology: an agile testing methodology for multi-agent systems based on behaviour driven development. Information Systems Frontiers, 16(2). doi:
                    10.1007/s10796-013-9438-5
                    
                  .; Criado, N., Such, J. M., & Botti, V. (2014). Norm reasoning services. Information Systems Frontiers, 16(2). doi:
                    10.1007/s10796-013-9444-7
                    
                  .; citation_journal_title=Journal of Autonomous Agents and Multi-Agent Systems; citation_title=Enhancing decentralized service discovery in open service-oriented multi-agent systems; citation_author=E Val, M Rebollo, V Botti; citation_volume=28; citation_issue=1; citation_publication_date=2014; citation_pages=1-30; citation_doi=10.1007/s10458-012-9210-0; citation_id=CR9; citation_journal_title=Applied Artificial Intelligence; citation_title=Coordination tools for MAS development and deployment; citation_author=E Denti, A Omicini, A Ricci; citation_volume=16; citation_issue=9-10; citation_publication_date=2002; citation_pages=721-752; citation_doi=10.1080/08839510290030462; citation_id=CR10; citation_journal_title=Logic Journal of IGPL; citation_title=A logic of agent organizations; citation_author=V Dignum, F Dignum; citation_volume=20; citation_issue=1; citation_publication_date=2012; citation_pages=283-316; citation_doi=10.1093/jigpal/jzr041; citation_id=CR11; Ferber, J., & Gutknecht, O. (1998). A meta-model for the analysis and design of organizations in multi-agent systems. In Multi agent systems. Proceedings. International Conference on (pp. 128-135). IEEE.; Fogues, R. L., Such, J. M., Espinosa, A., & Garcia-Fornes, A. (2014). BFF: a tool for eliciting tie strength and user communities in social networking services. Information Systems Frontiers, 16(2). doi:
                    10.1007/s10796-013-9453-6
                    
                  .; citation_journal_title=Information and Software Technology; citation_title=Evaluating software engineering techniques for developing complex systems with multiagent approaches; citation_author=E Garcia, A Giret, V Botti; citation_volume=53; citation_issue=5; citation_publication_date=2011; citation_pages=494-506; citation_doi=10.1016/j.infsof.2010.12.012; citation_id=CR14; citation_journal_title=Engineering Applications of Articial Intelligence; citation_title=Infrastructures and tools for multiagent systems for the new generation of distributed systems; citation_author=A Garcia-Fornes, J Hubner, A Omicini, J Rodriguez-Aguilar, V Botti; citation_volume=24; citation_issue=7; citation_publication_date=2011; citation_pages=1095-1097; citation_doi=10.1016/j.engappai.2011.06.012; citation_id=CR15; citation_journal_title=International Journal of Group Decision and Negotiation; citation_title=Automated negotiation: prospects, methods and challenges; citation_author=N Jennings, P Faratin, A Lomuscio, S Parsons, C Sierra, M Wooldridge; citation_volume=10; citation_issue=2; citation_publication_date=2001; citation_pages=199-215; citation_doi=10.1023/A:1008746126376; citation_id=CR16; citation_journal_title=Artificial Intelligence Review; citation_title=A survey of security issue in multi-agent systems; citation_author=Y Jung, M Kim, A Masoumzadeh, JB Joshi; citation_volume=37; citation_issue=3; citation_publication_date=2012; citation_pages=239-260; citation_doi=10.1007/s10462-011-9228-8; citation_id=CR17; citation_journal_title=ACM Transactions on Autonomous and Adaptive Systems (TAAS); citation_title=Decentralized approaches for self-adaptation in agent organizations; citation_author=R Kota, N Gibbins, NR Jennings; citation_volume=7; citation_issue=1; citation_publication_date=2012; citation_pages=1; citation_doi=10.1145/2168260.2168261; citation_id=CR18; citation_journal_title=Artificial Intelligence; citation_title=Negotiation and cooperation in multi-agent environments; citation_author=S Kraus; citation_volume=94; citation_issue=1; citation_publication_date=1997; citation_pages=79-97; citation_doi=10.1016/S0004-3702(97)00025-8; citation_id=CR19; citation_journal_title=Journal of Intelligent Manufacturing; citation_title=Multi-agent negotiation based on price schedules algorithm for distributed collaborative design; citation_author=YI Lin, YW Chou, JY Shiau, CH Chu; citation_volume=24; citation_issue=3; citation_publication_date=2013; citation_pages=545-557; citation_doi=10.1007/s10845-011-0609-2; citation_id=CR20; Luck, M., & McBurney, P. (2008). Computing as interaction: agent and agreement technologies.; Luck, M., McBurney, P., Shehory, O., & Willmott, S. (2005). Agent technology: Computing as interaction (A roadmap for agent based computing). AgentLink.; citation_journal_title=Concurrency and Computation: Practice and Experience; citation_title=On coordination and its significance to distributed and multiagent systems; citation_author=S Ossowski, R Menezes; citation_volume=18; citation_issue=4; citation_publication_date=2006; citation_pages=359-370; citation_doi=10.1002/cpe.943; citation_id=CR23; Ossowski, S., Sierra, C., & Botti. (2013). Agreement technologies: A computing perspective. In Agreement Technologies (pp. 3-16). Springer Netherlands.; citation_journal_title=Artificial Intelligence Review; citation_title=Computational trust and reputation models for open multi-agent systems: a review; citation_author=I Pinyol, J Sabater-Mir; citation_volume=40; citation_issue=1; citation_publication_date=2013; citation_pages=1-25; citation_doi=10.1007/s10462-011-9277-z; citation_id=CR25; citation_journal_title=Autonomous Agents and Multi-Agent Systems; citation_title=Environment programming in multi-agent systems: an artifact-based perspective; citation_author=A Ricci, M Piunti, M Viroli; citation_volume=23; citation_issue=2; citation_publication_date=2011; citation_pages=158-192; citation_doi=10.1007/s10458-010-9140-7; citation_id=CR26; Sierra, C., & Debenham, J. (2006). Trust and honour in information-based agency. In Proceedings of the 5th international conference on autonomous agents and multi agent systems, (p. 1225-1232). New York: ACM.; citation_journal_title=KI-Knstliche Intelligenz; citation_title=Agreement computing; citation_author=C Sierra, V Botti, S Ossowski; citation_volume=25; citation_issue=1; citation_publication_date=2011; citation_pages=57-61; citation_doi=10.1007/s13218-010-0070-y; citation_id=CR28; citation_journal_title=Expert Systems with Applications; citation_title=Distributed norm management for multi-agent systems; citation_author=W Vasconcelos, A Garcia-Camino, D Gaertner, JA Rodriguez-Aguilar, P Noriega; citation_volume=39; citation_issue=5; citation_publication_date=2012; citation_pages=5990-5999; citation_doi=10.1016/j.eswa.2011.11.108; citation_id=CR29; citation_title=An introduction to multiagent systems; citation_publication_date=2002; citation_id=CR30; citation_author=M Wooldridge; citation_publisher=Wiley; citation_journal_title=Knowledge Engineering Review; citation_title=Intelligent agents: theory and practice; citation_author=M Wooldridge, NR Jennings; citation_volume=10; citation_issue=2; citation_publication_date=1995; citation_pages=115-152; citation_doi=10.1017/S0269888900008122; citation_id=CR31"			Excluded	Excluded	new_screen			2	Springer Link		Advances in infrastructures and tools for multiagent systems	https://doi.org/10.1007/s10796-014-9493-6	Springer Link	nan; Abstract; Keywords; Pages; Year; Bibtex; Link
338	Behave	Agile Android	As a developer, you want to get better at Android development, have fewer bugs, make a better product, or simply make the customer happy. Whether you're developing for the web, mobile, or even the desktop, it pays to adopt an Agile approach to your development and testing.		Nolan, Godfrey; Cinar, Onur; Truxall, David	Android Best Practices	https://doi.org/10.1007/978-1-4302-5858-2_4		75--92	"""@Inbook{Nolan2014,
    author = ""Nolan, Godfrey and Cinar, Onur and Truxall, David"",
    title = ""Agile Android"",
    bookTitle = ""Android Best Practices"",
    year = ""2014"",
    publisher = ""Apress"",
    address = ""Berkeley, CA"",
    pages = ""75--92"",
    abstract = ""As a developer, you want to get better at Android development, have fewer bugs, make a better product, or simply make the customer happy. Whether you're developing for the web, mobile, or even the desktop, it pays to adopt an Agile approach to your development and testing."",
    isbn = ""978-1-4302-5858-2"",
    doi = ""10.1007/978-1-4302-5858-2\_4"",
    url = ""https://doi.org/10.1007/978-1-4302-5858-2\_4""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Agile Android	https://doi.org/10.1007/978-1-4302-5858-2_4	Apress	nan; Keywords; References; Link
339	Behave	Agile Practices in Azure DevOps and TFS	This chapter focuses on more technical aspects of Agile practices. They might not be linked directly to project management or product management, but they are great ways to enhance the quality of your coding efforts. In Chapter 3, you were given a brief overview of eXtreme Programming, or XP, as it is called. As you may remember, Scrum, for example, does not say how you should work using the Scrum framework. XP is much more practice oriented; it gives you hands-on advice on how you should work.		Rossberg, Joachim	Agile Project Management with Azure DevOps	https://doi.org/10.1007/978-1-4842-4483-8_6		197--228	"""@Inbook{Rossberg2019,
    author = ""Rossberg, Joachim"",
    title = ""Agile Practices in Azure DevOps and TFS"",
    bookTitle = ""Agile Project Management with Azure DevOps: Concepts, Templates, and Metrics"",
    year = ""2019"",
    publisher = ""Apress"",
    address = ""Berkeley, CA"",
    pages = ""197--228"",
    abstract = ""This chapter focuses on more technical aspects of Agile practices. They might not be linked directly to project management or product management, but they are great ways to enhance the quality of your coding efforts. In Chapter 3, you were given a brief overview of eXtreme Programming, or XP, as it is called. As you may remember, Scrum, for example, does not say how you should work using the Scrum framework. XP is much more practice oriented; it gives you hands-on advice on how you should work."",
    isbn = ""978-1-4842-4483-8"",
    doi = ""10.1007/978-1-4842-4483-8\_6"",
    url = ""https://doi.org/10.1007/978-1-4842-4483-8\_6""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Agile Practices in Azure DevOps and TFS	https://doi.org/10.1007/978-1-4842-4483-8_6	Apress	nan; Keywords; References; Link
340	Behave	Agile Practices, Collaboration and Experience	Agile Software Development has been around for more than fifteen years and is now widespread. How does experience effect the application of agile methods in organizations and what are the implications on the individual and organizational culture? This paper presents in-depth analysis of the Swiss Agile Study 2014. Switzerland offers an illustrative microcosm of software development, with a range of industry domains and sizes, and well-educated and internationally aware professionals. The study included more than a hundred professionals and managers, contacted through professional and industry associations. The topics addressed included experience with Agile development, motivations for adopting it, barriers perceived, specific practices used, and specific benefits realized. Analysis of the data identified important trends and differences. Agile experience seems to be an important factor, which affects many aspects of practice and workplace culture. More troubling is that it appears stress and overwork may be common among Agile professionals. All these findings illustrate important differences between Agile processes as prescribed, and as actually practiced.	Agile; Software process; Collaboration; Organizational culture; Software practices	Kropp, Martin; Meier, Andreas; Biddle, Robert	International Conference on Product-Focused Software Process Improvement	https://doi.org/10.1007/978-3-319-49094-6_28		416--431	"""@InProceedings{10.1007/978-3-319-49094-6_28,
    author = ""Kropp, Martin and Meier, Andreas and Biddle, Robert"",
    editor = ""Abrahamsson, Pekka and Jedlitschka, Andreas and Nguyen Duc, Anh and Felderer, Michael and Amasaki, Sousuke and Mikkonen, Tommi"",
    title = ""Agile Practices, Collaboration and Experience"",
    booktitle = ""Product-Focused Software Process Improvement"",
    year = ""2016"",
    publisher = ""Springer International Publishing"",
    address = ""Cham"",
    pages = ""416--431"",
    abstract = ""Agile Software Development has been around for more than fifteen years and is now widespread. How does experience effect the application of agile methods in organizations and what are the implications on the individual and organizational culture? This paper presents in-depth analysis of the Swiss Agile Study 2014. Switzerland offers an illustrative microcosm of software development, with a range of industry domains and sizes, and well-educated and internationally aware professionals. The study included more than a hundred professionals and managers, contacted through professional and industry associations. The topics addressed included experience with Agile development, motivations for adopting it, barriers perceived, specific practices used, and specific benefits realized. Analysis of the data identified important trends and differences. Agile experience seems to be an important factor, which affects many aspects of practice and workplace culture. More troubling is that it appears stress and overwork may be common among Agile professionals. All these findings illustrate important differences between Agile processes as prescribed, and as actually practiced."",
    isbn = ""978-3-319-49094-6""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Agile Practices, Collaboration and Experience	https://doi.org/10.1007/978-3-319-49094-6_28	Springer International Publishing	nan; References; Link
341	Behave	Agile Test Automation	The consistent use of test automation is the only chance to ensure the quality of each potentially deliverable product at the end of each sprint. However, many aspects must be clarified and defined for maintainable and efficient test automation. These include the organizational and technical integration into DevOps environments and processes, the selection of suitable automation tools, the design of an automation framework, and the organization and planning of automation activities and automated test executions within or synchronized with the development sprints. If required, test automation know-how also needs to be established within the team. This is a challenge to most teams, but this investment needs to be considered as there is no successful agile testing without test automation.		Manfred Baumgartner; Martin Klonk; Christian Mastnak; Helmut Pichler; Richard Seidl; Siegfried Tanczos	Agile Testing	https://doi.org/10.1007/978-3-030-73209-7_7		157-192		Excluded	Excluded	new_screen			2	Springer Link		Agile Test Automation	https://link.springer.com/chapter/10.1007/978-3-030-73209-7_7	Springer, Cham	nan; Keywords; References; Year; Bibtex
342	Behave	An Empirical Study of Agile Testing in A Distributed Software Development Project	The software engineering industry has witnessed an increasing number of innovative methods and practices in the last decade at different levels, ranging from development processes to software projects and from testing to verification software products. Extensive studies have been conducted empirically to investigate and discuss the impact of using agile principles in the testing process on distributed teams across geographical boundaries. This empirical study has a similar focus, using a real case study in a distributed domain and applying agile testing to a selected team, compares their outcome with another three teams to determine the impact of involving a client in a testing process to overcome distributed development challenges. The findings indicate a highly positive impact on team productivity when using agile tests as compared with other groups using central distributed team testing. All teams met a 90% testing requirement. However, the group applying agile testing verified more than 99% of all requests entered into the testing process, a notable difference supporting the productivity of any development project.	Agile Development; Case study; Distributed Software Development (DSD); Empirical study; Global Software Development (GSD); Software Testing	Abdulrahman M. Qahtani	ICGDA '20: Proceedings of the 2020 3rd International Conference on Geoinformatics and Data Analysis	https://doi.org/10.1145/3397056.3397085		110-114		Excluded	Excluded	new_screen			2	ACM		Agile Testing	https://dl.acm.org/doi/10.1145/3397056.3397085	Association for Computing Machinery	nan; References; Year; Bibtex
343	Behave	An Agile Approach to Requirement Specification	This experience report is about how one project in Norway made an agile approach to specifying software requirements for a new intranet. Rather than spending months on trying to detail all requirements and aspects of the solution, the team spent a few weeks specifying a prioritized list of high-level requirements. Further details will emerge by face-to-face communication through the iterations of the project quickly turning in to valuable working software for the customer.	Project Plan; Requirement Specification; User Story; Content Management System; Student Welfare	Bang, Tom J.	International Conference on Extreme Programming and Agile Processes in Software Engineering	https://doi.org/10.1007/978-3-540-73101-6_35		193--197	"""@InProceedings{10.1007/978-3-540-73101-6_35,
    author = ""Bang, Tom J."",
    editor = ""Concas, Giulio and Damiani, Ernesto and Scotto, Marco and Succi, Giancarlo"",
    title = ""An Agile Approach to Requirement Specification"",
    booktitle = ""Agile Processes in Software Engineering and Extreme Programming"",
    year = ""2007"",
    publisher = ""Springer Berlin Heidelberg"",
    address = ""Berlin, Heidelberg"",
    pages = ""193--197"",
    abstract = ""This experience report is about how one project in Norway made an agile approach to specifying software requirements for a new intranet. Rather than spending months on trying to detail all requirements and aspects of the solution, the team spent a few weeks specifying a prioritized list of high-level requirements. Further details will emerge by face-to-face communication through the iterations of the project quickly turning in to valuable working software for the customer."",
    isbn = ""978-3-540-73101-6""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		An Agile Approach to Requirement Specification	https://doi.org/10.1007/978-3-540-73101-6_35	Springer Berlin Heidelberg	nan; References; Link
344	Behave	An architecture governance approach for Agile development by tailoring the Spotify model	The role of software architecture in large-scale Agile development is important because several teams need to work together to release a single software product while helping to maximise teams' autonomy. Governing and aligning Agile architecture across autonomous squads (i.e., teams), when using the Spotify model, is a challenge because the Spotify model lacks practices for addressing Agile architecture governance. To explorehow software architecture can be governed and aligned by scaling the Spotify model, we conducted a longitudinal embedded case study in a multinational FinTech organisation. Then, we developed and evaluated an approach for architectural governance by conducting an embedded case study. The collected data was analysed using Thematic Analysis and informed by selected Grounded Theory techniques such as memoing, open coding, constant comparison, and sorting. Our approach for architectural governance comprises an organisational structure change and an architecture change management process. The benefits reported by the practitioners include devolving architectural decision-making to the operational level (i.e., Architecture Owners), enhancing architectural knowledge sharing among squads, minimising wasted effort in architectural refactoring, and other benefits. The practitioners in our case study realised an improved squad autonomy by the ability to govern and align architectural decisions. We provide two key contributions in this paper. First, we present the characteristics of our proposed architectural governance approach, its evaluation, benefits, and challenges. Second, we present how the novel Heterogeneous Tailoring model was enhanced to accommodate our architectural governance approach.	Artificial Intelligence; Large-scale Agile developments; Agile architecture; Spotify Tailoring; FinTech; Thematic analysis; Grounded Theory	Abdallah Salameh; Julian M. Bass	AI & SOCIETY	https://doi.org/10.1007/s00146-021-01240-x	"citation_journal_title=IEEE Softw; citation_title=Agility and architecture: Can they coexist?; citation_author=P Abrahamsson, MA Babar, P Kruchten; citation_volume=27; citation_issue=2; citation_publication_date=2010; citation_pages=16-22; citation_doi=10.1109/MS.2010.36; citation_id=CR2; citation_journal_title=Emergence; citation_title=Of ants and men: self-organized teams in human and insect organizations; citation_author=C Anderson, E McMillan; citation_volume=5; citation_issue=2; citation_publication_date=2003; citation_pages=29-41; citation_doi=10.1207/S15327000EM050205; citation_id=CR3; Bass J, Salameh A (2020) Architectural Governance Interview Guide. University of Salford, UK. 
                  https://doi.org/10.17866/rd.salford.12613424.v1; citation_journal_title=Cut IT J; citation_title=How to Agilely architect an Agile architecture; citation_author=S Bellomo, P Kruchten, RL Nord, I Ozkaya; citation_volume=27; citation_issue=2; citation_publication_date=2014; citation_pages=12-17; citation_id=CR6; citation_journal_title=IEEE Softw; citation_title=The defenestration of superfluous architectural accoutrements; citation_author=G Booch; citation_volume=26; citation_issue=4; citation_publication_date=2009; citation_pages=7-8; citation_doi=10.1109/MS.2009.105; citation_id=CR7; citation_journal_title=Qual Res Psychol; citation_title=Using thematic analysis in psychology; citation_author=V Braun, V Clarke; citation_volume=3; citation_issue=2; citation_publication_date=2006; citation_pages=77-101; citation_doi=10.1191/1478088706qp063oa; citation_id=CR8; citation_journal_title=IEEE Softw; citation_title=Architecture and agility: married, divorced, or just good friends?; citation_author=F Buschmann, K Henney; citation_volume=30; citation_issue=2; citation_publication_date=2013; citation_pages=80-82; citation_doi=10.1109/MS.2013.25; citation_id=CR9; citation_journal_title=Computer; citation_title=Agile software development, the people factor; citation_author=A Cockburn, J Highsmith; citation_volume=34; citation_issue=11; citation_publication_date=2001; citation_pages=131-133; citation_doi=10.1109/2.963450; citation_id=CR10; citation_journal_title=IEEE Softw; citation_title=Implementing large-scale Agile frameworks: challenges and recommendations; citation_author=K Conboy, N Carroll; citation_volume=36; citation_issue=2; citation_publication_date=2019; citation_pages=44-50; citation_doi=10.1109/MS.2018.2884865; citation_id=CR11; citation_title=Agile software development: current research and future directions; citation_publication_date=2010; citation_id=CR12; citation_author=T Dingsoyr; citation_author=T Dyba; citation_author=NB Moe; citation_publisher=Springer Publishing Company; citation_journal_title=IEEE Softw; citation_title=Architecture meets agility; citation_author=H Erdogmus; citation_volume=26; citation_issue=5; citation_publication_date=2009; citation_pages=2-4; citation_doi=10.1109/MS.2009.121; citation_id=CR13; citation_journal_title=Electron Mark; citation_title=Understanding FinTech start-ups--a taxonomy of consumer-oriented service offerings; citation_author=H Gimpel, D Rau, M Roglinger; citation_volume=28; citation_issue=3; citation_publication_date=2018; citation_pages=245-264; citation_doi=10.1007/s12525-017-0275-0; citation_id=CR14; citation_title=Doing grounded theory: issues and discussions; citation_publication_date=1998; citation_id=CR15; citation_author=BG Glaser; citation_publisher=Sociology Press; Hammond S, Umphress D (2012) Test driven development: the state of the practice. In: Proceedings of the 50th Annual Southeast Regional Conference, Tuscaloosa, Alabama; citation_journal_title=IEEE Trans Software Eng; citation_title=Self-organizing roles on Agile software development teams; citation_author=R Hoda, J Noble, S Marshall; citation_volume=39; citation_issue=3; citation_publication_date=2013; citation_pages=422-444; citation_doi=10.1109/TSE.2012.30; citation_id=CR17; Kilu E, Milani F, Scott E, Pfahl D (2019) Agile software process improvement by learning from financial and fintech companies: LHV Bank Case Study. Software Quality: the complexity and challenges of software engineering and software quality in the cloud, Cham; citation_journal_title=Managerial Fin; citation_title=Toward understanding FinTech and its industry; citation_author=HS Knewtson, ZA Rosenbaum; citation_volume=46; citation_issue=8; citation_publication_date=2020; citation_pages=1043-1060; citation_doi=10.1108/MF-01-2020-0024; citation_id=CR19; Kniberg H (2014) Spotify Squad framework. Retrieved July, 2020 from 
                  https://medium.com/project-management-learnings/; Kniberg H, Ivarsson A (2012). Scaling Agile @ Spotify with tribes, squads, chapters & guilds. Retrieved June, 2020 from 
                  https://blog.crisp.se/wp-content/uploads/2012/11/SpotifyScaling.pdf; citation_title=Naturalistic inquiry; citation_publication_date=1985; citation_id=CR22; citation_author=YS Lincoln; citation_author=EG Guba; citation_publisher=Sage Publications; Linders B (2016) Don't copy the Spotify model. 
                  https://www.infoq.com/news/2016/10/no-Spotify-model; Martini A, Bosch J (2016) A multiple case study of continuous architecting in large Agile companies: current gaps and the CAFFEA framework. In: 2016 13th Working IEEE/IFIP Conference on Software Architecture (WICSA); citation_title=Scrum and team effectiveness: theory and practice; citation_publication_date=2008; citation_id=CR25; citation_author=NB Moe; citation_author=T Dingsoyr; citation_publisher=Agile Processes in Software Engineering and Extreme Programming; Moe NB, Dingsoyr T, Dyba T (2008) Understanding self-organizing teams in Agile software development. In: Proceedings of the 19th Australian Conference on Software Engineering (aswec 2008); Moe NB, Olsson HH, Dingsoyr T (2016) Trends in large-scale Agile development: a summary of the 4th workshop at XP2016. In: Proceedings of the Scientific Workshop Proceedings of XP2016; Nord RL, Ozkaya I, Kruchten P (2014) Agile in distress: architecture to the rescue. Agile methods. Large-scale development, refactoring, testing, and estimation, Cham; citation_journal_title=Inf Softw Technol; citation_title=Ethnographically-informed empirical studies of software practice; citation_author=H Robinson, J Segal, H Sharp; citation_volume=49; citation_issue=6; citation_publication_date=2007; citation_pages=540-551; citation_doi=10.1016/j.infsof.2007.02.007; citation_id=CR29; Salameh A, Bass JM (2018) Influential factors of aligning Spotify squads in mission-critical and offshore projects--a longitudinal embedded case study. Product-Focused Software Process Improvement, Cham; Salameh A, Bass JM (2019a) Spotify tailoring for B2B product development. In: Proceedings of the 2019 45th Euromicro Conference on Software Engineering and Advanced Applications (SEAA); Salameh A, Bass JM (2019b) Spotify tailoring for promoting effectiveness in cross-functional autonomous squads. Agile processes in software engineering and extreme programming--Workshops, Cham; Salameh A, Bass JM (2020) Heterogeneous tailoring approach using the Spotify model. In: EASE '20 proceedings of the evaluation and assessment on software engineering, Trondheim, Norway; citation_journal_title=IEEE Softw; citation_title=Spotify guilds: how to succeed with knowledge sharing in large-scale Agile organizations; citation_author=D Smite, NB Moe, G Levinta, M Floryan; citation_volume=36; citation_issue=2; citation_publication_date=2019; citation_pages=51-57; citation_doi=10.1109/MS.2018.2886178; citation_id=CR32; citation_journal_title=Commun ACM; citation_title=Spotify guilds; citation_author=D Smite, NB Moe, M Floryan, G Levinta, P Chatzipetrou; citation_volume=63; citation_issue=3; citation_publication_date=2020; citation_pages=56-61; citation_doi=10.1145/3343146; citation_id=CR33; Stray V, Moe NB, Hoda R (2018) Autonomous Agile teams: challenges and future directions for research. In: Proceedings of the 19th international conference on Agile software development: companion, Porto, Portugal; citation_journal_title=J Syst Softw; citation_title=A systematic mapping study on the combination of software architecture and Agile development; citation_author=C Yang, P Liang, P Avgeriou; citation_volume=111; citation_publication_date=2016; citation_pages=157-184; citation_doi=10.1016/j.jss.2015.09.028; citation_id=CR35"			Excluded	Excluded	new_screen			2	Springer Link		An architecture governance approach for Agile development by tailoring the Spotify model	https://doi.org/10.1007/s00146-021-01240-x	Springer Link	nan; Pages; Year; Bibtex; Link
345	Behave	An Automated Approach for Acceptance Web Test Case Modeling and Executing	This paper proposes an approach for modeling and executing acceptance web test cases and describes a suite of tools to support it. The main objective is to assist the use of Acceptance Test-Driven Development (ATDD) in web applications by providing mechanisms to support customer-developer communication and by helping test case creation. Initially, the set of web pages and relations (links) associated with a user story is modeled. Functional test possibilities involving these relations are automatically summarized in a graph, being each path of the graph a user story testing scenario. Once a testing scenario is accepted by the customer, a testing script is automatically created. A web testing framework then executes the script, triggering the ATDD process.	testing automation; web testing; acceptance web test-driven development; agile methods	Besson, Felipe M.; Beder, Delano M.; Chaim, Marcos L.	International Conference on Agile Software Development	https://doi.org/10.1007/978-3-642-13054-0_12		160--165	"""@InProceedings{10.1007/978-3-642-13054-0_12,
    author = ""Besson, Felipe M. and Beder, Delano M. and Chaim, Marcos L."",
    editor = ""Sillitti, Alberto and Martin, Angela and Wang, Xiaofeng and Whitworth, Elizabeth"",
    title = ""An Automated Approach for Acceptance Web Test Case Modeling and Executing"",
    booktitle = ""Agile Processes in Software Engineering and Extreme Programming"",
    year = ""2010"",
    publisher = ""Springer Berlin Heidelberg"",
    address = ""Berlin, Heidelberg"",
    pages = ""160--165"",
    abstract = ""This paper proposes an approach for modeling and executing acceptance web test cases and describes a suite of tools to support it. The main objective is to assist the use of Acceptance Test-Driven Development (ATDD) in web applications by providing mechanisms to support customer-developer communication and by helping test case creation. Initially, the set of web pages and relations (links) associated with a user story is modeled. Functional test possibilities involving these relations are automatically summarized in a graph, being each path of the graph a user story testing scenario. Once a testing scenario is accepted by the customer, a testing script is automatically created. A web testing framework then executes the script, triggering the ATDD process."",
    isbn = ""978-3-642-13054-0""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		An Automated Approach for Acceptance Web Test Case Modeling and Executing	https://doi.org/10.1007/978-3-642-13054-0_12	Springer Berlin Heidelberg	nan; References; Link
346	Behave	An autonomous performance testing framework using self-adaptive fuzzy reinforcement learning	Test automation brings the potential to reduce costs and human effort, but several aspects of software testing remain challenging to automate. One such example is automated performance testing to find performance breaking points. Current approaches to tackle automated generation of performance test cases mainly involve using source code or system model analysis or use-case-based techniques. However, source code and system models might not always be available at testing time. On the other hand, if the optimal performance testing policy for the intended objective in a testing process instead could be learned by the testing system, then test automation without advanced performance models could be possible. Furthermore, the learned policy could later be reused for similar software systems under test, thus leading to higher test efficiency. We propose SaFReL, a self-adaptive fuzzy reinforcement learning-based performance testing framework. SaFReL learns the optimal policy to generate performance test cases through an initial learning phase, then reuses it during a transfer learning phase, while keeping the learning running and updating the policy in the long term. Through multiple experiments in a simulated performance testing setup, we demonstrate that our approach generates the target performance test cases for different programs more efficiently than a typical testing process and performs adaptively without access to source code and performance models.	Artificial Intelligence; Performance testing; Stress testing; Test case generation; Reinforcement learning; Autonomous testing	Mahshid Helali Moghadam,; Mehrdad Saadatmand; Markus Borg; Markus Bohlin; Bjorn Lisper	Software Quality Journal	https://doi.org/10.1007/s11219-020-09532-z	"citation_journal_title=Software Quality Journal; citation_title=Automated gui performance testing; citation_author=A Adamoli, D Zaparanuks, M Jovic, M Hauswirth; citation_volume=19; citation_issue=4; citation_publication_date=2011; citation_pages=801-839; citation_doi=10.1007/s11219-011-9135-x; citation_id=CR1; Ahmad, T., Ashraf, A., Truscan, D., Porres, I. (2019). Exploratory performance testing using reinforcement learning. In 2019 45th Euromicro Conference on Software Engineering and Advanced Applications (SEAA)(pp. 156-163). IEEE.; Apte, V., Viswanath, T. V. S., Gawali, D., Kommireddy, A., Gupta, A. (2017). AutoPerf: Automated load testing and resource usage profiling of multi-tier internet applications. In Proceedings of the 8th ACM/SPEC on International Conference on Performance Engineering (pp. 115-126).; Avritzer, A., Duarte, F. P., Leao, R. M. M., e Silva, Ed. S., Cohen, M., Costello, D. (2008). Reliability estimation for large distributed software systems. In Cascon, Citeseer (p. 12).; Ayala-Rivera, V., Kaczmarski, M., Murphy, J., Darisa, A., Portillo-Dominguez, AO. (2018). One size does not fit all: In-test workload adaptation for performance testing of enterprise applications. In Proceedings of the 2018 ACM/SPEC International Conference on Performance Engineering, ACM (pp. 211-222).; citation_journal_title=<i>IEEE Access</i>; citation_title=Web performance evaluation for internet of things applications; citation_author=ZB Babovic, J Protic, V Milutinovic; citation_volume=4; citation_publication_date=2016; citation_pages=6974-6992; citation_doi=10.1109/ACCESS.2016.2615181; citation_id=CR6; Briand, LC., Labiche, Y., Shousha, M. (2005). Stress testing real-time systems with genetic algorithms. In Proceedings of the 7th annual conference on Genetic and evolutionary computation, ACM (pp. 1021-1028).; Brunnert, A., van Hoorn, A., Willnecker, F., Danciu, A., Hasselbring, W., Heger, C., et al. (2015). Performance oriented devops: A research agenda. arXiv preprint. 
                  arXiv:150804752; citation_journal_title=<i>ACM computing surveys (CSUR)</i>; citation_title=Anomaly detection: A survey; citation_author=V Chandola, A Banerjee, V Kumar; citation_volume=41; citation_issue=3; citation_publication_date=2009; citation_pages=15; citation_doi=10.1145/1541880.1541882; citation_id=CR9; Chung, L., Nixon, B. A., Yu, E., Mylopoulos, J. (2012). Non-functional requirements in software engineering. Springer Science & Business Media, 5.; Cortellessa, V., Di Marco, A., Inverardi, P. (2011). Model-based software performance analysis. Springer Science & Business Media.; Costa, LT., Czekster, RM., de Oliveira, FM., Rodrigues, EDM., da Silveira, MB., Zorzo, AF. (2012). Generating Performance Test Scripts and Scenarios Based on Abstract Intermediate Models. In SEKE, (pp. 112-117).; citation_journal_title=<i>ACM SIGSOFT Software Engineering Notes</i>; citation_title=Early performance testing of dis- tributed software applications; citation_author=G Denaro, A Polini, W Emmerich; citation_volume=29; citation_publication_date=2004; citation_pages=94-103; citation_doi=10.1145/974043.974059; citation_id=CR13; Di Penta, M., Canfora, G., Esposito, G., Mazza, V., Bruno, M. (2007). Search-based testing of service level agreements. In Proceedings of the 9th annual conference on Genetic and evolutionary computation, ACM (pp. 1090-1097).; Draheim, D., Grundy, J., Hosking, J., Lutteroth, C., Weber, G. (2006). Realistic load testing of web applications. In Conference on Software Maintenance and Reengineering (CSMR'06), IEEE (p. 11).; Ferme, V., & Pautasso, C. (2017). Towards holistic continuous software performance assessment. In Proceedings of the 8th ACM/SPEC on International Conference on Performance Engineering Companion, ACM (pp. 159-164).; Ferme, V., & Pautasso, C. (2018). A declarative approach for performance tests execution in continuous software development environments. In Proceedings of the 2018 ACM/SPEC International Conference on Performance Engineering, ACM (pp. 261-272).; Fowler, K. (2009). Mission-critical and safety-critical systems handbook: Design and development for embedded applications. Newnes.; Garousi, V. (2008). Empirical analysis of a genetic algorithm-based stress test technique. In Proceedings of the 10th annual conference on Genetic and evolutionary computation, ACM (pp. 1743-1750).; citation_journal_title=<i>IEEE Transactions on Software Engineering</i>; citation_title=A genetic algorithm-based stress test requirements generator tool and its empirical evaluation; citation_author=V Garousi; citation_volume=36; citation_issue=6; citation_publication_date=2010; citation_pages=778-797; citation_doi=10.1109/TSE.2010.5; citation_id=CR20; citation_journal_title=<i>Journal of Systems and Software</i>; citation_title=Traffic-aware stress testing of distributed real-time systems based on uml models using genetic algorithms; citation_author=V Garousi, LC Briand, Y Labiche; citation_volume=81; citation_issue=2; citation_publication_date=2008; citation_pages=161-185; citation_doi=10.1016/j.jss.2007.05.037; citation_id=CR21; Glinz, M. (2007). On non-functional requirements. In 15th IEEE International Requirements Engineering Conference (RE 2007), IEEE (pp. 21-26).; Grechanik, M., Fu, C., Xie, Q. (2012). Automatically finding performance problems with feedback-directed learning software testing. In 2012 34th International Conference on Software Engineering (ICSE), IEEE (pp. 156-166).; Gregg, B. (2013). Systems performance: enterprise and the cloud. Pearson Education.; Grinshpan, L. (2012). Solving enterprise applications performance puzzles: queuing models to the rescue. John Wiley & Sons.; Gu, Y., & Ge, Y. (2009). Search-based performance testing of applications with composite services. In 2009 International Conference on Web Information Systems and Mining, IEEE (pp. 320-324).; Harchol-Balter, M. (2013). Performance modeling and design of computer systems: queueing theory in action. Cambridge University Press.; citation_journal_title=<i>IEEE software</i>; citation_title=Tools for continuously evaluating distributed system qualities; citation_author=J Hill, D Schmidt, J Edmondson, A Gokhale; citation_volume=27; citation_issue=4; citation_publication_date=2009; citation_pages=65-71; citation_doi=10.1109/MS.2009.197; citation_id=CR28; citation_journal_title=ACM Computing Surveys (CSUR); citation_title=Performance anomaly detection and bottleneck identification; citation_author=O Ibidunmoye, F Hernandez-Rodriguez, E Elmroth; citation_volume=48; citation_issue=1; citation_publication_date=2015; citation_pages=4; citation_doi=10.1145/2791120; citation_id=CR29; Ibidunmoye, O., Moghadam, M. H., Lakew, E. B., Elmroth, E. (2017). Adaptive service performance control using cooperative fuzzy reinforcement learning in vir- tualized environments. In Proceedings of the10th International Conference on Utility and Cloud Computing, ACM (pp. 19-28).; ISO 25000 (2019). ISO/IEC 25010 - System and software quality models. Available at 
                  https://iso25000.com/index.php/en/iso-25000-standards/iso-25010
                  
                . Retrieved July, 2019.; Jamshidi, P., Sharifloo, A., Pahl, C., Arabnejad, H., Metzger, A., Estrada, G. (2016). Fuzzy self-learning controllers for elasticity management in dynamic cloud architectures. In 2016 12th International ACM SIGSOFT Conference on Quality of Software Architectures (QoSA), IEEE (pp. 70-79).; citation_journal_title=<i>Journal of Network and Systems Management</i>; citation_title=Resource management in clouds: Survey and research challenges; citation_author=B Jennings, R Stadler; citation_volume=23; citation_issue=3; citation_publication_date=2015; citation_pages=567-619; citation_doi=10.1007/s10922-014-9307-7; citation_id=CR33; citation_journal_title=<i>IEEE, Transactions on Software Engineering</i>; citation_title=A survey on load testing of large-scale software systems; citation_author=ZM Jiang, AE Hassan; citation_volume=41; citation_issue=11; citation_publication_date=2015; citation_pages=1091-1118; citation_doi=10.1109/TSE.2015.2445340; citation_id=CR34; Jindal, A., Podolskiy, V., Gerndt, M. (2019). Performance modeling for cloud microservice applications. In Proceedings of the 2019 ACM/SPEC International Conference on Performance Engineering, ACM (pp. 25-32).; Kant, K., & Srinivasan, M. (1992). Introduction to computer system performance evaluation. McGraw-Hill College.; citation_journal_title=<i>Software & Systems Modeling</i>; citation_title=Tradeoffs in modeling performance of highly configurable software systems; citation_author=S Kolesnikov, N Siegmund, C Kastner, A Grebhahn, S Apel; citation_volume=18; citation_issue=3; citation_publication_date=2019; citation_pages=2265-2283; citation_doi=10.1007/s10270-018-0662-9; citation_id=CR37; Koo, J., Saumya, C., Kulkarni, M., Bagchi, S. (2019). Pyse: Automatic worst-case test generation by reinforcement learning. In 2019 12th IEEE Conference on Software Testing, Validation and Verification (ICST), IEEE (pp. 136-147).; citation_journal_title=<i>Fuzzy classifiers. Scholarpedia</i>; citation_author=LI Kuncheva; citation_volume=3; citation_issue=1; citation_publication_date=2008; citation_pages=2925; citation_doi=10.4249/scholarpedia.2925; citation_id=CR39; Lutteroth, C., & Weber, G. (2008). Modeling a realistic workload for performance testing. In 2008 12th International IEEE Enterprise Distributed Object Computing Conference, IEEE (pp. 149-158).; Maddodi, G., Jansen, S., de Jong, R. (2018). Generating workload for erp applications through end-user organization categorization using high level business operation data. In Proceedings of the 2018 ACM/SPEC International Conference on Performance Engineering, ACM (pp. 200-210).; Malik, H., Jiang, Z. M., Adams, B., Hassan, A. E., Flora, P., Hamann, G. (2010). Automatic comparison of load tests to support the performance analysis of large enterprise systems. In 2010 14th European conference on software maintenance and reengineering, IEEE (pp. 222-231).; Malik, H., Hemmati, H., Hassan, A. E. (2013). Automatic detection of performance deviations in the load testing of large scale systems. In Proceedings of the 2013 International Conference on Software Engineering, IEEE Press (pp. 1012-1021).; MathWorks (2019). Fuzzy Inference Process. Retrieved from 
                  https://www.mathworks.com/help/fuzzy/fuzzy-inference-process.html; Menasc'e, DA. (2002). Load testing, benchmarking, and application performance management for the web. In Int. CMG Conference (pp. 271-282).; Michael, N., Ramannavar, N., Shen, Y., Patil, S., Sung, J. L. (2017). Cloudperf: A performance test framework for distributed and dynamic multi-tenant environ- ments. In Proceedings of the 8th ACM/SPEC on International Conference on Performance Engineering, ACM (pp. 189-200).; Moghadam, M. H., Saadatmand, M., Borg, M., Bohlin, M., Lisper, B. (2018). Adaptive runtime response time control in plc-based real-time systems using rein- forcement learning. In 2018 IEEE/ACM 13th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS), IEEE (pp. 217-223).; Moghadam, M. H., Saadatmand, M., Borg, M., Bohlin, M., Lisper, B. (2019). Machine learning to guide performance testing: An autonomous test framework. In 2019 IEEE International Conference on Software Testing, Verification and Validation Workshops (ICSTW), IEEE (pp. 164-167).; citation_journal_title=<i>IEEE Access</i>; citation_title=Virtualization on internet of things edge devices with con- tainer technologies: a performance evaluation; citation_author=R Morabito; citation_volume=5; citation_publication_date=2017; citation_pages=8835-8850; citation_doi=10.1109/ACCESS.2017.2704444; citation_id=CR49; NS8 (2018). Did You Know A Slow Webpage Can Cost You 7% of Your Sales. Available at 
                  https://www.ns8.com/en/ns8u/did-you-know/a-slowwebpage-can-cost-you-7-percent-of-your-sales
                  
                . Retrieved July 2019; Schulz, H., Okanovi'c, D., van Hoorn, A., Ferme, V., Pautasso, C. (2019). Behavior- driven load testing using contextual knowledge-approach and experiences. In Proceedings of the 2019 ACM/SPEC International Conference on Performance Engineering, ACM (pp. 265-272).; Shams, M., Krishnamurthy, D., Far, B. (2006). A model-based approach for testing the performance of web applications. In Proceedings of the 3rd international workshop on Software quality assurance, ACM (pp. 54-61).; da Silveira, MB., Rodrigues, EdM., Zorzo, AF., Costa, LT., Vieira, HV., de Oliveira, FM. (2011). Generation of scripts for performance testing based on uml models. In SEKE (pp. 258-263).; Sutton, RS., & Barto, AG. (2018). Reinforcement learning: An introduction. MIT press.; Syer, MD., Adams, B., Hassan, AE. (2011). Identifying performance deviations in thread pools. In 2011 27th IEEE International Conference on Software Maintenance (ICSM), IEEE (pp. 83-92).; Taheri, J., Zomaya, AY., Kassler, A. (2016). vmbbthrpred: A black-box throughput predictor for virtual machines in cloud environments. In European Conference on Service-Oriented and Cloud Computing (pp. 18-33). Springer.; citation_journal_title=<i>International Journal of Big Data Intelligence</i>; citation_title=Auto-scale: automatic scaling of virtualised re- sources using neuro-fuzzy reinforcement learning approach; citation_author=T Veni, SMS Bhanu; citation_volume=3; citation_issue=3; citation_publication_date=2016; citation_pages=145-153; citation_doi=10.1504/IJBDI.2016.078400; citation_id=CR57; Venkataraman, S., Yang, Z., Franklin, M., Recht, B., Stoica, I. (2016). Ernest: ef- ficient performance prediction for large-scale advanced analytics. In 13th USENIX Symposium on Networked Systems Design and Implementation, NSDI (16) (pp. 363-378).; citation_journal_title=<i>Software & Systems Modeling</i>; citation_title=Wessbas: extraction of probabilistic workload specifications for load testing and per- formance prediction-a model-driven approach for session-based application systems; citation_author=C Vogele, A Hoorn, E Schulz, W Hasselbring, H Krcmar; citation_volume=17; citation_issue=2; citation_publication_date=2018; citation_pages=443-477; citation_doi=10.1007/s10270-016-0566-5; citation_id=CR59; Walter, J., van Hoorn, A., Koziolek, H., Okanovic, D., Kounev, S. (2016). Asking what?, automating the how?: The vision of declarative performance engi- neering. In Proceedings of the 7th ACM/SPEC on International Conference on Performance Engineering, ACM (pp. 91-94).; citation_journal_title=<i>IEEE transactions on software engineering</i>; citation_title=Experience with performance testing of software systems: issues, an approach, and case study; citation_author=EJ Weyuker, FI Vokolos; citation_volume=26; citation_issue=12; citation_publication_date=2000; citation_pages=1147-1156; citation_doi=10.1109/32.888628; citation_id=CR61; citation_journal_title=<i>ACM SIGSOFT Software Engineering Notes, ACM</i>; citation_title=Towards a structural load testing tool; citation_author=CSD Yang, LL Pollock; citation_volume=21; citation_publication_date=1996; citation_pages=201-208; citation_doi=10.1145/226295.226318; citation_id=CR62; Zhang, J., & Cheung, SC. (2002). Automated test case generation for the stress testing of multimedia systems. Software: Practice and Experience, 32(15), 1411-1435.; Zhang, P., Elbaum, S., Dwyer, M. B. (2011). Automatic generation of load tests. In Proceedings of the 2011 26th IEEE/ACM International Conference on Automated Software Engineering, IEEE Computer Society (pp. 43-52).; Zhang, P., Elbaum, S., Dwyer, M. B. (2012). Compositional load test generation for software pipelines. In Proceedings of the 2012 International Symposium on Software Testing and Analysis, ACM (pp. 89-99)."			Excluded	Excluded	new_screen			2	Springer Link		An autonomous performance testing framework using self-adaptive fuzzy reinforcement learning	https://doi.org/10.1007/s11219-020-09532-z	Springer Link	nan; Pages; Year; Bibtex; Link
347	Behave	An Empirical Study on the Adoption of Agile Software Development in Public Organizations	The government has been adopting agile software development in order to improve the results of their IT projects. However, there is a lack of structured information about its adoption in this context. Since the public sector have undergone a significant process of modernization to improve the quality of public service, the goal of this study is to report from an empirical study, provide information that may enhance the understanding of the implications of adopting agile software development within public organizations, proposing a set of recommendations for its adoption.	Empirical software engineering; Agile software development; Agile methodologies; Agile methods; Public organizations; Public sector; Government	Vacari, Isaque; Prikladnicki, Rafael	Brazilian Workshop on Agile Methods	https://doi.org/10.1007/978-3-319-55907-0_1		3--15	"""@InProceedings{10.1007/978-3-319-55907-0_1,
    author = ""Vacari, Isaque and Prikladnicki, Rafael"",
    editor = ""Silva da Silva, Tiago and Est{\'a}cio, Bernardo and Kroll, Josiane and Mantovani Fontana, Rafaela"",
    title = ""An Empirical Study on the Adoption of Agile Software Development in Public Organizations"",
    booktitle = ""Agile Methods"",
    year = ""2017"",
    publisher = ""Springer International Publishing"",
    address = ""Cham"",
    pages = ""3--15"",
    abstract = ""The government has been adopting agile software development in order to improve the results of their IT projects. However, there is a lack of structured information about its adoption in this context. Since the public sector have undergone a significant process of modernization to improve the quality of public service, the goal of this study is to report from an empirical study, provide information that may enhance the understanding of the implications of adopting agile software development within public organizations, proposing a set of recommendations for its adoption."",
    isbn = ""978-3-319-55907-0""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		An Empirical Study on the Adoption of Agile Software Development in Public Organizations	https://doi.org/10.1007/978-3-319-55907-0_1	Springer International Publishing	nan; References; Link
348	Behave	An Exploratory Study on Applying a Scrum Development Process for Safety-Critical Systems	Background: Agile techniques recently have received attention from the developers of safety-critical systems. However, a lack of empirical knowledge of performing safety assurance techniques, especially safety analysis in a real agile project hampers further steps. Aims: In this article, we aim at (1) understanding and optimizing the S-Scrum development process, a Scrum extension with the integration of a systems theory based safety analysis technique, STPA (System-Theoretic Process Analysis), for safety-critical systems; (2) validating the Optimized S-Scrum development process further. Method: We conducted a two-stage exploratory case study in a student project at the University of Stuttgart, Germany. Results: The results in stage 1 showed that S-Scrum helps to ensure safety of each release but is less agile than the normal Scrum. We explored six challenges on: priority management; communication; time pressure on determining safety requirements; safety planning; time to perform upfront planning; and safety requirements' acceptance criteria. During stage 2, the safety and agility have been improved after the optimizations, including an internal and an external safety expert; pre-planning meeting; regular safety meeting; an agile safety plan; and improved safety epics and safety stories. We have also gained valuable suggestions from industry, but the generalization problem due to the specific context is still unsolved.	Agile software development; Safety-critical systems; Case study	Wang, Yang; Ramadani, Jasmin; Wagner, Stefan	International Conference on Product-Focused Software Process Improvement	https://doi.org/10.1007/978-3-319-69926-4_23		324--340	"""@InProceedings{10.1007/978-3-319-69926-4_23,
    author = ""Wang, Yang and Ramadani, Jasmin and Wagner, Stefan"",
    editor = ""Felderer, Michael and M{\'e}ndez Fern{\'a}ndez, Daniel and Turhan, Burak and Kalinowski, Marcos and Sarro, Federica and Winkler, Dietmar"",
    title = ""An Exploratory Study on Applying a Scrum Development Process for Safety-Critical Systems"",
    booktitle = ""Product-Focused Software Process Improvement"",
    year = ""2017"",
    publisher = ""Springer International Publishing"",
    address = ""Cham"",
    pages = ""324--340"",
    abstract = ""Background: Agile techniques recently have received attention from the developers of safety-critical systems. However, a lack of empirical knowledge of performing safety assurance techniques, especially safety analysis in a real agile project hampers further steps. Aims: In this article, we aim at (1) understanding and optimizing the S-Scrum development process, a Scrum extension with the integration of a systems theory based safety analysis technique, STPA (System-Theoretic Process Analysis), for safety-critical systems; (2) validating the Optimized S-Scrum development process further. Method: We conducted a two-stage exploratory case study in a student project at the University of Stuttgart, Germany. Results: The results in stage 1 showed that S-Scrum helps to ensure safety of each release but is less agile than the normal Scrum. We explored six challenges on: priority management; communication; time pressure on determining safety requirements; safety planning; time to perform upfront planning; and safety requirements' acceptance criteria. During stage 2, the safety and agility have been improved after the optimizations, including an internal and an external safety expert; pre-planning meeting; regular safety meeting; an agile safety plan; and improved safety epics and safety stories. We have also gained valuable suggestions from industry, but the generalization problem due to the specific context is still unsolved."",
    isbn = ""978-3-319-69926-4""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		An Exploratory Study on Applying a Scrum Development Process for Safety-Critical Systems	https://doi.org/10.1007/978-3-319-69926-4_23	Springer International Publishing	nan; References; Link
349	Behave	An Overview of Requirements Evolution	Changing requirements are widely regarded as one of the most significant risks for software systems development. However, in today's business landscape, these changing requirements also represent opportunities to exploit new and evolving business conditions. In consonance with other agile methods, we advocate requirements engineering techniques that embrace and accommodate requirements change. This agile approach to requirements must nonetheless be systematic and incorporate some degree of planning, especially with respect to accommodating quality attributes such as safety and security. This chapter examines the nature of requirements evolution, and the two main problems that it entails. The first is to correctly understand what is changing in the requirements, that is, the elicitation problem. The other is to act on that new information using models and other representations of the requirements, influencing the architecture and implementation of the software system. This chapter first motivates the importance of considering changing requirements in evolving software systems. It then surveys historical and existing approaches to requirements evolution with respect to the elicitation and taking action problems. Finally, the chapter describes a framework for supporting requirements evolution, defining the Requirements Evolution Problem as finding new specifications to satisfy changed requirements and domain assumptions. To motivate this, we discuss a real-life case study of the payment card industry.		Ernst, Neil; Borgida, Alexander; Jureta, Ivan J.; Mylopoulos, John	Evolving Software Systems	https://doi.org/10.1007/978-3-642-45398-4_1		3--32	"""@Inbook{Ernst2014,
    author = ""Ernst, Neil and Borgida, Alexander and Jureta, Ivan J. and Mylopoulos, John"",
    editor = ""Mens, Tom and Serebrenik, Alexander and Cleve, Anthony"",
    title = ""An Overview of Requirements Evolution"",
    bookTitle = ""Evolving Software Systems"",
    year = ""2014"",
    publisher = ""Springer Berlin Heidelberg"",
    address = ""Berlin, Heidelberg"",
    pages = ""3--32"",
    abstract = ""Changing requirements are widely regarded as one of the most significant risks for software systems development. However, in today's business landscape, these changing requirements also represent opportunities to exploit new and evolving business conditions. In consonance with other agile methods, we advocate requirements engineering techniques that embrace and accommodate requirements change. This agile approach to requirements must nonetheless be systematic and incorporate some degree of planning, especially with respect to accommodating quality attributes such as safety and security. This chapter examines the nature of requirements evolution, and the two main problems that it entails. The first is to correctly understand what is changing in the requirements, that is, the elicitation problem. The other is to act on that new information using models and other representations of the requirements, influencing the architecture and implementation of the software system. This chapter first motivates the importance of considering changing requirements in evolving software systems. It then surveys historical and existing approaches to requirements evolution with respect to the elicitation and taking action problems. Finally, the chapter describes a framework for supporting requirements evolution, defining the Requirements Evolution Problem as finding new specifications to satisfy changed requirements and domain assumptions. To motivate this, we discuss a real-life case study of the payment card industry."",
    isbn = ""978-3-642-45398-4"",
    doi = ""10.1007/978-3-642-45398-4\_1"",
    url = ""https://doi.org/10.1007/978-3-642-45398-4\_1""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		An Overview of Requirements Evolution	https://doi.org/10.1007/978-3-642-45398-4_1	Springer Berlin Heidelberg	nan; Keywords; References; Link
350	Behave	AngularJS in the wild: a survey with 460 developers	To implement modern web applications, a new family of JavaScript frameworks has emerged, using the MVC pattern. Among these frameworks, the most popular one is ANGULARJS, which is supported by Google. In spite of its popularity, there is not a clear knowledge on how ANGULARJS design and features affect the development experience of Web applications. Therefore, this paper reports the results of a survey about ANGULARJS, including answers from 460 developers. Our contributions include the identification of the most appreciated features of ANGULARJS (e.g., custom interface components, dependency injection, and two-way data binding) and the most problematic aspects of the framework (e.g., performance and implementation of directives).	AngularJS; JavaScript; MVC frameworks	Miguel Ramos; Marco Tulio Valente; Ricardo Terra; Gustavo Santos	PLATEAU 2016: Proceedings of the 7th International Workshop on Evaluation and Usability of Programming Languages and Tools	https://doi.org/10.1145/3001878.3001881		9-16		Excluded	Excluded	new_screen			2	ACM		AngularJS	https://dl.acm.org/doi/10.1145/3001878.3001881	Association for Computing Machinery	nan; References; Year; Bibtex
351	Behave	Apogee: Application Ontology Generation with Size Optimization	To obtain runnable knowledge -- convertible into executable software -- from the highest abstraction level of an application, one should start with a neat set of application ontologies. But the latter are not readily available in the literature. One needs to generate dedicated and smaller application ontologies from larger generic domain ontologies. The main problem to be solved is to optimize the size of the generated application ontologies as a trade-off between two opposing tendencies: to enlarge the selected domain ontology segments to include most relationships between relevant concepts, while reducing the same segments to exclude irrelevant terms. This work describes a chain of algorithms and a series of heuristic rules to reach the proposed solution. Finally, case studies are used to actually illustrate the whole approach.		Exman, Iaakov; Iskusnov, Danil	International Joint Conference on Knowledge Discovery, Knowledge Engineering, and Knowledge Management	https://doi.org/10.1007/978-3-319-25840-9_29		477--492	"""@InProceedings{10.1007/978-3-319-25840-9_29,
    author = ""Exman, Iaakov and Iskusnov, Danil"",
    editor = ""Fred, Ana and Dietz, Jan L. G. and Aveiro, David and Liu, Kecheng and Filipe, Joaquim"",
    title = ""Apogee: Application Ontology Generation with Size Optimization"",
    booktitle = ""Knowledge Discovery, Knowledge Engineering and Knowledge Management"",
    year = ""2015"",
    publisher = ""Springer International Publishing"",
    address = ""Cham"",
    pages = ""477--492"",
    abstract = ""To obtain runnable knowledge -- convertible into executable software -- from the highest abstraction level of an application, one should start with a neat set of application ontologies. But the latter are not readily available in the literature. One needs to generate dedicated and smaller application ontologies from larger generic domain ontologies. The main problem to be solved is to optimize the size of the generated application ontologies as a trade-off between two opposing tendencies: to enlarge the selected domain ontology segments to include most relationships between relevant concepts, while reducing the same segments to exclude irrelevant terms. This work describes a chain of algorithms and a series of heuristic rules to reach the proposed solution. Finally, case studies are used to actually illustrate the whole approach."",
    isbn = ""978-3-319-25840-9""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Apogee: Application Ontology Generation with Size Optimization	https://doi.org/10.1007/978-3-319-25840-9_29	Springer International Publishing	nan; Keywords; References; Link
352	Behave	The Appendix in Parkinson's Disease: From Vestigial Remnant to Vital Organ?	http://link.springer.com/chapter/10.1007/978-1-4842-2526-4_10		Sumanta Boral		https://doi.org/doi:10.3233/JPD-191703				Excluded	Excluded	new_screen			2	Pub Med Central		Appendix	https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6839473/		nan; Venue; Authors; Abstract; Keywords; References; Pages; Year; Bibtex; Publisher
353	Behave	Applying TDD and BDD Techniques	If you have been for a few years, chances are that you have been brought on to add new features to an existing app with a large code base that has been built over a few years and has been worked on by dozens of developers, most of whom have moved on to other projects.		Mishra, Abhishek	iOS Code Testing	https://doi.org/10.1007/978-1-4842-2689-6_12		351--405	"""@Inbook{Mishra2017,
    author = ""Mishra, Abhishek"",
    title = ""Applying TDD and BDD Techniques"",
    bookTitle = ""iOS Code Testing: Test-Driven Development and Behavior-Driven Development with Swift"",
    year = ""2017"",
    publisher = ""Apress"",
    address = ""Berkeley, CA"",
    pages = ""351--405"",
    abstract = ""If you have been for a few years, chances are that you have been brought on to add new features to an existing app with a large code base that has been built over a few years and has been worked on by dozens of developers, most of whom have moved on to other projects."",
    isbn = ""978-1-4842-2689-6"",
    doi = ""10.1007/978-1-4842-2689-6\_12"",
    url = ""https://doi.org/10.1007/978-1-4842-2689-6\_12""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Applying TDD and BDD Techniques	https://doi.org/10.1007/978-1-4842-2689-6_12	Apress	nan; Keywords; References; Link
354	Behave	Applying TDD to Collection View Controllers	This chapter will examine the process of building a collection view controller-based iOS app using TDD techniques. The app will have a single view controller that presents a list of pictures and will be built using the MVVM application architecture. Figure 6-1 depicts the user interface of the finished application.	Collection View Controller; ViewModel; Path Index; Test Menu Item; Import Foundation Class	Mishra, Abhishek	iOS Code Testing	https://doi.org/10.1007/978-1-4842-2689-6_6		161--209	"""@Inbook{Mishra2017,
    author = ""Mishra, Abhishek"",
    title = ""Applying TDD to Collection View Controllers"",
    bookTitle = ""iOS Code Testing: Test-Driven Development and Behavior-Driven Development with Swift"",
    year = ""2017"",
    publisher = ""Apress"",
    address = ""Berkeley, CA"",
    pages = ""161--209"",
    abstract = ""This chapter will examine the process of building a collection view controller-based iOS app using TDD techniques. The app will have a single view controller that presents a list of pictures and will be built using the MVVM application architecture. Figure 6-1 depicts the user interface of the finished application."",
    isbn = ""978-1-4842-2689-6"",
    doi = ""10.1007/978-1-4842-2689-6\_6"",
    url = ""https://doi.org/10.1007/978-1-4842-2689-6\_6""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Applying TDD to Collection View Controllers	https://doi.org/10.1007/978-1-4842-2689-6_6	Apress	nan; References; Link
355	Behave	Applying TDD to the Model	This chapter will examine the process of building the model layer of an app using TDD techniques. Since this chapter focuses on the model layer, you will not be building a user interface or any presentation logic.		Mishra, Abhishek	iOS Code Testing	https://doi.org/10.1007/978-1-4842-2689-6_4		61--99	"""@Inbook{Mishra2017,
    author = ""Mishra, Abhishek"",
    title = ""Applying TDD to the Model"",
    bookTitle = ""iOS Code Testing: Test-Driven Development and Behavior-Driven Development with Swift"",
    year = ""2017"",
    publisher = ""Apress"",
    address = ""Berkeley, CA"",
    pages = ""61--99"",
    abstract = ""This chapter will examine the process of building the model layer of an app using TDD techniques. Since this chapter focuses on the model layer, you will not be building a user interface or any presentation logic."",
    isbn = ""978-1-4842-2689-6"",
    doi = ""10.1007/978-1-4842-2689-6\_4"",
    url = ""https://doi.org/10.1007/978-1-4842-2689-6\_4""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Applying TDD to the Model	https://doi.org/10.1007/978-1-4842-2689-6_4	Apress	nan; Keywords; References; Link
356	Behave	Applying TDD to View Controllers	This chapter will examine the process of building an iOS app based on the Single View Controller project template using TDD techniques. The app will have two view controllers that provide sign up and login screen functionality. This app will be built using the MVVM application architecture.		Abhishek Mishra	iOS Code Testing	https://doi.org/10.1007/978-1-4842-2689-6_5		101-160		Excluded	Excluded	new_screen			2	Springer Link		Applying TDD to View Controllers	https://link.springer.com/chapter/10.1007/978-1-4842-2689-6_5	Apress, Berkeley, CA	nan; Keywords; References; Year; Bibtex
357	Behave	Approaches to Business Analysis in Scrum at StepStone---Case Study	Wide adoption of Agile has significantly impacted the sphere of business analysis. Although need for business analysis is widely accepted, it is often unclear how it should be applied. Opinions about the role of a BA (Business Analyst) in Agile teams vary greatly---from negation of its existence to acceptance of a BA as a team member, working side by side with programmers. At StepStone, since our switch to Scrum in 2014, we have experimented with several models of team organization, with or without dedicated BAs. In this paper, the two most prominent cases will be presented: when the BA was a full-time member of the development team, and when the BA's role was distributed between other team members---developers and the Product Owner. Advantages, disadvantages and the transition process will be discussed. In addition, techniques will be proposed which may help in development of necessary analytical skills and transforming team organization - based on our experience.		Forowicz, Piotr	Data-Centric Business and Applications	https://doi.org/10.1007/978-3-030-34706-2_11		211--223	"""@Inbook{Forowicz2020,
    author = ""Forowicz, Piotr"",
    editor = ""Poniszewska-Mara{\'{n}}da, Aneta and Kryvinska, Natalia and Jarz{\k{a}}bek, Stanis{\l}aw and Madeyski, Lech"",
    title = ""Approaches to Business Analysis in Scrum at StepStone---Case Study"",
    bookTitle = ""Data-Centric Business and Applications: Towards Software Development (Volume 4)"",
    year = ""2020"",
    publisher = ""Springer International Publishing"",
    address = ""Cham"",
    pages = ""211--223"",
    abstract = ""Wide adoption of Agile has significantly impacted the sphere of business analysis. Although need for business analysis is widely accepted, it is often unclear how it should be applied. Opinions about the role of a BA (Business Analyst) in Agile teams vary greatly---from negation of its existence to acceptance of a BA as a team member, working side by side with programmers. At StepStone, since our switch to Scrum in 2014, we have experimented with several models of team organization, with or without dedicated BAs. In this paper, the two most prominent cases will be presented: when the BA was a full-time member of the development team, and when the BA's role was distributed between other team members---developers and the Product Owner. Advantages, disadvantages and the transition process will be discussed. In addition, techniques will be proposed which may help in development of necessary analytical skills and transforming team organization - based on our experience."",
    isbn = ""978-3-030-34706-2"",
    doi = ""10.1007/978-3-030-34706-2\_11"",
    url = ""https://doi.org/10.1007/978-3-030-34706-2\_11""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Approaches to Business Analysis in Scrum at StepStone—Case Study	https://doi.org/10.1007/978-3-030-34706-2_11	Springer International Publishing	nan; Keywords; References; Link
358	Behave	Augmented System Verification Using Automated Testing	A verification process is an evaluation of whether or not a product satisfies its requirements, which typically includes a visual verification activity. This is sometimes referred to as acceptance testing. Minimal or no human interaction is the construct of fully automated testing, which is often not sufficient for verification process/user acceptance testing. An approach for writing automated testing is described here, which augments the human verification process while still leveraging the benefits of test automation.	Human-systems integration; Systems engineering; Agile testing; Automated testing	Schur, Amir; Williams, Mike	International Conference on Applied Human Factors and Ergonomics	https://doi.org/10.1007/978-3-319-60366-7_7		64--70	"""@InProceedings{10.1007/978-3-319-60366-7_7,
    author = ""Schur, Amir and Williams, Mike"",
    editor = ""Nunes, Isabel L."",
    title = ""Augmented System Verification Using Automated Testing"",
    booktitle = ""Advances in Human Factors and Systems Interaction"",
    year = ""2018"",
    publisher = ""Springer International Publishing"",
    address = ""Cham"",
    pages = ""64--70"",
    abstract = ""A verification process is an evaluation of whether or not a product satisfies its requirements, which typically includes a visual verification activity. This is sometimes referred to as acceptance testing. Minimal or no human interaction is the construct of fully automated testing, which is often not sufficient for verification process/user acceptance testing. An approach for writing automated testing is described here, which augments the human verification process while still leveraging the benefits of test automation."",
    isbn = ""978-3-319-60366-7""
}
"""	Included	Included	new_screen			2	Springer Link		Augmented System Verification Using Automated Testing	https://doi.org/10.1007/978-3-319-60366-7_7	Springer International Publishing	nan; References; Link
359	Behave	AutoJet: Web Application Automation Tool	The test automation tools available in the present market is limited in various features, e.g., reporting, debugging, logging, usability, and portability, resulting in need of integration of these features to achieve automation objectives, e.g., positive ROI, stability, and efficiency. In this paper, we propose an innovative tool that proves as a panacea for many of test automation challenges discovered in worldwide surveys. In order to provide these challenging features in Web automation testing domain, an attempt has been made to create a tool called AutoJet. It is a Web automation testing tool that aims to provide a great extent of usability to both automation as well as manual testers. Using AutoJet, paradoxically a manual tester can automate test scenarios smoothly and profitably. Our study shows that it is possible for a manual tester to automate test scenarios effectively with reduced time span as it eliminates the efforts spent by the testers to understand existing test harness or to create a new one.	Page object model; Selenium WebDriver; Test automation; Web automation tool; Web automation testing	Kapoor, Sheetika; Sagar, Kalpna	Towards Extensible and Adaptable Methods in Computing	https://doi.org/10.1007/978-981-13-2348-5_3		27--42	"""@Inbook{Kapoor2018,
    author = ""Kapoor, Sheetika and Sagar, Kalpna"",
    editor = ""Chakraverty, Shampa and Goel, Anil and Misra, Sanjay"",
    title = ""AutoJet: Web Application Automation Tool"",
    bookTitle = ""Towards Extensible and Adaptable Methods in Computing"",
    year = ""2018"",
    publisher = ""Springer Singapore"",
    address = ""Singapore"",
    pages = ""27--42"",
    abstract = ""The test automation tools available in the present market is limited in various features, e.g., reporting, debugging, logging, usability, and portability, resulting in need of integration of these features to achieve automation objectives, e.g., positive ROI, stability, and efficiency. In this paper, we propose an innovative tool that proves as a panacea for many of test automation challenges discovered in worldwide surveys. In order to provide these challenging features in Web automation testing domain, an attempt has been made to create a tool called AutoJet. It is a Web automation testing tool that aims to provide a great extent of usability to both automation as well as manual testers. Using AutoJet, paradoxically a manual tester can automate test scenarios smoothly and profitably. Our study shows that it is possible for a manual tester to automate test scenarios effectively with reduced time span as it eliminates the efforts spent by the testers to understand existing test harness or to create a new one."",
    isbn = ""978-981-13-2348-5"",
    doi = ""10.1007/978-981-13-2348-5\_3"",
    url = ""https://doi.org/10.1007/978-981-13-2348-5\_3""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		AutoJet: Web Application Automation Tool	https://doi.org/10.1007/978-981-13-2348-5_3	Springer Singapore	nan; References; Link
360	Behave	Automated Acceptance Tests as Software Requirements: An Experiment to Compare the Applicability of Fit Tables and Gherkin Language	It is estimated that 85{\%} of the defects in the developed software are originated from ambiguous, incomplete and wishful thinking software requirements. Natural language is often used to write software requirements specifications as well as user requirements. However, natural language specifications can be confusing and hard to understand. Some agile methodologists consider that acceptance tests are more precise and accurate sources of information about the customer's needs than descriptions in natural language. Several studies have addressed the use of acceptance tests as software requirements specification. Therefore, none of the previous studies has performed experiments to compare the applicability of different acceptance testing techniques in order to support an organization in the selection of one technique over another. This paper addresses this problem reporting an experiment conducted with undergraduate students in Computer Science. This experiment compares the applicability of two acceptance testing techniques (Fit tables and Gherkin language) as software requirements specification. This research tries to answer three questions: (a) Which technique is the easiest to learn in order to specify acceptance test scenarios? (b) Which technique requires less effort to specify acceptance tests?	Acceptance testing; Software requirements; Fit tables; Gherkin language; FitNesse; Cucumber; TDD; ATDD; BDD	dos Santos, Ernani C{\'e}sar; Vilain, Patr{\'i}cia	International Conference on Agile Software Development	https://doi.org/10.1007/978-3-319-91602-6_7		104--119	"""@InProceedings{10.1007/978-3-319-91602-6_7,
    author = ""dos Santos, Ernani C{\'e}sar and Vilain, Patr{\'i}cia"",
    editor = ""Garbajosa, Juan and Wang, Xiaofeng and Aguiar, Ademar"",
    title = ""Automated Acceptance Tests as Software Requirements: An Experiment to Compare the Applicability of Fit Tables and Gherkin Language"",
    booktitle = ""Agile Processes in Software Engineering and Extreme Programming"",
    year = ""2018"",
    publisher = ""Springer International Publishing"",
    address = ""Cham"",
    pages = ""104--119"",
    abstract = ""It is estimated that 85{\\%} of the defects in the developed software are originated from ambiguous, incomplete and wishful thinking software requirements. Natural language is often used to write software requirements specifications as well as user requirements. However, natural language specifications can be confusing and hard to understand. Some agile methodologists consider that acceptance tests are more precise and accurate sources of information about the customer's needs than descriptions in natural language. Several studies have addressed the use of acceptance tests as software requirements specification. Therefore, none of the previous studies has performed experiments to compare the applicability of different acceptance testing techniques in order to support an organization in the selection of one technique over another. This paper addresses this problem reporting an experiment conducted with undergraduate students in Computer Science. This experiment compares the applicability of two acceptance testing techniques (Fit tables and Gherkin language) as software requirements specification. This research tries to answer three questions: (a) Which technique is the easiest to learn in order to specify acceptance test scenarios? (b) Which technique requires less effort to specify acceptance tests? (c) Which technique is the best one to communicate software requirements? The results show that there is no sufficient evidence to affirm that one technique is easier to specify test scenarios or better to communicate software requirements. Whereas, the comparison of effort in terms of time to specify acceptance testing shows that the mean time to specify test scenarios using Gherkin language is lower than Fit tables."",
    isbn = ""978-3-319-91602-6""
}
"""	Included	Included	new_screen			2	Springer Link		Automated Acceptance Tests as Software Requirements: An Experiment to Compare the Applicability of Fit Tables and Gherkin Language	https://doi.org/10.1007/978-3-319-91602-6_7	Springer International Publishing	nan; References; Link
361	Behave	From logistics process models to automated integration testing:proof-of-concept using open-source simulation software	This paper explores the practical integration of simulation methods into software development processes. An automated integration testing approach is presented, which enables continuous virtual commissioning. For this purpose, an analysis of the current state of knowledge and the standards of software development is presented. This is followed by a case study on logistics order management, referring to a typical B2B application in the retail logistics sector. The proof-of-concept shows how the usage of a simulation model for automated integration testing and its inclusion into continuous-integration can help to ensure software quality, particularly for process-centered logistics applications. The implemented setup proves the feasibility of the approach, using standard open-source development tools, and a Python-based open-source simulation library.		Paul Reichardt; Wladimir Hofmann; Tobias Reggelin; Sebastian Lang	WSC '21: Proceedings of the Winter Simulation Conference	https://doi.org/10.5555/3522802.3522901		1-11		Excluded	Excluded	new_screen			2	ACM		Automated Integration Testing	https://dl.acm.org/doi/10.5555/3522802.3522901	IEEE Press	nan; Keywords; References; Year; Bibtex
362	Behave	Automated Testing of Networked Systems Reliability	The reliability of a network is a crucial requirement for systems such as IoT, client-server, or cloud-based solutions. Unfortunately, real networks cannot be assumed to be fault-free, especially when considering various hardware problems, performance issues, or malicious attacks. Testing networked systems should therefore include evaluating fault tolerance under various network conditions. The paper presents a doctoral research project on automated verification of networked systems using fault-attack injection using a derived model of network communication.	Networked systems; fault/attack injection; network model; testing	Michal Rozsival	ISSTA 2024: Proceedings of the 33rd ACM SIGSOFT International Symposium on Software Testing and Analysis	https://doi.org/10.1145/3650212.3685559		1920-1922		Excluded	Excluded	new_screen			2	ACM		Automated Testing	https://dl.acm.org/doi/10.1145/3650212.3685559	Association for Computing Machinery	nan; References; Year; Bibtex
363	Behave	Automating Expert-Defined Tests: A Suitable Approach for the Medical Device Industry?	Testing is frequently reported as a crucial stage in the software development process. With traditional approaches acceptance testing is the last stage of the process before release to customer. Acceptance Test Driven Development (ATDD) promotes the role of an expert customer in defining tests and uses tool support to automate and execute these tests. Here the challenge is to support such an expert in the reuse of existing documentation. This paper details an experiment in a generic domain while outlining plans for development of an automated testing model that could assist medical device companies to adhere to regulatory guidelines by providing them with a fully traceable testing artifacts.	Medical Device; Acceptance Test; User Story; Agile Practice; Correct Element	Connolly, David; Mc Caffery, Fergal; Keenan, Frank	European Conference on Software Process Improvement	https://doi.org/10.1007/978-3-642-04133-4_3		32--43	"""@InProceedings{10.1007/978-3-642-04133-4_3,
    author = ""Connolly, David and Mc Caffery, Fergal and Keenan, Frank"",
    editor = ""O'Connor, Rory V. and Baddoo, Nathan and Cuadrago Gallego, Juan and Rejas Muslera, Ricardo and Smolander, Kari and Messnarz, Richard"",
    title = ""Automating Expert-Defined Tests: A Suitable Approach for the Medical Device Industry?"",
    booktitle = ""Software Process Improvement"",
    year = ""2009"",
    publisher = ""Springer Berlin Heidelberg"",
    address = ""Berlin, Heidelberg"",
    pages = ""32--43"",
    abstract = ""Testing is frequently reported as a crucial stage in the software development process. With traditional approaches acceptance testing is the last stage of the process before release to customer. Acceptance Test Driven Development (ATDD) promotes the role of an expert customer in defining tests and uses tool support to automate and execute these tests. Here the challenge is to support such an expert in the reuse of existing documentation. This paper details an experiment in a generic domain while outlining plans for development of an automated testing model that could assist medical device companies to adhere to regulatory guidelines by providing them with a fully traceable testing artifacts."",
    isbn = ""978-3-642-04133-4""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Automating Expert-Defined Tests: A Suitable Approach for the Medical Device Industry?	https://link.springer.com/chapter/10.1007/978-3-642-04133-4_3	Springer Berlin Heidelberg	nan; References
364	Behave	Basic concepts of physically-based rendering	This tutorial will cover the basics of physically-based rendering such as reflection models (BRDF), volume scattering (phase functions), optical phenomena (dispersion and polarization). It will also cover image formation via basic camera models. A brief summary of popular algorithms will be covered including radiosity, path tracing, photon tracing, and Metropolis Light Transport. The course will end with a more detailed description of adjoint photon tracing so that attendees can later implement their own physically-based renderer.		Peter Shirley	SA '13: SIGGRAPH Asia 2013 Courses	https://doi.org/10.1145/2542266.2542269		1-11		Excluded	Excluded	new_screen			2	ACM		Basic Concepts	https://dl.acm.org/doi/10.1145/2542266.2542269	Association for Computing Machinery	nan; Keywords; References; Year; Bibtex
365	Behave	A Behavior-driven Development and Reinforcement Learning approach for videogame automated testing	Video game development has undergone a significant transformation in the last decade, with modern games becoming increasingly complex and sophisticated. Testing these games for quality assurance is challenging and time-consuming, often relying on manual testers. In this paper, we introduce an automated testing approach that combines Behavior-Driven Development (BDD) with Reinforcement Learning (RL) to streamline the testing process. We present a framework that uses natural language-based test cases to describe game behaviors and expected outcomes, combined with RL, to test games automatically. We validated our approach through tests on four distinct Python-based games. We analyzed the impact of game complexity on training duration and discussed the challenges of defining optimal reward functions. Our framework provides a structured approach to address RL complexities, simplifying the process of creating test scenarios. Combining BDD and RL offers a promising solution to test complex modern video games more efficiently and ensure higher game quality upon release.	videogame; testing; reinforcement learning; behavior-driven development; software quality; software engineering	Vincent Mastain; Fabio Petrillo	GAS '24: Proceedings of the ACM/IEEE 8th International Workshop on Games and Software Engineering	https://doi.org/10.1145/3643658.3643919		1-8		Excluded	Excluded	new_screen			2	ACM		Behavior-Driven Development	https://dl.acm.org/doi/10.1145/3643658.3643919	Association for Computing Machinery	nan; References; Year; Bibtex
366	Behave	End-User Programming of Robot-Assisted Physical Training Activities through Behaviour-Driven Development	In this paper, we introduce an end-user programming approach for allowing physical trainers to program robot-assisted physical training activities without the assistance of a robotics engineer. The approach relies on a textual domain-specific language (DSL) to allow end users to specify the expected robot behaviour through Behaviour-Driven Development (BDD) scenarios. To evaluate the feasibility of our approach, we conducted a workshop with a physical therapist who was tasked with programming two different routines for a training robot. Results of the study highlighted the cognitive strategies employed by the end user to solve the task and also the pain points which required higher efforts from the user and should be therefore prioritized in our future work.	behaviour-driven development (BDD); domain-specific languages (DSLs); end-user programming; robot programming	Jose Pablo De La Rosa; Thiago Rocha Silva; Anders Stengaard Sorensen	HRI '24: Companion of the 2024 ACM/IEEE International Conference on Human-Robot Interaction	https://doi.org/10.1145/3610978.3640618		387-391		Excluded	Excluded	new_screen			2	ACM		Behaviour-Driven Development	https://dl.acm.org/doi/10.1145/3610978.3640618	Association for Computing Machinery	nan; References; Year; Bibtex
367	Behave	Best Practices for OutSystems Development and Its Influence on Test Automation	Low-code development platforms are designed to accelerate software development with a minimum of hand coding. They have allowed professionals with distinct backgrounds to become software developers. This brings more professionals to IT areas, reskilling some of them from different areas of knowledge but, at the same time, it has also brought to the software development area many professionals without a strong background in this area. Although testing should be performed in all applications, regardless of the programming language or the platform used, this reinforces the need for testing low-code developed applications. In this work, we study the test automation process on the OutSystems low-code development platform. The focus is on Unit, Integration/API and System/End-to-End testing levels. Examples illustrate that the implementation of best practices during the development process can have a significant influence on the test automation process. However, it is important to know whether the workload associated with the implementation of the best practices can undermine the benefits of using a low-code platform and it is important to consider that not all test automation tools have the same behavior.		Salgueiro, Joana; Ribeiro, Fernando; Metr{\^o}lho, Jos{\'e}	World Conference on Information Systems and Technologies	https://doi.org/10.1007/978-3-030-72654-6_9		85--95	"""@InProceedings{10.1007/978-3-030-72654-6_9,
    author = ""Salgueiro, Joana and Ribeiro, Fernando and Metr{\^o}lho, Jos{\'e}"",
    editor = ""Rocha, {\'A}lvaro and Adeli, Hojjat and Dzemyda, Gintautas and Moreira, Fernando and Ramalho Correia, Ana Maria"",
    title = ""Best Practices for OutSystems Development and Its Influence on Test Automation"",
    booktitle = ""Trends and Applications in Information Systems and Technologies"",
    year = ""2021"",
    publisher = ""Springer International Publishing"",
    address = ""Cham"",
    pages = ""85--95"",
    abstract = ""Low-code development platforms are designed to accelerate software development with a minimum of hand coding. They have allowed professionals with distinct backgrounds to become software developers. This brings more professionals to IT areas, reskilling some of them from different areas of knowledge but, at the same time, it has also brought to the software development area many professionals without a strong background in this area. Although testing should be performed in all applications, regardless of the programming language or the platform used, this reinforces the need for testing low-code developed applications. In this work, we study the test automation process on the OutSystems low-code development platform. The focus is on Unit, Integration/API and System/End-to-End testing levels. Examples illustrate that the implementation of best practices during the development process can have a significant influence on the test automation process. However, it is important to know whether the workload associated with the implementation of the best practices can undermine the benefits of using a low-code platform and it is important to consider that not all test automation tools have the same behavior."",
    isbn = ""978-3-030-72654-6""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Best Practices for OutSystems Development and Its Influence on Test Automation	https://doi.org/10.1007/978-3-030-72654-6_9	Springer International Publishing	nan; Keywords; References; Link
368	Behave	Blockchain-Based Distributed Marketplace	Developments in Blockchain technology have enabled the creation of smart contracts; i.e., self-executing code that is stored and executed on the Blockchain. This has led to the creation of distributed, decentralised applications, along with frameworks for developing and deploying them easily. This paper describes a proof-of-concept system that implements a distributed online marketplace using the Ethereum framework, where buyers and sellers can engage in e-commerce transactions without the need of a large central entity coordinating the process. The performance of the system was measured in terms of cost of use through the concept of `gas usage'. It was determined that such costs are significantly less than that of Amazon and eBay for high volume users. The findings generally support the ability to use Ethereum to create a distributed on-chain market, however, there are still areas that require further research and development.	Blockchain; Smart contract; Ethereum; E-commerce; Distributed systems	Kabi, Oliver R.; Franqueira, Virginia N. L.	International Conference on Business Information Systems	https://doi.org/10.1007/978-3-030-04849-5_17		197--210	"""@InProceedings{10.1007/978-3-030-04849-5_17,
    author = ""Kabi, Oliver R. and Franqueira, Virginia N. L."",
    editor = ""Abramowicz, Witold and Paschke, Adrian"",
    title = ""Blockchain-Based Distributed Marketplace"",
    booktitle = ""Business Information Systems Workshops"",
    year = ""2019"",
    publisher = ""Springer International Publishing"",
    address = ""Cham"",
    pages = ""197--210"",
    abstract = ""Developments in Blockchain technology have enabled the creation of smart contracts; i.e., self-executing code that is stored and executed on the Blockchain. This has led to the creation of distributed, decentralised applications, along with frameworks for developing and deploying them easily. This paper describes a proof-of-concept system that implements a distributed online marketplace using the Ethereum framework, where buyers and sellers can engage in e-commerce transactions without the need of a large central entity coordinating the process. The performance of the system was measured in terms of cost of use through the concept of `gas usage'. It was determined that such costs are significantly less than that of Amazon and eBay for high volume users. The findings generally support the ability to use Ethereum to create a distributed on-chain market, however, there are still areas that require further research and development."",
    isbn = ""978-3-030-04849-5""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Blockchain-Based Distributed Marketplace	https://doi.org/10.1007/978-3-030-04849-5_17	Springer International Publishing	nan; References; Link
369	Behave	BPMN-Based Model-Driven Testing of Service-Based Processes	Executable Business Processes realized in WS-BPEL and BPMN2 are used more and more for automating digitalized core processes in organizations. Due to their critical nature for the organization, these processes need to be developed with high quality standards. Existing literature concentrates on testing such processes, but do not offer integration into the development lifecycle and validation with other stakeholders. Our approach is based on Test Models that allow both the easier definition of automated test cases as well as discussion with non-technical stakeholders and, thus, can be used for business process validation and process modeling support. We define a meta-model for the BPMN-based Test Models that has been validated in a case study in an industrial project.	BPMN; Model-driven testing; Business process; Service composition; Process validation	"L{\""u}bke, Daniel; van Lessen, Tammo"	International Workshop on Business Process Modeling, Development and Support	https://doi.org/10.1007/978-3-319-59466-8_8		119--133	"""@InProceedings{10.1007/978-3-319-59466-8_8,
    author = {L{\""u}bke, Daniel and van Lessen, Tammo},
    editor = ""Reinhartz-Berger, Iris and Gulden, Jens and Nurcan, Selmin and Gu{\'e}dria, Wided and Bera, Palash"",
    title = ""BPMN-Based Model-Driven Testing of Service-Based Processes"",
    booktitle = ""Enterprise, Business-Process and Information Systems Modeling"",
    year = ""2017"",
    publisher = ""Springer International Publishing"",
    address = ""Cham"",
    pages = ""119--133"",
    abstract = ""Executable Business Processes realized in WS-BPEL and BPMN2 are used more and more for automating digitalized core processes in organizations. Due to their critical nature for the organization, these processes need to be developed with high quality standards. Existing literature concentrates on testing such processes, but do not offer integration into the development lifecycle and validation with other stakeholders. Our approach is based on Test Models that allow both the easier definition of automated test cases as well as discussion with non-technical stakeholders and, thus, can be used for business process validation and process modeling support. We define a meta-model for the BPMN-based Test Models that has been validated in a case study in an industrial project."",
    isbn = ""978-3-319-59466-8""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		BPMN-Based Model-Driven Testing of Service-Based Processes	https://doi.org/10.1007/978-3-319-59466-8_8	Springer International Publishing	nan; References; Link
370	Behave	Bridging Enterprise and Software Engineering Through an User-Centered Design Perspective	The development of Web-based Information Systems is crucial in the quest to maintain and develop the enterprise competiveness. However, capturing requirements from Business Processes (BP) is still an issue, as existing methods mostly focus, or on human aspects and the user interface, or on business concerns as rules and workflow coordination, and therefore do not specify all the Software Architectural components which are relevant for software development. We present the Goals Approach, which analyzes BPs and User Tasks and details them in the process of methodically designing and structuring the User Interface, the Business Logic and the Database of the Information System given a Model-View-Controller (MVC) architectural pattern. In this paper we focus on how to obtain the Goals business model of requirements based on the DEMO method. The approach can be used for in-house software development, and the method is straightforward fitting Small and Medium Enterprises agility needs.	Web-based applications; Enterprise engineering; Software engineering; User-Centered Design; Software architecture	Valente, Pedro; Silva, Thiago; Winckler, Marco; Nunes, Nuno	International Conference on Web Information Systems Engineering	https://doi.org/10.1007/978-3-319-48743-4_28		349--357	"""@InProceedings{10.1007/978-3-319-48743-4_28,
    author = ""Valente, Pedro and Silva, Thiago and Winckler, Marco and Nunes, Nuno"",
    editor = ""Cellary, Wojciech and Mokbel, Mohamed F. and Wang, Jianmin and Wang, Hua and Zhou, Rui and Zhang, Yanchun"",
    title = ""Bridging Enterprise and Software Engineering Through an User-Centered Design Perspective"",
    booktitle = ""Web Information Systems Engineering -- WISE 2016"",
    year = ""2016"",
    publisher = ""Springer International Publishing"",
    address = ""Cham"",
    pages = ""349--357"",
    abstract = ""The development of Web-based Information Systems is crucial in the quest to maintain and develop the enterprise competiveness. However, capturing requirements from Business Processes (BP) is still an issue, as existing methods mostly focus, or on human aspects and the user interface, or on business concerns as rules and workflow coordination, and therefore do not specify all the Software Architectural components which are relevant for software development. We present the Goals Approach, which analyzes BPs and User Tasks and details them in the process of methodically designing and structuring the User Interface, the Business Logic and the Database of the Information System given a Model-View-Controller (MVC) architectural pattern. In this paper we focus on how to obtain the Goals business model of requirements based on the DEMO method. The approach can be used for in-house software development, and the method is straightforward fitting Small and Medium Enterprises agility needs."",
    isbn = ""978-3-319-48743-4""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Bridging Enterprise and Software Engineering Through an User-Centered Design Perspective	https://doi.org/10.1007/978-3-319-48743-4_28	Springer International Publishing	nan; References; Link
371	Behave	Building Software the Correct Way	Programmers learn very quickly that writing software is hard and error prone. Time and again software projects fail because teams are unable to cope with software complexity. As a result, the project fails to meet the deadline, costs much more than expected, and doesn't deliver the intended business value.		Gulati, Shekhar; Sharma, Rahul	Java Unit Testing with JUnit 5	https://doi.org/10.1007/978-1-4842-3015-2_1		1--23	"""@Inbook{Gulati2017,
    author = ""Gulati, Shekhar and Sharma, Rahul"",
    title = ""Building Software the Correct Way"",
    bookTitle = ""Java Unit Testing with JUnit 5: Test Driven Development with JUnit 5"",
    year = ""2017"",
    publisher = ""Apress"",
    address = ""Berkeley, CA"",
    pages = ""1--23"",
    abstract = ""Programmers learn very quickly that writing software is hard and error prone. Time and again software projects fail because teams are unable to cope with software complexity. As a result, the project fails to meet the deadline, costs much more than expected, and doesn't deliver the intended business value."",
    isbn = ""978-1-4842-3015-2"",
    doi = ""10.1007/978-1-4842-3015-2\_1"",
    url = ""https://doi.org/10.1007/978-1-4842-3015-2\_1""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Building Software the Correct Way	https://doi.org/10.1007/978-1-4842-3015-2_1	Apress	nan; Keywords; References; Link
372	Behave	Transferring transactional business processes to FaaS	Function-as-a-Service (FaaS) is a modern cloud service model that has gained significant attention from the research and industry communities in recent years for its many benefits such as dynamic scaling, cost efficiency, faster programming, flexibility to microservices and containers technology. However, the building and deployment of serverless applications come with many challenges that need to be tackled, like workflow design complexity and migration of other applications. When transactions between different parties are involved, the workflow becomes knotty and the communication between participants and all properties of transactions have to be properly resolved. Transactions have widely been discussed in Business processes, so same practices might be adopted by serverless workflows. In this work we provide guidelines and mapping mechanisms for transforming transactional Business Process Modeling Notation 2.0 (BPMN2) applications to a serverless platform. We shed light on the current inability of function orchestrators to express workflow definitions, and deal with various architectural dilemmas that stem from the dissimilar nature of stateful BPMN vs. stateless serverless applications. We overcome the unbalanced capabilities between well-established BPMN notations and function orchestration definitions and illustrate how to exploit and combine cloud native services that comes with FaaS to create serverless applications.	BPMN2; FaaS; OpenWhisk; function orchestration; serverless workflow; transactions	Kostas Meladakis; Chrysostomos Zeginis; Kostas Magoutis; Dimitris Plexousakis	WoSC '22: Proceedings of the Eighth International Workshop on Serverless Computing	https://doi.org/10.1145/3565382.3565882		25-30		Excluded	Excluded	new_screen			2	ACM		Business Processes	https://dl.acm.org/doi/10.1145/3565382.3565882	Association for Computing Machinery	nan; References; Year; Bibtex
373	Behave	Cassandra on Docker, Apache Spark, and the Cassandra Cluster Manager	Now that you know quite a bit about the architecture of Cassandra, as well as how to configure a cluster, it's time to learn about orchestrating a Cassandra cluster in various environments.		Sam R. Alapati	Expert Apache Cassandra Administration	https://doi.org/10.1007/978-1-4842-3126-5_7		249-281		Excluded	Excluded	new_screen			2	Springer Link		Cassandra on Docker, Apache Spark, and the Cassandra Cluster Manager	https://link.springer.com/chapter/10.1007/978-1-4842-3126-5_7	Apress, Berkeley, CA	nan; Keywords; References; Year; Bibtex
374	Behave	Challenges of CE	Despite a long pedigree and many positive reports on its use and benefits, concurrent engineering (CE) and its associated research (sub)domains still experience significant development. In this final chapter, a socio-technical framework is applied to classify and analyze challenges identified as part of the foundations, methods and applications discussed in this book. Existing properties and means of CE are abstracted. Subsequently, the main trends and developments in CE research and practice are discussed, followed by expectations for the future. Findings and trends have been identified for strategic issues visible in product requirements and product portfolios, stakeholders including companies involved, multiple functions and disciplines, current and future technologies that are expected to solve at least some of the existing problems, knowledge and skills as brought by people and teams, and structures necessary for making collaboration work, while dealing also with the still very difficult cultural differences. As the chapter shows, CE as a concept is very much alive, requiring even more advanced tools, techniques and methods to contribute to less waste in resources and efforts world-wide and improve quality.		Verhagen, Wim J. C.; Stjepandi{\'{c}}, Josip; Wognum, Nel	Concurrent Engineering in the 21st Century	https://doi.org/10.1007/978-3-319-13776-6_28		807--833	"""@Inbook{Verhagen2015,
    author = ""Verhagen, Wim J. C. and Stjepandi{\'{c}}, Josip and Wognum, Nel"",
    editor = ""Stjepandi{\'{c}}, Josip and Wognum, Nel and J.C. Verhagen, Wim"",
    title = ""Challenges of CE"",
    bookTitle = ""Concurrent Engineering in the 21st Century: Foundations, Developments and Challenges"",
    year = ""2015"",
    publisher = ""Springer International Publishing"",
    address = ""Cham"",
    pages = ""807--833"",
    abstract = ""Despite a long pedigree and many positive reports on its use and benefits, concurrent engineering (CE) and its associated research (sub)domains still experience significant development. In this final chapter, a socio-technical framework is applied to classify and analyze challenges identified as part of the foundations, methods and applications discussed in this book. Existing properties and means of CE are abstracted. Subsequently, the main trends and developments in CE research and practice are discussed, followed by expectations for the future. Findings and trends have been identified for strategic issues visible in product requirements and product portfolios, stakeholders including companies involved, multiple functions and disciplines, current and future technologies that are expected to solve at least some of the existing problems, knowledge and skills as brought by people and teams, and structures necessary for making collaboration work, while dealing also with the still very difficult cultural differences. As the chapter shows, CE as a concept is very much alive, requiring even more advanced tools, techniques and methods to contribute to less waste in resources and efforts world-wide and improve quality."",
    isbn = ""978-3-319-13776-6"",
    doi = ""10.1007/978-3-319-13776-6\_28"",
    url = ""https://doi.org/10.1007/978-3-319-13776-6\_28""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Challenges of CE	https://doi.org/10.1007/978-3-319-13776-6_28	Springer International Publishing	nan; Keywords; References; Link
375	Behave	Development	During software development iterations, we create computer programs. Programs, or more precisely software source code files, are examples of development artefacts. We also create other artefacts when we make commercial-strength software. We need to learn how to create and manage backlogs. We introduce the concepts of good-quality source code and how to create software that is consistent and readable for other members of our team. Finally, we need to test our code. So we will explore unit testing the code we write.		Julian Michael Bass	Agile Software Engineering Skills	https://doi.org/10.1007/978-3-031-05469-3_10		149-162		Excluded	Excluded	new_screen			2	Springer Link		Chapter 10 - Development	https://link.springer.com/chapter/10.1007/978-3-031-05469-3_10	Springer, Cham	nan; Keywords; References; Year; Bibtex
376	Behave	Chasing Mutants	This chapter describes mutation testing, how it has developed, the types of tools associated with it, the benefits to a quality assurance process, and the associated challenges with scaling it as a test design technique and as a consumer of resources.	Software testing; Software quality; Test automation; Mutation testing	Smith, Adam Leon	The Future of Software Quality Assurance	https://doi.org/10.1007/978-3-030-29509-7_12		147--159	"""@Inbook{Smith2020,
    author = ""Smith, Adam Leon"",
    editor = ""Goericke, Stephan"",
    title = ""Chasing Mutants"",
    bookTitle = ""The Future of Software Quality Assurance"",
    year = ""2020"",
    publisher = ""Springer International Publishing"",
    address = ""Cham"",
    pages = ""147--159"",
    abstract = ""This chapter describes mutation testing, how it has developed, the types of tools associated with it, the benefits to a quality assurance process, and the associated challenges with scaling it as a test design technique and as a consumer of resources."",
    isbn = ""978-3-030-29509-7"",
    doi = ""10.1007/978-3-030-29509-7\_12"",
    url = ""https://doi.org/10.1007/978-3-030-29509-7\_12""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Chasing Mutants	https://doi.org/10.1007/978-3-030-29509-7_12	Springer International Publishing	nan; References; Link
377	Behave	Clean C++20	http://link.springer.com/book/10.1007/978-1-4842-5949-8	C++; programming; clean; software; applications; C++20; source; code; development; best practices	Stephan Roth		https://link.springer.com/book/10.1007/978-1-4842-5949-8				Excluded	Excluded	new_screen			2	Springer Link		Clean C++20	https://link.springer.com/book/10.1007/978-1-4842-5949-8	Springer Link	nan; Venue; Abstract; References; Pages; Year; Bibtex
378	Behave	Cloud and Services Testing Applied in Manufacturing	Software testing is a complex and thorough process, which verifies software correctness from bare simple code units to the intricate complexity of fully integrated systems. Such major development contributor element should be planned from the beginning of the project (perhaps even before the code itself), and should play a role as important as the development itself. The use of the latest, fit, and most complete tools is important to ease the testing activities, but in most cases the selection of the best tool is specific to each particular development environment. This article presents an overview of the state-of-the-art in testing methodologies and tools, particularising the use of such tools in the context of the H2020 European project C2NET, which handles, among others, Cloud environments and Web Services.	Software testing; Validation; Verification; Testing methodologies; Best practices	F. Alves; C. Coutinho; R. Pena-Ortiz; X. Xu; A. Nieto; J. Ahola; L. Saari; A. Katasonov	Enterprise Interoperability VII	https://doi.org/10.1007/978-3-319-30957-6_3		25-38		Excluded	Excluded	new_screen			2	Springer Link		Cloud and Services Testing Applied in Manufacturing	https://link.springer.com/chapter/10.1007/978-3-319-30957-6_3	Springer, Cham	nan; References; Year; Bibtex
379	Behave	Algorithm for iris code organization and searching for iris recognition system	Iris recognition has become one of the prominent biometrics features in human identification system. In addition to light intensity, focusing and capture distance problems, percent of IRIS visibility are also one of the major problems. This can cause failure in most common method, Hamming Distance (HD), used for matching the templates. This paper proposes the iris code organization and searching algorithm suggesting the improvement in template matching process. The algorithm also suggests template selection to avoid comparison with all existing IRIS codes resulting in faster searching speed. For the IRIS that has accumulated the cataract, HD methods shows major failure results. The proposed algorithm shows better performance over conventional HD method of template matching and IRIS code selection for template matching.	iris code database; iris code searching; iris codes organization; iris comparison	P. M. Agarkar; S. N. Talbar	ICWET '10: Proceedings of the International Conference and Workshop on Emerging Trends in Technology	https://doi.org/10.1145/1741906.1742029		544-547		Excluded	Excluded	new_screen			2	ACM		Code Organization	https://dl.acm.org/doi/10.1145/1741906.1742029	Association for Computing Machinery	nan; References; Year; Bibtex
380	Behave	Comparison of national clinical practice guidelines and recommendations on vaccination of adult patients with autoimmune rheumatic diseases	The aim of the study is to identify and compare national recommendations on vaccination of adult patients with autoimmune rheumatic diseases (ARDs) in Europe, North America, and Australia. We conducted a search for recommended immunizations in adult patients with ARDs in the Medline database and the Web sites of National Rheumatologic Societies, Ministries of Health, National Advisory Committees on Immunization, and other relevant National Scientific Societies. We compared national guidelines and identified points of agreement and differences. Guidelines on vaccination of adult patients with ARDs were identified in 21 countries. Points of agreement include administering influenza and pneumococcal vaccines in addition to inactivated age-appropriate or travel-related vaccines, and avoiding the use of live vaccines in immunocompromised patients with ARDs. The most important differences concern the steroid dose that induces immunosuppression, the time interval between live vaccines and the initiation of immunosuppressive treatment, herpes zoster vaccination, and the preferred pneumococcal vaccine in patients with ARDs. We observed significant differences among national recommendations on immunizations in patients with ARDs, reflecting the lack of evidence-based data.	Autoimmune rheumatic disease; Vaccination; Recommendations	Despoina Papadopoulou,; Nikolaos V. Sipsas	Rheumatology International	https://doi.org/10.1007/s00296-013-2907-9	"citation_journal_title=Rheumatology; citation_title=Vaccinations in patients with immune-mediated inflammatory diseases; citation_author=JF Rahier, M Moutschen, A Gompel; citation_volume=49; citation_issue=10; citation_publication_date=2010; citation_pages=1815-1827; citation_doi=10.1093/rheumatology/keq183; citation_id=CR1; citation_journal_title=Best Pract Res Clin Rheumatol; citation_title=Infectious diseases in systemic lupus erythematosus: risk factors, management and prophylaxis; citation_author=BJ Fessler; citation_volume=16; citation_issue=2; citation_publication_date=2002; citation_pages=281-291; citation_doi=10.1053/berh.2001.0226; citation_id=CR2; citation_journal_title=Autoimmun Rev; citation_title=DMARDS and infections in rheumatoid arthritis; citation_author=R Caporali, M Caprioli, F Bobbio-Pallavicini, C Montecucco; citation_volume=8; citation_issue=2; citation_publication_date=2008; citation_pages=139-143; citation_doi=10.1016/j.autrev.2008.05.001; citation_id=CR3; Swiss Society for Rheumatology (2010) Vaccination guidelines for patients with inflammatory rheumatic disease. Available from: 
                    http://www.rheuma-net.ch/download/Content_attachments/FileBaseDoc/recommandations-vaccination-04-2010.pdf
                    
                   (cited 2013 July 10); Goldacker S, Gause A, Warnatz K (2012). German Society for Rheumatology Pharmacotherapy Commission quality assurance for vaccination in adult patients with inflammatory rheumatic diseases. Available from: 
                    http://dgrh.de/fileadmin/media/Praxis_Klinik/Therapie-Empfehlungen/impfung_qualitaetssicherung_final_2012.pdf
                    
                   (cited 2013 July 10); Standing Committee on Vaccination (STIKO) at the Robert Koch Institute (RKI) (2012) Recommendations of the Standing Committee on Vaccination (STIKO) at the Robert Koch Institute. Epidemiol Bull 30:283-310. Available from: 
                    http://www.rki.de/DE/Content/Infekt/EpidBull/Archiv/2012/Ausgaben/30_12.pdf?_blob=publicationFile
                    
                   (cited 2013 July 10); Robert Koch Institute-German Federal Ministry of Health (2012) Vaccination recommendations by STIKO. Available from: 
                    http://www.rki.de/EN/Content/Prevention/Vaccination/recommandations/recommendations_node.html
                    
                   (cited 2013 July 10); Repo H, Peltomaa R, Finnish Rheumatology Association (2012) Vaccination of adults with inflammatory rheumatic diseases. Available from: 
                    http://www.reumatologinenyhdistys.fi/files/rokotus.pdf
                    
                   (cited 2013 July 10); Department of Public Health England (2013) Immunisation against infectious disease: the green book. Available from: 
                    http://immunisation.dh.gov.uk/gb-complete-current-edition/
                    
                   (cited 2013 July 10); Swedish Rheumatology Association (2011) SRF vaccination recommendations in patients with inflammatory rheumatic diseases. Available from: 
                    http://www.svenskreumatologi.se/sites/default/files/8/images/SRFs%20riktlinjer_vaccinationer_2011.pdf
                    
                   (cited 2013 July 10); Dougados M (2010) Recommendations of the French Society for Rheumatology to detect or prevent diseases associated with chronic inflammatory rheumatism. Available from: 
                    http://www.rhumatologie.asso.fr/data/ModuleProgramme/PageSite/2010-1/Resume/6649.asp
                    
                   (cited 2013 July 10); French Club of Rheumatism and Inflammation (2007) CRI factsheets. Available from: 
                    http://www.cri-net.com/recherche/fichesPratiques/
                    
                   (cited 2013 July 10); citation_journal_title=Joint Bone Spine; citation_title=Rituximab (MabThera) therapy and safety management. Clinical tool guide; citation_author=T Pham, B Fautrel, JE Gottenberg; citation_volume=75; citation_issue=Suppl 1; citation_publication_date=2008; citation_pages=S1-S99; citation_id=CR13; citation_journal_title=Joint Bone Spine; citation_title=Abatacept therapy and safety management; citation_author=T Pham, H Bachelez, JM Berthelot; citation_volume=79; citation_issue=Suppl 1; citation_publication_date=2012; citation_pages=3-84; citation_doi=10.1016/S1297-319X(12)70011-8; citation_id=CR14; citation_journal_title=Joint Bone Spine; citation_title=TNF alpha antagonist therapy and safety monitoring; citation_author=T Pham, H Bachelez, JM Berthelot; citation_volume=78; citation_issue=Suppl 1; citation_publication_date=2011; citation_pages=15-185; citation_doi=10.1016/S1297-319X(11)70001-X; citation_id=CR15; citation_journal_title=Joint Bone Spine; citation_title=Recommendations of the French Society for Rheumatology regarding TNFalpha antagonist therapy in patients with rheumatoid arthritis; citation_author=B Fautrel, T Pham, G Mouterde; citation_volume=74; citation_issue=6; citation_publication_date=2007; citation_pages=627-637; citation_doi=10.1016/j.jbspin.2007.10.001; citation_id=CR16; citation_journal_title=Joint Bone Spine; citation_title=Recommendations of the French Society for Rheumatology regarding TNFalpha antagonist therapy in patients with ankylosing spondylitis or psoriatic arthritis: 2007 update; citation_author=T Pham, B Fautrel, E Dernis; citation_volume=74; citation_publication_date=2007; citation_pages=638-646; citation_doi=10.1016/j.jbspin.2007.10.003; citation_id=CR17; citation_journal_title=Joint Bone Spine.; citation_title=Tocilizumab: therapy and safety management; citation_author=T Pham, P Claudepierre, A Constantin; citation_volume=77; citation_issue=Suppl 1; citation_publication_date=2010; citation_pages=S3-S100; citation_doi=10.1016/S1297-319X(10)70001-4; citation_id=CR18; citation_journal_title=Arthritis Care Res (Hoboken); citation_title=2012 update of the 2008 American College of Rheumatology recommendations for the use of disease-modifying antirheumatic drugs and biologic agents in the treatment of rheumatoid arthritis; citation_author=JA Singh, DE Furst, A Bharat; citation_volume=64; citation_issue=5; citation_publication_date=2012; citation_pages=625-639; citation_id=CR19; Public Health Agency of Canada (2012) Immunization and vaccines. Available from: 
                    http://www.phac-aspc.gc.ca/im/index-eng.php
                    
                   (cited 2013 July 10); Public Health Agency of Canada (2007) Recommended Immunizations. Immunization of immunocompromized persons. Canadian immunization guide. Part 3. Available from: 
                    http://www.phac-aspc.gc.ca/publicat/cig-gci/p03-07-eng.php
                    
                   (cited 2013 July 10); Finnish National Institute for Health and Welfare (2013) Vaccination of immunocompromized patients. Available from: 
                    http://www.thl.fi/fi_FI/web/rokottajankasikirja-fi/immuunipuutteiset
                    
                   (cited 2013 July 10); Finnish National Institute for Health and Welfare (2013) Vaccination schedule. (
                    http://www.thl.fi/fi_FI/web/fi/etusivu
                    
                   (cited 2013 July 10. Available from: 
                    http://www.ktl.fi/portal/suomi/terveyden_ammattilaisille/rokottaminen/
                    
                   (cited 2013 July 10); Austrian federal Ministry of health (2013) Austrian vaccination schedule 2013. Available from: 
                    http://bmg.gv.at/cms/home/attachments/3/3/6/CH1100/CMS1327680589121/impfplan2013.pdf
                    
                   (cited 2013 July 10); The British Society for Rheumatology (2011) BSR statement on vaccination in adult patients with rheumatic diseases. Available from: 
                    http://www.rheumatology.org.uk/includes/documents/cm_docs/2011/b/bsr_vaccination_statement_nov_2011.pdf
                    
                   (cited 2013 July 10); The British Society for Rheumatology (2002) Vaccinations in the immunocompromised person. Guidelines for the patient taking immunosuppressants, steroids and biologics therapies Available from: 
                    http://www.rheumatology.org.uk/resources/guidelines/archive_guidelines/default.aspx
                    
                   (cited 2013 July 21); Dutch Society for Rheumatology (2011) Directive on responsible use of biologics. Available from: 
                    http://www.nvr.nl/uploads/Sk/A3/SkA3YYPbz5IMt3e8kt5fFg/Richtlijn_biologicals_geautorisateerde-versie_januari-2011.pdf
                    
                   (cited 2013 July 10); citation_journal_title=Reumatol Clin; citation_title=Consensus statement of the Spanish Society of Rheumatology on risk management of biologic therapy in rheumatic patients; citation_author=J Gomez Reino, E Loza, JL Andreu; citation_volume=7; citation_issue=5; citation_publication_date=2011; citation_pages=284-298; citation_doi=10.1016/j.reuma.2011.05.002; citation_id=CR28; Spanish Ministry of Health. Social Services and Equality (2004) Vaccination in adults-recommendations. Available from: 
                    http://www.msc.es/ciudadanos/proteccionSalud/vacunaciones/docs/recoVacunasAdultos.pdf
                    
                   (cited 2013 July 10); citation_journal_title=Ces Revmatol; citation_title=Safety recommendations on biological treatment; citation_author=J Vencovsky; citation_volume=17; citation_issue=3; citation_publication_date=2009; citation_pages=146-160; citation_id=CR30; citation_journal_title=MMWR Recomm Rep; citation_title=General recommendations on immunization: recommendations of the Advisory Committee on Immunization Practices (ACIP); citation_author=; citation_volume=60; citation_issue=2; citation_publication_date=2011; citation_pages=1-64; citation_id=CR31; Centers for Disease Control and Prevention. (2013) Vaccination of persons with primary and secondary immune deficiencies. Available from: 
                    http://www.cdc.gov/vaccines/pubs/pinkbook/downloads/appendices/A/immuno-table.pdf
                    
                   (cited 2013 July 10); citation_journal_title=J Rheumatol; citation_title=Canadian Rheumatology Association recommendations for the pharmacological management of rheumatoid arthritis with traditional and biologic disease-modifying antirheumatic drugs: part II safety; citation_author=C Bombardier, GS Hazlewood, P Akhavan; citation_volume=39; citation_issue=8; citation_publication_date=2012; citation_pages=1583-1602; citation_doi=10.3899/jrheum.120165; citation_id=CR33; Australian Rheumatology Association (2011) Updated recommendations for the use of biologic agents for the treatment of rheumatic diseases. Available from: 
                    http://www.rheumatology.org.au/downloads/FINAL-BiologicalRecommendations060111_000.pdf
                    
                   (cited 2013 July 10); Italian Society for Rheumatology (2009) New influenza A (H1N1) advice of the Italian Society for Rheumatology for patients suffering from chronic inflammatory rheumatic diseases treated with immunosuppressive drugs and biological. Available from: 
                    http://www.reumatologia.it/cmsx.asp?IDPg=114#alto
                    
                   (cited 2013 July 10); Greek National Organization of Health Services (2012) New national vaccination program of children and adolescents 2011 and adult immunization program. Available from: http://www.eopyy.gov.gr/Eggrapha%20EOPUU/Nea%20-%20Anakoinoseis%20-%20Deltia%20Tupou/EThNIKO%20PROGRAMMA%20EMBOLIASMON%20PAIDION%20KAI%20ENELIKON.pdf (cited 2013 July 10); Swiss Federal Office of Public Health, Swiss Commission for Vaccinations (2013) Immunization: general recommendations. Swiss 2013 vaccinations plan. Available from: 
                    http://www.bag.admin.ch/themen/medizin/00682/00684/02535/index.html?lang=fr
                    
                   (cited 2013 July 10); Spanish National Health System Library of clinical practice guidelines (2011) Update of the clinical practice guide for the management of rheumatoid arthritis in Spain. Available from: 
                    http://www.guiasalud.es/GPC/GPC_503_Guipcar_%28diciembre-2011%29.pdf
                    
                   (cited 2013 July 10); Estonian Society for Rheumatology (2008) Rheumatoid arthritis-patient education material. (
                    http://www.ers.ee/
                    
                  ). Available from: 
                    http://www.ers.ee/index.php?id=112
                    
                   (cited 2013 July 10); Australian Government, Department of Health and Ageing (2013) Groups with special vaccination requirements. The Australian immunisation handbook, 10th edn. Chap 3.3. Available from: 
                    http://www.health.gov.au/internet/immunise/publishing.nsf/Content/handbook10-3-3
                    
                   (cited 2013 July 10); Australian Government, Department of Health and Ageing (2013) Vaccine preventable diseases. The Australian immunisation handbook, 10th edn. Part 4. Available from: 
                    http://www.health.gov.au/internet/immunise/publishing.nsf/Content/handbook10part4
                    
                   (cited 2013 July 10); Rubbert A, Burmester G, The Pharmacotherapy Commission of the German Society for Rheumatology (2007) Recommendations for the use of rituximab in patients with rheumatoid arthritis. Available from: 
                    http://dgrh.de/fileadmin/media/Praxis_Klinik/Therapie-Empfehlungen/rituximab_2013_final.pdf
                    
                   (cited 2013 July 10); citation_journal_title=Rheumatology (Oxford); citation_title=BSR and BHPR guidelines on the use of rituximab in rheumatoid arthritis; citation_author=M Bukhari, R Abernethy, C Deighton; citation_volume=50; citation_issue=12; citation_publication_date=2011; citation_pages=2311-2313; citation_doi=10.1093/rheumatology/ker106a; citation_id=CR43; Kruger K, Gaubitz M, The Pharmacotherapy Commission of the German Society of Rheumatology (2008). Recommendations for the use of abatacept in patients with rheumatoid arthritis. Available from: 
                    http://dgrh.de/fileadmin/media/Praxis___Klinik/Therapie-Empfehlungen/abatacept_final.pdf
                    
                   (cited 2013 July 10); citation_journal_title=Clin Exp Rheumatol; citation_title=Recommendations for the use of biologic therapy in rheumatoid arthritis: update from the Italian society for rheumatology II. Safety; citation_author=EG Favalli, R Caporali, L Sinigaglia; citation_volume=29; citation_issue=3 Suppl 66; citation_publication_date=2011; citation_pages=S15-S27; citation_id=CR45; citation_journal_title=Rheumatology (Oxford); citation_title=BSR and BHPR rheumatoid arthritis guidelines on safety of anti-TNF therapies; citation_author=T Ding, J Ledingham, R Luqmani; citation_volume=49; citation_issue=11; citation_publication_date=2010; citation_pages=2217-2219; citation_doi=10.1093/rheumatology/keq249a; citation_id=CR46; Dutch Society for Rheumatology. Gelre-IJssel Municipal Health Services (2008) Note on travel & vaccinations for patients on DMARDs & Biologics. Available from: 
                    http://www.nvr.nl/uploads/OK/pU/OKpULu4M6uy6R9GiuM9e4A/Notitie-reizen-en-vaccinaties.doc
                    
                   (cited 2013 July 10); Belgian Royal Society for Rheumatology (2009) The Mexican Flu. Available from: 
                    http://www.srbr.be/fr/content/la-grippe-mexicaine
                    
                   (cited 2013 July 10); Centers for Disease Control and Prevention (2013) Recommended adult immunization schedule. Available from: 
                    http://www.cdc.gov/vaccines/schedules/downloads/adult/adult-schedule.pdf
                    
                   (cited 2013 July 10); Australian Rheumatology Association (2013) Patient information. Medicine information sheets. Available from: 
                    http://www.rheumatology.org.au/community/PatientMedicineInformation.asp
                    
                   (cited 2013 July 10); Brezinschek H.P. and the Austrian Society for Rheumatology & Rehabilitation Working Group (2009) Opinion of the Austrian Society for Rheumatology on vaccination of patients with rheumatic diseases ('rheumatologic patients'). Available from: 
                    http://www.rheumatologie.at/pdf/OEGR-Stellungnahme_Impfen_16_Dez_2009.pdf
                    
                   (cited 2013 July 10); citation_journal_title=Clin Exp Rheumatol; citation_title=Recommendations for the use of biologic therapy in the treatment of psoriatic arthritis: update from the Italian Society for Rheumatology; citation_author=C Salvarani, N Pipitone, A Marchesoni; citation_volume=29; citation_issue=3 Suppl 66; citation_publication_date=2011; citation_pages=S28-S41; citation_id=CR52; Italian Ministry of Health (2012) Infectious disease and vaccination: national vaccine prevention plan. Available from: 
                    http://www.salute.gov.it/malattieInfettive/paginaInternaMalattieInfettive.jsp?menu=pianovaccini&id=651&lingua=italiano
                    
                   (cited 2013 July 10); Manger B, Michels H, Nusslein HG, et al (2006) Revision of the recommendations of the German society for rheumatology regarding therapy with tumor necrosis factor inhibitors in inflammatory rheumatic diseases. Available from: 
                    http://dgrh.de/fileadmin/media/Praxis___Klinik/Therapie-Empfehlungen/TNF-Blocker_06.pdf
                    
                   (cited 2013 July 10); French Institute of Health (2010) The immunization schedule and vaccine recommendations in the opinion of the High Council of Public Health. BEH 14-15:121-172 Available from: 
                    www.invs.sante.fr/beh/2010/14_15/beh_14_15.pdf
                    
                   (cited 2013 July 10); Statens Serum Institut- Danish Ministry of Health (2012) Free influenza vaccination. Available from: 
                    http://www.ssi.dk/English/News/EPI-NEWS/2012/No%2039a%20-%202012.aspx
                    
                   (cited 2013 Aug 29); Ireland Health Service Executive-National Immunisation Office (2013) Seasonal flu vaccine. Available from: 
                    http://www.immunisation.ie/en/AdultImmunisation/FluVaccination/
                    
                   (cited 2013 Aug 29); National Institute of Public Health- Republic of Slovenia (2013). Recommendations for vaccination of adults and children aged 5 years and older against pneumococcal infections. Available from: 
                    http://img.ivz.si/janez/2230-6991.doc
                    
                   (cited 2013 Aug 29); Statens Serum Institut- Danish Ministry of Health (2012) Pneumococcal vaccination of persons at increased risk of invasive pneumococcal disease. Available from: 
                    http://www.ssi.dk/English/News/EPI-NEWS/2012/No%2051b%20-%202012.aspx
                    
                   (cited 2013 Aug 29); Ireland Health Service Executive-National Immunisation Office (2013) Pneumococcal. Available from: 
                    http://www.immunisation.ie/en/AdultImmunisation/Pneumococal/
                    
                   (cited 2013 Aug 29); National Institute of Public Health-Republic of Slovenia (2013) Vaccination against pneumococcal infection in adults and children. Available from: 
                    http://www.ivz.si/cepljenje/strokovna_javnost/navodila_in_priporocila?pi=18&_18_view=item&_18_newsid=2230&pl=253-18.0
                    
                   (cited 2013 July 29); Czech National Institute of Health (2011) The vaccination schedule in the Czech Republic. Available from: 
                    http://www.szu.cz/tema/vakciny/ockovaci-kalendar-v-cr?highlightWords=O%C4%8Dkovac%C3%AD+kalend%C3%A1%C5%99+%C4%8CR
                    
                   (cited 2013 Aug 29); Italian Society of Hygiene (2013) Vaccination Board of the Italian Society of Hygiene indications of pneumococcal vaccine in adults at risk. Available from: 
                    http://www.igienistionline.it/docs/2012/30pneumo.pdf
                    
                   (cited 2013 July 29); Mitteilung der Standigen Impfkommission (STIKO) am Robert Koch-Institut (2012) Stellungnahme zur Impfung Erwachsener gegen Pneumokokken. Epidemiologisches Bulletin 7:55-62. Available from: 
                    http://www.rki.de/DE/Content/Infekt/EpidBull/Archiv/2012/Ausgaben/07_12.pdf?__blob=publicationFile
                    
                   (cited 2013 July 10); citation_journal_title=MMWR Morb Mortal Wkly Rep; citation_title=Use of 13-valent pneumococcal conjugate vaccine and 23-valent pneumococcal polysaccharide vaccine for adults with immunocompromising conditions: recommendations of the Advisory Committee on Immunization Practices (ACIP); citation_author=; citation_volume=59; citation_issue=34; citation_publication_date=2010; citation_pages=1102-1106; citation_id=CR65; Community of Madrid-Expert Vaccine Advisory Committee (2012) Pneumococcal vaccination for adults in the community of Madrid. Available from: 
                    http://www.madrid.org/cs/Satellite?c=PTSA_Multimedia_FA&cid=1142695928713&pagename=PortalSalud%2FPTSA_Multimedia_FA%2FPTSA_documentoWebeditpro
                    
                   (cited 2013 July 10); Belgian Superior Health Board (2013). Vaccination of children and immunocompromised adults and chronically ill. Available from: 
                    http://www.cercles.be/base_cercle/fichiers_fiches/10536.pdf
                    
                   (cited 2013 July 29); French High Council for Public Health (2013) Opinion on recommendations of vaccination for adults and children older than 2 years at risk of invasive pneumococcal disease. Available from: 
                    http://www.hcsp.fr/Explore.cgi/Telecharger?NomFichier=hcspa20130425_infectionsinvasivespneumocoque.pdf
                    
                   (cited 2013 Aug 29); citation_journal_title=Rheumatology (Oxford); citation_title=BSR/BHPR guideline for disease-modifying anti-rheumatic drug (DMARD) therapy in consultation with the British Association of Dermatologists; citation_author=K Chakravarty, H McDonald, T Pullar; citation_volume=47; citation_publication_date=2008; citation_pages=924-925; citation_doi=10.1093/rheumatology/kel216a; citation_id=CR69; citation_journal_title=Acta Reumatol Port; citation_title=Portuguese guidelines for the use of biological agents in rheumatoid arthritis--October 2011 update; citation_author=JE Fonseca, M Bernardes, H Canhao; citation_volume=36; citation_publication_date=2011; citation_pages=385-388; citation_id=CR70; citation_journal_title=Ces Revmatol; citation_title=Czech Society for Rheumatology recommendations for monitoring the safety of the treatment of rheumatoid arthritis; citation_author=L Sedova, J Stolfa, P Horak, K Pavelka; citation_volume=17; citation_issue=1; citation_publication_date=2009; citation_pages=4-15; citation_id=CR71; Harpaz R, Ortega-Sanchez IR, Seward JF, Advisory Committee on Immunization Practices (ACIP) Centers for Disease Control and Prevention (CDC) (2008) Prevention of Herpes Zoster. Recommendations of the Advisory Committee on Immunization Practices (ACIP). MMWR Recomm Rep 57(RR-5):1-30; quiz CE2-4; citation_journal_title=MMWR Recomm Rep; citation_title=Measles, mumps, and rubella vaccine use and strategies for elimination of measles, rubella, and congenital rubella syndrome and control of mumps: recommendations of the Advisory Committee on Immunization Practices (ACIP); citation_author=JC Watson, SC Hadler, CA Dykewicz, S Reef, L Phillips; citation_volume=47; citation_issue=RR-8; citation_publication_date=1998; citation_pages=1-57; citation_id=CR73; citation_journal_title=Rheumatology (Oxford); citation_title=BSR/BHPR guideline for disease-modifying anti-rheumatic drug (DMARD) therapy in consultation with the British Association of Dermatologists; citation_author=K Chakravarty, H Mcdonald, T Pullar; citation_publication_date=2008; citation_id=CR74; citation_journal_title=MMWR Recomm Rep; citation_title=Recommendations of the Advisory Committee on Immunization Practices (ACIP): use of vaccines and immune globulins in persons with altered immunocompetence; citation_author=; citation_volume=42; citation_issue=RR-4; citation_publication_date=1993; citation_pages=1-18; citation_id=CR75; Public Health Agency of Canada (2007) Passive Immunization. Canadian Immunization Guide. Part. Available from: 
                    http://www.phac-aspc.gc.ca/publicat/cig-gci/p05-01-eng.php
                    
                   (cited 2013 July 10); Australian Government, Department of Health and Ageing (2013) Passive immunisation. The Australian immunisation handbook, 10th edn. Part 5 Available from: 
                    http://www.health.gov.au/internet/immunise/publishing.nsf/Content/handbook10part5
                    
                   (cited 2013 July 10); Jong E, Freedman D (2012). Immunocompromised travelers. The yellow book. Chap 8. Centers for disease control and prevention. Available from: 
                    http://wwwnc.cdc.gov/travel/page/yellowbook-home-2012
                    
                   (cited 2013 July 10); Public Health Agency of Canada (2007) Recommended Immunizations. Immunization of travelers. Canadian Immunization Guide. Part 3. Available from: 
                    http://www.phac-aspc.gc.ca/publicat/cig-gci/p03-10-eng.php
                    
                   (cited 2013 July 10); Australian Government, Department of Health and Ageing (2013) Vaccination for international travel. The Australian immunisation handbook, 10th edn. Chap 3.2 Available from: 
                    http://www.health.gov.au/internet/immunise/publishing.nsf/Content/handbook10-3-2
                    
                   (cited 2013 July 10); citation_journal_title=Ann Rheum Dis; citation_title=EULAR recommendations for vaccination in adult patients with autoimmune inflammatory rheumatic diseases; citation_author=S Assen, N Agmon-Levin, O Elkayam; citation_volume=70; citation_issue=3; citation_publication_date=2011; citation_pages=414-422; citation_doi=10.1136/ard.2010.137216; citation_id=CR81; citation_journal_title=Autoimmun Rev; citation_title=Vaccination in adult patients with auto-immune inflammatory rheumatic diseases: a systematic literature review for the European League Against Rheumatism evidence-based recommendations for vaccination in adult patients with auto-immune inflammatory rheumatic diseases; citation_author=S Assen, O Elkayam, N Agmon-Levin; citation_volume=10; citation_issue=6; citation_publication_date=2011; citation_pages=341-352; citation_doi=10.1016/j.autrev.2010.12.003; citation_id=CR82; citation_journal_title=Am J Med; citation_title=Infection associated with asplenia: risks, mechanisms, and prevention; citation_author=B Styrt; citation_volume=88; citation_issue=5N; citation_publication_date=1990; citation_pages=33N-42N; citation_id=CR83; citation_journal_title=Clin Exp Immunol; citation_title=Antibody affinity and IgG subclass of responses to tetanus toxoid in patients with rheumatoid arthritis and systemic lupus erythematosus; citation_author=ME Devey, K Bleasdale, DA Isenberg; citation_volume=68; citation_issue=3; citation_publication_date=1987; citation_pages=562-569; citation_id=CR84; citation_journal_title=Lupus; citation_title=Safety and efficacy of hepatitis B vaccine in systemic lupus erythematosus; citation_author=KA Kuruma, EF Borba, MH Lopes, JF Carvalho, E Bonfa; citation_volume=16; citation_issue=5; citation_publication_date=2007; citation_pages=350-354; citation_doi=10.1177/0961203307078225; citation_id=CR85; citation_journal_title=Ann Rheum Dis; citation_title=Safety and efficacy of vaccination against hepatitis B in patients with rheumatoid arthritis; citation_author=O Elkayam, M Yaron, D Caspi; citation_volume=61; citation_issue=7; citation_publication_date=2002; citation_pages=623-625; citation_doi=10.1136/ard.61.7.623; citation_id=CR86; citation_journal_title=Clin Infect Dis; citation_title=Vaccination in patients with chronic rheumatic or autoimmune diseases; citation_author=T Gluck, U Muller-Ladner; citation_volume=46; citation_issue=9; citation_publication_date=2008; citation_pages=1459-1465; citation_doi=10.1086/587063; citation_id=CR87; citation_journal_title=Ann Rheum Dis; citation_title=Vaccination against influenza in patients with rheumatoid arthritis: the effect of rituximab on the humoral response; citation_author=S Oren, M Mandelboim, Y Braun-Moscovici; citation_volume=67; citation_issue=7; citation_publication_date=2007; citation_pages=937-941; citation_doi=10.1136/ard.2007.077461; citation_id=CR88; citation_journal_title=Arthritis Rheum; citation_title=Immunization responses in rheumatoid arthritis patients treated with rituximab: results from a controlled clinical trial; citation_author=CO Bingham, RJ Looney, A Deodhar; citation_volume=62; citation_issue=1; citation_publication_date=2010; citation_pages=64-74; citation_doi=10.1002/art.25034; citation_id=CR89; European Medicines Agency (2011) Assessment report: Prevenar 13. Available from: 
                    http://www.ema.europa.eu/docs/en_GB/document_library/EPAR_-_Assessment_Report_-_Variation/human/001104/WC500119784.pdf
                    
                   (cited 2013 July 29); US Department of Health and Human Services. Food and Drug Administration Vaccines and Related Biological Products Advisory Committee (VRBPAC) (2011) Adult indication briefing document: Prevnar 13. Available from: 
                    http://www.fda.gov/downloads/advisorycommittees/committeesmeetingmaterials/bloodvaccinesandotherbiologics/vaccinesandrelatedbiologicalproductsadvisorycommittee
                    
                   (cited 2013 July 29); European Medicines Agency (2011). Prevenar 13. Summary of product characteristics. Available from: 
                    http://www.ema.europa.eu/docs/en_GB/document_library/EPAR_-_Product_Information/human/001104/WC500057247.pdf
                    
                   (cited 2013 July 29)"			Excluded	Excluded	new_screen			2	Springer Link		Comparison of national clinical practice guidelines and recommendations on vaccination of adult patients with autoimmune rheumatic diseases	https://doi.org/10.1007/s00296-013-2907-9	Springer Link	nan; Pages; Year; Bibtex; Link
381	Behave	Completeness-Driven Development	Due to the steadily increasing complexity, the design of embedded systems faces serious challenges. To meet these challenges additional abstraction levels have been added to the conventional design flow resulting in Electronic System Level (ESL) design. Besides abstraction, the focus in ESL during the development of a system moves from design to verification, i.e. checking whether or not the system works as intended becomes more and more important. However, at each abstraction level only the validity of certain properties is checked. Completeness, i.e. checking whether or not the entire behavior of the design has been verified, is usually not continuously checked. As a result, bugs may be found very late causing expensive iterations across several abstraction levels. This delays the finalization of the embedded system significantly. In this work, we present the concept of Completeness-Driven Development (CDD). Based on suitable completeness measures, CDD ensures that the next step in the design process can only be entered if completeness at the current abstraction level has been achieved. This leads to an early detection of bugs and accelerates the whole design process. The application of CDD is illustrated by means of an example.	Abstraction Level; Acceptance Test; Transaction Level Modeling; Arithmetic Logic Unit; Test Drive Development	"Drechsler, Rolf; Diepenbeck, Melanie; Gro{\ss}e, Daniel; K{\""u}hne, Ulrich; Le, Hoang M.; Seiter, Julia; Soeken, Mathias; Wille, Robert"	International Conference on Graph Transformation	https://doi.org/10.1007/978-3-642-33654-6_3		38--50	"""@InProceedings{10.1007/978-3-642-33654-6_3,
    author = {Drechsler, Rolf and Diepenbeck, Melanie and Gro{\ss}e, Daniel and K{\""u}hne, Ulrich and Le, Hoang M. and Seiter, Julia and Soeken, Mathias and Wille, Robert},
    editor = {Ehrig, Hartmut and Engels, Gregor and Kreowski, Hans-J{\""o}rg and Rozenberg, Grzegorz},
    title = ""Completeness-Driven Development"",
    booktitle = ""Graph Transformations"",
    year = ""2012"",
    publisher = ""Springer Berlin Heidelberg"",
    address = ""Berlin, Heidelberg"",
    pages = ""38--50"",
    abstract = ""Due to the steadily increasing complexity, the design of embedded systems faces serious challenges. To meet these challenges additional abstraction levels have been added to the conventional design flow resulting in Electronic System Level (ESL) design. Besides abstraction, the focus in ESL during the development of a system moves from design to verification, i.e. checking whether or not the system works as intended becomes more and more important. However, at each abstraction level only the validity of certain properties is checked. Completeness, i.e. checking whether or not the entire behavior of the design has been verified, is usually not continuously checked. As a result, bugs may be found very late causing expensive iterations across several abstraction levels. This delays the finalization of the embedded system significantly. In this work, we present the concept of Completeness-Driven Development (CDD). Based on suitable completeness measures, CDD ensures that the next step in the design process can only be entered if completeness at the current abstraction level has been achieved. This leads to an early detection of bugs and accelerates the whole design process. The application of CDD is illustrated by means of an example."",
    isbn = ""978-3-642-33654-6""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Completeness-Driven Development	https://doi.org/10.1007/978-3-642-33654-6_3	Springer Berlin Heidelberg	nan; References; Link
382	Behave	Component architecture of model-based testing environment	In the paper, an approach to constructing architecture of tools for model-based testing that rely on modern component-based technologies is presented. One of the basic ideas underlying this approach consists in application of noninvasive composition techniques, which make it possible to integrate a set of independently developed components into a complex system and reconfigure it without modifying codes of the components. The approach suggested in the paper is one of the first applications of the component-based technologies to designing test systems. A prototype implementation of the suggested approach based on available libraries is described, and an example of its use for test construction is presented.	Artificial Intelligence; Test Suite; Behavior Model; Finite State Machine; Situation Model; Configuration File	V. V. Kuliamin	Programming and Computer Software	https://doi.org/10.1134/S036176881005004X	"citation_title=Component Software: Beyond Object-Oriented Programming; citation_publication_date=2002; citation_id=CR1; citation_author=C. Szyperski; citation_publisher=Addison-Wesley; Heineman, G.T. and Councill, W.T., Component-Based Software Engineering: Putting the Pieces Together, Addison-Wesley, 2001.; Parnas, D., Information Distribution Aspects of Design Methodology, Proc. of 1971 IFIP Congress, North Holland, 1971.; The Economic Impacts of Inadequate Infrastructure for Software Testing, Tassey, G., Ed., NIST Report, 2002.; Hamil, P., Unit Test Frameworks. Tools for High-Quality Software Development, O'Reilly Media, 2004.; http://www.junit.org
                    
                  .; Model-Based Testing of Reactive Systems. Advanced Lectures, Broy, M., Jonsson, B., Katoen, J.-P., Leucker, M., and Pretschner, A., Eds., Lecture Notes in Computer Science, vol. 3472, Springer, 2005.; Utting, M. and Legeard, B., Practical Model-Based Testing: A Tools Approach, Morgan-Kaufmann, 2007.; citation_journal_title=IEEE Trans. Software Engineering; citation_title=Using Test Oracles Generated from Program Documentation; citation_author=D. Peters, D. Parnas; citation_volume=24; citation_issue=3; citation_publication_date=1998; citation_pages=161-173; citation_doi=10.1109/32.667877; citation_id=CR9; Hoffman, D., Analysis of a Taxonomy for Test Oracles, Quality Week, 1998.; Baresi, L. and Young, M., Test Oracles, Tech. Report CIS-TR-01-02, 
                    http://www.cs.uoregon.edu/~michal/pubs/oracles.html
                    
                  .; citation_journal_title=Sci. Comput. Programming; citation_title=Statecharts: A Visual Formalism for Complex Systems; citation_author=D. Harel; citation_volume=8; citation_issue=3; citation_publication_date=1987; citation_pages=231-274; citation_doi=10.1016/0167-6423(87)90035-9; citation_id=CR12; Drusinsky, D., Modeling and Verification Using UML Statecharts, Elsevier, 2006.; citation_journal_title=J. Theor. Comput. Sci.; citation_title=A Theory of Timed Automata; citation_author=R. Alur, D.L. Dill; citation_volume=126; citation_issue=2; citation_publication_date=1994; citation_pages=183-235; citation_doi=10.1016/0304-3975(94)90010-8; citation_id=CR14; citation_journal_title=Theor. Comput. Sci.; citation_author=J. Springintveld, F. Vaandrager, P.R. T. T. A. D'Argenio; citation_volume=254; citation_issue=1-2; citation_publication_date=2001; citation_pages=225-257; citation_doi=10.1016/S0304-3975(99)00134-6; citation_id=CR15; citation_journal_title=ACM Computing Surveys; citation_title=Software Unit Test Coverage and Adequacy; citation_author=H. Zhu, P. Hall, J. May; citation_volume=29; citation_issue=4; citation_publication_date=1997; citation_pages=366-427; citation_doi=10.1145/267580.267590; citation_id=CR16; Kuliamin, V.V., Pakulin, N.V., Petrenko, O.L., Sortov, A.A., Khoroshilov, A.V., Requirement Formalization in Practice, Preprint of Inst. of System Programming, Russ. Acad. Sci., Moscow, 2006, no. 13.; Beck, K., Kent Beck's Guide to Better Smalltalk: A Sorted Collection, Cambridge Univ. Press, 1998.; http://sunit.sourceforge.net/
                    
                  .; Beust, C. and Suleiman, H., Next Generation Java Testing: TestNG and Advanced Concepts, Addison-Wesley, 2007.; http://testng.org/
                    
                  .; http://www.dbunit.org
                    
                  .; http://www.httpunit.org
                    
                  .; http://jbehave.org/
                    
                  .; http://nspecify.sourceforge.net/
                    
                  .; http://mockito.org/
                    
                  .; http://easymock.org/
                    
                  .; Tretmans, J. and Brinksma, E., TorX: Automated Model-Based Testing, Proc. of 1st Eur. Conf. on Model-Driven Software Engineering, Nuremberg, Germany, 2003, pp. 31-43.; http://fmt.cs.utwente.nl/tools/torx/introduction.html
                    
                  .; citation_journal_title=Lecture Notes in Computer Science; citation_title=Using On-the-Fly Verification Techniques for the Generation of Test Suites; citation_author=J.-C. Fernandez, C. Jard, T. Je-ron, L. Nedelka, C. Viho; citation_volume=1102; citation_publication_date=1996; citation_pages=348-359; citation_id=CR30; http://www.inrialpes.fr/vasy/cadp/man/tgv.html
                    
                  .; Ambert, F., Bouquet, F., Chemin, S., Guenaud, S., Legeard, B., Peureux, F., Vacelet, N., and Utting, M., Z-TT: A Tool-set for Test Generation from Z and B Using Constraint Logic Programming, Proc. of Formal Approaches to Testing of Software, Brno, Czech Republic, 2002, pp. 105-119.; Hartman, A. and Nagin, K., TCBeans Software Test Toolkit, Proc. of 12-th Int. Software Quality Week, 1999.; citation_journal_title=IBM Systems J.; citation_title=Using a Model-based Test Generator to Test for Standard Conformance; citation_author=E. Farchi, A. Hartman, S.S. Pinter; citation_volume=41; citation_issue=1; citation_publication_date=2002; citation_pages=89-110; citation_doi=10.1147/sj.411.0089; citation_id=CR34; http://www.conformiq.com/qtronic.php
                    
                  .; http://www.smartesting.com/index.php/cms/en/exp-lore/products
                    
                  .; citation_journal_title=Lecture Notes in Computer Science; citation_title=UniTesK Test Suite Architecture; citation_author=I. Bourdonov, A. Kossatchev, V. Kuliamin, A. Petrenko; citation_volume=2391; citation_publication_date=2002; citation_pages=77-88; citation_doi=10.1007/3-540-45614-7_5; citation_id=CR37; Kuliamin, V.V., Petrenko, A.K., Kossatchev, A.S., and Bourdonov, I.B., The UniTesK Approach to Designing Test Suites, Programmirovanie, 2003, no. 6, pp. 25-43 [Programming Comput. Software (Engl. Transl.), 2003, vol. 29, no. 6, pp. 310-322].; http://www.unitesk.ru
                    
                  .; citation_journal_title=Lecture Notes in Computer Science; citation_title=Testing Concurrent Object-Oriented Systems with Spec Explorer; citation_author=C. Campbell, W. Grieskamp, L. Nachmanson, W. Schulte, N. Tillmann, M. Veanes; citation_volume=582; citation_publication_date=2005; citation_pages=542-547; citation_doi=10.1007/11526841_38; citation_id=CR40; http://research.microsoft.com/en-us/projects/SpecExp-lrer/
                    
                  .; http://www.cs.waikato.ac.nz/~marku/mbt/modeljunit/
                    
                  .; Jacky, J., Veanes, M., Campbell, C., and Schulte, W., Model-based Software Testing and Analysis with C#, Cambridge Univ. Press, 2007.; http://nmodel.codeplex.com/
                    
                  .; http://mbt.tigris.org/
                    
                  .; Barnett, M., Fahndrich, M., de Halleux, P., Logozzo, F., and Tillmann, N., Exploiting the Synergy between Automated-Test-Generation and Programming-by-Contract, Proc. of ICSE 2009, Vancouver, Canada, 2009.; http://research.microsoft.com/en-us/projects/contracts/
                    
                  .; Kaner, C., Bach, J., and Pettichord, B., Lessons Learned in Software Testing, Wiley, 2002.; Kuliamin, V.V., Integration of Verification Methods for Program Systems, Programmirovanie, 2009, no. 4, pp. 41-55 [Programming Comput. Software (Engl. Transl.), 2009, vol. 35, no. 4, pp. 212-222].; citation_journal_title=Lecture Notes in Computer Science; citation_title=Practical Approach to Specification and Conformance Testing of Distributed Network Application; citation_author=V. Kuliamin, A. Petrenko, N. Pakoulin; citation_volume=3694; citation_publication_date=2005; citation_pages=68-83; citation_doi=10.1007/11560333_6; citation_id=CR50; Grinevich, A., Khoroshilov, A., Kuliamin, V., Markovtsev, D., Petrenko, A., and Rubanov, V., Formal Methods in Industrial Software Standards Enforcement, Proc. of PSI'2006, Novosibirsk, Russia, 2006.; Fowler, M., Inversion of Control Containers and the Dependency Injection Pattern, 2004. 
                    http://www.mar-tinfowler.com/articles/injection.html
                    
                  .; Johnson, R., Hoeller, J., Arendsen, A., Risberg, T., and Sampaleanu, C., Professional Java Development with the Spring Framework, Wrox, 2005.; http://www.springsource.org
                    
                  ."			Excluded	Excluded	new_screen			2	Springer Link		Component architecture of model-based testing environment	https://doi.org/10.1134/S036176881005004X	Springer Link	nan; Pages; Year; Bibtex; Link
383	Behave	Conceptual Design and Controller Testing	As you saw in Chapter 5, unit testing doesn't have to involve exhaustively covering every single line of code, or even every single method, with tests. There's a law of diminishing returns---and increasing difficulty---as you push the code coverage percentile ever higher. By taking a step back and looking at the design on a broader scale, it's possible to pick out the key areas of code that act as input/output junctures, and focus the tests on those areas.	Conceptual Design; Acceptance Criterion; Boundary Object; Unit Test; Test Scenario	Stephens, Matt; Rosenberg, Doug	Design Driven Testing	https://doi.org/10.1007/978-1-4302-2944-5_6		137--162	"""@Inbook{Stephens2010,
    author = ""Stephens, Matt and Rosenberg, Doug"",
    title = ""Conceptual Design and Controller Testing"",
    bookTitle = ""Design Driven Testing: Test Smarter, Not Harder"",
    year = ""2010"",
    publisher = ""Apress"",
    address = ""Berkeley, CA"",
    pages = ""137--162"",
    abstract = ""As you saw in Chapter 5, unit testing doesn't have to involve exhaustively covering every single line of code, or even every single method, with tests. There's a law of diminishing returns---and increasing difficulty---as you push the code coverage percentile ever higher. By taking a step back and looking at the design on a broader scale, it's possible to pick out the key areas of code that act as input/output junctures, and focus the tests on those areas."",
    isbn = ""978-1-4302-2944-5"",
    doi = ""10.1007/978-1-4302-2944-5\_6"",
    url = ""https://doi.org/10.1007/978-1-4302-2944-5\_6""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Conceptual Design and Controller Testing	https://doi.org/10.1007/978-1-4302-2944-5_6	Apress	nan; References; Link
384	Behave	VR Education Contents for Core Fundamental Nursing Skills	This educational content concerns fundamental nursing skills by using virtual reality. Blood sugar testing and the administration of insulin subcutaneous injection are two of the most frequently used among the 20 core fundamental nursing skills. The content pertaining to these tasks can be used for self-management education for diabetic patients. This contents designed a core fundamental nursing skill on immersive VR contents by dividing the learner's experience into three stages: guide, mission, and feedback with these skills. And it is designed by tracking the movement of the hand through finger joint recognition without using a controller for immerse in training. This content will help improve nursing students' clinical practice competency.	Core Fundamental Nursing Skills;  Finger Joint Recognition;  VR Education Contents;  Virtual Reality; Core Fundamental Nursing Skills, Finger Joint Recognition, VR Education Contents, Virtual Reality	Kim, Jungki; Lee, Youngsoo; Yu, Hye-Yon	SA '22: SIGGRAPH Asia 2022 XR	https://doi.org/10.1145/3550472.3558410		1-2	"""@inproceedings{10.1145/3550472.3558410,
    author = ""Kim, Jungki and Lee, Youngsoo and Yu, Hye-Yon"",
    title = ""VR Education Contents for Core Fundamental Nursing Skills"",
    year = ""2022"",
    isbn = ""9781450394734"",
    publisher = ""Association for Computing Machinery"",
    address = ""New York, NY, USA"",
    url = ""https://doi.org/10.1145/3550472.3558410"",
    doi = ""10.1145/3550472.3558410"",
    abstract = ""This educational content concerns fundamental nursing skills by using virtual reality. Blood sugar testing and the administration of insulin subcutaneous injection are two of the most frequently used among the 20 core fundamental nursing skills. The content pertaining to these tasks can be used for self-management education for diabetic patients. This contents designed a core fundamental nursing skill on immersive VR contents by dividing the learner's experience into three stages: guide, mission, and feedback with these skills. And it is designed by tracking the movement of the hand through finger joint recognition without using a controller for immerse in training. This content will help improve nursing students' clinical practice competency."",
    booktitle = ""SIGGRAPH Asia 2022 XR"",
    articleno = ""14"",
    numpages = ""2"",
    keywords = ""Core Fundamental Nursing Skills, Finger Joint Recognition, VR Education Contents, Virtual Reality"",
    location = ""Daegu, Republic of Korea"",
    series = ""SA '22""
}
"""	Excluded	Excluded	new_screen			2	ACM		Contents	https://dl.acm.org/doi/10.1145/3550472.3558410	Association for Computing Machinery	nan; References
385	Behave	Continuous Architecting with Microservices and DevOps: A Systematic Mapping Study	Context: Several companies are migrating their information systems into the Cloud. Microservices and DevOps are two of the most common adopted technologies. However, there is still a lack of understanding how to adopt a microservice-based architectural style and which tools and technique to use in a continuous architecting pipeline.	Cloud-native; Microservice; DevOps; Migration; Orchestration	Taibi, Davide; Lenarduzzi, Valentina; Pahl, Claus	International Conference on Cloud Computing and Services Science	https://doi.org/10.1007/978-3-030-29193-8_7		126--151	"""@InProceedings{10.1007/978-3-030-29193-8_7,
    author = ""Taibi, Davide and Lenarduzzi, Valentina and Pahl, Claus"",
    editor = ""Mu{\\textasciitilde {n}}oz, V{\'i}ctor M{\'e}ndez and Ferguson, Donald and Helfert, Markus and Pahl, Claus"",
    title = ""Continuous Architecting with Microservices and DevOps: A Systematic Mapping Study"",
    booktitle = ""Cloud Computing and Services Science"",
    year = ""2019"",
    publisher = ""Springer International Publishing"",
    address = ""Cham"",
    pages = ""126--151"",
    abstract = ""Context: Several companies are migrating their information systems into the Cloud. Microservices and DevOps are two of the most common adopted technologies. However, there is still a lack of understanding how to adopt a microservice-based architectural style and which tools and technique to use in a continuous architecting pipeline."",
    isbn = ""978-3-030-29193-8""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Continuous Architecting with Microservices and DevOps: A Systematic Mapping Study	https://doi.org/10.1007/978-3-030-29193-8_7	Springer International Publishing	nan; References; Link
386	Behave	An IDE Plugin for Gamified Continuous Integration	Interruptions and context switches resulting from meetings, urgent tasks, emails, and queries from colleagues contribute to productivity losses in developers' daily routines. This is particularly challenging for tasks like software testing, which are already perceived as less enjoyable, prompting developers to seek distractions. To mitigate this, applying gamification to testing activities can enhance motivation for test writing. One such gamification tool is Gamekins, which integrates challenges, quests, achievements, and leaderboards into the Jenkins CI (continuous integration) platform. However, as Gamekins is typically accessed through a browser, it introduces a context switch. This paper presents anIntelliJ plugindesigned to seamlessly integrate Gamekins' gamification elements into the IDE, aiming to minimize context switches and boost developer motivation for test writing.	gamification; IDE; IntelliJ; software testing; continuous integration	Philipp Straubinger; Gordon Fraser	IDE '24: Proceedings of the 1st ACM/IEEE Workshop on Integrated Development Environments	https://doi.org/10.1145/3643796.3648462		91-94		Excluded	Excluded	new_screen			2	ACM		Continuous Integration	https://dl.acm.org/doi/10.1145/3643796.3648462	Association for Computing Machinery	nan; References; Year; Bibtex
387	Behave	Controllers and Actions	Each time a request comes in to your ASP.NET MVC application, it's dealt with by a controller. The controller is the boss: it can do anything it likes to service that request. It can issue any set of commands to the underlying model tier or database, and it can choose to render any view back to the visitor. It's a .NET class into which you can add any logic needed to handle the request.	Action Method; Unit Test; Context Object; Virtual Property; Public Class	Sanderson, Steven	Pro ASP.NET MVC 2 Framework	https://doi.org/10.1007/978-1-4302-2887-5_9		283--324	"""@Inbook{Sanderson2010,
    author = ""Sanderson, Steven"",
    editor = ""Buckingham, Ewan and Andres, Clay and Anglin, Steve and Beckner, Mark and Buckingham, Ewan and Cornell, Gary and Gennick, Jonathan and Hassell, Jonathan and Lowman, Michelle and Moodie, Matthew and Parkes, Duncan and Pepper, Jeffrey and Pohlmann, Frank and Pundick, Douglas and Renow-Clarke, Ben and Shakeshaft, Dominic and Wade, Matt and Welsh, Tom and Collett, Anne and Larson, Damon"",
    title = ""Controllers and Actions"",
    bookTitle = ""Pro ASP.NET MVC 2 Framework"",
    year = ""2010"",
    publisher = ""Apress"",
    address = ""Berkeley, CA"",
    pages = ""283--324"",
    abstract = ""Each time a request comes in to your ASP.NET MVC application, it's dealt with by a controller. The controller is the boss: it can do anything it likes to service that request. It can issue any set of commands to the underlying model tier or database, and it can choose to render any view back to the visitor. It's a .NET class into which you can add any logic needed to handle the request."",
    isbn = ""978-1-4302-2887-5"",
    doi = ""10.1007/978-1-4302-2887-5\_9"",
    url = ""https://doi.org/10.1007/978-1-4302-2887-5\_9""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Controllers and Actions	https://doi.org/10.1007/978-1-4302-2887-5_9	Apress	nan; References; Link
388	Behave	Creating Automation Frameworks Using Appium	In this chapter, you will learn how to do the following	Automatic Framework; Behavior-driven Development (BDD); TestNG; Continuous Integration Tools; Maven Project	Garg, Shankar	Appium Recipes	https://doi.org/10.1007/978-1-4842-2418-2_5		101--127	"""@Inbook{Garg2016,
    author = ""Garg, Shankar"",
    title = ""Creating Automation Frameworks Using Appium"",
    bookTitle = ""Appium Recipes"",
    year = ""2016"",
    publisher = ""Apress"",
    address = ""Berkeley, CA"",
    pages = ""101--127"",
    abstract = ""In this chapter, you will learn how to do the following"",
    isbn = ""978-1-4842-2418-2"",
    doi = ""10.1007/978-1-4842-2418-2\_5"",
    url = ""https://doi.org/10.1007/978-1-4842-2418-2\_5""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Creating Automation Frameworks Using Appium	https://doi.org/10.1007/978-1-4842-2418-2_5	Apress	nan; References; Link
389	Behave	Cross-species protein sequence and gene structure prediction with fine-tuned Webscipio 2.0 and Scipio	BackgroundObtaining transcripts of homologs of closely related organisms and retrieving the reconstructed exon-intron patterns of the genes is a very important process during the analysis of the evolution of a protein family and the comparative analysis of the exon-intron structure of a certain gene from different species. Due to the ever-increasing speed of genome sequencing, the gap to genome annotation is growing. Thus, tools for the correct prediction and reconstruction of genes in related organisms become more and more important. The tool Scipio, which can also be used via the graphical interface WebScipio, performs significant hit processing of the output of the Blat program to account for sequencing errors, missing sequence, and fragmented genome assemblies. However, Scipio has so far been limited to high sequence similarity and unable to reconstruct short exons.ResultsScipio and WebScipio have fundamentally been extended to better reconstruct very short exons and intron splice sites and to be better suited for cross-species gene structure predictions. The Needleman-Wunsch algorithm has been implemented for the search for short parts of the query sequence that were not recognized by Blat. Those regions might either be short exons, divergent sequence at intron splice sites, or very divergent exons. We have shown the benefit and use of new parameters with several protein examples from completely different protein families in searches against species from several kingdoms of the eukaryotes. The performance of the new Scipio version has been tested in comparison with several similar tools.ConclusionsWith the new version of Scipio very short exons, terminal and internal, of even just one amino acid can correctly be reconstructed. Scipio is also able to correctly predict almost all genes in cross-species searches even if the ancestors of the species separated more than 100 Myr ago and if the protein sequence identity is below 80%. For our test cases Scipio outperforms all other software tested. WebScipio has been restructured and provides easy access to the genome assemblies of about 640 eukaryotic species. Scipio and WebScipio are freely accessible athttp://www.webscipio.org.	Query Sequence; Scalable Vector Graphic; Myosin Heavy Chain Gene; Short Exon; Dynein Heavy Chain	Klas Hatje; Oliver Keller; Bjorn Hammesfahr; Holger Pillmann; Stephan Waack; Martin Kollmar	BMC Research Notes	https://doi.org/10.1186/1756-0500-4-265	"citation_journal_title=Nature; citation_title=A decade's perspective on DNA sequencing technology; citation_author=ER Mardis; citation_volume=470; citation_issue=7333; citation_publication_date=2011; citation_pages=198-203; citation_doi=10.1038/nature09796; citation_id=CR1; citation_journal_title=Nature; citation_title=Genome sequence of the human malaria parasite Plasmodium falciparum; citation_author=MJ Gardner, N Hall, E Fung, O White, M Berriman, RW Hyman, JM Carlton, A Pain, KE Nelson, S Bowman; citation_volume=419; citation_issue=6906; citation_publication_date=2002; citation_pages=498-511; citation_doi=10.1038/nature01097; citation_id=CR2; citation_journal_title=Science; citation_title=Phytophthora genome sequences uncover evolutionary origins and mechanisms of pathogenesis; citation_author=BM Tyler, S Tripathy, X Zhang, P Dehal, RH Jiang, A Aerts, FD Arredondo, L Baxter, D Bensasson, JL Beynon; citation_volume=313; citation_issue=5791; citation_publication_date=2006; citation_pages=1261-1266; citation_doi=10.1126/science.1128796; citation_id=CR3; citation_journal_title=Nature; citation_title=Evolution of genes and genomes on the Drosophila phylogeny; citation_author=AG Clark, MB Eisen, DR Smith, CM Bergman, B Oliver, TA Markow, TC Kaufman, M Kellis, W Gelbart, VN Iyer; citation_volume=450; citation_issue=7167; citation_publication_date=2007; citation_pages=203-218; citation_doi=10.1038/nature06341; citation_id=CR4; citation_journal_title=Nature; citation_title=Evolution of pathogenicity and sexual reproduction in eight Candida genomes; citation_author=G Butler, MD Rasmussen, MF Lin, MA Santos, S Sakthikumar, CA Munro, E Rheinbay, M Grabherr, A Forche, JL Reedy; citation_volume=459; citation_issue=7247; citation_publication_date=2009; citation_pages=657-662; citation_doi=10.1038/nature08064; citation_id=CR5; citation_journal_title=Nature; citation_title=The Trichoplax genome and the nature of placozoans; citation_author=M Srivastava, E Begovic, J Chapman, NH Putnam, U Hellsten, T Kawashima, A Kuo, T Mitros, A Salamov, ML Carpenter; citation_volume=454; citation_issue=7207; citation_publication_date=2008; citation_pages=955-960; citation_doi=10.1038/nature07191; citation_id=CR6; citation_journal_title=Science; citation_title=Genomic analysis of organismal complexity in the multicellular green alga Volvox carteri; citation_author=SE Prochnik, J Umen, AM Nedelcu, A Hallmann, SM Miller, I Nishii, P Ferris, A Kuo, T Mitros, LK Fritz-Laylin; citation_volume=329; citation_issue=5988; citation_publication_date=2010; citation_pages=223-226; citation_doi=10.1126/science.1188800; citation_id=CR7; citation_journal_title=Methods Mol Biol; citation_title=Computational methods for ab initio and comparative gene finding; citation_author=E Picardi, G Pesole; citation_volume=609; citation_publication_date=2010; citation_pages=269-284; citation_doi=10.1007/978-1-60327-241-4_16; citation_id=CR8; citation_journal_title=BMC Bioinformatics; citation_title=Using ESTs to improve the accuracy of de novo gene prediction; citation_author=C Wei, MR Brent; citation_volume=7; citation_publication_date=2006; citation_pages=327; citation_doi=10.1186/1471-2105-7-327; citation_id=CR9; citation_journal_title=Genome Biol; citation_title=AUGUSTUS at EGASP: using EST, protein and genomic alignments for improved gene prediction in the human genome; citation_author=M Stanke, A Tzvetkova, B Morgenstern; citation_volume=7; citation_issue=Suppl 1; citation_publication_date=2006; citation_pages=S11 11-18; citation_doi=10.1186/gb-2006-7-s1-s11; citation_id=CR10; citation_journal_title=Genome Biol; citation_title=Drawing the tree of eukaryotic life based on the analysis of 2,269 manually annotated myosins from 328 species; citation_author=F Odronitz, M Kollmar; citation_volume=8; citation_issue=9; citation_publication_date=2007; citation_pages=R196; citation_doi=10.1186/gb-2007-8-9-r196; citation_id=CR11; citation_journal_title=Nucleic Acids Res; citation_title=Prevalence of intron gain over intron loss in the evolution of paralogous gene families; citation_author=VN Babenko, IB Rogozin, SL Mekhedov, EV Koonin; citation_volume=32; citation_issue=12; citation_publication_date=2004; citation_pages=3724-3733; citation_doi=10.1093/nar/gkh686; citation_id=CR12; citation_journal_title=Proc Natl Acad Sci USA; citation_title=Rates of intron loss and gain: implications for early eukaryotic evolution; citation_author=SW Roy, W Gilbert; citation_volume=102; citation_issue=16; citation_publication_date=2005; citation_pages=5773-5778; citation_doi=10.1073/pnas.0500383102; citation_id=CR13; citation_journal_title=BMC Bioinformatics; citation_title=Scipio: using protein sequences to determine the precise exon/intron structures of genes and their orthologs in closely related species; citation_author=O Keller, F Odronitz, M Stanke, M Kollmar, S Waack; citation_volume=9; citation_publication_date=2008; citation_pages=278; citation_doi=10.1186/1471-2105-9-278; citation_id=CR14; citation_journal_title=BMC Genomics; citation_title=WebScipio: an online tool for the determination of gene structures using protein sequences; citation_author=F Odronitz, H Pillmann, O Keller, S Waack, M Kollmar; citation_volume=9; citation_publication_date=2008; citation_pages=422; citation_doi=10.1186/1471-2164-9-422; citation_id=CR15; citation_journal_title=Genome Res; citation_title=BLAT--the BLAST-like alignment tool; citation_author=WJ Kent; citation_volume=12; citation_issue=4; citation_publication_date=2002; citation_pages=656-664; citation_doi=10.1101/gr.229202. Article published online before March 2002; citation_id=CR16; citation_journal_title=PLoS Genet; citation_title=SPA: a probabilistic algorithm for spliced alignment; citation_author=E van Nimwegen, N Paul, R Sheridan, M Zavolan; citation_volume=2; citation_issue=4; citation_publication_date=2006; citation_pages=e24; citation_doi=10.1371/journal.pgen.0020024; citation_id=CR17; The Perl Programming Language. [
                    http://www.perl.org
                    
                  ]; Ruby Programming Language. [
                    http://www.ruby-lang.org/
                    
                  ]; Ruby on Rails. [
                    http://rubyonrails.org
                    
                  ]; Prototype JavaScript framework: Easy Ajax and DOM manipulation for dynamic web applications. [
                    http://www.prototypejs.org
                    
                  ]; script.aculo.us - web 2.0 javascript. [
                    http://script.aculo.us
                    
                  ]; citation_journal_title=BMC Genomics; citation_title=Reconstructing the phylogeny of 21 completely sequenced arthropod species based on their motor proteins; citation_author=F Odronitz, S Becker, M Kollmar; citation_volume=10; citation_publication_date=2009; citation_pages=173; citation_doi=10.1186/1471-2164-10-173; citation_id=CR23; CyMoBase. [
                    http://www.cymobase.org/
                    
                  ]; citation_journal_title=BMC Genomics; citation_title=diArk--a resource for eukaryotic genome research; citation_author=F Odronitz, M Hellkamp, M Kollmar; citation_volume=8; citation_publication_date=2007; citation_pages=103; citation_doi=10.1186/1471-2164-8-103; citation_id=CR25; W3C SVG Working Group. [
                    http://www.w3.org/Graphics/SVG/
                    
                  ]; Inkscape. Draw Freely. [
                    http://inkscape.org
                    
                  ]; citation_title=BioRuby: Bioinformatics software for the Ruby programming language; citation_inbook_title=Bioinformatics; citation_publication_date=2010; citation_id=CR28; citation_author=N Goto; citation_author=P Prins; citation_author=M Nakao; citation_author=R Bonnal; citation_author=J Aerts; citation_author=T Katayama; The Official YAML Web Site. [
                    http://www.yaml.org/
                    
                  ]; purzelrakete's workling at master - GitHub. [
                    http://github.com/purzelrakete/workling
                    
                  ]; tra's spawn at master - GitHub. [
                    http://github.com/tra/spawn
                    
                  ]; Tokyo Cabinet: a modern implementation of DBM. [
                    http://fallabs.com/tokyocabinet/
                    
                  ]; Hoptoad: The app error app. [
                    http://hoptoadapp.com
                    
                  ]; RSpec.info: Home. [
                    http://rspec.info
                    
                  ]; Selenium web application testing system. [
                    http://seleniumhq.org
                    
                  ]; citation_journal_title=Proc Natl Acad Sci USA; citation_title=Organization of the human skeletal myosin heavy chain gene cluster; citation_author=SJ Yoon, SH Seiler, R Kucherlapati, L Leinwand; citation_volume=89; citation_issue=24; citation_publication_date=1992; citation_pages=12078-12082; citation_doi=10.1073/pnas.89.24.12078; citation_id=CR36; citation_journal_title=Nucleic Acids Res; citation_title=Intron-exon structures of eukaryotic model organisms; citation_author=M Deutsch, M Long; citation_volume=27; citation_issue=15; citation_publication_date=1999; citation_pages=3219-3228; citation_doi=10.1093/nar/27.15.3219; citation_id=CR37; citation_journal_title=Mol Biol Evol; citation_title=Paleontological evidence to date the tree of life; citation_author=MJ Benton, PC Donoghue; citation_volume=24; citation_issue=1; citation_publication_date=2007; citation_pages=26-53; citation_doi=10.1093/molbev/msl150; citation_id=CR38; Sayers EW, Barrett T, Benson DA, Bolton E, Bryant SH, Canese K, Chetvernin V, Church DM, DiCuccio M, Federhen S: Database resources of the National Center for Biotechnology Information. Nucleic Acids Res. 2011, D38-51. 39 Database; citation_journal_title=BMC Bioinformatics; citation_title=Automated generation of heuristics for biological sequence comparison; citation_author=GS Slater, E Birney; citation_volume=6; citation_publication_date=2005; citation_pages=31; citation_doi=10.1186/1471-2105-6-31; citation_id=CR40; citation_journal_title=Genome Biol; citation_title=Automatic annotation of eukaryotic genes, pseudogenes and promoters; citation_author=V Solovyev, P Kosarev, I Seledsov, D Vorobyev; citation_volume=7; citation_issue=Suppl 1; citation_publication_date=2006; citation_pages=S10 11-12; citation_doi=10.1186/gb-2006-7-s1-s10; citation_id=CR41; citation_journal_title=Genome Res; citation_title=Ab initio gene finding in Drosophila genomic DNA; citation_author=AA Salamov, VV Solovyev; citation_volume=10; citation_issue=4; citation_publication_date=2000; citation_pages=516-522; citation_doi=10.1101/gr.10.4.516; citation_id=CR42; citation_journal_title=Genome Res; citation_title=GeneWise and Genomewise; citation_author=E Birney, M Clamp, R Durbin; citation_volume=14; citation_issue=5; citation_publication_date=2004; citation_pages=988-995; citation_doi=10.1101/gr.1865504; citation_id=CR43; citation_journal_title=Genome Res; citation_title=Computational inference of homologous gene structures in the human genome; citation_author=RF Yeh, LP Lim, CB Burge; citation_volume=11; citation_issue=5; citation_publication_date=2001; citation_pages=803-816; citation_doi=10.1101/gr.175701; citation_id=CR44; citation_journal_title=Bioinformatics; citation_title=Gene prediction with a hidden Markov model and a new intron submodel; citation_author=M Stanke, S Waack; citation_volume=19; citation_issue=Suppl 2; citation_publication_date=2003; citation_pages=ii215-225; citation_doi=10.1093/bioinformatics/btg1080; citation_id=CR45; citation_journal_title=J Mol Biol; citation_title=Prediction of complete gene structures in human genomic DNA; citation_author=C Burge, S Karlin; citation_volume=268; citation_issue=1; citation_publication_date=1997; citation_pages=78-94; citation_doi=10.1006/jmbi.1997.0951; citation_id=CR46; citation_journal_title=Nucleic Acids Res; citation_title=Gapped BLAST and PSI-BLAST: a new generation of protein database search programs; citation_author=SF Altschul, TL Madden, AA Schaffer, J Zhang, Z Zhang, W Miller, DJ Lipman; citation_volume=25; citation_issue=17; citation_publication_date=1997; citation_pages=3389-3402; citation_doi=10.1093/nar/25.17.3389; citation_id=CR47"			Excluded	Excluded	new_screen			2	Springer Link		Cross-species protein sequence and gene structure prediction with fine-tuned Webscipio 2.0 and Scipio	https://doi.org/10.1186/1756-0500-4-265	Springer Link	nan; Pages; Year; Bibtex; Link
390	Behave	Data-Driven Usability Test Scenario Creation	In this paper, we present a data-driven approach to enable the creation of evidence-based usability test scenarios. By utilising product usage data to create usability test scenarios, we aim to improve the reliability of the test results and to provide better insights into product usability. The approach consists of four elements: the collection of product usage data, the transformation of these data into logs of user activities, the creation of models of user behaviour, and the guided creation of usability test scenarios based on the models. We discuss the challenges that can be encountered when applying this approach based on our experiences with two case studies in product development. We have created a prototype scenario planning tool and performed a preliminary evaluation of the tool with usability engineers working at Philips Healthcare. The evaluation shows that tool-supported evidence-based usability test creation would be valuable in their daily work.	User-centered design; Usability testing; Data-driven design; Process mining	van Eck, Maikel L.; Markslag, Else; Sidorova, Natalia; Brosens-Kessels, Angelique; van der Aalst, Wil M. P.	International Conference on Human-Centred Software Engineering	https://doi.org/10.1007/978-3-030-05909-5_6		88--108	"""@InProceedings{10.1007/978-3-030-05909-5_6,
    author = ""van Eck, Maikel L. and Markslag, Else and Sidorova, Natalia and Brosens-Kessels, Angelique and van der Aalst, Wil M. P."",
    editor = ""Bogdan, Cristian and Kuusinen, Kati and L{\'a}rusd{\'o}ttir, Marta Krist{\'i}n and Palanque, Philippe and Winckler, Marco"",
    title = ""Data-Driven Usability Test Scenario Creation"",
    booktitle = ""Human-Centered Software Engineering"",
    year = ""2019"",
    publisher = ""Springer International Publishing"",
    address = ""Cham"",
    pages = ""88--108"",
    abstract = ""In this paper, we present a data-driven approach to enable the creation of evidence-based usability test scenarios. By utilising product usage data to create usability test scenarios, we aim to improve the reliability of the test results and to provide better insights into product usability. The approach consists of four elements: the collection of product usage data, the transformation of these data into logs of user activities, the creation of models of user behaviour, and the guided creation of usability test scenarios based on the models. We discuss the challenges that can be encountered when applying this approach based on our experiences with two case studies in product development. We have created a prototype scenario planning tool and performed a preliminary evaluation of the tool with usability engineers working at Philips Healthcare. The evaluation shows that tool-supported evidence-based usability test creation would be valuable in their daily work."",
    isbn = ""978-3-030-05909-5""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Data-Driven Usability Test Scenario Creation	https://doi.org/10.1007/978-3-030-05909-5_6	Springer International Publishing	nan; References; Link
391	Behave	Design and deployment considerations for high performance MIMO testbeds	MIMO (Multiple Input Multiple Output) enabled systems are characterized by higher reliability and transmission rates, as compared to conventional SISO (Single Input Single Output) systems. However, unless administered properly, the MIMO technologymay notfacilitate very high throughputs on point-to-point wireless links. Therefore, it becomes imperative for the network architect to design such networks in ways that fully exploit the inherent properties of MIMO. In this paper, we first conduct an extensive experimental study, using a powerful hardware platform, in order to understand the behavior of MIMO links in different topological scenarios. Our experiments involve scenarios with MIMO links in isolation, as well as in competition with other MIMO and SISO links. Second, we perform measurements with different commercial platforms towards assessing the ability of each platform to efficiently support the MIMO technology. Based on our experimental observations we deduce that the CPU processing speed of the underlying hardware platform is an important factor that can hide the performance benefits of a MIMO enabled tranceiver. We comment on the applicability of the different hardware choices that we test; furthermore, we suggest the most appropriate choice for building a MIMO testbed, taking into account the cost, the extend-ability and the re-usability of the selected platform. Finally, having adopted this choice in our testbed design, we provide a description of our testbed architecture.	IEEE 802.11n; MIMO communications; testbed deployment; topology	Konstantinos Pelechrinis; Ioannis Broustis; Theodoros Salonidis; Srikanth V. Krishnamurthy; Prasant Mohapatra	WICON '08: Proceedings of the 4th Annual International Conference on Wireless Internet	https://doi.org/10.5555/1554126.1554192		1-9		Excluded	Excluded	new_screen			2	ACM		Deployment Considerations	https://dl.acm.org/doi/10.5555/1554126.1554192	ICST (Institute for Computer Sciences, Social-Informatics and Telecommunications Engineering)	nan; References; Year; Bibtex
392	Behave	Description and Analysis of Design Decisions: An Ontological Approach	A success software development process requires a good design stage. During the design, a set of decisions is made in order to improve the productivity, reduce costs for reimplementation and obtain reliable systems, in special for critical domains, such as bank management systems or systems for aeronautics. Nevertheless, it is not easy to find documentation about design decisions or tools which support this process. To address this issue, this article describes a solution based on ontologies to describe design decisions. In order to identify the main elements a systematic literature review was carried out. This review also helped to identify some of the most common design decisions. These elements were used to develop the ontology which allows answering the problem raised. This ontology could be a useful tool for architects and designers during the design stage of a system.	Ontology; Design decision; Software	Cruz Segura, Yordani; Silega Mart{\'i}nez, Nemury; Parra Fern{\'a}ndez, Ail{\'i}a; G{\'o}mez Baryolo, Oiner	International Conference on Technologies and Innovation	https://doi.org/10.1007/978-3-030-00940-3_13		174--185	"""@InProceedings{10.1007/978-3-030-00940-3_13,
    author = ""Cruz Segura, Yordani and Silega Mart{\'i}nez, Nemury and Parra Fern{\'a}ndez, Ail{\'i}a and G{\'o}mez Baryolo, Oiner"",
    editor = ""Valencia-Garc{\'i}a, Rafael and Alcaraz-M{\'a}rmol, Gema and Del Cioppo-Morstadt, Javier and Vera-Lucio, N{\'e}stor and Bucaram-Leverone, Martha"",
    title = ""Description and Analysis of Design Decisions: An Ontological Approach"",
    booktitle = ""Technologies and Innovation"",
    year = ""2018"",
    publisher = ""Springer International Publishing"",
    address = ""Cham"",
    pages = ""174--185"",
    abstract = ""A success software development process requires a good design stage. During the design, a set of decisions is made in order to improve the productivity, reduce costs for reimplementation and obtain reliable systems, in special for critical domains, such as bank management systems or systems for aeronautics. Nevertheless, it is not easy to find documentation about design decisions or tools which support this process. To address this issue, this article describes a solution based on ontologies to describe design decisions. In order to identify the main elements a systematic literature review was carried out. This review also helped to identify some of the most common design decisions. These elements were used to develop the ontology which allows answering the problem raised. This ontology could be a useful tool for architects and designers during the design stage of a system."",
    isbn = ""978-3-030-00940-3""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Description and Analysis of Design Decisions: An Ontological Approach	https://doi.org/10.1007/978-3-030-00940-3_13	Springer International Publishing	nan; References; Link
393	Behave	Promoting active aging through assistive product design innovation: a preference-based integrated design framework	http://link.springer.com/chapter/10.1007/978-1-4842-4303-9_3		Shailesh Kumar ShivakumarSourabhh Sethii		https://doi.org/doi:10.3389/fpubh.2023.1203830				Excluded	Excluded	new_screen			2	Pub Med Central		Design	https://www.ncbi.nlm.nih.gov/pmc/articles/PMC10315631/		nan; Venue; Authors; Abstract; Keywords; References; Pages; Year; Bibtex; Publisher
394	Behave	Design for the Decentralized World: Democratization of Blockchain-Based Software Design	The decentralized future is now. The blockchain technology and decentralized applications are changing the way we think about digital software products and the value they bring to our lives. Traditional ways of software design and development are not fully applicable, as there is no central authority to control, decide or direct the future of the product. The blockchain-based software is not controlled by anyone, and at the same time, it belongs to everyone, because the value is distributed among all members in the form of a cryptocurrency. Current product design workflows and methods combined with the blockchain technology need a transformation to become even more inclusive, democratic, autonomous, seek user participation and decision-making. The design solution that is accessible, usable and user-centered can be formed only through the optimization of the product around the users, rather than forcing the users to change their behavior to accommodate the product. Research methods like participatory and non-participatory observations, literature and white paper reviews, analyses, interviews with field experts, are all combined with case studies and explorations of decentralized technology, user-centered design, and democratization. All of which is united in the concept of the decentralized autonomous software, or DAS, which is a software that has decision-making mechanisms embedded in an open distributed peer-to-peer network, that requires vote-based human participation to determine the future direction of its lifecycle, development, and design.	Decentralization; Democratization; Blockchain-based software; User-centered design; Decentralized autonomous software	Vladislav Gladyshev; Qiong Wu	International Conference on Human-Computer Interaction	https://doi.org/10.1007/978-3-030-49760-6_5		74-86		Excluded	Excluded	new_screen			2	Springer Link		Design for the Decentralized World: Democratization of Blockchain-Based Software Design	https://link.springer.com/chapter/10.1007/978-3-030-49760-6_5	Springer, Cham	nan; References; Year; Bibtex
395	Behave	Fanning the Flames of Passion: A Develop Mindset Predicts Strategy-Use Intentions to Cultivate Passion	https://link.springer.com/chapter/10.1007/978-1-4842-1067-3_6		Tathagat Varma		https://doi.org/doi:10.3389/fpsyg.2021.634903				Excluded	Excluded	new_screen			2	Pub Med Central		Develop	https://www.ncbi.nlm.nih.gov/pmc/articles/PMC8375551/		nan; Venue; Authors; Abstract; Keywords; References; Pages; Year; Bibtex; Publisher
396	Behave	Developing a Spiral Curriculum for Teaching Agile at the National Software Academy	The National Software Academy (NSA) was established at Cardiff University in October 2016 as a centre of excellence for Applied Software Engineering. We work in partnership with Welsh Government and industry leaders to address the national shortage of software engineering graduates with the skills, knowledge, and hands-on experience required to be immediately effective as commercial software engineers. We run an innovative, industry-focused B.Sc. which uses agile methods to facilitate our project-based learning (PjBL) approach. The projects are provided by our network of industrial partners and are used across multiple modules as a basis for assessment across the disciplines. Although the degree course has yet to produce any graduates, a significant proportion already hold conditional job offers. A conversion M.Sc. in Applied Software Engineering for STEM graduates has also been developed, and will benefit from lessons learned as we continue to inspect and adapt the undergraduate degree programme. This chapter outlines how a spiral curriculum has been developed for teaching agile that progressively introduces complexity whilst building on previous learning.	Spiral learning; Agile project management; Project-based learning; Industrial collaboration; Applied software engineering	Osborne, James; Ivins, Wendy; Jones, Carl	Agile and Lean Concepts for Teaching and Learning	https://doi.org/10.1007/978-981-13-2751-3_15		303--323	"""@Inbook{Osborne2019,
    author = ""Osborne, James and Ivins, Wendy and Jones, Carl"",
    editor = ""Parsons, David and MacCallum, Kathryn"",
    title = ""Developing a Spiral Curriculum for Teaching Agile at the National Software Academy"",
    bookTitle = ""Agile and Lean Concepts for Teaching and Learning: Bringing Methodologies from Industry to the Classroom"",
    year = ""2019"",
    publisher = ""Springer Singapore"",
    address = ""Singapore"",
    pages = ""303--323"",
    abstract = ""The National Software Academy (NSA) was established at Cardiff University in October 2016 as a centre of excellence for Applied Software Engineering. We work in partnership with Welsh Government and industry leaders to address the national shortage of software engineering graduates with the skills, knowledge, and hands-on experience required to be immediately effective as commercial software engineers. We run an innovative, industry-focused B.Sc. which uses agile methods to facilitate our project-based learning (PjBL) approach. The projects are provided by our network of industrial partners and are used across multiple modules as a basis for assessment across the disciplines. Although the degree course has yet to produce any graduates, a significant proportion already hold conditional job offers. A conversion M.Sc. in Applied Software Engineering for STEM graduates has also been developed, and will benefit from lessons learned as we continue to inspect and adapt the undergraduate degree programme. This chapter outlines how a spiral curriculum has been developed for teaching agile that progressively introduces complexity whilst building on previous learning."",
    isbn = ""978-981-13-2751-3"",
    doi = ""10.1007/978-981-13-2751-3\_15"",
    url = ""https://doi.org/10.1007/978-981-13-2751-3\_15""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Developing a Spiral Curriculum for Teaching Agile at the National Software Academy	https://doi.org/10.1007/978-981-13-2751-3_15	Springer Singapore	nan; References; Link
397	Behave	Directed Multi-target Search Based Unit Tests Generation	Software testing costs are reduced by employing test automation. One of the automation activities is tests generation. The goal of tests generation is to generate tests with large code coverage with the efficient faults detection ability. Search-based tests generation methods are analysed and their experimental comparison is provided in this paper.	Unit tests generation; Unit testing; Search based software testing	Rud{\v{z}}ionien{\.{e}}, Greta; Packevi{\v{c}}ius, {\v{S}}ar{\={u}}nas; Barei{\v{s}}a, Eduardas	International Conference on Information and Software Technologies	https://doi.org/10.1007/978-3-030-30275-7_8		90--109	"""@InProceedings{10.1007/978-3-030-30275-7_8,
    author = ""Rud{\v{z}}ionien{\.{e}}, Greta and Packevi{\v{c}}ius, {\v{S}}ar{\={u}}nas and Barei{\v{s}}a, Eduardas"",
    editor = ""Dama{\v{s}}evi{\v{c}}ius, Robertas and Vasiljevien{\.{e}}, Giedr{\.{e}}"",
    title = ""Directed Multi-target Search Based Unit Tests Generation"",
    booktitle = ""Information and Software Technologies"",
    year = ""2019"",
    publisher = ""Springer International Publishing"",
    address = ""Cham"",
    pages = ""90--109"",
    abstract = ""Software testing costs are reduced by employing test automation. One of the automation activities is tests generation. The goal of tests generation is to generate tests with large code coverage with the efficient faults detection ability. Search-based tests generation methods are analysed and their experimental comparison is provided in this paper."",
    isbn = ""978-3-030-30275-7""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Directed Multi-target Search Based Unit Tests Generation	https://doi.org/10.1007/978-3-030-30275-7_8	Springer International Publishing	nan; References; Link
398	Behave	Documentation, Error Handling, Debugging, and Testing	In this chapter, we're going to look at the finer details of developing reliable programs: documentation, error handling, debugging, and testing. These tasks aren't what most people think of as ``development,'' but are as important to the overall process as general coding tasks. Without documenting, debugging, and testing your code, it's unlikely that anyone but you could work on the code with much success, and you run the risk of releasing faulty scripts and applications.		DiLeo, Carleton; Cooper, Peter	Beginning Ruby 3	https://doi.org/10.1007/978-1-4842-6324-2_8		215--246	"""@Inbook{DiLeo2021,
    author = ""DiLeo, Carleton and Cooper, Peter"",
    title = ""Documentation, Error Handling, Debugging, and Testing"",
    bookTitle = ""Beginning Ruby 3: From Beginner to Pro"",
    year = ""2021"",
    publisher = ""Apress"",
    address = ""Berkeley, CA"",
    pages = ""215--246"",
    abstract = ""In this chapter, we're going to look at the finer details of developing reliable programs: documentation, error handling, debugging, and testing. These tasks aren't what most people think of as ``development,'' but are as important to the overall process as general coding tasks. Without documenting, debugging, and testing your code, it's unlikely that anyone but you could work on the code with much success, and you run the risk of releasing faulty scripts and applications."",
    isbn = ""978-1-4842-6324-2"",
    doi = ""10.1007/978-1-4842-6324-2\_8"",
    url = ""https://doi.org/10.1007/978-1-4842-6324-2\_8""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Documentation, Error Handling, Debugging, and Testing	https://doi.org/10.1007/978-1-4842-6324-2_8	Apress	nan; Keywords; References; Link
399	Behave	Documenting, Testing, and Verifying	At this point you know many of the features and intricacies of the Haskell language and many of its libraries. This chapter won't teach you any more about the language but rather will focus on some tools that help you in the process of coding libraries and applications. These tools support good engineering practices within Haskell.		Serrano Mena, Alejandro	Practical Haskell	https://doi.org/10.1007/978-1-4842-4480-7_15		525--546	"""@Inbook{SerranoMena2019,
    author = ""Serrano Mena, Alejandro"",
    title = ""Documenting, Testing, and Verifying"",
    bookTitle = ""Practical Haskell: A Real World Guide to Programming"",
    year = ""2019"",
    publisher = ""Apress"",
    address = ""Berkeley, CA"",
    pages = ""525--546"",
    abstract = ""At this point you know many of the features and intricacies of the Haskell language and many of its libraries. This chapter won't teach you any more about the language but rather will focus on some tools that help you in the process of coding libraries and applications. These tools support good engineering practices within Haskell."",
    isbn = ""978-1-4842-4480-7"",
    doi = ""10.1007/978-1-4842-4480-7\_15"",
    url = ""https://doi.org/10.1007/978-1-4842-4480-7\_15""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Documenting, Testing, and Verifying	https://doi.org/10.1007/978-1-4842-4480-7_15	Apress	nan; Keywords; References; Link
400	Behave	Domain Modeling Based on Requirements Specification and Ontology	Domain model plays an important role in software development. Typically, it is a primary input to elaboration of a system model which in turn is translated into source code and related database schemas. Effective development of domain model is a part of requirement engineering during which domain experts are employed to identify domain entities and relationships among them. We claim that this task can be supported by the use of domain ontologies from which interesting knowledge can be extracted. The starting point to knowledge extraction is an existing requirements specification. In this paper, we investigate how the form of requirements specification influences the quality of extracted model. Some measures allowing to assess the quality are introduced. A case study has shown that in the most cases the simplified version of a requirements specification is enough to obtain a satisfactory domain model, however if the domain is very complex, the extended version of requirements specification could be necessary.	Ontology; Requirements specification; Domain modeling; Knowledge extraction	Dubielewicz, Iwona; Hnatkowska, Bogumi{\l}a; Huzar, Zbigniew; Tuzinkiewicz, Lech	Software Engineering: Challenges and Solutions	https://doi.org/10.1007/978-3-319-43606-7_3		31--45	"""@InProceedings{10.1007/978-3-319-43606-7_3,
    author = ""Dubielewicz, Iwona and Hnatkowska, Bogumi{\l}a and Huzar, Zbigniew and Tuzinkiewicz, Lech"",
    editor = ""Madeyski, Lech and {\'{S}}mia{\l}ek, Micha{\l} and Hnatkowska, Bogumi{\l}a and Huzar, Zbigniev"",
    title = ""Domain Modeling Based on Requirements Specification and Ontology"",
    booktitle = ""Software Engineering: Challenges and Solutions"",
    year = ""2017"",
    publisher = ""Springer International Publishing"",
    address = ""Cham"",
    pages = ""31--45"",
    abstract = ""Domain model plays an important role in software development. Typically, it is a primary input to elaboration of a system model which in turn is translated into source code and related database schemas. Effective development of domain model is a part of requirement engineering during which domain experts are employed to identify domain entities and relationships among them. We claim that this task can be supported by the use of domain ontologies from which interesting knowledge can be extracted. The starting point to knowledge extraction is an existing requirements specification. In this paper, we investigate how the form of requirements specification influences the quality of extracted model. Some measures allowing to assess the quality are introduced. A case study has shown that in the most cases the simplified version of a requirements specification is enough to obtain a satisfactory domain model, however if the domain is very complex, the extended version of requirements specification could be necessary."",
    isbn = ""978-3-319-43606-7""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Domain Modeling Based on Requirements Specification and Ontology	https://doi.org/10.1007/978-3-319-43606-7_3	Springer International Publishing	nan; References; Link
401	Behave	Domain V: Adaptive Planning	This is one of the most important chapters as far as the PMI-ACP exam is concerned. The chapter is fairly exhaustive in terms of coverage of many terms and key concepts that are required for Agile projects. Also the position of this chapter is apt, almost in the middle of the book, which reflects that planning takes the center stage in Agile projects and other domains revolve around it.	User Story; Agile Method; Product Owner; Technical Debt; Work Breakdown Structure	Sumanta Boral	Ace the PMI-ACP(r) exam	https://doi.org/10.1007/978-1-4842-2526-4_6		201-261		Excluded	Excluded	new_screen			2	Springer Link		Domain V: Adaptive Planning	https://link.springer.com/chapter/10.1007/978-1-4842-2526-4_6	Apress, Berkeley, CA	nan; References; Year; Bibtex
402	Behave	Domain VI: Problem Detection and Resolution	Agile teams are self-organized. At the beginning of every iteration, they collectively commit to deliver a certain scope within the timebox based on their capacity. However, even with the best of intentions, surprises do crop up in projects. A characteristics of self-organization involves dealing with problems, identifying them proactively, and responding appropriately by taking either preventive or corrective actions. In the two main sections of this chapter we look at two dimensions of problems -- first, which are uncertain and called risks. The other one is about the methods that Agile teams use to assure quality of their incremental deliverables.	Exploratory Testing; User Story; Continuous Integration; Pair Programming; Product Owner	Boral, Sumanta	Ace the PMI-ACP(r) exam	https://doi.org/10.1007/978-1-4842-2526-4_7		263--300	"""@Inbook{Boral2016,
    author = ""Boral, Sumanta"",
    title = ""Domain VI: Problem Detection and Resolution"",
    bookTitle = ""Ace the PMI-ACP(r) exam: A Quick Reference Guide for the Busy Professional"",
    year = ""2016"",
    publisher = ""Apress"",
    address = ""Berkeley, CA"",
    pages = ""263--300"",
    abstract = ""Agile teams are self-organized. At the beginning of every iteration, they collectively commit to deliver a certain scope within the timebox based on their capacity. However, even with the best of intentions, surprises do crop up in projects. A characteristics of self-organization involves dealing with problems, identifying them proactively, and responding appropriately by taking either preventive or corrective actions. In the two main sections of this chapter we look at two dimensions of problems -- first, which are uncertain and called risks. The other one is about the methods that Agile teams use to assure quality of their incremental deliverables."",
    isbn = ""978-1-4842-2526-4"",
    doi = ""10.1007/978-1-4842-2526-4\_7"",
    url = ""https://doi.org/10.1007/978-1-4842-2526-4\_7""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Domain VI: Problem Detection and Resolution	https://doi.org/10.1007/978-1-4842-2526-4_7	Apress	nan; References; Link
403	Behave	Editorial to the theme section on model-based testing	This theme on model-based testing (MBT) was organized in the context of advances in model-based testing (A-MOST) workshop series. Now in its fourteenth edition, this workshop covers all aspects of MBT from theoretical developments to industrial implementations. Following the twelfth edition in Chicago (2016), we invited the MBT community to submit their latest and finest research in the field via an open call. We selected seven articles that are presented in this theme section.	Computer simulation; Software engineering; Chicago; Industrial implementation; Model based testing; Theoretical development; Model checking; Computer simulation;  Software engineering;  Chicago;  Industrial implementation;  Model based testing;  Theoretical development;  Model checking	Papadakis, Mike; Ali, Shaukat; Perrouin, Gilles	SOFTWARE AND SYSTEMS MODELING	https://doi.org/10.1007/s10270-018-0699-9		795-796	"""@article{WOS:000464022400002,
    Author = ""Papadakis, Mike and Ali, Shaukat and Perrouin, Gilles"",
    Title = ""Editorial to the theme section on model-based testing"",
    Journal = ""SOFTWARE AND SYSTEMS MODELING"",
    Year = ""2019"",
    Volume = ""18"",
    Number = ""2"",
    Pages = ""795-796"",
    Month = ""APR"",
    Abstract = ""This theme on model-based testing (MBT) was organized in the context of advances in model-based testing (A-MOST) workshop series. Now in its fourteenth edition, this workshop covers all aspects of MBT from theoretical developments to industrial implementations. Following the twelfth edition in Chicago (2016), we invited the MBT community to submit their latest and finest research in the field via an open call. We selected seven articles that are presented in this theme section."",
    Publisher = ""SPRINGER HEIDELBERG"",
    Address = ""TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY"",
    Type = ""Editorial Material"",
    Language = ""English"",
    Affiliation = ""Perrouin, G (Corresponding Author), Univ Namur, Fac Comp Sci, PReCISE NADI, Rue Grandgagnage 21, B-5000 Namur, Belgium. Papadakis, Mike, Univ Luxembourg, Interdisciplinary Ctr Secur Reliabil \\& Trust, JFK Bldg,29 Ave JF Kennedy, L-1855 Luxembourg, Luxembourg. Ali, Shaukat, Simula Res Lab, Martin Linges Vei 25, N-1364 Fornebu, Norway. Perrouin, Gilles, Univ Namur, Fac Comp Sci, PReCISE NADI, Rue Grandgagnage 21, B-5000 Namur, Belgium."",
    DOI = ""10.1007/s10270-018-0699-9"",
    ISSN = ""1619-1366"",
    EISSN = ""1619-1374"",
    Research-Areas = ""Computer Science"",
    Web-of-Science-Categories = ""Computer Science, Software Engineering"",
    Author-Email = ""michail.papadakis@uni.lu shaukat@simula.no gilles.perrouin@unamur.be"",
    Affiliations = ""University of Luxembourg; University of Namur"",
    ResearcherID-Numbers = ""Ali, Shaukat/H-4121-2013 Perrouin, Gilles/I-1621-2019"",
    ORCID-Numbers = ""Papadakis, Mike/0000-0003-1852-2547 Perrouin, Gilles/0000-0002-8431-0377"",
    Number-of-Cited-References = ""0"",
    Times-Cited = ""0"",
    Usage-Count-Last-180-days = ""0"",
    Usage-Count-Since-2013 = ""0"",
    Journal-ISO = ""Softw. Syst. Model."",
    Doc-Delivery-Number = ""HS7AM"",
    Web-of-Science-Index = ""Science Citation Index Expanded (SCI-EXPANDED)"",
    Unique-ID = ""WOS:000464022400002"",
    OA = ""Bronze"",
    DA = ""2024-10-22""
}
"""	Excluded	Excluded	new_screen			2	Web of Science		Editorial to the theme section on model-based testing	https://www.webofscience.com/wos/woscc/full-record/WOS:000464022400002	SPRINGER HEIDELBERG	nan; References
404	Behave	Automated and effective testing of web services for XML injection attacks	XML is extensively used in web services for integration and data exchange. Its popularity and wide adoption make it an attractive target for attackers and a number of XML-based attack types have been reported recently. This raises the need for cost-effective, automated testing of web services to detect XML-related vulnerabilities, which is the focus of this paper. We discuss a taxonomy of the types of XML injection attacks and use it to derive four different ways to mutate XML messages, turning them into attacks (tests) automatically. Further, we consider domain constraints and attack grammars, and use a constraint solver to generate XML messages that are both malicious and valid, thus making it more difficult for any protection mechanism to recognise them. As a result, such messages have a better chance to detect vulnerabilities. Our evaluation on an industrial case study has shown that a large proportion (78.86%) of the attacks generated using our approach could circumvent the first layer of security protection, an XML gateway (firewall), a result that is much better than what a state-of-the-art tool based on fuzz testing could achieve.	XML injection; constraint solving; security testing	Sadeeq Jan; Cu D. Nguyen; Lionel C. Briand	ISSTA 2016: Proceedings of the 25th International Symposium on Software Testing and Analysis	https://doi.org/10.1145/2931037.2931042		12-23		Excluded	Excluded	new_screen			2	ACM		Effective Testing	https://dl.acm.org/doi/10.1145/2931037.2931042	Association for Computing Machinery	nan; References; Year; Bibtex
405	Behave	Efficient and Flexible Test Automation in Production Systems Engineering	Context and background: In Production Systems Engineering (PSE), software and systems testing are success-critical along the production automation life cycle to identify defects early and efficiently. Although test automation concepts enable continuous integration and tests during engineering and maintenance, tool chains are often hardwired, less flexible, and inefficient. Thus, there is a need for more flexible tool chains to support verification and validation of control code variants.Objective: In this book chapter, we (a) describe aflexible Test Automation Framework (TAF)to enable continuous integration and tests and (b) provide an adapted maintenance process to enable efficient verification and validation of control code variants.Method: We build on best practices from Software Engineering and Software Testing to establish a flexible TAF based onBehavior-Driven Testing. We use theAbstract Syntax Tree (AST)as foundation for human-based verification and validation. We developed an initial prototype derived from industry partners and used anIndustry 4.0 Testbedfor evaluation.Results and conclusion: First results of the prototype implementation with selected testing tools showed the capability of the TAF concept for supporting flexible configurations of testing tool chains. The AST concept can support  the human-based verification and validation of control code variants.	Production systems engineering; Test automation; Behavior-driven test; Model quality assurance; Verification and validation	Dietmar Winkler; Kristof Meixner; Petr Novak	Security and Quality in Cyber-Physical Systems Engineering	https://doi.org/10.1007/978-3-030-25312-7_9		227-265		Included	Included	new_screen			2	Springer Link		Efficient and Flexible Test Automation in Production Systems Engineering	https://link.springer.com/chapter/10.1007/978-3-030-25312-7_9	Springer, Cham	nan; References; Year; Bibtex
406	Behave	Engineering Multi-agent Systems with Statecharts	The purpose of this paper is to map the works in the Agent Oriented Software Engineering and Engineering Multi-agent Systems fields that use the statecharts paradigm to aid the software development process. We did not only focus on finding out the methods that employ statecharts, but also on identifying the application domains suitable for this kind of modeling. To achieve this goal we researched the available literature. We found out that statecharts are used by numerous methods that target diverse application domains such as robotics, internet agents, simulation, health and safety. Moreover, statecharts have been employed for modeling different things, such as the behaviour of agents, agent plans, agent interaction protocols. We also found reports of real-world systems and applications that were developed using these methods in the last 20 years and we identified trends and common characteristics that they have. Concluding, we have mapped the area where statecharts meet agent-oriented methodologies both in theory and practice. Moreover, we provide some exciting directions for future works.	Artificial Intelligence; Statecharts; Finite state machines; Agent-Oriented Software Engineering; Engineering Multi-agent Systems; Applications	Nikolaos I. Spanoudakis	SN Computer Science	https://doi.org/10.1007/s42979-021-00706-5	"citation_journal_title=Int J Autom Control.; citation_title=Self-adaptive large-scale SCADA system based on self-organised multi-agent systems; citation_author=HA Abbas, SI Shaheen, MH Amin; citation_volume=10; citation_issue=3; citation_publication_date=2016; citation_pages=234-66; citation_doi=10.1504/IJAAC.2016.077588; citation_id=CR1; Arai T, Stolzenburg F. Multiagent systems specification by UML statecharts aiming at intelligent manufacturing. In: Proceedings of the First International Joint Conference on Autonomous Agents and Multiagent Systems (AAMAS 2002): Part 1, pp. 11-8, 2002. 
                  https://doi.org/10.1145/544741.544745
                  
                .; citation_journal_title=IEEE Robot Autom Mag.; citation_title=Armar-6: a high-performance humanoid for human-robot collaboration in real-world scenarios; citation_author=T Asfour, M Waechter, L Kaul, S Rader, P Weiner, S Ottenhaus, R Grimm, Y Zhou, M Grotz, F Paus; citation_volume=26; citation_issue=4; citation_publication_date=2019; citation_pages=108-21; citation_doi=10.1109/MRA.2019.2941246; citation_id=CR3; citation_title=How to do things with words; citation_publication_date=1975; citation_id=CR4; citation_author=JL Austin; citation_publisher=Harvard University Press; citation_title=Developing multi-agent systems with JADE; citation_publication_date=2007; citation_id=CR5; citation_author=FL Bellifemine; citation_author=G Caire; citation_author=D Greenwood; citation_publisher=Wiley Series in Agent Technology Wiley; Bordini RH, Braubach L, Dastani M, Seghrouchni AEF, Gomez-Sanz JJ, Leite J, O'Hare G, Pokahr A, Ricci A. A survey of programming languages and platforms for multi-agent systems. Informatica. 2006;30(1).; citation_journal_title=J ACM (JACM).; citation_title=On communicating finite-state machines; citation_author=D Brand, P Zafiropulo; citation_volume=30; citation_issue=2; citation_publication_date=1983; citation_pages=323-42; citation_doi=10.1145/322374.322380; citation_id=CR7; citation_title=Extending the capability concept for flexible BDI agent modularization; citation_inbook_title=Programming multi-agent systems; citation_publication_date=2006; citation_pages=139-55; citation_id=CR8; citation_author=L Braubach; citation_author=A Pokahr; citation_author=W Lamersdorf; citation_publisher=Springer; citation_journal_title=Auton Agent Multi-Agent Syst.; citation_title=Tropos: an agent-oriented software development methodology; citation_author=P Bresciani, A Perini, P Giorgini, F Giunchiglia, J Mylopoulos; citation_volume=8; citation_issue=3; citation_publication_date=2004; citation_pages=203-36; citation_doi=10.1023/B:AGNT.0000018806.20944.ef; citation_id=CR9; Broad A, Argall B. Path planning under interface-based constraints for assistive robotics. In: Proceedings of the 26th International Conference on Automated Planning and Scheduling, ICAPS'16, p. 450-8. AAAI Press; 2016.; Crane ML, Dingel J. UML vs. classical vs. rhapsody statecharts: not all models are created equal. In: Briand L, Williams C, editors. Model driven engineering languages and systems. Berlin: Springer; 2005. p. 97-112.; citation_journal_title=Knowl Eng Rev.; citation_title=Programming multi-agent systems; citation_author=M Dastani; citation_volume=30; citation_issue=4; citation_publication_date=2015; citation_pages=394-418; citation_doi=10.1017/S0269888915000077; citation_id=CR12; Dastani M, van BirnaRiemsdijk M, Meyer JJC. Programming multi-agent systems in 3APL. In: Multi-agent programming. Springer: Berlin; 2005. p. 39-67.; DeLoach SA. Developing a multiagent conference management system using the O-MaSE process framework. In: Luck M, Padgham L (eds.) Agent-Oriented Software Engineering VIII: 8th International Workshop, AOSE 2007, Honolulu, HI, USA, May 14, 2007, Revised Selected Papers, pp. 168-181. Berlin: Springer; 2008. 
                  https://doi.org/10.1007/978-3-540-79488-2_13
                  
                .; citation_journal_title=Int J Agent-Oriented Softw Eng.; citation_title=O-MaSE: a customisable approach to designing and building complex, adaptive multi-agent systems; citation_author=SA DeLoach, JC Garcia-Ojeda; citation_volume=4; citation_issue=3; citation_publication_date=2010; citation_pages=244-80; citation_doi=10.1504/IJAOSE.2010.036984; citation_id=CR15; citation_journal_title=Int J Softw Eng Knowl Eng.; citation_title=Multiagent systems engineering; citation_author=SA DeLoach, MF Wood, CH Sparkman; citation_volume=11; citation_issue=03; citation_publication_date=2001; citation_pages=231-58; citation_doi=10.1142/S0218194001000542; citation_id=CR16; citation_journal_title=Electron Commer Res Appl.; citation_title=A formal approach to negotiating agents development; citation_author=M Dumas, G Governatori, AH Hofstede, P Oaks; citation_volume=1; citation_issue=2; citation_publication_date=2002; citation_pages=193-207; citation_doi=10.1016/S1567-4223(02)00016-9; citation_id=CR17; citation_journal_title=Electron Notes Theor Comput Sci.; citation_title=Propositional statecharts for agent interaction protocols; citation_author=H Dunn-Davies, R Cunningham, S Paurobally; citation_volume=134; citation_publication_date=2005; citation_pages=55-75; citation_doi=10.1016/j.entcs.2005.02.020; citation_id=CR18; citation_title=Automata, languages, and machines; citation_publication_date=1974; citation_id=CR19; citation_author=S Eilenberg; citation_publisher=Academic Press; citation_journal_title=Technol Econ Smart Grids Sustain Energy.; citation_title=Secure automated home energy management in multi-agent smart grid architecture; citation_author=H Elshaafi, M Vinyals, I Grimaldi, S Davy; citation_volume=3; citation_issue=1; citation_publication_date=2018; citation_pages=4; citation_doi=10.1007/s40866-018-0042-0; citation_id=CR20; citation_title=Mapping BPMN to Agents: An Analysis; citation_inbook_title=Agent, Web Services, and Ontologies Integrated Methodologies; citation_publication_date=2007; citation_pages=43-58; citation_id=CR21; citation_author=Holger Endert; citation_author=Tobias Kuster; citation_author=Benjamin Hirsch; citation_author=Sahin Albayrak; Fleischmann A. Limitations of choreography specifications with BPMN. In: International Conference on Subject-Oriented Business Process Management, pp. 203-16. Springer; 2020.; citation_journal_title=Int J Agent-Oriented Softw Eng.; citation_title=Using event-driven lightweight DSC-based agents for mas modelling; citation_author=G Fortino, A Garro, S Mascillaro, W Russo; citation_volume=4; citation_issue=2; citation_publication_date=2010; citation_pages=113-40; citation_doi=10.1504/IJAOSE.2010.032798; citation_id=CR23; citation_title=Statecharts-based JADE agents and tools for engineering multi-agent systems; citation_inbook_title=Knowledge-based and intelligent information and engineering systems; citation_publication_date=2010; citation_pages=240-50; citation_id=CR24; citation_author=G Fortino; citation_author=F Rango; citation_author=W Russo; citation_publisher=Springer; citation_journal_title=Eng Appl Artif Intell.; citation_title=Translation of statechart agents into a BDI framework for MAS engineering; citation_author=G Fortino, F Rango, W Russo, C Santoro; citation_volume=41; citation_publication_date=2015; citation_pages=287-97; citation_doi=10.1016/j.engappai.2015.01.012; citation_id=CR25; citation_journal_title=Inf Softw Technol.; citation_title=A statecharts-based software development process for mobile agents; citation_author=G Fortino, W Russo, E Zimeo; citation_volume=46; citation_issue=13; citation_publication_date=2004; citation_pages=907-21; citation_doi=10.1016/j.infsof.2004.04.005; citation_id=CR26; citation_title=Modeling an educational multi-agent system in MaSE; citation_inbook_title=Active Media Technol; citation_publication_date=2009; citation_pages=335-46; citation_id=CR27; citation_author=ISB Gago; citation_author=VMB Werneck; citation_author=RM Costa; citation_publisher=Springer; citation_journal_title=Analele Universitatii din Timisoara Seria Matematica-Informatica.; citation_title=JADE-based multi-agent E-commerce environment: initial implementation; citation_author=M Ganzha, M Paprzycki, A Pirvanescu, C Badica, A Abraham; citation_volume=42; citation_publication_date=2005; citation_pages=79-100; citation_id=CR28; Giese H, Burmester S, Klein F, Schilling D, Tichy M. Multi-agent system design for safety-critical self-optimizing mechatronic systems with uml. In: OOPSLA 2003--Second International Workshop on Agent-Oriented Methodologies, pp. 21-32. 2003.; citation_journal_title=IEEE Trans Comput Aided Des Integr Circuits Syst.; citation_title=Hierarchical finite state machines with multiple concurrency models; citation_author=A Girault, B Lee, EA Lee; citation_volume=18; citation_issue=6; citation_publication_date=1999; citation_pages=742-60; citation_doi=10.1109/43.766725; citation_id=CR30; Goldsby HJ, Cheng BH, McKinley PK, Knoester DB, Ofria CA. Digital evolution of behavioral models for autonomic systems. In: Proceedings of the 5th IEEE International Conference on Autonomic Computing (ICAC 2008), pp. 87-96. Los Alamitos: IEEE Computer Society; 2008.; citation_journal_title=Softw Syst Model.; citation_title=Mixed-semantics composition of statecharts for the component-based design of reactive systems; citation_author=B Graics, V Molnar, A Voros, I Majzik, D Varro; citation_volume=19; citation_issue=6; citation_publication_date=2020; citation_pages=1483-517; citation_doi=10.1007/s10270-020-00806-5; citation_id=CR32; citation_journal_title=Auton Agent Multi-Agent Syst.; citation_title=A platform-independent metamodel for multiagent systems; citation_author=C Hahn, C Madrigal-Mora, K Fischer; citation_volume=18; citation_issue=2; citation_publication_date=2009; citation_pages=239-66; citation_doi=10.1007/s10458-008-9042-0; citation_id=CR33; citation_journal_title=Sci Comput Progr.; citation_title=Statecharts: a visual formalism for complex systems; citation_author=D Harel; citation_volume=8; citation_issue=3; citation_publication_date=1987; citation_pages=231-74; citation_doi=10.1016/0167-6423(87)90035-9; citation_id=CR34; Harel D, Kugler H. The rhapsody semantics of statecharts (or, on the executable core of the uml). In: Ehrig H, Damm W, Desel J, Grosse-Rhode M, Reif W, Schnieder E, Westkamper E (eds) Integration of Software Specification Techniques for Applications in Engineering: Priority Program SoftSpez of the German Research Foundation (DFG), Final Report, pp. 325-54. Berlin: Springer; 2004. 
                  https://doi.org/10.1007/978-3-540-27863-4_19
                  
                .; citation_journal_title=ACM Trans Softw Eng Methodol (TOSEM).; citation_title=The statemate semantics of statecharts; citation_author=D Harel, A Naamad; citation_volume=5; citation_issue=4; citation_publication_date=1996; citation_pages=293-333; citation_doi=10.1145/235321.235322; citation_id=CR36; citation_journal_title=Artif Intell.; citation_title=A blackboard architecture for control; citation_author=B Hayes-Roth; citation_volume=26; citation_issue=3; citation_publication_date=1985; citation_pages=251-321; citation_doi=10.1016/0004-3702(85)90063-3; citation_id=CR37; citation_title=Agent-oriented methodologies; citation_publication_date=2005; citation_id=CR38; citation_publisher=Idea Group Publishing; Hippolyte JL, Howell S, Yuce B, Mourshed M, Sleiman HA, Vinyals M, Vanhee L. Ontology-based demand-side flexibility management in smart grids using a multi-agent system. In: 2016 IEEE International Smart Cities Conference (ISC2), pp. 1-7. IEEE; 2016.; citation_journal_title=IEEE Int Comput.; citation_title=Agent UML notation for multiagent system design; citation_author=MP Huget; citation_volume=8; citation_issue=4; citation_publication_date=2004; citation_pages=63-71; citation_doi=10.1109/MIC.2004.6; citation_id=CR40; Huget MP, Odell J. Representing agent interaction protocols with agent UML. In: International Workshop on Agent-Oriented Software Engineering, pp. 16-30. Springer; 2004.; citation_journal_title=Auton Agent Multi-Agent Syst.; citation_title=An integrated trust and reputation model for open multi-agent systems; citation_author=TD Huynh, NR Jennings, NR Shadbolt; citation_volume=13; citation_issue=2; citation_publication_date=2006; citation_pages=119-54; citation_doi=10.1007/s10458-005-6825-4; citation_id=CR42; citation_journal_title=Commun ACM.; citation_title=Human-agent collectives; citation_author=NR Jennings, L Moreau, D Nicholson, S Ramchurn, S Roberts, T Rodden, A Rogers; citation_volume=57; citation_issue=12; citation_publication_date=2014; citation_pages=80-8; citation_doi=10.1145/2629559; citation_id=CR43; citation_journal_title=Comput Lang Syst Struct.; citation_title=Special issue on model-driven engineering of multi-agent systems in theory and practice; citation_author=G Kardas, JJ Gomez-Sanz; citation_volume=50; citation_publication_date=2017; citation_pages=140-1; citation_doi=10.1016/j.cl.2017.07.002; citation_id=CR44; citation_title=Model-based design of computer-controlled game character behavior; citation_inbook_title=Model driven engineering languages and systems; citation_publication_date=2007; citation_pages=650-65; citation_id=CR45; citation_author=J Kienzle; citation_author=A Denault; citation_author=H Vangheluwe; citation_publisher=Springer; Kir H, Erdogan N. A knowledge-intensive adaptive business process management framework. Inf Syst. 2021;95. 
                  https://doi.org/10.1016/jis2020101639
                  
                .; citation_title=MDA explained: the model driven architecture: practice and promise; citation_publication_date=2003; citation_id=CR47; citation_author=AG Kleppe; citation_author=J Warmer; citation_author=W Bast; citation_publisher=Addison-Wesley; citation_title=State-based modeling method for multiagent conversation protocols and decision activities; citation_inbook_title=Agent technologies, infrastructures, tools, and applications for E-services; citation_publication_date=2003; citation_pages=151-66; citation_id=CR48; citation_author=R Konig; citation_publisher=Springer; citation_title=Developing multiagent systems with agenttool; citation_inbook_title=Intelligent agents VII agent theories architectures and languages; citation_publication_date=2001; citation_pages=46-60; citation_id=CR49; citation_author=SAD Loach; citation_author=M Wood; citation_publisher=Springer; Marron A, Hacohen Y, Harel D, Mulder A, Terfloth A. Embedding scenario-based modeling in statecharts. In: MODELS workshops, pp. 443-52. 2018.; Marron A, Limonad L, Pollack S, Harel D. Expecting the unexpected: developing autonomous-system design principles for reacting to unpredicted events and conditions. 2020.; Mazouzi H, Seghrouchni AEF, Haddad S. Open protocol design for complex interactions in multi-agent systems. In: Proceedings of the First International Joint Conference on Autonomous Agents and Multiagent Systems (AAMAS 2002): Part 2, AAMAS '02, pp. 517-26. New York: Association for Computing Machinery; 2002. 
                  https://doi.org/10.1145/544862.544866
                  
                .; McBurney P, Parsons S. Dialogue games for agent argumentation. In: Simari G, Rahwan I, editors. Argumentation in artificial intelligence. Boston: Springer; 2009. p. 261-80. 
                  https://doi.org/10.1007/978-0-387-98197-0_13
                  
                .; citation_journal_title=Softw Syst Model.; citation_title=A method for testing and validating executable statechart models; citation_author=T Mens, A Decan, NI Spanoudakis; citation_volume=18; citation_issue=2; citation_publication_date=2019; citation_pages=837-63; citation_doi=10.1007/s10270-018-0676-3; citation_id=CR54; citation_title=On conversation policies and the need for exceptions; citation_inbook_title=Issues in agent communication; citation_publication_date=2000; citation_pages=144-59; citation_id=CR55; citation_author=SA Moore; citation_publisher=Springer; Moraitis P, Petraki E, Spanoudakis NI. Engineering JADE agents with the Gaia Methodology. In: Carbonell JG, Siekmann J, Kowalczyk R, Muller JP, Tianfield H, Unland R, editors. Agent technologies, infrastructures, tools, and applications for E-services, lecture notes in computer science, vol. 2592. Berlin: Springer; 2003. p. 77-91. 
                  https://doi.org/10.1007/3-540-36559-1
                  
                .; citation_title=Providing advanced, personalised infomobility services using agent technology; citation_inbook_title=Applications and innovations in intelligent systems XI; citation_publication_date=2004; citation_pages=35-48; citation_id=CR57; citation_author=P Moraitis; citation_author=E Petraki; citation_author=NI Spanoudakis; citation_publisher=Springer; citation_journal_title=Appl Artif Intell.; citation_title=The GAIA2JADE process for multi-agent systems development; citation_author=P Moraitis, N Spanoudakis; citation_volume=20; citation_issue=2-4; citation_publication_date=2006; citation_pages=251-73; citation_doi=10.1080/08839510500484249; citation_id=CR58; citation_title=An overview of distributed artificial intelligence; citation_inbook_title=Foundations of distributed artificial intelligence; citation_publication_date=1996; citation_id=CR59; citation_author=B Moulin; citation_author=B Chaib-Draa; citation_publisher=Wiley; citation_title=Specifying agent behaviors with UML statecharts and statedit; citation_inbook_title=RoboCup 2003: Robot Soccer World Cup VII; citation_publication_date=2004; citation_pages=145-56; citation_id=CR60; citation_author=J Murray; citation_publisher=Springer; citation_title=Robolog koblenz 2000; citation_inbook_title=RoboCup 2000: Robot Soccer World Cup IV; citation_publication_date=2001; citation_pages=469-72; citation_id=CR61; citation_author=J Murray; citation_author=O Obst; citation_author=F Stolzenburg; citation_publisher=Springer; citation_journal_title=Int J Comput Integr Manuf.; citation_title=A hybrid simulation-based assessment framework of smart manufacturing systems; citation_author=K Nagadi, L Rabelo, M Basingab, AT Sarmiento, A Jones, A Rahal; citation_volume=31; citation_issue=2; citation_publication_date=2018; citation_pages=115-28; citation_doi=10.1080/0951192X.2017.1407449; citation_id=CR62; Nickel U, Niere J, Zundorf A. The FUJABA environment. In: Proceedings of the 22nd International Conference on Software Engineering, ICSE '00, pp. 742-5. Association for Computing Machinery; 2000. 
                  https://doi.org/10.1145/337180.337620
                  
                .; citation_journal_title=J Artif Intell Res.; citation_title=Teleo-reactive programs for agent control; citation_author=N Nilsson; citation_volume=1; citation_publication_date=1994; citation_pages=139-58; citation_doi=10.1613/jair.30; citation_id=CR64; citation_journal_title=Appl Artif Intell.; citation_title=Zeus: a toolkit for building distributed multiagent systems; citation_author=HS Nwana, DT Ndumu, LC Lee, JC Collis; citation_volume=13; citation_issue=1-2; citation_publication_date=1999; citation_pages=129-85; citation_doi=10.1080/088395199117513; citation_id=CR65; Obst O. Specifying rational agents with statecharts and utility functions. In: Birk A, Coradeschi S, Tadokoro S, editors. RoboCup 2001: Robot Soccer World Cup V. Berlin: Springer; 2002. p. 173-82.; Ozik J, Collier N, Combs T, Macal CM, Northe M. Repast simphony statecharts. J Artif Soc Soc Simul. 2015;18(3):11. 
                  https://doi.org/10.18564/jasss.2840
                  
                .; citation_title=Extending the kouretes statechart editor for generic agent behavior development; citation_inbook_title=Artificial intelligence applications and innovations; citation_publication_date=2014; citation_pages=182-92; citation_id=CR68; citation_author=GL Papadimitriou; citation_author=NI Spanoudakis; citation_author=MG Lagoudakis; citation_publisher=Springer; Paraschos A, Spanoudakis NI, Lagoudakis MG. Model-driven behavior specification for robotic teams. In: Proceedings of the 11th International Conference on Autonomous Agents and Multiagent Systems--Volume 1, pp. 171-8. International Foundation for Autonomous Agents and Multiagent Systems; 2012.; citation_title=Developing agent interaction protocols using graphical and logical methodologies; citation_inbook_title=Programming multi-agent systems; citation_publication_date=2004; citation_pages=149-68; citation_id=CR70; citation_author=S Paurobally; citation_author=J Cunningham; citation_author=NR Jennings; citation_publisher=Springer; Rao AS, Georgeff MP. Modeling rational agents within a BDI-architecture. KR. 1991, pp. 473-84.; citation_journal_title=IEEE Trans Software Eng.; citation_title=Explaining software developer acceptance of methodologies: a comparison of five theoretical models; citation_author=CK Riemenschneider, BC Hardgrave, FD Davis; citation_volume=28; citation_issue=12; citation_publication_date=2002; citation_pages=1135-45; citation_doi=10.1109/TSE.2002.1158287; citation_id=CR72; citation_title=Artificial intelligence: a modern approach; citation_publication_date=2010; citation_id=CR73; citation_author=S Russell; citation_author=P Norvig; citation_publisher=Prentice Hall; citation_journal_title=J Logic Comput.; citation_title=Engineering executable agents using multi-context systems; citation_author=J Sabater, C Sierra, S Parsons, NR Jennings; citation_volume=12; citation_issue=3; citation_publication_date=2002; citation_pages=413-42; citation_doi=10.1093/logcom/12.3.413; citation_id=CR74; Sakellariou I. Agent based modelling and simulation using state machines. In: Second International Conference on Simulation and Modeling Methodologies, Technologies and Applications (SIMULTECH 2012), pp. 270-9; 2012.; citation_journal_title=J Syst Softw.; citation_title=Embedding statecharts into teleo-reactive programs to model interactions between agents; citation_author=P Sanchez, B Alvarez, R Martinez, A Iborra; citation_volume=131; citation_publication_date=2017; citation_pages=78-97; citation_doi=10.1016/j.jss.2017.05.081; citation_id=CR76; citation_journal_title=IEEE Softw.; citation_title=The pragmatics of model-driven development; citation_author=B Selic; citation_volume=20; citation_issue=5; citation_publication_date=2003; citation_pages=19-25; citation_doi=10.1109/MS.2003.1231146; citation_id=CR77; citation_title=Modeling and testing agent systems based on statecharts; citation_inbook_title=Applying formal methods: testing, performance, and M/E-commerce; citation_publication_date=2004; citation_pages=308-21; citation_id=CR78; citation_author=HS Seo; citation_author=T Araragi; citation_author=YR Kwon; citation_publisher=Springer; Sethuraman A, Yalla KK, Sarin A, Gorthi RP. Agents assisted software project management. In: Proceedings of the 1st Bangalore Annual Compute Conference, COMPUTE '08. New York: Association for Computing Machinery; 2008. 
                  https://doi.org/10.1145/1341771.1341777
                  
                .; citation_journal_title=J Med Syst.; citation_title=Implementing an integrative multi-agent clinical decision support system with open source software; citation_author=JS Shirabad, S Wilk, W Michalowski, K Farion; citation_volume=36; citation_issue=1; citation_publication_date=2012; citation_pages=123-37; citation_doi=10.1007/s10916-010-9452-9; citation_id=CR80; citation_journal_title=Artif Life.; citation_title=Netlogo, a multi-agent simulation environment; citation_author=E Sklar; citation_volume=13; citation_issue=3; citation_publication_date=2007; citation_pages=303-11; citation_doi=10.1162/artl.2007.13.3.303; citation_id=CR81; Smarsly K, Hartmann D. Agent-oriented development of hybrid wind turbine monitoring systems. In: Proceedings of ISCCBE International Conference on Computing in Civil and Building Engineering and the EG-ICE Workshop on Intelligent Computing in Engineering; 2010.; Smarsly K, Law KH. Advanced structural health monitoring based on multi-agent technology. Computation for Humanity: Information Technology to Advance Society. 2012.; Spanoudakis N, Akasiadis C, Kechagias G, Chalkiadakis G. An Open MAS Services Architecture for the V2G/G2V Problem. In: Proceedings of the 18th International Conference on Autonomous Agents and MultiAgent Systems, pp. 2198-200. 2019.; Spanoudakis N, Moraitis P. An agent modeling language implementing protocols through capabilities. In: Proceedings of the 2008 IEEE/WIC/ACM International Conference on Web Intelligence and Intelligent Agent Technology-Volume 02, pp. 578-82. IEEE Computer Society; 2008.; citation_journal_title=Eng Intell Syst.; citation_title=Engineering an agent-based system for product pricing automation; citation_author=N Spanoudakis, P Moraitis; citation_volume=17; citation_issue=2; citation_publication_date=2009; citation_pages=139; citation_id=CR86; citation_title=Gaia agents implementation through models transformation; citation_inbook_title=Principles of practice in multi-agent systems; citation_publication_date=2009; citation_pages=127-42; citation_id=CR87; citation_author=N Spanoudakis; citation_author=P Moraitis; citation_publisher=Springer; citation_journal_title=IEEE Intell Syst.; citation_title=Engineering ambient intelligence systems using agent technology; citation_author=N Spanoudakis, P Moraitis; citation_volume=30; citation_issue=3; citation_publication_date=2015; citation_pages=60-7; citation_doi=10.1109/MIS.2015.3; citation_id=CR88; Spanoudakis NI. Statecharts and AOSE: the past and the future. In: Multi-Agent Systems--17th European Conference, EUMAS 2020. Springer; 2020.; citation_journal_title=Int J Agent-Oriented Softw Eng.; citation_title=Validating mas analysis models with the ASEME methodology; citation_author=NI Spanoudakis, E Floros, N Mitakidis, P Delias; citation_volume=6; citation_issue=2; citation_publication_date=2018; citation_pages=211-40; citation_doi=10.1504/IJAOSE.2018.094380; citation_id=CR90; Spanoudakis NI, Moraitis P. The ASEME methodology. Int J Agent-Oriented Softw Eng (in press); citation_journal_title=Sci Comput Progr.; citation_title=Structure and behavior preserving statecharts refinements; citation_author=E Syriani, V Sousa, L Lucio; citation_volume=170; citation_publication_date=2019; citation_pages=45-79; citation_doi=10.1016/j.scico.2018.10.005; citation_id=CR92; citation_journal_title=IEEE Softw.; citation_title=Microservices; citation_author=J Thones; citation_volume=32; citation_publication_date=2015; citation_pages=1; citation_doi=10.1109/MS.2015.11; citation_id=CR93; citation_title=A case tool for robot behavior development; citation_inbook_title=RoboCup 2012: Robot Soccer World Cup XVI; citation_publication_date=2013; citation_pages=225-36; citation_id=CR94; citation_author=A Topalidou-Kyniazopoulou; citation_author=NI Spanoudakis; citation_author=MG Lagoudakis; citation_publisher=Springer; citation_journal_title=ACM Comput Surv.; citation_title=Cooperative multi-agent planning: a survey; citation_author=A Torreno, E Onaindia, A Komenda, M Stolba; citation_volume=50; citation_issue=6; citation_publication_date=2017; citation_pages=1-32; citation_doi=10.1145/3128584; citation_id=CR95; citation_journal_title=Knowl Inf Syst.; citation_title=Privacy-concerned multiagent planning; citation_author=J Tozicka, J Jakubuv, A Komenda, M Pechoucek; citation_volume=48; citation_issue=3; citation_publication_date=2016; citation_pages=581-618; citation_doi=10.1007/s10115-015-0887-7; citation_id=CR96; citation_journal_title=Sensors.; citation_title=5g support for industrial iot applications-challenges, solutions, and research gaps; citation_author=P Varga, J Peto, A Franko, D Balla, D Haja, F Janky, G Soos, D Ficzere, M Maliosz, L Toka; citation_volume=20; citation_issue=3; citation_publication_date=2020; citation_pages=828; citation_doi=10.3390/s20030828; citation_id=CR97; citation_journal_title=Front Robot AI.; citation_title=The armarx statechart concept: graphical programing of robot behavior; citation_author=M Wachter, S Ottenhaus, M Krohnert, N Vahrenkamp, T Asfour; citation_volume=3; citation_publication_date=2016; citation_pages=33; citation_doi=10.3389/frobt.2016.00033; citation_id=CR98; citation_journal_title=Comput Lang Syst Struct.; citation_title=User-story driven development of multi-agent systems: a process fragment for agile methods; citation_author=Y Wautelet, S Heng, S Kiv, M Kolp; citation_volume=50; citation_publication_date=2017; citation_pages=159-76; citation_doi=10.1016/j.cl.2017.06.007; citation_id=CR99; Wilk S, Michalowski W, O'Sullivan D, Farion K, Matwin S. Engineering of a clinical decision support framework for the point of care use. In: AMIA Annual Symposium Proceedings, vol. 2008, p. 814. American Medical Informatics Association; 2008.; citation_journal_title=Auton Agent Multi-Agent Syst.; citation_title=The gaia methodology for agent-oriented analysis and design; citation_author=M Wooldridge, NR Jennings, D Kinny; citation_volume=3; citation_issue=3; citation_publication_date=2000; citation_pages=285-312; citation_doi=10.1023/A:1010071910869; citation_id=CR101; citation_title=An introduction to multiagent systems; citation_publication_date=2009; citation_id=CR102; citation_author=MJ Wooldridge; citation_publisher=Wiley; citation_title=The cucumber book: behaviour-driven development for testers and developers; citation_publication_date=2012; citation_id=CR103; citation_author=M Wynne; citation_author=A Hellesoy; citation_publisher=Pragmatic Bookshelf; Yu Y, Lapouchnian A, Liaskos S, Mylopoulos J, Leite JCSP. From goals to high-variability software design. In: Foundations of intelligent systems. Berlin: Springer; 2008. p. 1-16.; citation_journal_title=ACM Trans Softw Eng Methodol.; citation_title=Developing multiagent systems: the Gaia methodology; citation_author=F Zambonelli, NR Jennings, M Wooldridge; citation_volume=12; citation_issue=3; citation_publication_date=2003; citation_pages=317-70; citation_doi=10.1145/958961.958963; citation_id=CR105; citation_journal_title=J Intell Robot Syst.; citation_title=Communication within multi-FSM based robotic systems; citation_author=C Zielinski, M Figat, R Hexel; citation_volume=93; citation_issue=3; citation_publication_date=2019; citation_pages=787-805; citation_doi=10.1007/s10846-018-0869-6; citation_id=CR106"			Excluded	Excluded	new_screen			2	Springer Link		Engineering Multi-agent Systems with Statecharts	https://doi.org/10.1007/s42979-021-00706-5	Springer Link	nan; Pages; Year; Bibtex; Link
407	Behave	Online social transparency in enterprise information systems: a risk assessment method			Prof. Dr. Joaquim FilipeMichał ŚmiałekAlexander BrodskySlimane Hammoudi		https://doi.org/doi:10.1007/s10799-021-00347-3				Excluded	Excluded	new_screen			2	Pub Med Central		Enterprise Information Systems	https://www.ncbi.nlm.nih.gov/pmc/articles/PMC8692828/		nan; Venue; Authors; Abstract; Keywords; References; Pages; Year; Bibtex; Publisher
408	Behave	ESPRESSO: Robust discovery and quantification of transcript isoforms from error-prone long-read RNA-seq data	http://link.springer.com/chapter/10.1007/978-1-4842-9701-8_5		Godfrey Nolan		https://doi.org/doi:10.1126/sciadv.abq5072				Excluded	Excluded	new_screen			2	Pub Med Central		Espresso	https://www.ncbi.nlm.nih.gov/pmc/articles/PMC9858503/		nan; Venue; Authors; Abstract; Keywords; References; Pages; Year; Bibtex; Publisher
409	Behave	Every Product Owner Needs Four Things	I sincerely believe there are better Product Owners and not-so-good Product Owners. There are some organizations (teams, companies, enterprises) which offer a better environment for product ownership, and equally there are those which are downright hostile to product ownership.		Kelly, Allan	The Art of Agile Product Ownership	https://doi.org/10.1007/978-1-4842-5168-3_5		39--43	"""@Inbook{Kelly2019,
    author = ""Kelly, Allan"",
    title = ""Every Product Owner Needs Four Things"",
    bookTitle = ""The Art of Agile Product Ownership: A Guide for Product Managers, Business Analysts, and Entrepreneurs"",
    year = ""2019"",
    publisher = ""Apress"",
    address = ""Berkeley, CA"",
    pages = ""39--43"",
    abstract = ""I sincerely believe there are better Product Owners and not-so-good Product Owners. There are some organizations (teams, companies, enterprises) which offer a better environment for product ownership, and equally there are those which are downright hostile to product ownership."",
    isbn = ""978-1-4842-5168-3"",
    doi = ""10.1007/978-1-4842-5168-3\_5"",
    url = ""https://doi.org/10.1007/978-1-4842-5168-3\_5""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Every Product Owner Needs Four Things	https://doi.org/10.1007/978-1-4842-5168-3_5	Apress	nan; Keywords; References; Link
410	Behave	Example-driven modeling: on effects of using examples on structural model comprehension, what makes them useful, and how to create them	We present a controlled experiment for the empirical evaluation of example-driven modeling (EDM), an approach that systematically uses examples for model comprehension and domain knowledge transfer. We conducted the experiment with 26 graduate (Masters and Ph.D. level) and undergraduate (Bachelor level) students from electrical and computer engineering, computer science, and software engineering programs at the University of Waterloo. The experiment involves a domain model, with UML class diagrams representing the domain abstractions and UML object diagrams representing examples of using these abstractions. The goal is to provide empirical evidence of the effects of suitable examples on model comprehension, compared to having model abstractions only, by having the participants perform model comprehension tasks. Our results show that EDM is superior to having model abstractions only, with an improvement of 39% for diagram completeness, 33% for questions completeness, 71% for efficiency, and a reduction in the number of mistakes by 80%. We provide qualitative results showing that participants receiving model abstractions augmented with examples experienced lower perceived difficulty in performing the comprehension tasks, higher perceived confidence in their tasks' solutions, and asked 90% fewer clarifying domain questions. We also present participants' feedback regarding the usefulness of the provided examples, their number and types, as well as the use of partial examples. We present a taxonomy of the different types of examples, explain their significance, and propose guidelines for manual and automatic creation of useful examples.	Artificial Intelligence; Software engineering; Structural modeling; Empirical study; Example-driven modeling	Dina Zayan; Atrisha Sarkar; Michal Antkiewicz; Rita Suzana Pitangueira Maciel; Krzysztof Czarnecki	Software & Systems Modeling	https://doi.org/10.1007/s10270-017-0652-3	"citation_journal_title=Stat. Sci.; citation_title=A survey of exact inference for contingency tables; citation_author=A Agresti; citation_volume=7; citation_publication_date=1992; citation_pages=131-153; citation_doi=10.1214/ss/1177011454; citation_id=CR1; citation_journal_title=Softw. Test. Verif. Reliab.; citation_title=Test adequacy criteria for UML design models; citation_author=A Andrews, R France, S Ghosh, G Craig; citation_volume=13; citation_issue=2; citation_publication_date=2003; citation_pages=95-127; citation_doi=10.1002/stvr.270; citation_id=CR2; Antkiewicz, M., Bak, K., Zayan, D., Czarnecki, K., Wasowski, A., Diskin, Z.: Example-driven modeling using Clafer. In: First International Workshop on Model-driven Engineering By Example (2013); Bak, K., Czarnecki, K., Wasowski, A.: Feature and meta-models in Clafer: mixed, specialized and coupled. In: International Conference on Software Language Engineering, pp. 291-301 (2010); Bak, K., Diskin, Z., Antkiewicz, M., Czarnecki, K., Wasowski, A.: Partial instances via subclassing. In: 6th International Conference on Software Language Engineering (2013); Bak, K., Zayan, D., Czarnecki, K., Antkiewicz, M., Diskin, Z., Wasowski, A., Rayside, D.: Example-driven modeling. Model = Abstractions + Examples. In: New Ideas and Emerging Results (NIER) track of ICSE'13 (2013); Balogh, A., Varro, D.: Advanced model transformation language constructs in the VIATRA2 framework. In: Proceedings of the 2006 ACM Symposium on Applied Computing, pp. 1280-1287. ACM (2006); Batot, E.: Generating examples for knowledge abstraction in MDE: a multi-objective framework. In: SRC@ MoDELS, pp. 1-6 (2015); Bauer, J., Baader, F.: Model exploration to support understanding of ontologies. Ph.D. thesis, Master's thesis, Technische Universitat Dresden (2009); Brosch, P., Langer, P., Seidl, M., Wieland, K., Wimmer, M., Kappel, G., Retschitzegger, W., Schwinger, W.: An example is worth a thousand words: composite operation modeling by-example. In: Model Driven Engineering Languages and Systems, Volume 5795 of Lecture Notes in Computer Science, pp. 271-285 (2009); citation_journal_title=Commun. ACM; citation_title=Why did your project fail?; citation_author=N Cerpa, JM Verner; citation_volume=52; citation_issue=12; citation_publication_date=2009; citation_pages=130-134; citation_doi=10.1145/1610252.1610286; citation_id=CR11; citation_journal_title=Cogn. Sci.; citation_title=Categorization and representation of physics problems by experts and novices; citation_author=MT Chi, PJ Feltovich, R Glaser; citation_volume=5; citation_issue=2; citation_publication_date=1981; citation_pages=121-152; citation_doi=10.1207/s15516709cog0502_2; citation_id=CR12; Cho, H., Gray, J., Syriani, E.: Creating visual domain-specific modeling languages from end-user demonstration. In: Proceedings of the 4th International Workshop on Modeling in Software Engineering, MiSE '12, pp. 22-28 (2012); citation_journal_title=IEEE Trans. Softw. Eng.; citation_title=A systematic survey of program comprehension through dynamic analysis; citation_author=B Cornelissen, A Zaidman, A Deursen, L Moonen, R Koschke; citation_volume=35; citation_issue=5; citation_publication_date=2009; citation_pages=684-702; citation_doi=10.1109/TSE.2009.28; citation_id=CR14; Demuth, B.: The dresden OCL toolkit and its role in information systems development. In: Proceedings of the 13th International Conference on Information Systems Development (ISDS2004), vol. 7 (2004); Dick, J., Faivre, A.: Automating the generation and sequencing of test cases from model-based specifications. In: Woodcock, J., Larsen, P. (eds.) FME '93: Industrial-Strength Formal Methods, volume 670 of Lecture Notes in Computer Science, pp. 268-284. Springer, Berlin (1993); citation_journal_title=Commun. ACM; citation_title=How UML is used; citation_author=B Dobing, J Parsons; citation_volume=49; citation_issue=5; citation_publication_date=2006; citation_pages=109-113; citation_doi=10.1145/1125944.1125949; citation_id=CR17; citation_journal_title=J. Database Manag.; citation_title=Dimensions of UML diagram use: a survey of practitioners; citation_author=B Dobing, J Parsons; citation_volume=19; citation_issue=1; citation_publication_date=2008; citation_pages=1-18; citation_doi=10.4018/jdm.2008010101; citation_id=CR18; citation_journal_title=Softw. Syst. Model.; citation_title=Generating instance models from meta models; citation_author=K Ehrig, J Kuster, G Tantzer; citation_volume=8; citation_issue=4; citation_publication_date=2009; citation_pages=479-500; citation_doi=10.1007/s10270-008-0095-y; citation_id=CR19; Fisler, K., Krishnamurthi, S., Meyerovich, L.A., Tschantz, M.C.: Verification and change-impact analysis of access-control policies. In: Proceedings of the 27th International Conference on Software Engineering, pp. 196-205. ACM (2005); citation_journal_title=Softw. Syst. Model.; citation_title=Qualifying input test data for model transformations; citation_author=F Fleurey, B Baudry, P-A Muller, Y Traon; citation_volume=8; citation_issue=2; citation_publication_date=2009; citation_pages=185-203; citation_doi=10.1007/s10270-007-0074-8; citation_id=CR21; citation_journal_title=Cogn. Psychol.; citation_title=Schema induction and analogical transfer; citation_author=ML Gick, KJ Holyoak; citation_volume=15; citation_issue=1; citation_publication_date=1983; citation_pages=1-38; citation_doi=10.1016/0010-0285(83)90002-6; citation_id=CR22; citation_journal_title=Can. J. Psychol.; citation_title=Do contrasting examples facilitate schema acquisition and analogical transfer?; citation_author=ML Gick, K Paterson; citation_volume=46; citation_issue=4; citation_publication_date=1992; citation_pages=539-550; citation_doi=10.1037/h0084333; citation_id=CR23; citation_journal_title=Sci. Comput. Progr.; citation_title=USE: a UML-based specification environment for validating UML and OCL; citation_author=M Gogolla, F Buttner, M Richters; citation_volume=69; citation_issue=1; citation_publication_date=2007; citation_pages=27-34; citation_doi=10.1016/j.scico.2007.01.013; citation_id=CR24; citation_journal_title=J. Learn. Sci.; citation_title=The transfer of scientific principles using concrete and idealized simulations; citation_author=RL Goldstone, JY Son; citation_volume=14; citation_issue=1; citation_publication_date=2005; citation_pages=69; citation_doi=10.1207/s15327809jls1401_4; citation_id=CR25; citation_journal_title=ACM Trans. Graph.; citation_title=Drape: dressing any person; citation_author=P Guan, L Reiss, DA Hirshberg, A Weiss, MJ Black; citation_volume=31; citation_issue=4; citation_publication_date=2012; citation_pages=35; citation_doi=10.1145/2185520.2185531; citation_id=CR26; Halbert, D.C.: Programming by example. Ph.D. thesis, University of California, Berkeley (1984); citation_journal_title=Commun. ACM; citation_title=Behavioral programming; citation_author=D Harel, A Marron, G Weiss; citation_volume=55; citation_issue=7; citation_publication_date=2012; citation_pages=90-100; citation_doi=10.1145/2209249.2209270; citation_id=CR28; Hutchinson, J., Whittle, J., Rouncefield, M., Kristoffersen, S.: Empirical assessment of MDE in industry. In: Proceedings of the 33rd International Conference on Software Engineering, ICSE '11, pp. 471-480, New York. ACM (2011); citation_title=Software Abstractions: Logic, Language, and Analysis; citation_publication_date=2012; citation_id=CR30; citation_author=D Jackson; citation_publisher=MIT Press; Jackson, E.K., Kang, E., Dahlweid, M., Seifert, D., Santen, T.: Components, platforms and possibilities: towards generic automation for MDA. In: Proceedings of the Tenth ACM International Conference on Embedded Software, pp. 39-48. ACM (2010); citation_journal_title=Computer; citation_title=Test-driven development concepts, taxonomy, and future direction; citation_author=D Janzen, H Saiedian; citation_volume=38; citation_issue=9; citation_publication_date=2005; citation_pages=43-50; citation_doi=10.1109/MC.2005.314; citation_id=CR32; citation_title=Basics of Software Engineering Experimentation; citation_publication_date=2010; citation_id=CR33; citation_author=N Juristo; citation_author=AM Moreno; citation_publisher=Springer; citation_journal_title=Learn. Instr.; citation_title=Knowledge elaboration: a cognitive load perspective. Cognitive load in interactive knowledge construction; citation_author=S Kalyuga; citation_volume=19; citation_issue=5; citation_publication_date=2009; citation_pages=402-410; citation_doi=10.1016/j.learninstruc.2009.02.003; citation_id=CR34; Kappel, G., Langer, P., Retschitzegger, W., Schwinger, W., Wimmer, M.: Conceptual modelling and its theoretical foundations. In: Chapter Model Transformation by-Example: A Survey of the First Wave, pp. 197-215 (2012); Karasneh, B., Jolak, R., Chaudron, M.R.V.: Using examples for teaching software design: an experiment using a repository of UML class diagrams. In: 2015 Asia-Pacific Software Engineering Conference (APSEC), pp. 261-268 (2015); citation_journal_title=Softw. Syst. Model.; citation_title=Search-based model transformation by example; citation_author=M Kessentini, H Sahraoui, M Boukadoum, OB Omar; citation_volume=11; citation_issue=2; citation_publication_date=2012; citation_pages=209-226; citation_doi=10.1007/s10270-010-0175-7; citation_id=CR37; citation_journal_title=IEEE Trans. Softw. Eng.; citation_title=Preliminary guidelines for empirical research in software engineering; citation_author=B Kitchenham, S Pfleeger, L Pickard, P Jones, D Hoaglin, K Emam, J Rosenberg; citation_volume=28; citation_issue=8; citation_publication_date=2002; citation_pages=721-734; citation_doi=10.1109/TSE.2002.1027796; citation_id=CR38; citation_journal_title=IEEE Trans. Softw. Eng.; citation_title=Preliminary guidelines for empirical research in software engineering; citation_author=BA Kitchenham, SL Pfleeger, LM Pickard, PW Jones, DC Hoaglin, K Emam, J Rosenberg; citation_volume=28; citation_issue=8; citation_publication_date=2002; citation_pages=721-734; citation_doi=10.1109/TSE.2002.1027796; citation_id=CR39; citation_journal_title=Requir. Eng.; citation_title=Preventing requirement defects: an experiment in process improvement; citation_author=S Lauesen, O Vinter; citation_volume=6; citation_issue=1; citation_publication_date=2001; citation_pages=37-50; citation_doi=10.1007/PL00010355; citation_id=CR40; citation_journal_title=Arch. Psychol.; citation_title=A technique for the measurement of attitudes; citation_author=R Likert; citation_volume=140; citation_publication_date=1932; citation_pages=1-55; citation_id=CR41; citation_journal_title=Softw. Syst. Model.; citation_title=Example-driven meta-model development; citation_author=JJ Lopez-Fernandez, JS Cuadrado, E Guerra, J Lara; citation_volume=14; citation_publication_date=2013; citation_pages=1-25; citation_id=CR42; citation_journal_title=Inf. Syst.; citation_title=Combining unit and specification-based testing for meta-model validation and verification; citation_author=JJ Lopez-Fernandez, E Guerra, J Lara; citation_volume=62; citation_publication_date=2016; citation_pages=104-135; citation_doi=10.1016/j.is.2016.06.008; citation_id=CR43; Magicdraw. 
                    http://www.nomagic.com/products/magicdraw.html
                    
                  . Accessed 21 Oct 2017; Maoz, S., Ringert, J.O., Rumpe, B.: Modal object diagrams. In: European Conference on Object-Oriented Programming, pp. 281-305. Springer (2011); Mendel, L.: Modeling by example. Ph.D. thesis, Massachusetts Institute of Technology (2007); Montaghami, V., Rayside, D.: Extending alloy with partial instances. In: Proceedings of Abstract State Machines, Alloy, B, VDM, and Z: Third International Conference, ABZ 2012, June 18-21, pp. 122-135 (2012); citation_journal_title=IEEE Trans. Softw. Eng.; citation_title=The; Nebeling, M., Geel, M., Norrie, M.C.: Engineering information management tools by example. In: Proceedings of the 2014 International Working Conference on Advanced Visual Interfaces, pp. 313-320. ACM (2014); Nelson, T., Saghafi, S., Dougherty, D.J., Fisler, K., Krishnamurthi, S.: Aluminum: principled scenario exploration through minimality. In: Proceedings of the 2013 International Conference on Software Engineering, pp. 232-241. IEEE Press (2013); citation_journal_title=Better Softw.; citation_title=Introducing BDD; citation_author=D North; citation_volume=12; citation_publication_date=2006; citation_pages=1; citation_id=CR51; citation_journal_title=Inf. Softw. Technol.; citation_title=Level of detail in UML models and its impact on model comprehension: a controlled experiment; citation_author=A Nugroho; citation_volume=51; citation_issue=12; citation_publication_date=2009; citation_pages=1670-1685; citation_doi=10.1016/j.infsof.2009.04.007; citation_id=CR52; Offutt, J., Abdurazik, A.: Generating tests from UML specifications. In: France, R., Rumpe, B. (eds.) UML'99--The Unified Modeling Language, Volume 1723 of Lecture Notes in Computer Science, pp. 416-429 (1999); citation_title=Contributions to Probability and Statistics: Essays in Honor of Harold Hotelling; citation_publication_date=1960; citation_id=CR54; citation_author=I Olkin; citation_publisher=Stanford University Press; Park, S.S.: Communicating domain knowledge through example-driven story testing. Master's thesis, University of Calgary, Alberta (2011); Petre, M.: UML in practice. In: Proceedings of the 2013 International Conference on Software Engineering, pp. 722-731 (2013); Purchase, H.C., Colpoys, L., McGill, M., Carrington, D., Britton, C.: UML class diagram syntax: an empirical study of comprehension. In: Proceedings of the 2001 Asia-Pacific Symposium on Information Visualisation--Volume 9, APVis'01, pp. 113-120. Australian Computer Society, Inc. (2001); Ricca, F., Di Penta, M., Torchiano, M., Tonella, P., Ceccato, M.: The role of experience and ability in comprehension tasks supported by UML stereotypes. In: 29th International Conference on Software Engineering, pp. 375-384 (2007); Sadilek, D.A., Weissleder, S.: Testing metamodels. In: Model Driven Architecture-Foundations and Applications, pp. 294-309. Springer, Berlin (2008); citation_journal_title=Requir. Eng.; citation_title=Managing requirements uncertainty with partial models; citation_author=R Salay, M Chechik, J Horkoff, AD Sandro; citation_volume=18; citation_issue=2; citation_publication_date=2013; citation_pages=107-128; citation_doi=10.1007/s00766-013-0170-y; citation_id=CR60; Scanniello, G., Ricca, F., Torchiano, M.: On the effectiveness of the UML object diagrams: a replicated experiment. In: 15th Annual Conference on Evaluation Assessment in Software Engineering (EASE 2011), pp. 76-85 (2011); Sun, Y., White, J., Gray, J.: Model transformation by demonstration. In: Schurr, A., Selic, B. (eds.) Model Driven Engineering Languages and Systems, pp. 712-726. Springer, Berlin (2009); Supplemental materials for the controlled experiment presented in Zayan et al.: Effects of Using Examples on Structural Model Comprehension (2013). 
                    http://gsd.uwaterloo.ca/publications/view/541.html
                    
                  . Accessed 21 Oct 2017; The R project for statistical computing. 
                    http://www.r-project.org/
                    
                  . Accessed 21 Oct 2017; Torchiano, M.: Empirical assessment of UML static object diagrams. In: Proceedings of 12th IEEE International Workshop on Program Comprehension, pp. 226-230 (2004); Torlak, E., Jackson, D.: Kodkod: a relational model finder. In: Tools and Algorithms for the Construction and Analysis of Systems, pp. 632-647. Springer, Berlin (2007); citation_journal_title=Contemp. Educ. Psychol.; citation_title=Effects of worked examples, example-problem, and problem-example pairs on novices' learning; citation_author=T Gog, L Kester, F Paas; citation_volume=36; citation_issue=3; citation_publication_date=2011; citation_pages=212-218; citation_doi=10.1016/j.cedpsych.2010.10.004; citation_id=CR67; citation_title=Goal Question Metric (GQM) Approach; citation_publication_date=2002; citation_id=CR68; citation_author=R Solingen; citation_author=V Basili; citation_author=G Caldiera; citation_author=HD Rombach; citation_publisher=Wiley; citation_title=The Object Constraint Language: Getting Your Models Ready for MDA; citation_publication_date=2003; citation_id=CR69; citation_author=J Warmer; citation_author=A Kleppe; citation_publisher=Addison-Wesley Longman Publishing Co. Inc.; Welch's t test. 
                    http://statistics.berkeley.edu/computing/r-t-tests
                    
                  . Accessed 21 Oct 2017; Whittle, J.: What do 449 MDE practitioners think about MDE? In: EESSMod (2011); Wimmer, M., Strommer, M., Kargl, H., Kramler, G.: Towards model transformation generation by-example. In: 40th Annual Hawaii International Conference on System Sciences, 2007. HICSS 2007, pp. 285b-285b. IEEE (2007); citation_title=Experimentation in Software Engineering: An Introduction; citation_publication_date=2000; citation_id=CR73; citation_author=C Wohlin; citation_author=P Runeson; citation_author=M Host; citation_author=MC Ohlsson; citation_author=B Regnell; citation_author=A Wesslen; citation_publisher=Kluwer Academic Publishers; Yusuf, S., Kagdi, H., Maletic, J.I.: Assessing the comprehension of UML class diagrams via eye tracking. In: 15th International Conference on Program Comprehension (ICPC'07), pp. 113-122. IEEE Computer Society (2007); Zayan, D., Antkiewicz, M., Czarnecki, K.: Effects of using examples on structural model comprehension: a controlled experiment. In: Proceedings of the 36th International Conference on Software Engineering, pp. 955-966. ACM (2014); citation_journal_title=Computer; citation_title=QBE/OBE: a language for office and business automation; citation_author=M Zloof; citation_volume=14; citation_issue=5; citation_publication_date=1981; citation_pages=13-22; citation_doi=10.1109/C-M.1981.220446; citation_id=CR76"			Excluded	Excluded	new_screen			2	Springer Link		Example-driven modeling: on effects of using examples on structural model comprehension, what makes them useful, and how to create them	https://doi.org/10.1007/s10270-017-0652-3	Springer Link	nan; Pages; Year; Bibtex; Link
411	Behave	Extending, Unit Testing, and Packaging	In the first nine chapters of this book we have analyzed various features of Ext JS 4. You learned how to use the UI controls, work with data components, create custom themes, and build applications that follow the MVC architecture. In this chapter you'll find out about some miscellaneous features in Ext JS 4. For example, you'll see how to extend the UI controls by creating custom components. I'll discuss various options involved in creating custom components and plugins. You'll also learn how to write unit tests in JavaScript to test our Ext JS 4 application. Finally you'll learn how to create an Ext JS 4 application from scratch, package it, and deploy it to the web server.	Create Custom Components; Plug-in Time; Sencha; Jasmine; onRender	Sunderaraman, Prabhu	Practical Ext JS 4	https://doi.org/10.1007/978-1-4302-6074-5_10		185--205	"""@Inbook{Sunderaraman2013,
    author = ""Sunderaraman, Prabhu"",
    title = ""Extending, Unit Testing, and Packaging"",
    bookTitle = ""Practical Ext JS 4"",
    year = ""2013"",
    publisher = ""Apress"",
    address = ""Berkeley, CA"",
    pages = ""185--205"",
    abstract = ""In the first nine chapters of this book we have analyzed various features of Ext JS 4. You learned how to use the UI controls, work with data components, create custom themes, and build applications that follow the MVC architecture. In this chapter you'll find out about some miscellaneous features in Ext JS 4. For example, you'll see how to extend the UI controls by creating custom components. I'll discuss various options involved in creating custom components and plugins. You'll also learn how to write unit tests in JavaScript to test our Ext JS 4 application. Finally you'll learn how to create an Ext JS 4 application from scratch, package it, and deploy it to the web server."",
    isbn = ""978-1-4302-6074-5"",
    doi = ""10.1007/978-1-4302-6074-5\_10"",
    url = ""https://doi.org/10.1007/978-1-4302-6074-5\_10""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Extending, Unit Testing, and Packaging	https://doi.org/10.1007/978-1-4302-6074-5_10	Apress	nan; References; Link
412	Behave	The proposition of Process flow model for Scrum and eXtreme Programming	To carry out a quality project, the company collaborators need to rely on an efficient management methodology. It is the key to organize the project in a structured and streamlined manner, it helps the team to be more structured. The traditional methods are usually used on projects based on very precise ideas with very detailed specifications and planning which anticipated all possible risks. Nevertheless, these do not allow any kind of interaction with the customer, who will receive the project once it is finished. For that reason, solutions like eXtreme Programming and Scrum have been proposed by project management experts respecting the interaction with the customer, ability to change, and so on. These methods share the same values and principles, but each one has its own singularities. In this paper, we will present the process flow model of the Scrum and XP methods. For this process flow model, we used the BPMN models.	Agile methodologies; BPMN; Process flow model; Scrum; XP; eXtreme Programming	Soukaina Merzouk; Abdessamad Cherkaoui; Abdelaziz Marzak; Nawal Sael; Fatima-Zahra Guerss	NISS '21: Proceedings of the 4th International Conference on Networking, Information Systems & Security	https://doi.org/10.1145/3454127.3457627		1-6		Excluded	Excluded	new_screen			2	ACM		eXtreme Programming	https://dl.acm.org/doi/10.1145/3454127.3457627	Association for Computing Machinery	nan; References; Year; Bibtex
413	Behave	Flipping the Run/Build Ratio: The Business Case for Software Craftsmanship	We introduce the five business advantages of encouraging software craftsmanship among developers. We offer a tour of a sampling of craftsmanship practices and provide a glimpse into the worldview and intention of the software craftsman.	Package Implementation; Enterprise Architecture; Automate Test; Data Migration; User Story	Kulak, Daryl; Li, Hong	The Journey to Enterprise Agility	https://doi.org/10.1007/978-3-319-54087-0_9		137--151	"""@Inbook{Kulak2017,
    author = ""Kulak, Daryl and Li, Hong"",
    title = ""Flipping the Run/Build Ratio: The Business Case for Software Craftsmanship"",
    bookTitle = ""The Journey to Enterprise Agility: Systems Thinking and Organizational Legacy"",
    year = ""2017"",
    publisher = ""Springer International Publishing"",
    address = ""Cham"",
    pages = ""137--151"",
    abstract = ""We introduce the five business advantages of encouraging software craftsmanship among developers. We offer a tour of a sampling of craftsmanship practices and provide a glimpse into the worldview and intention of the software craftsman."",
    isbn = ""978-3-319-54087-0"",
    doi = ""10.1007/978-3-319-54087-0\_9"",
    url = ""https://doi.org/10.1007/978-3-319-54087-0\_9""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Flipping the Run/Build Ratio: The Business Case for Software Craftsmanship	https://doi.org/10.1007/978-3-319-54087-0_9	Springer International Publishing	nan; References; Link
414	Behave	Formal Specification Level	The steadily increasing complexity of the design of embedded systems led to the development of both an elaborated design flow that includes various abstraction levels and corresponding methods for synthesis and verification. However, until today the initial system specification is provided in natural language which is manually translated into a formal implementation e.g. at the Electronic System Level (ESL) by means of SystemC in a time-consuming and error-prone process.In this chapter, we envision a design flow which incorporates a Formal Specification Level (FSL) aiming at bridging the gap between the informal textbook specification and the formal ESL implementation. Modeling languages such as UML or SysML are envisaged for this purpose. Recent accomplishments towards this envisioned design flow, namely the automatic derivation of formal models from natural language descriptions, verification of formal models in the absence of an implementation, and code generation techniques, are briefly reviewed.		Drechsler, Rolf; Soeken, Mathias; Wille, Robert	Models, Methods, and Tools for Complex Chip Design	https://doi.org/10.1007/978-3-319-01418-0_3		37--52	"""@InProceedings{10.1007/978-3-319-01418-0_3,
    author = ""Drechsler, Rolf and Soeken, Mathias and Wille, Robert"",
    editor = ""Haase, Jan"",
    title = ""Formal Specification Level"",
    booktitle = ""Models, Methods, and Tools for Complex Chip Design"",
    year = ""2014"",
    publisher = ""Springer International Publishing"",
    address = ""Cham"",
    pages = ""37--52"",
    abstract = ""The steadily increasing complexity of the design of embedded systems led to the development of both an elaborated design flow that includes various abstraction levels and corresponding methods for synthesis and verification. However, until today the initial system specification is provided in natural language which is manually translated into a formal implementation e.g. at the Electronic System Level (ESL) by means of SystemC in a time-consuming and error-prone process.In this chapter, we envision a design flow which incorporates a Formal Specification Level (FSL) aiming at bridging the gap between the informal textbook specification and the formal ESL implementation. Modeling languages such as UML or SysML are envisaged for this purpose. Recent accomplishments towards this envisioned design flow, namely the automatic derivation of formal models from natural language descriptions, verification of formal models in the absence of an implementation, and code generation techniques, are briefly reviewed."",
    isbn = ""978-3-319-01418-0""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Formal Specification Level	https://doi.org/10.1007/978-3-319-01418-0_3	Springer International Publishing	nan; Keywords; References; Link
415	Behave	Formal Testing from Natural Language in an Industrial Context	We present some results on developing formal testing strategies and tools for mobile applications, in the context of a partnership with Motorola, a Lenovo company. Actually, the overall scope is much larger, encompassing image processing, optimisation algorithms, sentiment analysis, energy-aware software design, and other research areas.	Natural Language; Sentiment Analysis; Test Case Generation; Natural Language Description; Manual Execution	Sampaio, Augusto; Arruda, Filipe	Brazilian Symposium on Formal Methods	https://doi.org/10.1007/978-3-319-49815-7_2		21--38	"""@InProceedings{10.1007/978-3-319-49815-7_2,
    author = ""Sampaio, Augusto and Arruda, Filipe"",
    editor = ""Ribeiro, Leila and Lecomte, Thierry"",
    title = ""Formal Testing from Natural Language in an Industrial Context"",
    booktitle = ""Formal Methods: Foundations and Applications"",
    year = ""2016"",
    publisher = ""Springer International Publishing"",
    address = ""Cham"",
    pages = ""21--38"",
    abstract = ""We present some results on developing formal testing strategies and tools for mobile applications, in the context of a partnership with Motorola, a Lenovo company. Actually, the overall scope is much larger, encompassing image processing, optimisation algorithms, sentiment analysis, energy-aware software design, and other research areas."",
    isbn = ""978-3-319-49815-7""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Formal Testing from Natural Language in an Industrial Context	https://doi.org/10.1007/978-3-319-49815-7_2	Springer International Publishing	nan; References; Link
416	Behave	FRAGGLE: A FRamework for AGile Gamification of Learning Experiences	Student's motivation difficulties are present in learning scenarios, even university grades. Between the techniques being applied by instructors to counteract this fact, we can find gamification techniques. Unfortunately, sometimes the result is the appearance of unwanted effects, which is a very common symptom of poor designs caused by the lack of proven methodologies for its purpose. This paper presents our first approach of a conceptual framework for designing the gamification of learning experiences. It is focused in higher education and based on the use of the Agile methodologies in order to obtain a fast Minimum Viable Product (MVP) ready for testing. Its aims are to apply different techniques all the way down to the lowest levels of abstraction through its step-by-step process.	Gamification; Design; Framework; Learning; Higher education; Gamification;  Design;  Framework;  Learning;  Higher education	Mora, Alberto; Zaharias, Panagiotis; Gonzalez, Carina; Arnedo-Moreno, Joan	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)	https://doi.org/10.1007/978-3-319-40216-1\_57	Barata, G., Gama, S., Jorge, J., Goncalves, D.; Berkling, K., Thomas, C.; Broer, J.Gamification and the trough of disillusionment(2014)Mensch & Computer 2014 - Workshopband, pp. 389-395.Cited 12 times.; Chelimsky, D., Astels, D., Helmkamp, B., North, D.(2010)The Rspec Book: Behaviour Driven Development with Rspec, Cucumber, and Friends.Cited 98 times.The Pragmatic Bookshelf, New York; Chou, Y.(2013)Gamification Design: 4 Phases of a player's Journey; Deterding, S., Dixon, D., Khaled, R., Nacke, L.; Dominguez, A., Saenz-De-Navarrete, J., De-Marcos, L., Fernandez-Sanz, L., Pages, C., Martinez-Herraiz, J.-J.; Fowler, M., Highsmith, J.The agile manifesto(2001)Softw. Dev, 9 (8), pp. 28-35.Cited 473 times.; Gasland, M.(2011)Game Mechanic Based E-Learning: A Case Study.Cited 43 times.Ph.D. thesis; Glover, I.Play as you learn: Gamification as a technique for motivating learners(2013)Proceedings of World Conference on Educational Multimedia, Hypermedia and Telecommunications, Chesapeake.Cited 220 times.; Gonzalez, C.S.G., Carreno, A.M.; Gothelf, J., Seiden, J.(2013)Lean UX: Applying Lean Principles to Improve User Experience.Cited 207 times.O'Reilly, Sebastopol; Hanus, M.D., Fox, J.; Iosup, A., Epema, D.; Jacobson, I.(1992)Object Oriented Software Engineering: A Use Case Driven Approach.Cited 2729 times.1st edn. Addison Wesley, Reading; Kapp, K.(2013)The Gamification of Learning and Instruction Fieldbook: Ideas into Practice.Cited 280 times.Wiley, San Francisco; Kotini, I., Tzelepi, S.; Marczewski, A.(2012)Gamification: A Simple Introduction.Cited 191 times.; Mora, A., Riera, D., Gonzalez, C., Arnedo-Moreno, J.; Nah, F.F.-H., Zeng, Q., Telaprolu, V.R., Ayyappa, A.P., Eschenbrenner, B.; O'Donovan, S., Gain, J., Marais, P.; Ries, E.(2011)The Lean Startup: How Today's Entrepreneurs Use Continuous Innovation to Create Radically Successful Businesses. Crown Business, New York; Schell, J.; Seaborn, K., Fels, D.I.; Serrat, O.(2009)The Five Whys Technique.Cited 104 times.ADB, Open Access Repository 3; Simoes, J., Redondo, R.D., Vilas, A.F.; Tuunanen, J., Hamari, J.Meta-synthesis of player typologies(2012)Proceedings of Nordic Digra 2012 Conference: Games in Culture and Society.Cited 37 times.; Villagrasa, S., Fonseca, D., Duran, J.; Xu, Y.(2011)Literature Review on Web Application Gamification and Analytics.Cited 110 times.Technical report	530-539	"""@inproceedings{WOS:000389455600057,
    Author = ""Mora, Alberto and Zaharias, Panagiotis and Gonzalez, Carina and Arnedo-Moreno, Joan"",
    Editor = ""DeGloria, A and Veltkamp, R"",
    Title = ""FRAGGLE: A FRamework for AGile Gamification of Learning Experiences"",
    Booktitle = ""GAMES AND LEARNING ALLIANCE, GALA 2015, REVISED SELECTED PAPERS"",
    Series = ""Lecture Notes in Computer Science"",
    Year = ""2016"",
    Volume = ""9599"",
    Pages = ""530-539"",
    Note = ""4th International Conference on Games and Learning (GALA), Sapienza Univ, Rome, ITALY, DEC 09-11, 2015"",
    Organization = ""Serious Games Soc; Univ Genoa"",
    Abstract = ""Student's motivation difficulties are present in learning scenarios, even university grades. Between the techniques being applied by instructors to counteract this fact, we can find gamification techniques. Unfortunately, sometimes the result is the appearance of unwanted effects, which is a very common symptom of poor designs caused by the lack of proven methodologies for its purpose. This paper presents our first approach of a conceptual framework for designing the gamification of learning experiences. It is focused in higher education and based on the use of the Agile methodologies in order to obtain a fast Minimum Viable Product (MVP) ready for testing. Its aims are to apply different techniques all the way down to the lowest levels of abstraction through its step-by-step process."",
    Publisher = ""SPRINGER INTERNATIONAL PUBLISHING AG"",
    Address = ""GEWERBESTRASSE 11, CHAM, CH-6330, SWITZERLAND"",
    Type = ""Proceedings Paper"",
    Language = ""English"",
    Affiliation = ""Mora, A (Corresponding Author), Univ Oberta Catalunya, Estudis Informat Multimedia \\& Telecomunicacio, Barcelona, Spain. Mora, Alberto; Arnedo-Moreno, Joan, Univ Oberta Catalunya, Estudis Informat Multimedia \\& Telecomunicacio, Barcelona, Spain. Zaharias, Panagiotis, Open Univ Cyprus, Informat \\& Telecommun Syst, Latsia, Cyprus. Gonzalez, Carina, Univ La Laguna, Ing Sist \\& Aut \\& Arq \\& Tec Comp, San Cristobal la Laguna, Spain."",
    DOI = ""10.1007/978-3-319-40216-1\\_57"",
    ISSN = ""0302-9743"",
    EISSN = ""1611-3349"",
    ISBN = ""978-3-319-40216-1; 978-3-319-40215-4"",
    Keywords = ""Gamification; Design; Framework; Learning; Higher education"",
    Research-Areas = ""Computer Science"",
    Web-of-Science-Categories = ""Computer Science, Interdisciplinary Applications; Computer Science, Software Engineering"",
    Author-Email = ""amoraca@uoc.edu panagiotis.zacharias@ouc.ac.cy cjgonza@ull.edu.es jarnedo@uoc.edu"",
    Affiliations = ""UOC Universitat Oberta de Catalunya; Open University of Cyprus; Universidad de la Laguna"",
    ResearcherID-Numbers = ""Gonzalez-Gonzalez, Carina Soledad/L-6486-2014"",
    ORCID-Numbers = ""Gonzalez-Gonzalez, Carina Soledad/0000-0001-5939-9544"",
    Number-of-Cited-References = ""29"",
    Times-Cited = ""8"",
    Usage-Count-Last-180-days = ""0"",
    Usage-Count-Since-2013 = ""8"",
    Doc-Delivery-Number = ""BG5FB"",
    Web-of-Science-Index = ""Conference Proceedings Citation Index - Science (CPCI-S)"",
    Unique-ID = ""WOS:000389455600057"",
    DA = ""2024-10-22""
}
"""	Excluded	Excluded	new_screen			2	Web of Science		FRAGGLE: A FRamework for AGile Gamification of Learning Experiences	https://www.webofscience.com/wos/woscc/full-record/WOS:000389455600057	SPRINGER INTERNATIONAL PUBLISHING AG	
417	Behave	Fragment-based spreadsheet debugging	Faults in spreadsheets can represent a major risk for businesses. To minimize such risks, various automated testing and debugging approaches for spreadsheets were proposed. In such approaches, often one main assumption is that the spreadsheet developer is able to indicate if the outcomes of certain calculations correspond to the intended values. This, however, might require that the user performs calculations manually, a process which can easily become tedious and error-prone for more complex spreadsheets. In this work, we propose an interactive spreadsheet algorithmic debugging method, which is based on partitioning the spreadsheet into fragments. Test cases can then be automatically or manually created for each of these smaller fragments, whose correctness or faultiness can be easier assessed by users than test cases that cover the entire spreadsheet. The annotated test cases are then fed into an algorithmic debugging technique, which returns a set of formulas that could have caused any observed failures, i.e., discrepancies between the expected and computed calculation outcomes. Simulation experiments demonstrate that the suggested decomposition approach can speed up the algorithmic debugging process and significantly reduce the number of fault candidates returned by the algorithm. An additional laboratory study shows that fragmenting a spreadsheet with our method furthermore reduces the time needed by users for creating test cases for a spreadsheet.	Artificial Intelligence; Spreadsheets; Algorithmic testing and debugging; Artificial intelligence; Model-based diagnosis	Dietmar Jannach; Thomas Schmitz; Birgit Hofer; Konstantin Schekotihin; Patrick Koch; Franz Wotawa	Automated Software Engineering	https://doi.org/10.1007/s10515-018-0250-9	"Abraham, R., Erwig, M.: Goal-directed debugging of spreadsheets. In: Proceedings of the IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC 2005), Dallas, TX, USA, pp. 37-44 (2005); Abraham, R., Erwig, M.: AutoTest: a tool for automatic test case generation in spreadsheets. In: Proceedings of the IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC 2006), Brighton, United Kingdom, pp. 43-50 (2006); citation_journal_title=IEEE Trans. Softw. Eng.; citation_title=Mutation operators for spreadsheets; citation_author=R Abraham, M Erwig; citation_volume=35; citation_issue=1; citation_publication_date=2009; citation_pages=94-108; citation_doi=10.1109/TSE.2008.73; citation_id=CR3; citation_journal_title=Softw. Qual. J.; citation_title=Using constraints to diagnose faulty spreadsheets; citation_author=R Abreu, B Hofer, A Perez, F Wotawa; citation_volume=23; citation_issue=2; citation_publication_date=2015; citation_pages=297-322; citation_doi=10.1007/s11219-014-9236-4; citation_id=CR4; Almeida, L., Cirilo, E., Barbosa, E.A.: SS-BDD: automated acceptance testing for spreadsheets. In: Proceedings of the 1st Brazilian Symposium on Systematic and Automated Software Testing (SAST 2016), New York City, NY, USA, pp. 5:1-5:10 (2016); AlTarawneh, G., Thorne, S.: A pilot study exploring spreadsheet risk in scientific research. In: Proceedings of the Annual Spreadsheet Risks Conference (EuSpRIG 2016), London, United Kingdom (2016); citation_journal_title=IEEE Trans. Softw. Eng.; citation_title=Testing homogeneous spreadsheet grids with the; Chen, T.Y.: Metamorphic testing: a simple approach to alleviate the oracle problem. In: Proceedings of the 5th IEEE International Symposium on Service-Oriented System Engineering (SOSE 2010), Nanjing, China, pp. 1-2 (2010); Cunha, J., Fernandes, J.P., Ribeiro, H., Saraiva, J.: Towards a catalog of spreadsheet smells. In: Proceedings of the 12th International Conference on Computational Science and Its Applications (ICCSA 2012), Salvador de Bahia, Brazil, pp. 202-216 (2012); Felfernig, A., Friedrich, G., Jannach, D., Stumptner, M., Zanker, M.: Hierarchical diagnosis of large configurator knowledge bases. In: Proceedings of the Joint German Austrian Conference on AI (KI 2001), Vienna, Austria, pp. 185-197 (2001); citation_journal_title=Artif. Intell.; citation_title=Consistency-based diagnosis of configuration knowledge bases; citation_author=A Felfernig, G Friedrich, D Jannach, M Stumptner; citation_volume=152; citation_issue=2; citation_publication_date=2004; citation_pages=213-234; citation_doi=10.1016/S0004-3702(03)00117-6; citation_id=CR11; Hermans, F.: Improving spreadsheet test practices. In: Proceedings of the 2013 Conference of the Center for Advanced Studies on Collaborative Research (CASCON 2013), Ontario, Canada, pp. 56-69 (2013); Hermans, F., Pinzger, M., van Deursen, A.: Supporting. In: Proceedings of the 33rd International Conference on Software Engineering (ICSE 2011), Waikiki, Honolulu, HI, USA, pp. 451-460 (2011); Hermans, F., Pinzger, M., van Deursen, A.: Detecting code smells in spreadsheet formulas. In: Proceedings of the 28th IEEE International Conference on Software Maintenance (ICSM 2012), Riva del Garda, Trento, Italy, pp. 409-418 (2012); Hodnigg, K., Mittermeir, R.T.: Metrics-based spreadsheet visualization--support for focused maintenance. In: Proceedings of the 9th Annual Spreadsheet Risks Conference (EuSpRIG 2008), London, United Kingdom, pp. 79-94 (2008); Hofer, B., Wotawa, F.: Why does my spreadsheet compute wrong values? In: Proceedings of the 25th IEEE International Symposium on Software Reliability Engineering, (ISSRE 2014), Naples, Italy, pp. 112-121 (2014); Hofer, B., Riboira, A., Wotawa, F., Abreu, R., Getzner, E.: On the empirical evaluation of fault localization techniques for spreadsheets. In: Proceedings of the 16th International Conference on Fundamental Approaches to Software Engineering (FASE 2013), Rome, Italy, pp. 68-82 (2013); citation_journal_title=Autom. Softw. Eng.; citation_title=On the empirical evaluation of similarity coefficients for spreadsheets fault localization; citation_author=B Hofer, A Perez, R Abreu, F Wotawa; citation_volume=22; citation_issue=1; citation_publication_date=2015; citation_pages=47-74; citation_doi=10.1007/s10515-014-0145-3; citation_id=CR18; Hofer, B., Nica, I., Wotawa, F.: AI for localizing faults in spreadsheets. In: Proceedings of the 29th International Conference on Testing Software and Systems (ICTSS 2017), St. Petersburg, Russia, pp. 71-87 (2017); Jannach, D., Engler, U.: Toward model-based debugging of spreadsheet programs. In: Proceedings of the 9th Joint Conference on Knowledge-Based Software Engineering (JCKBSE 2010), Kaunas, Lithuania, pp. 252-262 (2010); citation_journal_title=Autom. Softw. Eng.; citation_title=Model-based diagnosis of spreadsheet programs: a constraint-based debugging approach; citation_author=D Jannach, T Schmitz; citation_volume=23; citation_issue=1; citation_publication_date=2016; citation_pages=105-144; citation_doi=10.1007/s10515-014-0141-7; citation_id=CR21; citation_journal_title=J. Syst. Softw.; citation_title=Avoiding, finding and fixing spreadsheet errors--a survey of automated approaches for spreadsheet QA; citation_author=D Jannach, T Schmitz, B Hofer, F Wotawa; citation_volume=94; citation_publication_date=2014; citation_pages=129-150; citation_doi=10.1016/j.jss.2014.03.058; citation_id=CR22; Mittermeir, R., Clermont, M.: Finding high-level structures in spreadsheet programs. In: Proceedings of the Working Conference on Reverse Engineering, pp. 221-231 (2002); citation_journal_title=Decis. Support Syst.; citation_title=Revising the Panko-Halverson taxonomy of spreadsheet errors; citation_author=RR Panko, S Aurigemma; citation_volume=49; citation_issue=2; citation_publication_date=2010; citation_pages=235-244; citation_doi=10.1016/j.dss.2010.02.009; citation_id=CR24; Parnin, C., Orso, A.: Are automated debugging techniques actually helping programmers? In: Proceedings of the 2011 International Symposium on Software Testing and Analysis, ACM, New York, NY, USA, ISSTA '11, pp. 199-209. (2011). 
                    https://doi.org/10.1145/2001420.2001445; citation_journal_title=IT People; citation_title=How can non-technical end users effectively test their spreadsheets?; citation_author=P Poon, F Kuo, H Liu, TY Chen; citation_volume=27; citation_issue=4; citation_publication_date=2014; citation_pages=440-462; citation_doi=10.1108/ITP-01-2013-0004; citation_id=CR26; Reichwein, J., Rothermel, G., Burnett, M.: Slicing spreadsheets: an integrated methodology for spreadsheet testing and debugging. In: Proceedings of the 2nd Conference on Domain-Specific Languages (DSL 1999), Austin, TX, USA, pp. 25-38 (1999); citation_journal_title=Artif. Intell.; citation_title=A theory of diagnosis from first principles; citation_author=R Reiter; citation_volume=32; citation_issue=1; citation_publication_date=1987; citation_pages=57-95; citation_doi=10.1016/0004-3702(87)90062-2; citation_id=CR28; Rothermel, G., Li, L., Dupuis, C., Burnett, M.: What you see is what you test: a methodology for testing form-based visual programs. In: Proceedings of the 20th International Conference on Software Engineering (ICSE 1998), Kyoto, Japan, pp. 198-207 (1998); Roy, S., Hermans, F., van Deursen, A.: Spreadsheet testing in practice. In: Proceedings of the 24th IEEE International Conference on Software Analysis, Evolution and Reengineering (SANER 2017), Klagenfurt, Austria, pp. 338-348 (2017); citation_title=Artificial Intelligence: A Modern Approach; citation_publication_date=2009; citation_id=CR31; citation_author=S Russell; citation_author=P Norvig; citation_publisher=Prentice Hall; Rust, A., Bishop, B., McDaid, K.: Test-driven development: can it work for spreadsheet engineering? In: Proceedings of the 7th International Conference on Extreme Programming and Agile Processes in Software Engineering (XP 2006), Oulu, Finland, pp. 209-210 (2006); citation_journal_title=J. Vis. Lang. Comput.; citation_title=Interactive, visual fault localization support for end-user programmers; citation_author=JR Ruthruff, S Prabhakararao, J Reichwein, C Cook, E Creswick, M Burnett; citation_volume=16; citation_issue=1-2; citation_publication_date=2005; citation_pages=3-40; citation_doi=10.1016/j.jvlc.2004.07.001; citation_id=CR33; Scaffidi, C., Shaw, M., Myers, B.: Estimating the numbers of end users and end user programmers. In: Proceedings of the IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC 2005), Washington, DC, USA, pp. 207-214 (2005); Schmitz, T., Jannach, D.: Finding errors in the enron spreadsheet corpus. In: Proceedings of the IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC 2016), Cambridge, United Kingdom, pp. 157-161 (2016); Schmitz, T., Jannach, D.: An AI-based interactive tool for spreadsheet debugging. In: Showpieces presented at the IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC 2017), Raleigh, NC, USA (2017); Schmitz, T., Hofer, B., Jannach, D., Wotawa, F.: Fragment-based diagnosis of spreadsheets. In: Proceedings of the 3rd International Workshop on Software Engineering Methods in Spreadsheets (SEMS 2016), Vienna, Austria, pp. 372-387 (2016); Schmitz, T., Jannach, D., Hofer, B., Koch, P., Schekotihin, K., Wotawa, F.: A decomposition-based approach to spreadsheet testing and debugging. In: Proceedings of the IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC 2017), Raleigh, NC, USA (2017); Shchekotykhin, K., Schmitz, T., Jannach, D.: Efficient sequential model-based fault-localization with partial diagnoses. In: Proceedings of the International Joint Conference on Artificial Intelligence (IJCAI 2016), New York City, NY, USA, pp. 1251-1257 (2016); Siddiqi, S., Huang, J.: Hierarchical diagnosis of multiple faults. In: Proceedings of the 20th International Joint Conference on Artifical Intelligence (IJCAI 2007), San Francisco, CA, USA, pp. 581-586 (2007)"			Excluded	Excluded	new_screen			2	Springer Link		Fragment-based spreadsheet debugging	https://doi.org/10.1007/s10515-018-0250-9	Springer Link	nan; Pages; Year; Bibtex; Link
418	Behave	Framework Options and Design Pattern	In the last chapter, you saw waits and timeouts. Protractor can be used with different types of frameworks. Choosing a framework depends on a lot of different factors. Protractor's flexibility allows it to be implemented using any of the frameworks on the market. This chapter looks at the following, including frameworks that are compatible with Protractor.		Shukla, Shashank	The Protractor Handbook	https://doi.org/10.1007/978-1-4842-7289-3_9		167--179	"""@Inbook{Shukla2021,
    author = ""Shukla, Shashank"",
    title = ""Framework Options and Design Pattern"",
    bookTitle = ""The Protractor Handbook: Understanding and Implementing the Tool Effectively"",
    year = ""2021"",
    publisher = ""Apress"",
    address = ""Berkeley, CA"",
    pages = ""167--179"",
    abstract = ""In the last chapter, you saw waits and timeouts. Protractor can be used with different types of frameworks. Choosing a framework depends on a lot of different factors. Protractor's flexibility allows it to be implemented using any of the frameworks on the market. This chapter looks at the following, including frameworks that are compatible with Protractor."",
    isbn = ""978-1-4842-7289-3"",
    doi = ""10.1007/978-1-4842-7289-3\_9"",
    url = ""https://doi.org/10.1007/978-1-4842-7289-3\_9""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Framework Options and Design Pattern	https://doi.org/10.1007/978-1-4842-7289-3_9	Apress	nan; Keywords; References; Link
419	Behave	From COBOL to Business Rules---Extracting Business Rules from Legacy Code	The reverse engineering project described in this paper is aimed at documenting a 6.4 million lines of code COBOL/IMS/DB2 system for world-wide car leasing. The ultimate goal is to re-implement that system. The system was originally developed in the 1980s with less than 3 million code lines and has since evolved to its current size. It survived the year 2000 date change and the Euro conversion as well as several major company reorganizations to preserve the continuity of the leasing service. Finally, after 30 years of service it is planned to retire the system. However, the first two attemptsSneed, Harry M. to replace it, one by automatically converting it and the other by replacing it with a standard package ended in failure. It is now planned to rewrite the system based on a specification derivedVerhoef, Chris from the current code base. That specification includes among other documents a documentation of the processing rules. The extracted rules are intended to act as guide to those writing the new code.		Sneed, Harry M.; Verhoef, Chris	Integrating Research and Practice in Software Engineering	https://doi.org/10.1007/978-3-030-26574-8_14		187--208	"""@Inbook{Sneed2020,
    author = ""Sneed, Harry M. and Verhoef, Chris"",
    editor = ""Jarzabek, Stan and Poniszewska-Mara{\'{n}}da, Aneta and Madeyski, Lech"",
    title = ""From COBOL to Business Rules---Extracting Business Rules from Legacy Code"",
    bookTitle = ""Integrating Research and Practice in Software Engineering"",
    year = ""2020"",
    publisher = ""Springer International Publishing"",
    address = ""Cham"",
    pages = ""187--208"",
    abstract = ""The reverse engineering project described in this paper is aimed at documenting a 6.4 million lines of code COBOL/IMS/DB2 system for world-wide car leasing. The ultimate goal is to re-implement that system. The system was originally developed in the 1980s with less than 3 million code lines and has since evolved to its current size. It survived the year 2000 date change and the Euro conversion as well as several major company reorganizations to preserve the continuity of the leasing service. Finally, after 30 years of service it is planned to retire the system. However, the first two attemptsSneed, Harry M. to replace it, one by automatically converting it and the other by replacing it with a standard package ended in failure. It is now planned to rewrite the system based on a specification derivedVerhoef, Chris from the current code base. That specification includes among other documents a documentation of the processing rules. The extracted rules are intended to act as guide to those writing the new code."",
    isbn = ""978-3-030-26574-8"",
    doi = ""10.1007/978-3-030-26574-8\_14"",
    url = ""https://doi.org/10.1007/978-3-030-26574-8\_14""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		From COBOL to Business Rules—Extracting Business Rules from Legacy Code	https://doi.org/10.1007/978-3-030-26574-8_14	Springer International Publishing	nan; Keywords; References; Link
420	Behave	From Requirements to Automated Acceptance Tests with the RSL Language	Software testing can promote software quality. However, this activity is often performed at the end of projects where failures are most difficult to correct. Combining requirements specification activities with test design at an early stage of the software development process can be beneficial. One way to do this is to use a more structured requirements specification language. This allow to reduce typical problems such as ambiguity, inconsistency, and incorrectness in requirements and may allow the automatic generation of (parts of) acceptance test cases reducing the test design effort. In this paper we discuss an approach that promotes the practice of requirements specification combined with testing specification. This is a model-based approach that promotes the alignment between requirements and tests, namely, test cases and also low-level automated test scripts. To show the applicability of this approach, we integrate two complementary languages: (i) the ITLingo RSL (Requirements Specification Language) that is specially designed to support both requirements and tests rigorously and consistently specified; and (ii) the Robot language, which is a low-level keyword-based language for specifying test scripts. This approach includes model-to-model transformation processes, namely a transformation process from requirements (defined in RSL) into test cases (defined in RSL), and a second transformation process from test cases (in RSL) into test scripts (defined according the Robot framework). This approach was applied in a fictitious online store that illustrates the various phases of the proposal.	Requirements Specification Language (RSL); Test case specification; Model-based Testing (MBT); Test case generation; Test case execution	Paiva, Ana C. R.; Maciel, Daniel; da Silva, Alberto Rodrigues	International Conference on Evaluation of Novel Approaches to Software Engineering	https://doi.org/10.1007/978-3-030-40223-5_3		39--57	"""@InProceedings{10.1007/978-3-030-40223-5_3,
    author = ""Paiva, Ana C. R. and Maciel, Daniel and da Silva, Alberto Rodrigues"",
    editor = ""Damiani, Ernesto and Spanoudakis, George and Maciaszek, Leszek A."",
    title = ""From Requirements to Automated Acceptance Tests with the RSL Language"",
    booktitle = ""Evaluation of Novel Approaches to Software Engineering"",
    year = ""2020"",
    publisher = ""Springer International Publishing"",
    address = ""Cham"",
    pages = ""39--57"",
    abstract = ""Software testing can promote software quality. However, this activity is often performed at the end of projects where failures are most difficult to correct. Combining requirements specification activities with test design at an early stage of the software development process can be beneficial. One way to do this is to use a more structured requirements specification language. This allow to reduce typical problems such as ambiguity, inconsistency, and incorrectness in requirements and may allow the automatic generation of (parts of) acceptance test cases reducing the test design effort. In this paper we discuss an approach that promotes the practice of requirements specification combined with testing specification. This is a model-based approach that promotes the alignment between requirements and tests, namely, test cases and also low-level automated test scripts. To show the applicability of this approach, we integrate two complementary languages: (i) the ITLingo RSL (Requirements Specification Language) that is specially designed to support both requirements and tests rigorously and consistently specified; and (ii) the Robot language, which is a low-level keyword-based language for specifying test scripts. This approach includes model-to-model transformation processes, namely a transformation process from requirements (defined in RSL) into test cases (defined in RSL), and a second transformation process from test cases (in RSL) into test scripts (defined according the Robot framework). This approach was applied in a fictitious online store that illustrates the various phases of the proposal."",
    isbn = ""978-3-030-40223-5""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		From Requirements to Automated Acceptance Tests with the RSL Language	https://doi.org/10.1007/978-3-030-40223-5_3	Springer International Publishing	nan; References; Link
421	Behave	From Requirements to Verifiable Executable Models Using Rebeca	Software systems are complicated, and the scientific and engineering methodologies for software development are relatively young. We need robust methods for handling the ever-increasing complexity of software systems that are now in every corner of our lives. In this paper we focus on asynchronous event-based reactive systems and show how we start from the requirements, move to actor-based Rebeca models, and formally verify the models for correctness. The Rebeca models include the details of the signals and messages that are passed at the network level including the timing, and can be mapped to the executable code. We show how we can use the architecture design and structured requirements to build the behavioral models, including Rebeca models, and use the state diagrams to write the properties of interest, and then use model checking to check the properties. The formally verified models can then be used to develop the executable code. The natural mappings among the models for requirements, the formal models, and the executable code improve the effectiveness and efficiency of the approach. It also helps in runtime monitoring and adaptation.	Application programs; Embedded systems; Model checking; Software design; Architecture designs; Asynchronous event; Behavioral model; Effectiveness and efficiencies; Engineering methodology; Executable codes; Runtime Monitoring; Software systems; Formal methods; Application programs;  Embedded systems;  Model checking;  Software design;  Architecture designs;  Asynchronous event;  Behavioral model;  Effectiveness and efficiencies;  Engineering methodology;  Executable codes;  Runtime Monitoring;  Software systems;  Formal methods	Sirjani, Marjan; Provenzano, Luciana; Asadollah, Sara Abbaspour; Moghadam, Mahshid Helali	Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)	https://doi.org/10.1007/978-3-030-67220-1\_6		67-86	"""@inproceedings{WOS:000723671300006,
    Author = ""Sirjani, Marjan and Provenzano, Luciana and Asadollah, Sara Abbaspour and Moghadam, Mahshid Helali"",
    Editor = ""Cleophas, L and Massink, M"",
    Title = ""From Requirements to Verifiable Executable Models Using Rebeca"",
    Booktitle = ""SOFTWARE ENGINEERING AND FORMAL METHODS, SEFM 2020"",
    Series = ""Lecture Notes in Computer Science"",
    Year = ""2021"",
    Volume = ""12524"",
    Pages = ""67-86"",
    Note = ""18th International Conference on Software Engineering and Formal Methods (SEFM), Ctr Math \\& Informat, ELECTR NETWORK, SEP 14-18, 2020"",
    Abstract = ""Software systems are complicated, and the scientific and engineering methodologies for software development are relatively young. We need robust methods for handling the ever-increasing complexity of software systems that are now in every corner of our lives. In this paper we focus on asynchronous event-based reactive systems and show how we start from the requirements, move to actor-based Rebeca models, and formally verify the models for correctness. The Rebeca models include the details of the signals and messages that are passed at the network level including the timing, and can be mapped to the executable code. We show how we can use the architecture design and structured requirements to build the behavioral models, including Rebeca models, and use the state diagrams to write the properties of interest, and then use model checking to check the properties. The formally verified models can then be used to develop the executable code. The natural mappings among the models for requirements, the formal models, and the executable code improve the effectiveness and efficiency of the approach. It also helps in runtime monitoring and adaptation."",
    Publisher = ""SPRINGER INTERNATIONAL PUBLISHING AG"",
    Address = ""GEWERBESTRASSE 11, CHAM, CH-6330, SWITZERLAND"",
    Type = ""Proceedings Paper"",
    Language = ""English"",
    Affiliation = ""Sirjani, M (Corresponding Author), Malardalen Univ, Vasteras, Sweden. Sirjani, M (Corresponding Author), Reykjavik Univ, Reykjavik, Iceland. Sirjani, Marjan; Provenzano, Luciana; Asadollah, Sara Abbaspour, Malardalen Univ, Vasteras, Sweden. Sirjani, Marjan, Reykjavik Univ, Reykjavik, Iceland. Moghadam, Mahshid Helali, RISE Res Inst Sweden, Vasteras, Sweden."",
    DOI = ""10.1007/978-3-030-67220-1\\_6"",
    ISSN = ""0302-9743"",
    EISSN = ""1611-3349"",
    ISBN = ""978-3-030-67220-1; 978-3-030-67219-5"",
    Keywords-Plus = ""VERIFICATION"",
    Research-Areas = ""Computer Science; Mathematics"",
    Web-of-Science-Categories = ""Computer Science, Software Engineering; Computer Science, Theory \\& Methods; Mathematics, Applied"",
    Author-Email = ""marjan.sirjani@mdh.se Luciana.Provenzano@mdh.se Sara.Abbaspour@mdh.se mahshid.helali.moghadam@ri.se"",
    Affiliations = ""Malardalen University; Reykjavik University; RISE Research Institutes of Sweden"",
    ResearcherID-Numbers = ""Helali Moghadam, Mahshid/AAM-8026-2021"",
    Funding-Acknowledgement = ""Swedish Foundation for Strategic Research (SSF); DPAC project - Knowledge Foundation (KK-stiftelsen); Vinnova through the ITEA3 TESTOMAT project; Vinnova through the XIVT project"",
    Funding-Text = ""We would like to thank Edward Lee for reading the paper and giving us very useful comments. The research of the first three authors for this work is supported by the Serendipity project funded by the Swedish Foundation for Strategic Research (SSF). The research of the first two authors is also supported by the DPAC project funded by the Knowledge Foundation (KK-stiftelsen). The research of the fourth author is funded partially by Vinnova through the ITEA3 TESTOMAT and XIVT projects."",
    Number-of-Cited-References = ""28"",
    Times-Cited = ""1"",
    Usage-Count-Last-180-days = ""0"",
    Usage-Count-Since-2013 = ""1"",
    Doc-Delivery-Number = ""BS4XD"",
    Web-of-Science-Index = ""Conference Proceedings Citation Index - Science (CPCI-S)"",
    Unique-ID = ""WOS:000723671300006"",
    DA = ""2024-10-22""
}
"""	Excluded	Excluded	new_screen			2	Web of Science		From Requirements to Verifiable Executable Models Using Rebeca	https://www.webofscience.com/wos/woscc/full-record/WOS:000723671300006	SPRINGER INTERNATIONAL PUBLISHING AG	nan; References
422	Behave	Fusing Modeling and Programming into Language-Oriented Programming	Modeling in general is of course different from programming (think: climate models). However, when we consider the role of models in the context of ``model-driven'', i.e., when they are used to automatically construct software, it is much less clear that modeling is different from programming. In this paper, I argue that the two are conceptually indistinguishable, even though in practice they traditionally emphasize different aspects of the (conceptually indistinguishable) common approach. The paper discusses and illustrates language-oriented programming, the approach to {\{}modeling|programming{\}} we have successfully used over the last 7 years to build a range of innovative systems in domains such as insurance, healthcare, tax, engineering and consumer electronics. It relies on domain-specific languages, modular language extension, mixed notations, and in particular, the Jetbrains MPS language workbench.	Domain-specific languages; Language modularity; Function programming; Language engineering; Meta programming	Voelter, Markus	International Symposium on Leveraging Applications of Formal Methods	https://doi.org/10.1007/978-3-030-03418-4_19		309--339	"""@InProceedings{10.1007/978-3-030-03418-4_19,
    author = ""Voelter, Markus"",
    editor = ""Margaria, Tiziana and Steffen, Bernhard"",
    title = ""Fusing Modeling and Programming into Language-Oriented Programming"",
    booktitle = ""Leveraging Applications of Formal Methods, Verification and Validation. Modeling"",
    year = ""2018"",
    publisher = ""Springer International Publishing"",
    address = ""Cham"",
    pages = ""309--339"",
    abstract = ""Modeling in general is of course different from programming (think: climate models). However, when we consider the role of models in the context of ``model-driven'', i.e., when they are used to automatically construct software, it is much less clear that modeling is different from programming. In this paper, I argue that the two are conceptually indistinguishable, even though in practice they traditionally emphasize different aspects of the (conceptually indistinguishable) common approach. The paper discusses and illustrates language-oriented programming, the approach to {\{}modeling|programming{\}} we have successfully used over the last 7 years to build a range of innovative systems in domains such as insurance, healthcare, tax, engineering and consumer electronics. It relies on domain-specific languages, modular language extension, mixed notations, and in particular, the Jetbrains MPS language workbench."",
    isbn = ""978-3-030-03418-4""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Fusing Modeling and Programming into Language-Oriented Programming	https://doi.org/10.1007/978-3-030-03418-4_19	Springer International Publishing	nan; References; Link
423	Behave	Gamification: a systematic review of design frameworks	Learner's motivation difficulties are recognized as a problem in diverse educational scenarios, reaching up to university degrees. Among other techniques that are often applied by instructors to counteract this issue, those related to the use of gaming elements seem to very promising. In this context, considering the use of game-like properties in learning scenarios, known as gamification, has received increasing interest by academia in recent years. However, its application in higher education can be challenging, due to some unwanted effects caused by the lack of proven design methodologies have been detected. Choosing the adequate formal process for gamification design has become an important success requirement. This work presents a systematic review of the gamification design frameworks discussed in the literature, providing a useful resource to educational practitioners as well as gamification designers and researchers. A total of 2314 unique works are initially recorded, based on queries in databases, libraries, journals and search engines. After applying a systematic filtering process, a definitive list of 40 works is more closely analysed. Next to review over relevant literature, an assessment of the main features found in the discussed approaches is given, while also categorizing them according to their main application field and its suitability in higher educational environments.	Artificial Intelligence; Medical Ethics; Digital Education and Educational Technology; Gamification; Frameworks; Game design; Review; Learning; Higher education	Alberto Mora; Daniel Riera; Carina Gonzalez; Joan Arnedo-Moreno	Journal of Computing in Higher Education	https://doi.org/10.1007/s12528-017-9150-4	"citation_journal_title=International Journal for Infonomics; citation_title=SGI: A framework for increasing the sustainability of gamification impact; citation_author=A Almarshedi, G Wills, V Wanick, A Ranchhod; citation_volume=8; citation_issue=1/2; citation_publication_date=2015; citation_pages=1044-1052; citation_doi=10.20533/iji.1742.4712.2015.0123; citation_id=CR1; citation_journal_title=Journal of MUD Research; citation_title=Hearts, clubs, diamonds, spades: Players who suit MUDs; citation_author=R Bartle; citation_volume=1; citation_issue=1; citation_publication_date=1996; citation_pages=19; citation_id=CR2; citation_journal_title=Communications of the ACM; citation_title=Toward an ethics of persuasive technology; citation_author=D Berdichevsky, E Neuenschwander; citation_volume=42; citation_issue=5; citation_publication_date=1999; citation_pages=51-58; citation_doi=10.1145/301353.301410; citation_id=CR3; citation_title=Challenges for game designers; citation_publication_date=2009; citation_id=CR4; citation_author=B Brathwaite; citation_author=I Schreiber; citation_publisher=Charles River Media; Brito, J., Vieira, V., & Duran, A. (2015). Towards a framework for gamification design on crowdsourcing systems: The GAME approach. In Proceeding of the 12th international conference on information technology--new generations (pp. 445-450). Las Vegas, NV: IEEE. doi:
                    10.1109/ITNG.2015.78
                    
                  .; citation_title=Gamification and the trough of disillusionment; citation_inbook_title=Mensch & Computer 2014--Workshop band; citation_publication_date=2014; citation_pages=389-395; citation_id=CR6; citation_author=J Broer; citation_publisher=De Gruyter Oldenbourg; citation_title=Gamify: How gamification motivates people to do extraordinary things; citation_publication_date=2014; citation_id=CR7; citation_author=B Burke; citation_publisher=Bibliomotion; citation_title=Man, play, and games; citation_publication_date=2001; citation_id=CR8; citation_author=R Caillois; citation_publisher=University of Illinois Press; citation_title=Assessing the core elements of the gaming experience; citation_inbook_title=Evaluating user experience in games: Concepts and methods; citation_publication_date=2010; citation_pages=47-72; citation_id=CR9; citation_author=EH Calvillo-Gamez; citation_author=P Cairns; citation_author=AL Cox; citation_publisher=Springer; Charles, D., & McDonough, S. (2014). A participatory design framework for the gamification of rehabilitation systems. In: P. M. Sharkey, L. Pareto, J. Broeren & M. Rydmark (Eds.), Proceedings of the 10th international conference on disability, virtual reality & associated technologies. Gothenburg, Sweden (pp. 293-296). Reading: ICDVRAT.; citation_title=The RSpec book: Behaviour driven development with Rspec, Cucumber, and friends; citation_publication_date=2010; citation_id=CR11; citation_author=D Chelimsky; citation_author=D Astels; citation_author=B Helmkamp; citation_author=D North; citation_publisher=Pragmatic Bookshelf; citation_title=Actionable gamification : Beyond points, badges, and leaderboards; citation_publication_date=2015; citation_id=CR12; citation_author=Y-K Chou; citation_publisher=Octalysis Media; citation_title=Gamification: The measurement of benefits; citation_inbook_title=Gamification in education and business; citation_publication_date=2015; citation_pages=673-688; citation_id=CR13; citation_author=K Conley; citation_author=C Donaldson; citation_publisher=Springer; citation_title=Flow: The psychology of optimal experience; citation_publication_date=1990; citation_id=CR14; citation_author=M Csikszentmihalyi; citation_publisher=Harper & Row; citation_journal_title=Management Science; citation_title=User acceptance of computer technology: A comparison of two theoretical models; citation_author=F Davis, R Bagozzi, P Warshaw; citation_volume=35; citation_issue=8; citation_publication_date=1989; citation_pages=982-1003; citation_doi=10.1287/mnsc.35.8.982; citation_id=CR15; Deterding, S., Dixon, D., Khaled, R., & Nacke, L. (2011). From game design elements to gamefulness: Defining gamification. In Proceedings of the 15th International Academic MindTrek Conference: Envisioning Future Media Environments (pp. 9-25). (MindTrek'11). New York, NY: ACM Press. doi:
                    10.1145/2181037.2181040
                    
                  .; DiTommaso, D. (2011). Beyond gamification: Architecting engagement through game design thinking. Retrieved February 9, 2015, from 
                    http://www.slideshare.net/DiTommaso/beyond-gamification-architecting-engagement-through-game-design-thinking
                    
                  .; citation_journal_title=Computers & Education; citation_title=Gamifying learning experiences: Practical implications and outcomes; citation_author=A Dominguez, J Saenz-de-Navarrete, L de-Marcos, L Fernandez-Sanz, C Pages, J-J Martinez-Herraiz; citation_volume=63; citation_publication_date=2013; citation_pages=380-392; citation_doi=10.1016/j.compedu.2012.12.020; citation_id=CR18; citation_journal_title=International Journal of Human-Computer Studies; citation_title=A person-artefact-task (PAT) model of flow antecedents in computer-mediated environments; citation_author=CM Finneran, P Zhang; citation_volume=59; citation_issue=4; citation_publication_date=2003; citation_pages=475-496; citation_doi=10.1016/S1071-5819(03)00112-5; citation_id=CR19; Fitz-Walter, Z. J. (2015). Achievement unlocked: Investigating the design of effective gamification experiences for mobile applications and devices. School of Information Systems; Science & Engineering Faculty. Queensland University of Technology, Brisbane. Ph.D. thesis.; Francisco-Aparicio, A., Gutierrez-Vela, F. L., Isla-Montes, J. L., & Sanchez, J. L. G. (2013). Gamification: Analysis and application. In New trends in interaction, virtual reality and modeling (pp. 113-126). Springer London. doi:
                    10.1007/978-1-4471-5445-7_9
                    
                  .; Gartner. (2013). Gartner's 2013 hype cycle for emerging technologies maps out evolving relationship between humans and machines. Retrieved January 20, 2015, from 
                    http://www.gartner.com/newsroom/id/2575515
                    
                  .; Gartner. (2014). Gartner's 2014 hype cycle for emerging technologies maps the journey to digital business. Retrieved January 20, 2015, from 
                    http://www.gartner.com/newsroom/id/2819918
                    
                  .; Gears, D., & Braun, K. (2013). Gamification in business: Designing motivating solutions to problem situations. In Proceedings of the CHI 2013 workshop; citation_title=Lean UX: Applying lean principles to improve user experience; citation_publication_date=2013; citation_id=CR25; citation_author=J Gothelf; citation_author=J Seiden; citation_publisher=O'Reilly Media, Ed.; citation_journal_title=Journal of Computing in Higher Education; citation_title=Technology and student-centered learning in higher education: Issues and practices; citation_author=MJ Hannafin, SM Land; citation_volume=12; citation_issue=1; citation_publication_date=2000; citation_pages=3-30; citation_doi=10.1007/BF03032712; citation_id=CR26; Harms, J., Wimmer, C., Kappel, K., & Grechenig, T. (2014). Gamification of online surveys: Conceptual foundations and a design process based on the MDA Framework. In Proceedings of the 8th Nordic conference on human-computer interaction: Fun, fast, foundational. Helsinki, Finland (pp. 565-568). New York, NY: ACM. doi:
                    10.1145/2639189.2639230
                    
                  .; Herzig, P. (2014). Gamification as a service. Technische Universitat Dresden, Dresden, Ph.D. Thesis.; Hunicke, R., LeBlanc, M., & Zubek, R. (2004). MDA: A formal approach to game design and game research. In D. Fu & J. Orkin (Eds.) Proceedings of the challenges in Game AI Workshop, nineteenth national conference on artificial intelligence, San Jose, California (p. 4). Menlo Park, CA: AAAI Press.; Jacobs, H. (2013). Gamification: A framework for the workplace. University of Liverpool, Liverpool. Ph.D. dissertation.; Jimenez, S. (2013). Gamification model canvas. Retrieved January 5, 2015, from 
                    http://www.gameonlab.es/canvas/
                    
                  .; citation_title=The NMC Horizon Report: 2014; citation_publication_date=2014; citation_id=CR32; citation_author=L Johnson; citation_author=S Becker; citation_author=V Estrada; citation_author=A Freeman; citation_publisher=New Media Consortium; Julius, K., & Salo, J. (2013). Designing gamification. Marketing. University of Oulu, Oulu. Master's Thesis.; citation_title=The gamification of learning and instruction fieldbook: Ideas into practice; citation_publication_date=2014; citation_id=CR34; citation_author=K Kapp; citation_publisher=Wiley; Kappen, D. L. D., & Nacke, L. E. (2013). The kaleidoscope of effective gamification: Deconstructing gamification in business applications. In 1st international conference on gameful design, research, and applications, gamification 2013 (pp. 119-122). New York, NY: ACM. doi:
                    10.1145/2583008.2583029
                    
                  .; Klock, A., & da Cunha, L. (2015). Gamification in e-learning systems: A conceptual model to engage students and its application in an adaptive e-learning system. In Learning and collaboration technologies (Vol. 9192, pp. 595-607). Berlin: Springer. doi:
                    10.1007/978-3-319-20609-7_56
                    
                  .; citation_journal_title=Gamification in Education and Business; citation_title=A gamification-based framework for developing learning activities of computational thinking; citation_author=I Kotini, S Tzelepi; citation_publication_date=2015; citation_id=CR37; Kumar, J. (2013). Gamification at work: Designing engaging business software. In Design, user experience, and usability. Health, learning, playing, cultural, and cross-cultural user experience (Vol. 8013, pp. 528-537). Berlin: Springer. doi:
                    10.1007/978-3-642-39241-2_58
                    
                  .; Li, C. (2014). Evaluation of a theoretical model for gamification in workplace IS context. University of British Columbia, Vancouver. Doctoral dissertation.; Liu, Y., Alexandrova, T., & Nakajima, T. (2011). Gamifying intelligent environments. In Proceedings of the 2011 international ACM workshop on Ubiquitous meta user interfaces, Scottsdale, AZ. (pp. 7-12). New York, NY: ACM. doi:
                    10.1145/2072652.2072655
                    
                  .; citation_journal_title=SSRN Electronic Journal; citation_title=Towards meaningful engagement: Gamification designs for gameful interaction with information systems; citation_author=D Liu, R Santhanam; citation_volume=8; citation_issue=2; citation_publication_date=2015; citation_pages=128-140; citation_id=CR41; citation_journal_title=Research Synthesis Methods; citation_title=Searching for grey literature for systematic reviews: Challenges and benefits; citation_author=Q Mahood, D Eerd, E Irvin; citation_volume=5; citation_publication_date=2014; citation_pages=221-234; citation_doi=10.1002/jrsm.1106; citation_id=CR42; Manrique, V. (2013). Gamification design framework: The SMA model. Retrieved January 20, 2015, from 
                    http://www.gamasutra.com/blogs/VictorManrique/20130618/194563/Gamification_Design_Framework_The_SMA_Model.php
                    
                  .; Marache-Francisco, C., & Brangier, E. (2013). Process of gamification. From the consideration of gamification to its practical implementation. In Proceeding of the CENTRIC 2013: The sixth international conference on advances in human oriented and personalized mechanisms, technologies, and services, Venice, Italy (pp. 126-131). IARIA XPS Press.; citation_title=Gamification: A simple introduction; citation_publication_date=2013; citation_id=CR45; citation_author=A Marczewski; citation_publisher=Lulu; Marczewski, A. (2014). Gamification design vs game design. Retrieved February 1, 2015, from 
                    http://www.gamified.uk/2014/03/25/gamification-design-vs-game-design/
                    
                  .; Merino de Paz, B. (2013). Gamification: A tool to improve sustainability efforts. University of Manchester, Manchester. Master's Thesis.; Mora, A., Riera, D., Gonzalez, C., & Arnedo-Moreno, J. (2015). A literature review of gamification design frameworks. In Proceedings of 7th international conference on games and virtual worlds for serious applications (VS-Games), Skovde, Sweden (pp. 1-8). IEEE. doi:
                    10.1109/VS-GAMES.2015.7295760
                    
                  .; Mora, A., Zaharias, P., Gonzalez, C., & Arnedo-Moreno, J. (2016). FRAGGLE: A FRamework for AGile Gamification of Learning Experiences, Rome, Italy (pp. 530-539). Berlin: Springer. doi:
                    10.1007/978-3-319-40216-1_57
                    
                  .; Nah, F.-H., Telaprolu, V., Rallapalli, S., & Venkata, P. (2013). Gamification of education using computer games. In S. Yamamoto (Ed.), Human interface and the management of information. Information and interaction for learning, culture, collaboration and business. JOUR, Springer Berlin Heidelberg. doi:
                    10.1007/978-3-642-39226-9_12
                    
                  .; Neeli, B. K. (2015). Gamification in the enterprise: Differences from consumer market, implications, and a method to manage them. In Gamification in education and business (pp. 489-511). Cham: Springer. doi:
                    10.1007/978-3-319-10208-5_25
                    
                  .; Nicholson, S. (2012). A user-centered theoretical framework for meaningful gamification. In Games + Learning + Society 8.0 Conference Proceedings, Madison, WI (pp. 223-230). Pittsburgh, PA: ETC Press.; O'Donovan, S., Gain, J., & Marais, P. (2013). A case study in the gamification of a university-level games development course. In P. Machanick & M. Tsietsi (Eds.), Proceedings of the South African Institute for Computer Scientists and Information Technologists Conference, East London, South Africa (pp. 242-251). New York, NY: ACM. doi:
                    10.1145/2513456.2513469
                    
                  .; citation_title=Business model generation: A handbook for visionaries, game changers, and challengers; citation_publication_date=2010; citation_id=CR54; citation_author=A Osterwalder; citation_author=Y Pigneur; citation_publisher=Wiley; citation_journal_title=Journal of Management Information Systems; citation_title=A design science research methodology for information systems research; citation_author=K Peffers, T Tuunanen, M Rothenberger, S Chatterjee; citation_volume=24; citation_issue=3; citation_publication_date=2007; citation_pages=45-77; citation_doi=10.2753/MIS0742-1222240302; citation_id=CR55; Pelling, N. (2011). The (Short) prehistory of gamification. Funding Startups (& Other Impossibilities). Retrieved January 20, 2015, from 
                    https://nanodome.wordpress.com/2011/08/09/the-short-prehistory-of-gamification/
                    
                  .; citation_title=Drive: The surprising truth about what motivates us; citation_publication_date=2011; citation_id=CR57; citation_author=D Pink; citation_publisher=Penguin Books; Popa, D. M. (2013). Gamification of productivity software: A user-centered design approach. University of Copenhagen, Copenhagen. Master's Thesis.; citation_journal_title=Journal of Gaming & Virtual Worlds; citation_title=Towards gamification transparency: A conceptual framework for the development of responsible gamified enterprise systems; citation_author=M Raftopoulos; citation_volume=6; citation_issue=2; citation_publication_date=2014; citation_pages=159-178; citation_doi=10.1386/jgvw.6.2.159_1; citation_id=CR59; citation_title=Total engagement: How games and virtual worlds are changing the way people work and businesses compete; citation_publication_date=2009; citation_id=CR60; citation_author=B Reeves; citation_author=J Read; citation_publisher=Harvard Business Review Press; citation_journal_title=Business Horizons; citation_title=Is it all a game? Understanding the principles of gamification; citation_author=K Robson, K Plangger, JH Kietzmann, I McCarthy, L Pitt; citation_volume=58; citation_issue=4; citation_publication_date=2015; citation_pages=411-420; citation_doi=10.1016/j.bushor.2015.03.006; citation_id=CR61; Rojas, D., Kapralos, B., & Dubrowski, A. (2014). Gamification for internet based learning in health professions education. In Proceedings of the 14th IEEE international conference on advanced learning technologies, ICALT 2014, Athens, Greece (pp. 281-282). IEEE Computer Society. doi:
                    10.1109/ICALT.2014.87
                    
                  .; citation_journal_title=Technology Innovation Management Review; citation_title=Level up your strategy: Towards a descriptive framework for meaningful enterprise gamification; citation_author=U Ruhi; citation_volume=5; citation_issue=8; citation_publication_date=2015; citation_pages=5-16; citation_id=CR63; citation_journal_title=American Psychologist; citation_title=Self-determination theory and the facilitation of intrinsic motivation, social development, and well-being; citation_author=R Ryan, E Deci; citation_volume=55; citation_issue=1; citation_publication_date=2000; citation_pages=68-78; citation_doi=10.1037/0003-066X.55.1.68; citation_id=CR64; Sakamoto, M., Nakajima, T., & Alexandrova, T. (2012). Value-based design for gamifying daily activities. In 11th international conference on entertainment computing, ICEC 2012, Bremen, Germany (Vol. 7522, pp. 421-424). Springer International Publishing. doi:
                    10.1007/978-3-642-33542-6_43
                    
                  .; citation_title=Rules of play: Game design fundamentals; citation_publication_date=2003; citation_id=CR66; citation_author=K Salen; citation_author=E Zimmerman; citation_publisher=The MIT Press; citation_title=The art of game design: A book of lenses; citation_publication_date=2008; citation_id=CR67; citation_author=J Schell; citation_publisher=Elsevier Inc; Schonen, R. (2014). Gamification in change management processes. Munich University, Munich. Bachelor Thesis.; Shahri, A., Hosseini, M., Phalp, K., Taylor, J., & Ali, R. (2014). Towards a code of ethics for gamification at enterprise. In The practice of enterprise modeling: 7th IFIP WG 8.1 Working Conference, PoEM 2014, Manchester, UK (Vol. 197, pp. 235-245). Berlin: Springer. doi:
                    10.1007/978-3-662-45501-2_17
                    
                  .; citation_journal_title=Computers in Human Behavior; citation_title=A social gamification framework for a K-6 learning platform; citation_author=J Simoes, R Diaz Redondo, A Fernandez Vilas; citation_volume=29; citation_issue=2; citation_publication_date=2012; citation_pages=345-353; citation_doi=10.1016/j.chb.2012.06.007; citation_id=CR70; Tuunanen, J., & Hamari, J. (2012). Meta-synthesis of player typologies. In Proceedings of Nordic Digra 2012 conference: Local and global--Games in culture and society, Tampere, Finland (Vol 10). Digital Games Research Association DiGRA.; Tzouvara, K., & Zaharias, P. (2013). Towards a framework for applying Gamification in Education. In 7th international conference in open and distance learning (ICODL 2013) Athens, Greece.; Vargas-Enriquez, J., Garcia-Mundo, L., Genero, M., & Piattini, M. (2015). Analisis de uso de la gamificacion en la ensenanza de la informatica. Actas de las XXI Jornadas de la Ensenanza Universitaria de la Informatica, Andorra La Vella, Andorra (pp. 105-112). JENUI.; Versteeg, M. (2013). Ethics & Gamification design: A moral framework for taking responsibility. Utrech University, Utrecht. Master's thesis.; citation_title=For the win: How game thinking can revolutionize your business; citation_publication_date=2012; citation_id=CR75; citation_author=K Werbach; citation_author=D Hunter; citation_publisher=Wharton Digital Press; Wongso, O., Rosmansyah, Y., & Bandung, Y. (2015). Gamification framework model, based on social engagement in e-learning 2.0. In Proccedings of the 2nd international conference on technology, informatics, management, engineering and environment (TIME 2014), Bandung, Indonesia (pp. 10-14). IEEE. doi:
                    10.1109/TIME-E.2014.7011583
                    
                  .; citation_journal_title=Cyber Psychology & Behavior; citation_title=Motivations for play in online games; citation_author=N Yee; citation_volume=9; citation_issue=6; citation_publication_date=2007; citation_pages=772-775; citation_doi=10.1089/cpb.2006.9.772; citation_id=CR77; citation_title=Gamification by design: Implementing game mechanics in web and mobile apps; citation_publication_date=2011; citation_id=CR78; citation_author=G Zichermann; citation_author=C Cunningham; citation_publisher=O'Reilly Media Inc"			Excluded	Excluded	new_screen			2	Springer Link		Gamification: a systematic review of design frameworks	https://doi.org/10.1007/s12528-017-9150-4	Springer Link	nan; Pages; Year; Bibtex; Link
424	Behave	Getting Coaching That Really Helps	We examine the current state of Agile coaching, which relies on the flawed shu-ha-ri model. As an alternative, we look back to the International Institute of Rural Reconstruction and James Yen's work with poor Chinese villagers for a less patronizing, more effective coaching worldview. We also show how the various certification programs in the Agile world tend to reinforce mechanical knowledge and behavior.	Enterprise Architecture; Training Class; User Story; Agile Practice; Product Owner	Kulak, Daryl; Li, Hong	The Journey to Enterprise Agility	https://doi.org/10.1007/978-3-319-54087-0_13		197--209	"""@Inbook{Kulak2017,
    author = ""Kulak, Daryl and Li, Hong"",
    title = ""Getting Coaching That Really Helps"",
    bookTitle = ""The Journey to Enterprise Agility: Systems Thinking and Organizational Legacy"",
    year = ""2017"",
    publisher = ""Springer International Publishing"",
    address = ""Cham"",
    pages = ""197--209"",
    abstract = ""We examine the current state of Agile coaching, which relies on the flawed shu-ha-ri model. As an alternative, we look back to the International Institute of Rural Reconstruction and James Yen's work with poor Chinese villagers for a less patronizing, more effective coaching worldview. We also show how the various certification programs in the Agile world tend to reinforce mechanical knowledge and behavior."",
    isbn = ""978-3-319-54087-0"",
    doi = ""10.1007/978-3-319-54087-0\_13"",
    url = ""https://doi.org/10.1007/978-3-319-54087-0\_13""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Getting Coaching That Really Helps	https://doi.org/10.1007/978-3-319-54087-0_13	Springer International Publishing	nan; References; Link
425	Behave	Getting Started	http://link.springer.com/chapter/10.1007/978-1-4842-7289-3_1		Shashank Shukla		https://www.ncbi.nlm.nih.gov/pmc/articles/PMC2585239/				Excluded	Excluded	new_screen			2	Pub Med Central		Getting Started	https://www.ncbi.nlm.nih.gov/pmc/articles/PMC2585239/		nan; Venue; Authors; Abstract; Keywords; References; Pages; Year; Bibtex; Publisher
426	Behave	Getting Started with Selenium and Visual Studio	The objective of this chapter and the lessons that it encompasses is to guide you step by step to prepare your development environment to start test automation developments with Selenium and C#. You will be identifying important packages you need to add to your test automation projects and the purpose of each of those packages as well as the use of the packages. Additionally, you will explore the required setup to enable developing selenium-based test automations with python language in Visual Studio. Preparing your development environment with open source test automation framework MAQS and Spec Flow would pave the way to exploring capabilities of these frameworks to enhance test automations development in the coming chapters.		Chaminda Chandrasekara; Pushpa Herath	Hands-On Functional Test Automation	https://doi.org/10.1007/978-1-4842-4411-1_2		13-55		Excluded	Excluded	new_screen			2	Springer Link		Getting Started with Selenium and Visual Studio	https://link.springer.com/chapter/10.1007/978-1-4842-4411-1_2	Apress, Berkeley, CA	nan; Keywords; References; Year; Bibtex
427	Behave	Getting Started with Test-Driven Development	This chapter introduces the basic concepts of Test-Driven Development in Swift with XCTest by implementing the leap year evaluation algorithm. You'll learn how to practice the Red, green, refactor cycle, about the Test List, Fake It, and Wishful Coding patterns, and how the compiler fits in the TDD workflow.		Lodi, Gio	Test-Driven Development in Swift	https://doi.org/10.1007/978-1-4842-7002-8_3		27--42	"""@Inbook{Lodi2021,
    author = ""Lodi, Gio"",
    title = ""Getting Started with Test-Driven Development"",
    bookTitle = ""Test-Driven Development in Swift: Compile Better Code with XCTest and TDD"",
    year = ""2021"",
    publisher = ""Apress"",
    address = ""Berkeley, CA"",
    pages = ""27--42"",
    abstract = ""This chapter introduces the basic concepts of Test-Driven Development in Swift with XCTest by implementing the leap year evaluation algorithm. You'll learn how to practice the Red, green, refactor cycle, about the Test List, Fake It, and Wishful Coding patterns, and how the compiler fits in the TDD workflow."",
    isbn = ""978-1-4842-7002-8"",
    doi = ""10.1007/978-1-4842-7002-8\_3"",
    url = ""https://doi.org/10.1007/978-1-4842-7002-8\_3""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Getting Started with Test-Driven Development	https://doi.org/10.1007/978-1-4842-7002-8_3	Apress	nan; Keywords; References; Link
428	Behave	Groovy Awesomeness	This short chapter introduces various useful frameworks within the Groovy ecosystem. Some of these will be described more fully in later chapters.	Cloud Computing; Maintenance Mode; Static Code Analysis; Java Project; Instal Programming	Davis, Adam L.	Learning Groovy	https://doi.org/10.1007/978-1-4842-2117-4_11		61--64	"""@Inbook{Davis2016,
    author = ""Davis, Adam L."",
    title = ""Groovy Awesomeness"",
    bookTitle = ""Learning Groovy"",
    year = ""2016"",
    publisher = ""Apress"",
    address = ""Berkeley, CA"",
    pages = ""61--64"",
    abstract = ""This short chapter introduces various useful frameworks within the Groovy ecosystem. Some of these will be described more fully in later chapters."",
    isbn = ""978-1-4842-2117-4"",
    doi = ""10.1007/978-1-4842-2117-4\_11"",
    url = ""https://doi.org/10.1007/978-1-4842-2117-4\_11""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Groovy Awesomeness	https://doi.org/10.1007/978-1-4842-2117-4_11	Apress	nan; References; Link
429	Behave	Hamcrest vs AssertJ: An Empirical Assessment of Tester Productivity	Context. Extensive unit testing is worth its costs in terms of the higher quality of the final product and reduced development expenses, though it may consume more than fifty percent of the overall project budget. Thus, even a tiny percentage of saving can significantly decrease the costs. Since recently competing assertion libraries emerged, we need empirical evidence to gauge them in terms of developer productivity, allowing SQA Managers and Testers to select the best.	Hamcrest; AssertJ; Empirical study	Leotta, Maurizio; Cerioli, Maura; Olianas, Dario; Ricca, Filippo	International Conference on the Quality of Information and Communications Technology	https://doi.org/10.1007/978-3-030-29238-6_12		161--176	"""@InProceedings{10.1007/978-3-030-29238-6_12,
    author = ""Leotta, Maurizio and Cerioli, Maura and Olianas, Dario and Ricca, Filippo"",
    editor = ""Piattini, Mario and Rupino da Cunha, Paulo and Garc{\'i}a Rodr{\'i}guez de Guzm{\'a}n, Ignacio and P{\'e}rez-Castillo, Ricardo"",
    title = ""Hamcrest vs AssertJ: An Empirical Assessment of Tester Productivity"",
    booktitle = ""Quality of Information and Communications Technology"",
    year = ""2019"",
    publisher = ""Springer International Publishing"",
    address = ""Cham"",
    pages = ""161--176"",
    abstract = ""Context. Extensive unit testing is worth its costs in terms of the higher quality of the final product and reduced development expenses, though it may consume more than fifty percent of the overall project budget. Thus, even a tiny percentage of saving can significantly decrease the costs. Since recently competing assertion libraries emerged, we need empirical evidence to gauge them in terms of developer productivity, allowing SQA Managers and Testers to select the best."",
    isbn = ""978-3-030-29238-6""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Hamcrest vs AssertJ: An Empirical Assessment of Tester Productivity	https://doi.org/10.1007/978-3-030-29238-6_12	Springer International Publishing	nan; References; Link
430	Behave	How Do Software Architects Specify and Validate Quality Requirements?	Software architecture is the result of a design effort aimed at ensuring a certain set of quality attributes. As we show, quality requirements are commonly specified in practice but are rarely validated using automated techniques. In this paper we analyze and classify commonly specified quality requirements after interviewing professionals and running a survey. We report on tools used to validate those requirements and comment on the obstacles encountered by practitioners when performing such activity (e.g., insufficient tool-support; poor understanding of user's needs). Finally we discuss opportunities for increasing the adoption of automated tools based on the information we collected during our study (e.g., using a business-readable notation for expressing quality requirements; increasing awareness by monitoring non-functional aspects of a system).	Software architecture; empirical study; quality requirements; validation; Software architecture;  empirical study;  quality requirements;  validation	Caracciolo, Andrea; Lungu, Mircea Filip; Nierstrasz, Oscar	SOFTWARE ARCHITECTURE, ECSA 2014	https://doi.org/10.1007/978-3-319-09970-5_32		374-389	"""@inproceedings{WOS:000345083000032,
    Author = ""Caracciolo, Andrea and Lungu, Mircea Filip and Nierstrasz, Oscar"",
    Editor = ""Avgeriou, P and Zdun, U"",
    Title = ""How Do Software Architects Specify and Validate Quality Requirements?"",
    Booktitle = ""SOFTWARE ARCHITECTURE, ECSA 2014"",
    Series = ""Lecture Notes in Computer Science"",
    Year = ""2014"",
    Volume = ""8627"",
    Pages = ""374-389"",
    Note = ""8th European Conference on Software Architecture (ECSA), Vienna, AUSTRIA, AUG 25-29, 2014"",
    Abstract = ""Software architecture is the result of a design effort aimed at ensuring a certain set of quality attributes. As we show, quality requirements are commonly specified in practice but are rarely validated using automated techniques. In this paper we analyze and classify commonly specified quality requirements after interviewing professionals and running a survey. We report on tools used to validate those requirements and comment on the obstacles encountered by practitioners when performing such activity (e.g., insufficient tool-support; poor understanding of user's needs). Finally we discuss opportunities for increasing the adoption of automated tools based on the information we collected during our study (e.g., using a business-readable notation for expressing quality requirements; increasing awareness by monitoring non-functional aspects of a system)."",
    Publisher = ""SPRINGER INTERNATIONAL PUBLISHING AG"",
    Address = ""GEWERBESTRASSE 11, CHAM, CH-6330, SWITZERLAND"",
    Type = ""Proceedings Paper"",
    Language = ""English"",
    Affiliation = ""Caracciolo, A (Corresponding Author), Univ Bern, Software Composit Grp, CH-3012 Bern, Switzerland. Caracciolo, Andrea; Lungu, Mircea Filip; Nierstrasz, Oscar, Univ Bern, Software Composit Grp, CH-3012 Bern, Switzerland."",
    ISSN = ""0302-9743"",
    EISSN = ""1611-3349"",
    ISBN = ""978-3-319-09970-5; 978-3-319-09969-9"",
    Keywords = ""Software architecture; empirical study; quality requirements; validation"",
    Research-Areas = ""Computer Science"",
    Web-of-Science-Categories = ""Computer Science, Software Engineering; Computer Science, Theory \\& Methods"",
    Author-Email = ""caracciolo@iam.unibe.ch lungu@iam.unibe.ch oscar@iam.unibe.ch"",
    Affiliations = ""University of Bern"",
    ORCID-Numbers = ""Nierstrasz, Oscar/0000-0002-9975-9791"",
    Number-of-Cited-References = ""21"",
    Times-Cited = ""18"",
    Usage-Count-Last-180-days = ""0"",
    Usage-Count-Since-2013 = ""2"",
    Doc-Delivery-Number = ""BB6WR"",
    Web-of-Science-Index = ""Conference Proceedings Citation Index - Science (CPCI-S)"",
    Unique-ID = ""WOS:000345083000032"",
    DA = ""2024-10-22""
}
"""	Excluded	Excluded	new_screen			2	Web of Science		How Do Software Architects Specify and Validate Quality Requirements?	https://www.webofscience.com/wos/woscc/full-record/WOS:000345083000032	SPRINGER INTERNATIONAL PUBLISHING AG	nan; References
431	Behave	ICITPM: Integrity Validation of Software in Iterative Continuous Integration Through the Use of Trusted Platform Module (TPM)	Software development has passed from being rigid and not very flexible, to be automated with constant changes. This happens due to the creation of continuous integration and delivery environments. Nevertheless, developers often rely on such environments due to the large number of amenities they offer. They focus on authentication only, without taking into consideration other aspects of security such as the integrity of the source code and of the compiled binaries. The source code of a software project must not be maliciously modified. Notwithstanding, there is no safe method to verify that its integrity has not been violated. Trusted computing technology, in particular, the Trusted Platform Module (TPM) can be used to implement that secure method.	CI/CD pipeline; Code integrity; Trusted computing; TPM	Mu{\~{n}}oz, Antonio; Farao, Aristeidis; Correia, Jordy Ryan Casas; Xenakis, Christos	European Symposium on Research in Computer Security	https://doi.org/10.1007/978-3-030-66504-3_9		147--165	"""@InProceedings{10.1007/978-3-030-66504-3_9,
    author = ""Mu{\\textasciitilde {n}}oz, Antonio and Farao, Aristeidis and Correia, Jordy Ryan Casas and Xenakis, Christos"",
    editor = {Boureanu, Ioana and Dr{\u{a}}gan, Constantin C{\u{a}}t{\u{a}}lin and Manulis, Mark and Giannetsos, Thanassis and Dadoyan, Christoforos and Gouvas, Panagiotis and Hallman, Roger A. and Li, Shujun and Chang, Victor and Pallas, Frank and Pohle, J{\""o}rg and Sasse, Angela},
    title = ""ICITPM: Integrity Validation of Software in Iterative Continuous Integration Through the Use of Trusted Platform Module (TPM)"",
    booktitle = ""Computer Security"",
    year = ""2020"",
    publisher = ""Springer International Publishing"",
    address = ""Cham"",
    pages = ""147--165"",
    abstract = ""Software development has passed from being rigid and not very flexible, to be automated with constant changes. This happens due to the creation of continuous integration and delivery environments. Nevertheless, developers often rely on such environments due to the large number of amenities they offer. They focus on authentication only, without taking into consideration other aspects of security such as the integrity of the source code and of the compiled binaries. The source code of a software project must not be maliciously modified. Notwithstanding, there is no safe method to verify that its integrity has not been violated. Trusted computing technology, in particular, the Trusted Platform Module (TPM) can be used to implement that secure method."",
    isbn = ""978-3-030-66504-3""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		ICITPM: Integrity Validation of Software in Iterative Continuous Integration Through the Use of Trusted Platform Module (TPM)	https://doi.org/10.1007/978-3-030-66504-3_9	Springer International Publishing	nan; References; Link
432	Behave	Implement Tests in Our Daily Work Routine	We discussed many types of tests -- unit, integration, performance, UI, and snapshot tests. But if you ask me what the most challenging task in writing tests is, I would say actually writing them.		Tsadok, Avi	Pro iOS Testing	https://doi.org/10.1007/978-1-4842-6382-2_10		261--283	"""@Inbook{Tsadok2020,
    author = ""Tsadok, Avi"",
    title = ""Implement Tests in Our Daily Work Routine"",
    bookTitle = ""Pro iOS Testing: XCTest Framework for UI and Unit Testing"",
    year = ""2020"",
    publisher = ""Apress"",
    address = ""Berkeley, CA"",
    pages = ""261--283"",
    abstract = ""We discussed many types of tests -- unit, integration, performance, UI, and snapshot tests. But if you ask me what the most challenging task in writing tests is, I would say actually writing them."",
    isbn = ""978-1-4842-6382-2"",
    doi = ""10.1007/978-1-4842-6382-2\_10"",
    url = ""https://doi.org/10.1007/978-1-4842-6382-2\_10""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Implement Tests in Our Daily Work Routine	https://doi.org/10.1007/978-1-4842-6382-2_10	Apress	nan; Keywords; References; Link
433	Behave	In the right order of brush strokes: a sketch of a software philosophy retrospective	This paper follows a discourse on software recognized as a product of art and human creativity progressing probably for as long as software exists. A retrospective view on computer science and software philosophy development is introduced. In so doing we discover parallels between software and various branches of human creative manifestations. Aesthetic properties and mutual dependency of the form and matter of art works are examined in their application to software programs. While exploring some philosophical and even artistic reflection on software we consider extended comprehension of technical sciences of programming and software engineering within the realm of liberal arts.	Artificial Intelligence; Software philosophy; Art; Software aesthetics; Liberal arts; Computer science education	Evgeny Pyshkin	SpringerPlus	https://doi.org/10.1186/2193-1801-3-186	citation_title=Thinking about programming: from Aristotle to Wittgenstein; citation_inbook_title=Software engineering conference in Russia (CEE-SECR), 2012 8th Central and Eastern European; citation_publication_date=2012; citation_id=CR1; citation_author=S Arkhipenkov; citation_publisher=Moscow; citation_journal_title=Softw IEEE; citation_title=Aim, fire [test-first coding]; citation_author=K Beck; citation_volume=18; citation_issue=5; citation_publication_date=2001; citation_pages=87-89; citation_doi=10.1109/52.951502; citation_id=CR2; citation_title=The philosophy of software; citation_publication_date=2011; citation_id=CR3; citation_author=DM Berry; citation_publisher=Palgrave Macmillan; citation_journal_title=Commun ACM; citation_title=Software as art; citation_author=GW Bond; citation_volume=48; citation_issue=8; citation_publication_date=2005; citation_pages=118-124; citation_doi=10.1145/1076211.1076215; citation_id=CR4; citation_title=Chapter III: Hierarchical program structures; citation_inbook_title=Structured Programming; citation_publication_date=1972; citation_id=CR5; citation_author=OJ Dahl; citation_author=CAR Hoare; citation_publisher=Academic Press Ltd.; citation_journal_title=IEEE Softw; citation_title=Software engineering: an idea whose time has come and gone; citation_author=T DeMarco; citation_volume=26; citation_issue=4; citation_publication_date=2009; citation_pages=95-96; citation_doi=10.1109/MS.2009.101; citation_id=CR6; citation_title=A discipline of programming; citation_publication_date=1976; citation_id=CR7; citation_author=EW Dijkstra; citation_publisher=Prentice-Hall; citation_journal_title=Minds Mach; citation_title=Three paradigms of computer science; citation_author=AH Eden; citation_volume=17; citation_issue=2; citation_publication_date=2007; citation_pages=135-167; citation_doi=10.1007/s11023-007-9060-8; citation_id=CR8; citation_journal_title=Front Artif Intell Appl; citation_title=The art of programming or programs as art; citation_author=E Edmonds; citation_volume=161; citation_publication_date=2007; citation_pages=119; citation_id=CR9; citation_journal_title=Commun ACM; citation_title=Aesthetics and the human factor in programming; citation_author=AP Ershov; citation_volume=15; citation_issue=7; citation_publication_date=1972; citation_pages=501-505; citation_doi=10.1145/361454.361458; citation_id=CR10; citation_title=Analiz prostranstvennosti v khudozhestvennykh proizvedeniyakh; citation_inbook_title=; citation_journal_title=Minds Mach; citation_title=Problems for a philosophy of software engineering; citation_author=S Gruner; citation_volume=21; citation_issue=2; citation_publication_date=2011; citation_pages=275-299; citation_doi=10.1007/s11023-011-9234-2; citation_id=CR12; citation_title=Listen; citation_inbook_title=The Princeton encyclopedia of poetry and poetics, 4th ed., vol 2012; citation_publication_date=1995; citation_pages=396-397; citation_id=CR13; citation_author=S Hopkins; citation_publisher=Princeton University Press; citation_title=Lost Japan; citation_publication_date=1996; citation_id=CR14; citation_author=A Kerr; citation_publisher=Lonely Planet; citation_journal_title=Commun ACM; citation_title=Computer programming as an art; citation_author=DE Knuth; citation_volume=17; citation_issue=12; citation_publication_date=1974; citation_pages=667-673; citation_doi=10.1145/361604.361612; citation_id=CR15; citation_journal_title=Comput J; citation_title=Literate programming; citation_author=; citation_volume=27; citation_issue=2; citation_publication_date=1984; citation_pages=97-111; citation_doi=10.1093/comjnl/27.2.97; citation_id=CR16; citation_title=Things a computer scientist rarely talks about; citation_publication_date=2001; citation_id=CR17; citation_author=DE Knuth; citation_publisher=CSLI Publications; citation_title=Aesthetics in software engineering; citation_inbook_title=Tech. rep.,; citation_publication_date=2006; citation_id=CR18; citation_author=BJ MacLennan; citation_journal_title=Mod Lang Notes; citation_title=Matter and manner in literary composition; citation_author=JG McElroy; citation_volume=3; citation_publication_date=1888; citation_pages=29-33; citation_doi=10.2307/2918451; citation_id=CR19; citation_title=The art of software testing; citation_publication_date=2011; citation_id=CR20; citation_author=GJ Myers; citation_author=C Sandler; citation_author=T Badgett; citation_publisher=Wiley; citation_journal_title=J Gen Philos Sci; citation_title=Towards a philosophy of software development: 40 years after the birth of software engineering; citation_author=M Northover, DG Kourie, A Boake, S Gruner, A Northover; citation_volume=39; citation_issue=1; citation_publication_date=2008; citation_pages=85-113; citation_doi=10.1007/s10838-008-9068-7; citation_id=CR21; citation_title=Programming as a best creative specialty; citation_publication_date=1997; citation_id=CR22; citation_author=R O'Bower; citation_title=Beautiful code: leading programmers explain how they think; citation_publication_date=2007; citation_id=CR23; citation_author=A Oram; citation_author=G Wilson; citation_publisher=O'Reilly Media, Inc.; citation_title=La vie mode d'emploi; citation_publication_date=1978; citation_id=CR24; citation_author=G Perec; citation_publisher=Hachette; citation_title=The zen of python; citation_inbook_title=Available from any Python interpreter by typing import this; citation_publication_date=2004; citation_id=CR25; citation_author=T Peters; citation_title=Teaching programming: What we miss in academia; citation_inbook_title=Software engineering conference in Russia (CEE-SECR), 2011 7th Central and Eastern European; citation_publication_date=2011; citation_pages=1-6; citation_id=CR26; citation_author=E Pyshkin; citation_publisher=IEEE Computer Society; citation_journal_title=Educom Rev; citation_title=Information literacy as a liberal art?; citation_author=JJ Shapiro, SK Hughes; citation_volume=31; citation_publication_date=1996; citation_pages=31-35; citation_id=CR27; citation_inbook_title=Creative project invites developers to write 'code poems'; citation_publication_date=2012; citation_id=CR28; citation_author=O Solon; citation_journal_title=Trans Comput Educ; citation_title=Computer science and the liberal arts: a philosophical examination; citation_author=M Walker, C Kelemen; citation_volume=10; citation_issue=1; citation_publication_date=2009; citation_pages=2:1-2:10; citation_id=CR29; citation_journal_title=Commun ACM; citation_title=Computational thinking; citation_author=JM Wing; citation_volume=49; citation_issue=3; citation_publication_date=2006; citation_pages=33-35; citation_doi=10.1145/1118178.1118215; citation_id=CR30; citation_title=Inner vision: an exploration of art and the brain, vol 415; citation_publication_date=1999; citation_id=CR31; citation_author=S Zeki; citation_author=J Nash; citation_publisher=Oxford University Press			Excluded	Excluded	new_screen			2	Springer Link		In the right order of brush strokes: a sketch of a software philosophy retrospective	https://doi.org/10.1186/2193-1801-3-186	Springer Link	nan; Pages; Year; Bibtex; Link
434	Behave	Incident Management Adaption	Whenever somebody refers to IT service management or ITIL, the first process that comes up on the table for discussion is the incident management process. No matter how far away one might be from the service management area, they always seem to be quite familiar with the process and its relevance. It is a highly popular process that finds its rightful place in every single organization. Since this process makes or breaks an organization's service delivery, service providers often give plenty of weight to the process, and as a result, the incident management process is perhaps the most mature of all the ITIL processes.		Krishna Kaiser, Abhinav	Reinventing ITIL(r) in the Age of DevOps	https://doi.org/10.1007/978-1-4842-3976-6_7		163--199	"""@Inbook{KrishnaKaiser2018,
    author = ""Krishna Kaiser, Abhinav"",
    title = ""Incident Management Adaption"",
    bookTitle = ""Reinventing ITIL(r) in the Age of DevOps: Innovative Techniques to Make Processes Agile and Relevant"",
    year = ""2018"",
    publisher = ""Apress"",
    address = ""Berkeley, CA"",
    pages = ""163--199"",
    abstract = ""Whenever somebody refers to IT service management or ITIL, the first process that comes up on the table for discussion is the incident management process. No matter how far away one might be from the service management area, they always seem to be quite familiar with the process and its relevance. It is a highly popular process that finds its rightful place in every single organization. Since this process makes or breaks an organization's service delivery, service providers often give plenty of weight to the process, and as a result, the incident management process is perhaps the most mature of all the ITIL processes."",
    isbn = ""978-1-4842-3976-6"",
    doi = ""10.1007/978-1-4842-3976-6\_7"",
    url = ""https://doi.org/10.1007/978-1-4842-3976-6\_7""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Incident Management Adaption	https://doi.org/10.1007/978-1-4842-3976-6_7	Apress	nan; Keywords; References; Link
435	Behave	HR-Index: An Effective Index Method for Historical Reachability Queries over Evolving Graphs	Reachability query is a fundamental problem and has been well studied on static graphs. However, in the real world, the graphs are not static but always evolving over time. In this paper, we study the problem of historical reachability query on evolving graphs. We propose a novel index, named HR-Index, which integrates complete and correct historical reachability information of the evolving graph. A historical reachability query on an evolving graph can be converted into a static reachability query on its HR-Index and thus query efficiency can be improved significantly. We also propose two optimization techniques to reduce the size of HR-Index effectively. We confirm the effectiveness and efficiency of our method through conducting extensive experiments on real-life datasets. Experimental results show both vertex and edge size of HR-Index are far smaller than that of the evolving graphs and our method has at least an order of magnitude improvement in time and space efficiency compared to the state-of-the-art method.	evolving graph;  index;  reachability query; evolving graph, index, reachability query	Yang, Yajun; Li, Hanxiao; Zhu, Xiangju; Wang, Junhu; Wang, Xin; Gao, Hong	Proc. ACM Manag. Data	https://doi.org/10.1145/3589272			"""@article{10.1145/3589272,
    author = ""Yang, Yajun and Li, Hanxiao and Zhu, Xiangju and Wang, Junhu and Wang, Xin and Gao, Hong"",
    title = ""HR-Index: An Effective Index Method for Historical Reachability Queries over Evolving Graphs"",
    year = ""2023"",
    issue_date = ""June 2023"",
    publisher = ""Association for Computing Machinery"",
    address = ""New York, NY, USA"",
    volume = ""1"",
    number = ""2"",
    url = ""https://doi.org/10.1145/3589272"",
    doi = ""10.1145/3589272"",
    abstract = ""Reachability query is a fundamental problem and has been well studied on static graphs. However, in the real world, the graphs are not static but always evolving over time. In this paper, we study the problem of historical reachability query on evolving graphs. We propose a novel index, named HR-Index, which integrates complete and correct historical reachability information of the evolving graph. A historical reachability query on an evolving graph can be converted into a static reachability query on its HR-Index and thus query efficiency can be improved significantly. We also propose two optimization techniques to reduce the size of HR-Index effectively. We confirm the effectiveness and efficiency of our method through conducting extensive experiments on real-life datasets. Experimental results show both vertex and edge size of HR-Index are far smaller than that of the evolving graphs and our method has at least an order of magnitude improvement in time and space efficiency compared to the state-of-the-art method."",
    journal = ""Proc. ACM Manag. Data"",
    month = ""jun"",
    articleno = ""127"",
    numpages = ""25"",
    keywords = ""evolving graph, index, reachability query""
}
"""	Excluded	Excluded	new_screen			2	Scopus Signed In		Index	https://dl.acm.org/doi/10.1145/3589272	Association for Computing Machinery	nan; References; Pages
436	Behave	Industry practices and challenges for the evolvability assurance of microservices	ContextMicroservices as a lightweight and decentralized architectural style with fine-grained services promise several beneficial characteristics for sustainable long-term software evolution. Success stories from early adopters like Netflix, Amazon, or Spotify have demonstrated that it is possible to achieve a high degree of flexibility and evolvability with these systems. However, the described advantageous characteristics offer no concrete guidance and little is known about evolvability assurance processes for microservices in industry as well as challenges in this area. Insights into the current state of practice are a very important prerequisite for relevant research in this field.ObjectiveWe therefore wanted to explore how practitioners structure the evolvability assurance processes for microservices, what tools, metrics, and patterns they use, and what challenges they perceive for the evolvability of their systems.MethodWe first conducted 17 semi-structured interviews and discussed 14 different microservice-based systems and their assurance processes with software professionals from 10 companies. Afterwards, we performed a systematic grey literature review (GLR) and used the created interview coding system to analyze 295 practitioner online resources.ResultsThe combined analysis revealed the importance of finding a sensible balance between decentralization and standardization. Guidelines like architectural principles were seen as valuable to ensure a base consistency for evolvability and specialized test automation was a prevalent theme. Source code quality was the primary target for the usage of tools and metrics for our interview participants, while testing tools and productivity metrics were the focus of our GLR resources. In both studies, practitioners did not mention architectural or service-oriented tools and metrics, even though the most crucial challenges likeService CuttingorMicroservices Integrationwere of an architectural nature.ConclusionsPractitioners relied on guidelines, standardization, or patterns likeEvent-Driven Messagingto partially address some reported evolvability challenges. However, specialized techniques, tools, and metrics are needed to support industry with the continuous evaluation of service granularity and dependencies. Future microservices research in the areas of maintenance, evolution, and technical debt should take our findings and the reported industry sentiments into account.	Artificial Intelligence; Microservices; Evolvability; Assurance; Industry; Interviews; Grey literature review	Justus Bogner; Jonas Fritzsch; Stefan Wagner; Alfred Zimmermann	Empirical Software Engineering	https://doi.org/10.1007/s10664-021-09999-9	"citation_journal_title=J Softw Maint Evol Res Pract; citation_title=Software maintenance maturity model (SMmm): the software maintenance process model; citation_author=A April, J Huffman Hayes, A Abran, R Dumke; citation_volume=17; citation_issue=3; citation_publication_date=2005; citation_pages=197-223; citation_doi=10.1002/smr.311; citation_id=CR1; citation_journal_title=Dagstuhl Rep.; citation_title=Managing technical debt in software engineering; citation_author=P Avgeriou, P Kruchten, I Ozkaya, C Seaman; citation_volume=6; citation_issue=4; citation_publication_date=2016; citation_pages=110-138; citation_id=CR2; Bandeira A, Medeiros C A, Paixao M, Maia PH (2019) We need to talk about microservices: an analysis from the discussions on stackoverflow. In: 2019 IEEE/ACM 16th international conference on mining software repositories, (MSR) IEEE, pp 255-259. 
                  https://doi.org/10.1109/MSR.2019.00051; citation_journal_title=J Comput Inf Syst; citation_title=Architecting microservices: Practical opportunities and challenges; citation_author=S Baskarada, V Nguyen, A Koronios; citation_volume=00; citation_issue=00; citation_publication_date=2018; citation_pages=1-9; citation_id=CR4; Bogner J, Wagner S, Zimmermann A (2017) Automatically measuring the maintainability of service- and microservice-based systems: a literature review. In: Proceedings of the 27th international workshop on software measurement and 12th international conference on software process and product measurement on - IWSM Mensura '17, ACM Press, New York, New York, USA, pp 107-115. 
                  https://doi.org/10.1145/3143434.3143443; Bogner J, Fritzsch J, Wagner S, Zimmermann A (2018) Limiting technical debt with maintainability assurance: An industry survey on used techniques and differences with service- and microservice-based systems. In: Proceedings of the 2018 international conference on technical debt - TechDebt '18, ACM Press, New York, New York, USA, pp 125-133. 
                  https://doi.org/10.1145/3194164.3194166; Bogner J, Fritzsch J, Wagner S, Zimmermann A (2019a) Assuring the evolvability of microservices: Insights into industry practices and challenges. In: 2019 IEEE International conference on software maintenance and evolution (ICSME), IEEE, Cleveland, Ohio, USA, pp 546-556. 
                  https://doi.org/10.1109/ICSME.2019.00089; Bogner J, Fritzsch J, Wagner S, Zimmermann A (2019b) Microservices in industry: Insights into technologies, characteristics, and software quality. In: 2019 IEEE international conference on software architecture companion (ICSA-C), IEEE, Hamburg, Germany, pp 187-195. 
                  https://doi.org/10.1109/ICSA-C.2019.00041; Carrasco A, van Bladel B, Demeyer S (2018) Migrating towards microservices: migration and architecture smells. In: Proceedings of the 2nd international workshop on refactoring - IWoR, 2018, ACM Press, New York, New York, USA, pp 1-6. 
                  https://doi.org/10.1145/3242163.3242164; citation_journal_title=Educ Psychol Meas; citation_title=A coefficient of agreement for nominal scales; citation_author=J Cohen; citation_volume=20; citation_issue=1; citation_publication_date=1960; citation_pages=37-46; citation_doi=10.1177/001316446002000104; citation_id=CR10; Easterbrook S, Singer J, Storey MA, Damian D (2008) Selecting empirical methods for software engineering research. In: Guide to advanced empirical software engineering, Springer London, London, pp 285-311 
                  https://doi.org/10.1007/978-1-84800-044-5_11; citation_journal_title=Queue; citation_title=Tracking and controlling microservice dependencies; citation_author=S Esparrachiari, T Reilly, A Rentz; citation_volume=16; citation_issue=4; citation_publication_date=2018; citation_pages=44-65; citation_doi=10.1145/3277539.3277541; citation_id=CR12; Fowler M (2019) Microservices resource guide. 
                  http://martinfowler.com/microservices; Fritzsch J, Bogner J, Wagner S, Zimmermann A (2019a) Microservices migration in industry: Intentions, strategies, and challenges. In: 2019 IEEE International conference on software maintenance and evolution (ICSME), IEEE, Cleveland, Ohio, USA, pp 481-490. 
                  https://doi.org/10.1109/ICSME.2019.00081; Fritzsch J, Bogner J, Zimmermann A, Wagner S (2019b) From monolith to microservices: A classification of refactoring approaches. In: Bruel JM, Mazzara M, Meyer B (eds) Software engineering aspects of continuous development and new paradigms of software production and deployment. 
                  https://doi.org/10.1007/978-3-030-06019-0_10
                  
                . Springer, Toulouse, pp 128-141; Garousi V, Felderer M, Mantyla MV (2016) The need for multivocal literature reviews in software engineering. In: Proceedings of the 20th international conference on evaluation and assessment in software engineering - EASE '16, ACM Press, New York, New York, USA, vol 01-03-June, pp 1-6 
                  https://doi.org/10.1145/2915970.2916008; citation_journal_title=Inf Softw Technol; citation_title=Guidelines for including grey literature and conducting multivocal literature reviews in software engineering; citation_author=V Garousi, M Felderer, MV Mantyla; citation_volume=106; citation_issue=September 2018; citation_publication_date=2019; citation_pages=101-121; citation_doi=10.1016/j.infsof.2018.09.006; citation_id=CR17; Ghofrani J, Lubke D (2018) Challenges of microservices architecture: A survey on the state of the practice. In: 10th Central European workshop on services and their composition (ZEUS), CEUR-WS.org, Dresden, Germany, vol 10th; Haselbock S, Weinreich R, Buchgeher G (2018) An expert interview study on areas of microservice design; Hove S, Anda B (2005) Experiences from conducting semi-structured interviews in empirical software engineering research. In: 11th IEEE international software metrics symposium (METRICS'05), IEEE, Metrics, pp 23-23. 
                  https://doi.org/10.1109/METRICS.2005.24; citation_journal_title=Biometrics; citation_title=The measurement of observer agreement for categorical data; citation_author=JR Landis, GG Koch; citation_volume=33; citation_issue=1; citation_publication_date=1977; citation_pages=159; citation_doi=10.2307/2529310; citation_id=CR21; citation_journal_title=Proc. IEEE; citation_title=Programs, life cycles, and laws of software evolution; citation_author=M Lehman; citation_volume=68; citation_issue=9; citation_publication_date=1980; citation_pages=1060-1076; citation_doi=10.1109/PROC.1980.11805; citation_id=CR22; Lenarduzzi V, Taibi D (2018) Microservices, Continuous Architecture, and Technical Debt Interest: An Empirical Study. In: Euromicro SEAA Prague, Czech Republic, June; Neri D, Soldani J, Zimmermann O, Brogi A (2019) Design principles, architectural smells and refactorings for microservices: a multivocal review. SICS Software-Intensive Cyber-Physical Systems. 
                  https://doi.org/10.1007/s00450-019-00407-8
                  
                , 
                  1906.01553; Neto GTG, Santos WB, Endo PT, Fagundes RA (2019) Multivocal literature reviews in software engineering: Preliminary findings from a tertiary study. In: 2019 ACM/IEEE International symposium on empirical software engineering and measurement (ESEM), IEEE, vol 2019-Septe, pp 1-6 
                  https://doi.org/10.1109/ESEM.2019.8870142; citation_title=Building Microservices: Designing Fine-Grained Systems; citation_publication_date=2015; citation_id=CR26; citation_author=S Newman; citation_publisher=O'Reilly Media Sebastopol; citation_journal_title=J Softw Evol Process; citation_title=Five recommendations for software evolvability; citation_author=V Rajlich; citation_volume=30; citation_issue=9; citation_publication_date=2018; citation_pages=e1949; citation_doi=10.1002/smr.1949; citation_id=CR27; Rowe D, Leaney J, Lowe D (1998) Defining systems architecture evolvability - a taxonomy of change. In: International conference on the engineering of computer-based systems, IEEE, pp 45-52 
                  https://doi.org/10.1109/ECBS.1998.10027; citation_journal_title=Emp Softw Eng; citation_title=Guidelines for conducting and reporting case study research in software engineering; citation_author=P Runeson, M Host; citation_volume=14; citation_issue=2; citation_publication_date=2009; citation_pages=131-164; citation_doi=10.1007/s10664-008-9102-8; citation_id=CR29; Schermann G, Cito J, Leitner P (2016) All the services large and micro: Revisiting industrial practice in services computing. In: Norta A, Gaaloul W, Gangadharan GR, Dam HK (eds) Lecture notes in computer science (including subseries lecture notes in artificial intelligence and lecture notes in bioinformatics), lecture notes in computer science. 
                  https://doi.org/10.1007/978-3-662-50539-7_4
                  
                , vol 9586. Springer, Berlin, pp 36-47; Seaman CB (2008) Qualitative methods. In: Guide to advanced empirical software engineering. 
                  https://doi.org/10.1007/978-1-84800-044-5_2
                  
                . Springer, London, pp 35-62; Software Engineering Institute (2010) CMMI(r); for Development, Version 1.3 (CMMI-DEV V1.3). Tech. rep. Software Engineering Institute; citation_journal_title=J Syst Softw; citation_title=The pains and gains of microservices: A Systematic grey literature review; citation_author=J Soldani, DA Tamburri, WJ Den Heuvel; citation_volume=146; citation_issue=September; citation_publication_date=2018; citation_pages=215-232; citation_doi=10.1016/j.jss.2018.09.082; citation_id=CR33; Taibi D, Lenarduzzi V, Pahl C (2020) Microservices anti-patterns: A taxonomy, Springer International Publishing, Cham. 
                  https://doi.org/10.1007/978-3-030-31646-4_5
                  
                , 
                  1908.04101; citation_title=Software Product Quality Control; citation_publication_date=2013; citation_id=CR35; citation_author=S Wagner; citation_publisher=Springer; Wohlin C, Host M, Henningsson K (2003) Empirical research methods in software engineering. In: Esernet. 
                  https://doi.org/10.1007/978-3-540-45143-3_2
                  
                , vol 2765. Springer, Berlin, pp 7-23"			Excluded	Excluded	new_screen			2	Springer Link		Industry practices and challenges for the evolvability assurance of microservices	https://doi.org/10.1007/s10664-021-09999-9	Springer Link	nan; Pages; Year; Bibtex; Link
437	Behave	InstAL: An Institutional Action Language	InstAL denotes both a declarative domain-specific language for the specification of collections of interacting normative systems and a framework for a set of associated tools. The computational model is realized by translating the specification language to AnsProlog (Baral 2003), a logic programming language under the answer set semantics (ASP) (Gelfond and Lifschitz 1991), and is underpinned by a set-theoretic formal model and a formalized translation process.	AnsProlog; Answer Set; Declarative Domain-specific Languages; Tendency Scenario; Clingo	Padget, Julian; ElDeen Elakehal, Emad; Li, Tingting; De Vos, Marina	Social Coordination Frameworks for Social Technical Systems	https://doi.org/10.1007/978-3-319-33570-4_6		101--124	"""@Inbook{Padget2016,
    author = ""Padget, Julian and ElDeen Elakehal, Emad and Li, Tingting and De Vos, Marina"",
    editor = ""Aldewereld, Huib and Boissier, Olivier and Dignum, Virginia and Noriega, Pablo and Padget, Julian"",
    title = ""InstAL: An Institutional Action Language"",
    bookTitle = ""Social Coordination Frameworks for Social Technical Systems"",
    year = ""2016"",
    publisher = ""Springer International Publishing"",
    address = ""Cham"",
    pages = ""101--124"",
    abstract = ""InstAL denotes both a declarative domain-specific language for the specification of collections of interacting normative systems and a framework for a set of associated tools. The computational model is realized by translating the specification language to AnsProlog (Baral 2003), a logic programming language under the answer set semantics (ASP) (Gelfond and Lifschitz 1991), and is underpinned by a set-theoretic formal model and a formalized translation process."",
    isbn = ""978-3-319-33570-4"",
    doi = ""10.1007/978-3-319-33570-4\_6"",
    url = ""https://doi.org/10.1007/978-3-319-33570-4\_6""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		InstAL: An Institutional Action Language	https://doi.org/10.1007/978-3-319-33570-4_6	Springer International Publishing	nan; References; Link
438	Behave	Installing Quick	If you have been for a few years, chances are that you have been brought on to add new features to an existing app with a large code base that has been built over a few years and has been worked on by dozens of developers, most of whom have moved on to other projects.		Mishra, Abhishek	iOS Code Testing	https://doi.org/10.1007/978-1-4842-2689-6_11		329--349	"""@Inbook{Mishra2017,
    author = ""Mishra, Abhishek"",
    title = ""Installing Quick"",
    bookTitle = ""iOS Code Testing: Test-Driven Development and Behavior-Driven Development with Swift"",
    year = ""2017"",
    publisher = ""Apress"",
    address = ""Berkeley, CA"",
    pages = ""329--349"",
    abstract = ""If you have been for a few years, chances are that you have been brought on to add new features to an existing app with a large code base that has been built over a few years and has been worked on by dozens of developers, most of whom have moved on to other projects."",
    isbn = ""978-1-4842-2689-6"",
    doi = ""10.1007/978-1-4842-2689-6\_11"",
    url = ""https://doi.org/10.1007/978-1-4842-2689-6\_11""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Installing Quick	https://doi.org/10.1007/978-1-4842-2689-6_11	Apress	nan; Keywords; References; Link
439	Behave	Integrating Quality Tooling into the Chef Development Life Cycle	The Chef ecosystem is fortunate to have many tools available to it to help in the quest for quality. This chapter introduces some of the tools that are publicly available to help. Eventually we will be using these tools as part of a Continuous Delivery pipeline, and it is important to get an understanding of how each tool can be executed individually.	Acceptance Test; Configuration File; Text Editor; Special Symbol; Code Coverage	Preston, Stuart	Using Chef with Microsoft Azure	https://doi.org/10.1007/978-1-4842-1476-3_6		131--162	"""@Inbook{Preston2016,
    author = ""Preston, Stuart"",
    title = ""Integrating Quality Tooling into the Chef Development Life Cycle"",
    bookTitle = ""Using Chef with Microsoft Azure"",
    year = ""2016"",
    publisher = ""Apress"",
    address = ""Berkeley, CA"",
    pages = ""131--162"",
    abstract = ""The Chef ecosystem is fortunate to have many tools available to it to help in the quest for quality. This chapter introduces some of the tools that are publicly available to help. Eventually we will be using these tools as part of a Continuous Delivery pipeline, and it is important to get an understanding of how each tool can be executed individually."",
    isbn = ""978-1-4842-1476-3"",
    doi = ""10.1007/978-1-4842-1476-3\_6"",
    url = ""https://doi.org/10.1007/978-1-4842-1476-3\_6""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Integrating Quality Tooling into the Chef Development Life Cycle	https://doi.org/10.1007/978-1-4842-1476-3_6	Apress	nan; References; Link
440	Behave	Integration of Security Standards in DevOps Pipelines: An Industry Case Study	In the last decade, companies adopted DevOps as a fast path to deliver software products according to customer expectations, with well aligned teams and in continuous cycles. As a basic practice, DevOps relies on pipelines that simulate factory swim-lanes. The more automation in the pipeline, the shorter a lead time is supposed to be. However, applying DevOps is challenging, particularly for industrial control systems (ICS) that support critical infrastructures and that must obey to rigorous requirements from security regulations and standards. Current research on security compliant DevOps presents open gaps for this particular domain and in general for systematic application of security standards. In this paper, we present a systematic approach to integrate standard-based security activities into DevOps pipelines and highlight their automation potential. Our intention is to share our experiences and help practitioners to overcome the trade-off between adding security activities into the development process and keeping a short lead time. We conducted an evaluation of our approach at a large industrial company considering the IEC 62443-4-1 security standard that regulates ICS. The results strengthen our confidence in the usefulness of our approach and artefacts, and in that they can support practitioners to achieve security compliance while preserving agility including short lead times.	Secure software engineering; Security standards; Agile software engineering; DevOps pipeline; DevSecOps; Industrial control systems	Moy{\'o}n, Fabiola; Soares, Rafael; Pinto-Albuquerque, Maria; Mendez, Daniel; Beckers, Kristian	International Conference on Product-Focused Software Process Improvement	https://doi.org/10.1007/978-3-030-64148-1_27		434--452	"""@InProceedings{10.1007/978-3-030-64148-1_27,
    author = ""Moy{\'o}n, Fabiola and Soares, Rafael and Pinto-Albuquerque, Maria and Mendez, Daniel and Beckers, Kristian"",
    editor = ""Morisio, Maurizio and Torchiano, Marco and Jedlitschka, Andreas"",
    title = ""Integration of Security Standards in DevOps Pipelines: An Industry Case Study"",
    booktitle = ""Product-Focused Software Process Improvement"",
    year = ""2020"",
    publisher = ""Springer International Publishing"",
    address = ""Cham"",
    pages = ""434--452"",
    abstract = ""In the last decade, companies adopted DevOps as a fast path to deliver software products according to customer expectations, with well aligned teams and in continuous cycles. As a basic practice, DevOps relies on pipelines that simulate factory swim-lanes. The more automation in the pipeline, the shorter a lead time is supposed to be. However, applying DevOps is challenging, particularly for industrial control systems (ICS) that support critical infrastructures and that must obey to rigorous requirements from security regulations and standards. Current research on security compliant DevOps presents open gaps for this particular domain and in general for systematic application of security standards. In this paper, we present a systematic approach to integrate standard-based security activities into DevOps pipelines and highlight their automation potential. Our intention is to share our experiences and help practitioners to overcome the trade-off between adding security activities into the development process and keeping a short lead time. We conducted an evaluation of our approach at a large industrial company considering the IEC 62443-4-1 security standard that regulates ICS. The results strengthen our confidence in the usefulness of our approach and artefacts, and in that they can support practitioners to achieve security compliance while preserving agility including short lead times."",
    isbn = ""978-3-030-64148-1""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Integration of Security Standards in DevOps Pipelines: An Industry Case Study	https://doi.org/10.1007/978-3-030-64148-1_27	Springer International Publishing	nan; References; Link
441	Behave	Inter-organizational Co-development with Scrum: Experiences and Lessons Learned from a Distributed Corporate Development Environment	Distributed development within a single organization adds a lot of overhead to every software development process. When a second organization joins for co-development, complexity reaches the next level. This case study investigates an agile approach from a real world project involving two unaffiliated IT organizations that collaborate in a distributed development environment. Adaptations to the regular Scrum process are identified and evaluated over a six-month-long period of time. The evaluation involves a detailed problem root cause analysis and suggestions on what issues to act first. Key lessons learned include that team members of one Scrum team should not be distributed over several sites and that every site should have at least one Scrum master and one product owner.	distributed development; agile development; Scrum; software development process; subcontracting; virtual teams	Vallon, Raoul; Strobl, Stefan; Bernhart, Mario; Grechenig, Thomas	International Conference on Agile Software Development	https://doi.org/10.1007/978-3-642-38314-4_11		150--164	"""@InProceedings{10.1007/978-3-642-38314-4_11,
    author = ""Vallon, Raoul and Strobl, Stefan and Bernhart, Mario and Grechenig, Thomas"",
    editor = ""Baumeister, Hubert and Weber, Barbara"",
    title = ""Inter-organizational Co-development with Scrum: Experiences and Lessons Learned from a Distributed Corporate Development Environment"",
    booktitle = ""Agile Processes in Software Engineering and Extreme Programming"",
    year = ""2013"",
    publisher = ""Springer Berlin Heidelberg"",
    address = ""Berlin, Heidelberg"",
    pages = ""150--164"",
    abstract = ""Distributed development within a single organization adds a lot of overhead to every software development process. When a second organization joins for co-development, complexity reaches the next level. This case study investigates an agile approach from a real world project involving two unaffiliated IT organizations that collaborate in a distributed development environment. Adaptations to the regular Scrum process are identified and evaluated over a six-month-long period of time. The evaluation involves a detailed problem root cause analysis and suggestions on what issues to act first. Key lessons learned include that team members of one Scrum team should not be distributed over several sites and that every site should have at least one Scrum master and one product owner."",
    isbn = ""978-3-642-38314-4""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Inter-organizational Co-development with Scrum: Experiences and Lessons Learned from a Distributed Corporate Development Environment	https://doi.org/10.1007/978-3-642-38314-4_11	Springer Berlin Heidelberg	nan; References; Link
442	Behave	Language design and implementation using ruby and the interpreter pattern	In this paper, the S-expression Interpreter Framework (SIF) is presented as a tool for teaching language design and implementation. The SIF is based on the interpreter design pattern and is written in the Ruby programming language. Its core is quite small, but it can be easily extended by adding primitive procedures and special forms. The SIF can be used to demonstrate advanced language concepts (variable scopes, continuations, etc.) as well as different programming styles (functional, imperative, and object oriented).	s-expression;  ruby;  interpreter;  design patterns; s-expression, ruby, interpreter, design patterns	Ortiz, Ariel	These keywords were added by machine and not by the authors. This process is experimental and the keywords may be updated as the learning algorithm improves.	https://doi.org/10.1145/1352135.1352155		48-52	"""@inproceedings{10.1145/1352135.1352155,
    author = ""Ortiz, Ariel"",
    title = ""Language design and implementation using ruby and the interpreter pattern"",
    year = ""2008"",
    isbn = ""9781595937995"",
    publisher = ""Association for Computing Machinery"",
    address = ""New York, NY, USA"",
    url = ""https://doi.org/10.1145/1352135.1352155"",
    doi = ""10.1145/1352135.1352155"",
    abstract = ""In this paper, the S-expression Interpreter Framework (SIF) is presented as a tool for teaching language design and implementation. The SIF is based on the interpreter design pattern and is written in the Ruby programming language. Its core is quite small, but it can be easily extended by adding primitive procedures and special forms. The SIF can be used to demonstrate advanced language concepts (variable scopes, continuations, etc.) as well as different programming styles (functional, imperative, and object oriented)."",
    booktitle = ""Proceedings of the 39th SIGCSE Technical Symposium on Computer Science Education"",
    pages = ""48-52"",
    numpages = ""5"",
    keywords = ""s-expression, ruby, interpreter, design patterns"",
    location = ""Portland, OR, USA"",
    series = ""SIGCSE '08""
}

@article{10.1145/1352322.1352155,
    author = ""Ortiz, Ariel"",
    title = ""Language design and implementation using ruby and the interpreter pattern"",
    year = ""2008"",
    issue_date = ""March 2008"",
    publisher = ""Association for Computing Machinery"",
    address = ""New York, NY, USA"",
    volume = ""40"",
    number = ""1"",
    issn = ""0097-8418"",
    url = ""https://doi.org/10.1145/1352322.1352155"",
    doi = ""10.1145/1352322.1352155"",
    abstract = ""In this paper, the S-expression Interpreter Framework (SIF) is presented as a tool for teaching language design and implementation. The SIF is based on the interpreter design pattern and is written in the Ruby programming language. Its core is quite small, but it can be easily extended by adding primitive procedures and special forms. The SIF can be used to demonstrate advanced language concepts (variable scopes, continuations, etc.) as well as different programming styles (functional, imperative, and object oriented)."",
    journal = ""SIGCSE Bull."",
    month = ""mar"",
    pages = ""48-52"",
    numpages = ""5"",
    keywords = ""s-expression, ruby, interpreter, design patterns""
}
"""	Excluded	Excluded	new_screen			2	Scopus Signed In		Interpreter Pattern	https://dl.acm.org/doi/10.1145/1352135.1352155	Association for Computing Machinery	nan; Venue; References
443	Behave	Interviews and Case Studies	A collection of interviews from various thought leaders in the DevOps community.		Harrison, Dave; Lively, Knox	Achieving DevOps	https://doi.org/10.1007/978-1-4842-4388-6_9		379--483	"""@Inbook{Harrison2019,
    author = ""Harrison, Dave and Lively, Knox"",
    title = ""Interviews and Case Studies"",
    bookTitle = ""Achieving DevOps: A Novel About Delivering the Best of Agile, DevOps, and Microservices"",
    year = ""2019"",
    publisher = ""Apress"",
    address = ""Berkeley, CA"",
    pages = ""379--483"",
    abstract = ""A collection of interviews from various thought leaders in the DevOps community."",
    isbn = ""978-1-4842-4388-6"",
    doi = ""10.1007/978-1-4842-4388-6\_9"",
    url = ""https://doi.org/10.1007/978-1-4842-4388-6\_9""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Interviews and Case Studies	https://doi.org/10.1007/978-1-4842-4388-6_9	Apress	nan; Keywords; References; Link
444	Behave	Introducing a New Agile Development for Web Applications Using a Groupware as Example	The purpose of this paper is introduce a new agile methodology for Web development based on User Stories and that use some concepts of Scrum like Product Backlog and Sprint. The methodology is divided in three disciplines: Communication, Modeling and Construction; each one refining the User Stories, from requirements specification with the User and the use of the Navigation Model and Story Cards until the execution of these User Stories to guide the coding. Thus, the development team can use these User Stories as acceptance tests, which represent the User behavior when using the system. The code written to pass in those tests can generate, through reverse engineering, design for the team to evaluate how the Web application is being developed and evolved. In the end, the team has more guarantees that the Web application developed represents what the User wanted in the beginning.	Agile Process; User Story; Navigation Model; Web Development	Pereira, Vinicius; do Prado, Antonio Francisco	International Conference on Integrated Computing Technology	https://doi.org/10.1007/978-3-642-22247-4_13		144--160	"""@InProceedings{10.1007/978-3-642-22247-4_13,
    author = ""Pereira, Vinicius and do Prado, Antonio Francisco"",
    editor = ""Hruschka, Estevam Rafael and Watada, Junzo and do Carmo Nicoletti, Maria"",
    title = ""Introducing a New Agile Development for Web Applications Using a Groupware as Example"",
    booktitle = ""Integrated Computing Technology"",
    year = ""2011"",
    publisher = ""Springer Berlin Heidelberg"",
    address = ""Berlin, Heidelberg"",
    pages = ""144--160"",
    abstract = ""The purpose of this paper is introduce a new agile methodology for Web development based on User Stories and that use some concepts of Scrum like Product Backlog and Sprint. The methodology is divided in three disciplines: Communication, Modeling and Construction; each one refining the User Stories, from requirements specification with the User and the use of the Navigation Model and Story Cards until the execution of these User Stories to guide the coding. Thus, the development team can use these User Stories as acceptance tests, which represent the User behavior when using the system. The code written to pass in those tests can generate, through reverse engineering, design for the team to evaluate how the Web application is being developed and evolved. In the end, the team has more guarantees that the Web application developed represents what the User wanted in the beginning."",
    isbn = ""978-3-642-22247-4""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Introducing a New Agile Development for Web Applications Using a Groupware as Example	https://doi.org/10.1007/978-3-642-22247-4_13	Springer Berlin Heidelberg	nan; References; Link
445	Behave	Introduction to Behavior-Driven Development	Behavior-Driven Development (BDD) is an approach to software development that was built with the aim of formalizing the best practices followed by Test-Driven Development practitioners. This chapter will introduce you to BDD concepts and techniques.		Mishra, Abhishek	iOS Code Testing	https://doi.org/10.1007/978-1-4842-2689-6_10		317--327	"""@Inbook{Mishra2017,
    author = ""Mishra, Abhishek"",
    title = ""Introduction to Behavior-Driven Development"",
    bookTitle = ""iOS Code Testing: Test-Driven Development and Behavior-Driven Development with Swift"",
    year = ""2017"",
    publisher = ""Apress"",
    address = ""Berkeley, CA"",
    pages = ""317--327"",
    abstract = ""Behavior-Driven Development (BDD) is an approach to software development that was built with the aim of formalizing the best practices followed by Test-Driven Development practitioners. This chapter will introduce you to BDD concepts and techniques."",
    isbn = ""978-1-4842-2689-6"",
    doi = ""10.1007/978-1-4842-2689-6\_10"",
    url = ""https://doi.org/10.1007/978-1-4842-2689-6\_10""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Introduction to Behavior-Driven Development	https://doi.org/10.1007/978-1-4842-2689-6_10	Apress	nan; Keywords; References; Link
446	Behave	Introduction to Cucumber	Cucumber (Figure 6-1) is an awesome tool that allows you to develop your software using a Behavior-Driven Approach (BDA). It makes sure that business stakeholders transfer the software requirements to developers in an accurate and rigorous way so that the final software delivered fully satisfies those requirements. Also, the requirements are turned into executable specifications of the application developed, and they are executed on every new commit to make sure that no old features are broken when new ones are introduced. Cucumber is a great tool of collaboration, documentation, and test automation.		Matsinopoulos, Panos	Practical Test Automation	https://doi.org/10.1007/978-1-4842-6141-5_6		199--230	"""@Inbook{Matsinopoulos2020,
    author = ""Matsinopoulos, Panos"",
    title = ""Introduction to Cucumber"",
    bookTitle = ""Practical Test Automation: Learn to Use Jasmine, RSpec, and Cucumber Effectively for Your TDD and BDD"",
    year = ""2020"",
    publisher = ""Apress"",
    address = ""Berkeley, CA"",
    pages = ""199--230"",
    abstract = ""Cucumber (Figure 6-1) is an awesome tool that allows you to develop your software using a Behavior-Driven Approach (BDA). It makes sure that business stakeholders transfer the software requirements to developers in an accurate and rigorous way so that the final software delivered fully satisfies those requirements. Also, the requirements are turned into executable specifications of the application developed, and they are executed on every new commit to make sure that no old features are broken when new ones are introduced. Cucumber is a great tool of collaboration, documentation, and test automation."",
    isbn = ""978-1-4842-6141-5"",
    doi = ""10.1007/978-1-4842-6141-5\_6"",
    url = ""https://doi.org/10.1007/978-1-4842-6141-5\_6""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Introduction to Cucumber	https://doi.org/10.1007/978-1-4842-6141-5_6	Apress	nan; Keywords; References; Link
447	Behave	Introduction to DevOps	New ways of working or new methodologies begin to unearth because of a problem---yes, it all starts with a problem. DevOps too had its own reasons. Businesses craved for fast turnarounds of their solutions. And often businesses found out in the midst of development that they didn't have all the information they needed to make the right decisions. They wanted to recommend a few more changes to the requirements and still expected the delivery to happen on time. DevOps was born to solve this problem.		Krishna Kaiser, Abhinav	Reinventing ITIL(r) in the Age of DevOps	https://doi.org/10.1007/978-1-4842-3976-6_1		1--35	"""@Inbook{KrishnaKaiser2018,
    author = ""Krishna Kaiser, Abhinav"",
    title = ""Introduction to DevOps"",
    bookTitle = ""Reinventing ITIL(r) in the Age of DevOps: Innovative Techniques to Make Processes Agile and Relevant"",
    year = ""2018"",
    publisher = ""Apress"",
    address = ""Berkeley, CA"",
    pages = ""1--35"",
    abstract = ""New ways of working or new methodologies begin to unearth because of a problem---yes, it all starts with a problem. DevOps too had its own reasons. Businesses craved for fast turnarounds of their solutions. And often businesses found out in the midst of development that they didn't have all the information they needed to make the right decisions. They wanted to recommend a few more changes to the requirements and still expected the delivery to happen on time. DevOps was born to solve this problem."",
    isbn = ""978-1-4842-3976-6"",
    doi = ""10.1007/978-1-4842-3976-6\_1"",
    url = ""https://doi.org/10.1007/978-1-4842-3976-6\_1""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Introduction to DevOps	https://doi.org/10.1007/978-1-4842-3976-6_1	Apress	nan; Keywords; References; Link
448	Behave	Introduction to RSpec	RSpec advertises as being the tool that makes TDD (Test-Driven Development) and BDD (Behavior-Driven Development) fun. This is an introduction to RSpec that will give you enough knowledge to write your first Ruby application and cover it with RSpec specifications -- or, actually, since you are doing TDD, to first write the specifications and then implement the application. It is the foundation for the next chapters that deal with more advanced concepts of RSpec and testing in general.		Matsinopoulos, Panos	Practical Test Automation	https://doi.org/10.1007/978-1-4842-6141-5_4		109--157	"""@Inbook{Matsinopoulos2020,
    author = ""Matsinopoulos, Panos"",
    title = ""Introduction to RSpec"",
    bookTitle = ""Practical Test Automation: Learn to Use Jasmine, RSpec, and Cucumber Effectively for Your TDD and BDD"",
    year = ""2020"",
    publisher = ""Apress"",
    address = ""Berkeley, CA"",
    pages = ""109--157"",
    abstract = ""RSpec advertises as being the tool that makes TDD (Test-Driven Development) and BDD (Behavior-Driven Development) fun. This is an introduction to RSpec that will give you enough knowledge to write your first Ruby application and cover it with RSpec specifications -- or, actually, since you are doing TDD, to first write the specifications and then implement the application. It is the foundation for the next chapters that deal with more advanced concepts of RSpec and testing in general."",
    isbn = ""978-1-4842-6141-5"",
    doi = ""10.1007/978-1-4842-6141-5\_4"",
    url = ""https://doi.org/10.1007/978-1-4842-6141-5\_4""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Introduction to RSpec	https://doi.org/10.1007/978-1-4842-6141-5_4	Apress	nan; Keywords; References; Link
449	Behave	Introduction to Security and Quality Improvement in Complex Cyber-Physical Systems Engineering	Providing Complex Cyber-Physical Systems (C-CPSs) more efficiently and faster is a goal that requires improvements in engineering process for producing high-quality, advanced engineering artifacts. Furthermore, information security must be a top priority when engineering C-CPSs as the engineering artifacts represent assets of high value.	Complex cyber-physical systems; Engineering process; Multidisciplinary engineering; AutomationML; Information security	"Biffl, Stefan; Eckhart, Matthias; L{\""u}der, Arndt; Weippl, Edgar"	Security and Quality in Cyber-Physical Systems Engineering	https://doi.org/10.1007/978-3-030-25312-7_1		1--29	"""@Inbook{Biffl2019,
    author = {Biffl, Stefan and Eckhart, Matthias and L{\""u}der, Arndt and Weippl, Edgar},
    editor = {Biffl, Stefan and Eckhart, Matthias and L{\""u}der, Arndt and Weippl, Edgar},
    title = ""Introduction to Security and Quality Improvement in Complex Cyber-Physical Systems Engineering"",
    bookTitle = ""Security and Quality in Cyber-Physical Systems Engineering: With Forewords by Robert M. Lee and Tom Gilb"",
    year = ""2019"",
    publisher = ""Springer International Publishing"",
    address = ""Cham"",
    pages = ""1--29"",
    abstract = ""Providing Complex Cyber-Physical Systems (C-CPSs) more efficiently and faster is a goal that requires improvements in engineering process for producing high-quality, advanced engineering artifacts. Furthermore, information security must be a top priority when engineering C-CPSs as the engineering artifacts represent assets of high value."",
    isbn = ""978-3-030-25312-7"",
    doi = ""10.1007/978-3-030-25312-7\_1"",
    url = ""https://doi.org/10.1007/978-3-030-25312-7\_1""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Introduction to Security and Quality Improvement in Complex Cyber-Physical Systems Engineering	https://doi.org/10.1007/978-3-030-25312-7_1	Springer International Publishing	nan; References; Link
450	Behave	Introduction to Test-Driven Development	Well over a billion apps have been developed for the iOS platform since its inception. Most of the early apps were rather simple and often developed by a single developer. Over the years, iOS apps have become increasingly complex pieces of software that often involve large, distributed teams of developers working in Agile environments with complex build and release pipelines.		Mishra, Abhishek	iOS Code Testing	https://doi.org/10.1007/978-1-4842-2689-6_1		1--11	"""@Inbook{Mishra2017,
    author = ""Mishra, Abhishek"",
    title = ""Introduction to Test-Driven Development"",
    bookTitle = ""iOS Code Testing: Test-Driven Development and Behavior-Driven Development with Swift"",
    year = ""2017"",
    publisher = ""Apress"",
    address = ""Berkeley, CA"",
    pages = ""1--11"",
    abstract = ""Well over a billion apps have been developed for the iOS platform since its inception. Most of the early apps were rather simple and often developed by a single developer. Over the years, iOS apps have become increasingly complex pieces of software that often involve large, distributed teams of developers working in Agile environments with complex build and release pipelines."",
    isbn = ""978-1-4842-2689-6"",
    doi = ""10.1007/978-1-4842-2689-6\_1"",
    url = ""https://doi.org/10.1007/978-1-4842-2689-6\_1""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Introduction to Test-Driven Development	https://doi.org/10.1007/978-1-4842-2689-6_1	Apress	nan; Keywords; References; Link
451	Behave	Introduction to Testing with Rspec	Before we move into our main project for this book, we still have another very important topic to cover---testing.	Category Model; Controller Action; Test Code; Sample Category; User Story	John Hunt	Foundation Rails 2	https://doi.org/10.1007/978-1-4302-1040-5_10		253--289	"""@Inbook{Alameda2009,
    title = ""Introduction to Testing with Rspec"",
    bookTitle = ""Foundation Rails 2"",
    year = ""2009"",
    publisher = ""Apress"",
    address = ""Berkeley, CA"",
    pages = ""253--289"",
    abstract = ""Before we move into our main project for this book, we still have another very important topic to cover---testing."",
    isbn = ""978-1-4302-1040-5"",
    doi = ""10.1007/978-1-4302-1040-5\_10"",
    url = ""https://doi.org/10.1007/978-1-4302-1040-5\_10""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Introduction to Testing	https://doi.org/10.1007/978-1-4302-1040-5_10	Apress	nan; Authors; References; Link
452	Behave	Introduction to Testing with Rspec	Before we move into our main project for this book, we still have another very important topic to cover---testing.	Category Model; Controller Action; Test Code; Sample Category; User Story		Foundation Rails 2	https://doi.org/10.1007/978-1-4302-1040-5_10		253--289	"""@Inbook{Alameda2009,
    title = ""Introduction to Testing with Rspec"",
    bookTitle = ""Foundation Rails 2"",
    year = ""2009"",
    publisher = ""Apress"",
    address = ""Berkeley, CA"",
    pages = ""253--289"",
    abstract = ""Before we move into our main project for this book, we still have another very important topic to cover---testing."",
    isbn = ""978-1-4302-1040-5"",
    doi = ""10.1007/978-1-4302-1040-5\_10"",
    url = ""https://doi.org/10.1007/978-1-4302-1040-5\_10""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Introduction to Testing with Rspec	https://link.springer.com/chapter/10.1007/978-1-4302-1040-5_10	Apress	nan; Authors; References
453	Behave	iOS Code Testing	https://link.springer.com/book/10.1007/978-1-4842-2689-6	Swift; programming; software; engineering; Test-Driven Development; Behavior-Driven Development; Code testing; iOS; Xcode; Mac	Abhishek Mishra		https://link.springer.com/book/10.1007/978-1-4842-2689-6				Excluded	Excluded	new_screen			2	Springer Link		iOS Code Testing	https://link.springer.com/book/10.1007/978-1-4842-2689-6	Springer Link	nan; Venue; Abstract; References; Pages; Year; Bibtex
454	Behave	Iterative and Scenario-Based Requirements Specification in a System of Systems Context	[Context {\&} Motivation] Due to the managerial, operational and evolutionary independence of constituent systems (CSs) in a System of Systems (SoS) context, top-down and linear requirements engineering (RE) approaches are insufficient. RE techniques for SoS must support iterating, changing, synchronizing, and communicating requirements across different abstraction and hierarchy levels as well as scopes of responsibility. [Question/Problem] We address the challenge of SoS requirements specification, where requirements can describe the SoS behavior, but also the behavior of CSs that are developed independently. [Principal Ideas] To support the requirements specification in an SoS environment, we propose a scenario-based and iterative specification technique. This allows requirements engineers to continuously model and jointly execute and test the system behavior for the SoS and the CS in order to detect contradictions in the requirement specifications at an early stage. [Contribution] In this paper, we describe an extension for the scenario-modeling language for Kotlin (SMLK) to continuously and formally model requirements on SoS and CS level. To support the iterative requirements specification and modeling we combine SMLK with agile development techniques. We demonstrate the applicability of our approach with the help of an example from the field of e-mobility.	System of systems engineering; Requirements analysis; Requirements specification; Scenario-based requirements modeling	Wiecher, Carsten; Greenyer, Joel; Wolff, Carsten; Anacker, Harald; Dumitrescu, Roman	International Working Conference on Requirements Engineering: Foundation for Software Quality	https://doi.org/10.1007/978-3-030-73128-1_12		165--181	"""@InProceedings{10.1007/978-3-030-73128-1_12,
    author = ""Wiecher, Carsten and Greenyer, Joel and Wolff, Carsten and Anacker, Harald and Dumitrescu, Roman"",
    editor = ""Dalpiaz, Fabiano and Spoletini, Paola"",
    title = ""Iterative and Scenario-Based Requirements Specification in a System of Systems Context"",
    booktitle = ""Requirements Engineering: Foundation for Software Quality"",
    year = ""2021"",
    publisher = ""Springer International Publishing"",
    address = ""Cham"",
    pages = ""165--181"",
    abstract = ""[Context {\\&} Motivation] Due to the managerial, operational and evolutionary independence of constituent systems (CSs) in a System of Systems (SoS) context, top-down and linear requirements engineering (RE) approaches are insufficient. RE techniques for SoS must support iterating, changing, synchronizing, and communicating requirements across different abstraction and hierarchy levels as well as scopes of responsibility. [Question/Problem] We address the challenge of SoS requirements specification, where requirements can describe the SoS behavior, but also the behavior of CSs that are developed independently. [Principal Ideas] To support the requirements specification in an SoS environment, we propose a scenario-based and iterative specification technique. This allows requirements engineers to continuously model and jointly execute and test the system behavior for the SoS and the CS in order to detect contradictions in the requirement specifications at an early stage. [Contribution] In this paper, we describe an extension for the scenario-modeling language for Kotlin (SMLK) to continuously and formally model requirements on SoS and CS level. To support the iterative requirements specification and modeling we combine SMLK with agile development techniques. We demonstrate the applicability of our approach with the help of an example from the field of e-mobility."",
    isbn = ""978-3-030-73128-1""
}
"""	Included	Included	new_screen			2	Springer Link		Iterative and Scenario-Based Requirements Specification in a System of Systems Context	https://doi.org/10.1007/978-3-030-73128-1_12	Springer International Publishing	nan; References; Link
455	Behave	Generating fixtures for JavaScript unit testing	In today's web applications, JavaScript code interacts with the Document Object Model (DOM) at runtime. This runtime interaction between JavaScript and the DOM is error-prone and challenging to test. In order to unit test a JavaScript function that has read/write DOM operations, a DOM instance has to be provided as a test fixture. This DOM fixture needs to be in the exact structure expected by the function under test. Otherwise, the test case can terminate prematurely due to a null exception. Generating these fixtures is challenging due to the dynamic nature of JavaScript and the hierarchical structure of the DOM. We present an automated technique, based on dynamic symbolic execution, which generates test fixtures for unit testing JavaScript functions. Our approach is implemented in a tool called ConFix. Our empirical evaluation shows that ConFix can effectively generate tests that cover DOM-dependent paths. We also find that ConFix yields considerably higher coverage compared to an existing JavaScript input generation technique.	DOM;  JavaScript;  concolic execution;  dynamic symbolic execution;  test fixture;  test generation;  web applications; DOM, JavaScript, concolic execution, dynamic symbolic execution, test fixture, test generation, web applications	Fard, Amin Milani; Mesbah, Ali; Wohlstadter, Eric		https://doi.org/10.1109/ASE.2015.26		190-200	"""@inproceedings{10.1109/ASE.2015.26,
    author = ""Fard, Amin Milani and Mesbah, Ali and Wohlstadter, Eric"",
    title = ""Generating fixtures for JavaScript unit testing"",
    year = ""2015"",
    isbn = ""9781509000241"",
    publisher = ""IEEE Press"",
    url = ""https://doi.org/10.1109/ASE.2015.26"",
    doi = ""10.1109/ASE.2015.26"",
    abstract = ""In today's web applications, JavaScript code interacts with the Document Object Model (DOM) at runtime. This runtime interaction between JavaScript and the DOM is error-prone and challenging to test. In order to unit test a JavaScript function that has read/write DOM operations, a DOM instance has to be provided as a test fixture. This DOM fixture needs to be in the exact structure expected by the function under test. Otherwise, the test case can terminate prematurely due to a null exception. Generating these fixtures is challenging due to the dynamic nature of JavaScript and the hierarchical structure of the DOM. We present an automated technique, based on dynamic symbolic execution, which generates test fixtures for unit testing JavaScript functions. Our approach is implemented in a tool called ConFix. Our empirical evaluation shows that ConFix can effectively generate tests that cover DOM-dependent paths. We also find that ConFix yields considerably higher coverage compared to an existing JavaScript input generation technique."",
    booktitle = ""Proceedings of the 30th IEEE/ACM International Conference on Automated Software Engineering"",
    pages = ""190-200"",
    numpages = ""11"",
    keywords = ""DOM, JavaScript, concolic execution, dynamic symbolic execution, test fixture, test generation, web applications"",
    location = ""Lincoln, Nebraska"",
    series = ""ASE '15""
}
"""	Excluded	Excluded	new_screen			2	Scopus Signed In		JavaScript Unit Testing	https://dl.acm.org/doi/10.1109/ASE.2015.26	IEEE Press	nan; Venue; References
456	Behave	KODEGEN: A Code Generation and Testing Tool Using Runnable Knowledge	KDE -- Knowledge Driven Engineering -- is a generalization of MDE -- Model Driven Engineering -- to a higher level of abstraction than the standard UML software models, aiming to be closer to the system designer concepts. But in order to reach an effective technology applicable in industry, one needs to implement it in a tool using Runnable Knowledge, i.e. which can be run and tested. This work describes KODEGEN -- a KDE tool for testing while generating code -- whose input consists of system ontologies, ontology states and scenario files. Incidental concepts not part of the ontologies are replaced by mock objects. The implementation uses a modified Gherkin syntax. The tool is demonstrated in practice by generating the actual code for a few case-studies.		Exman, Iaakov; Litovka, Anton; Yagel, Reuven	International Joint Conference on Knowledge Discovery, Knowledge Engineering, and Knowledge Management	https://doi.org/10.1007/978-3-662-46549-3_17		260--275	"""@InProceedings{10.1007/978-3-662-46549-3_17,
    author = ""Exman, Iaakov and Litovka, Anton and Yagel, Reuven"",
    editor = ""Fred, Ana and Dietz, Jan L.G. and Liu, Kecheng and Filipe, Joaquim"",
    title = ""KODEGEN: A Code Generation and Testing Tool Using Runnable Knowledge"",
    booktitle = ""Knowledge Discovery, Knowledge Engineering and Knowledge Management"",
    year = ""2015"",
    publisher = ""Springer Berlin Heidelberg"",
    address = ""Berlin, Heidelberg"",
    pages = ""260--275"",
    abstract = ""KDE -- Knowledge Driven Engineering -- is a generalization of MDE -- Model Driven Engineering -- to a higher level of abstraction than the standard UML software models, aiming to be closer to the system designer concepts. But in order to reach an effective technology applicable in industry, one needs to implement it in a tool using Runnable Knowledge, i.e. which can be run and tested. This work describes KODEGEN -- a KDE tool for testing while generating code -- whose input consists of system ontologies, ontology states and scenario files. Incidental concepts not part of the ontologies are replaced by mock objects. The implementation uses a modified Gherkin syntax. The tool is demonstrated in practice by generating the actual code for a few case-studies."",
    isbn = ""978-3-662-46549-3""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		KODEGEN: A Code Generation and Testing Tool Using Runnable Knowledge	https://doi.org/10.1007/978-3-662-46549-3_17	Springer Berlin Heidelberg	nan; Keywords; References; Link
457	Behave	Languages, Frameworks, Libraries, and Tools	Building hybrid mobile apps with Ionic requires mostly front-end skills, including HTML, JavaScript, and CSS. You should have basic knowledge of these programming languages before reading this book. This chapter doesn't contain a basic introduction of these languages. You can find a lot of online resources if you do need to learn HTML, JavaScript, and CSS. Modern front-end development requires a lot more than just simple HTML, JavaScript, and CSS code. We need to deal with different languages, frameworks, libraries, and tools.	Angular App; UserService; TypeScript Compiler; TypeScript Code; Literal Template	Cheng, Fu	Build Mobile Apps with Ionic 4 and Firebase	https://doi.org/10.1007/978-1-4842-3775-5_2		29--66	"""@Inbook{Cheng2018,
    author = ""Cheng, Fu"",
    title = ""Languages, Frameworks, Libraries, and Tools"",
    bookTitle = ""Build Mobile Apps with Ionic 4 and Firebase: Hybrid Mobile App Development"",
    year = ""2018"",
    publisher = ""Apress"",
    address = ""Berkeley, CA"",
    pages = ""29--66"",
    abstract = ""Building hybrid mobile apps with Ionic requires mostly front-end skills, including HTML, JavaScript, and CSS. You should have basic knowledge of these programming languages before reading this book. This chapter doesn't contain a basic introduction of these languages. You can find a lot of online resources if you do need to learn HTML, JavaScript, and CSS. Modern front-end development requires a lot more than just simple HTML, JavaScript, and CSS code. We need to deal with different languages, frameworks, libraries, and tools."",
    isbn = ""978-1-4842-3775-5"",
    doi = ""10.1007/978-1-4842-3775-5\_2"",
    url = ""https://doi.org/10.1007/978-1-4842-3775-5\_2""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Languages, Frameworks, Libraries, and Tools	https://doi.org/10.1007/978-1-4842-3775-5_2	Apress	nan; References; Link
458	Behave	Lean R\&D: An Agile Research and Development Approach for Digital Transformation	Petrobras is a large publicly-held company that operates in the oil, gas and energy industry. Recently, they conducted internal dynamics to identify several Digital Transformation (DT) opportunities to leverage their operational excellence. Addressing such opportunities typically requires Research and Development (R\&D) uncertainties that could lead traditional R\&D cooperation terms to be negotiated in years. However, there are time-to-market constraints for fast-paced deliveries to experiment solution options. With this in mind, they partnered up with PUC-Rio to establish a new DT initiative. The goal of this paper is to present the Lean R\&D approach, tailored within this new initiative, and results of two case studies regarding its application in practice. We designed Lean R\&D integrating the following building blocks: (i) Lean Inceptions, to allow stakeholders to jointly outline a Minimal Viable Product (MVP); (ii) early parallel technical feasibility assessment and conception phases, allowing to `fail fast'; (iii) scrum-based development management; and (iv) strategically aligned continuous experimentation to test business hypotheses. In the two reported case studies, Lean R\&D enabled addressing research-related uncertainties early and to efficiently deliver valuable MVPs within four months, showing itself suitable for supporting the DT initiative. Key success factors were the business strategy alignment, the defined roles and co-creation philosophy with strong integration between Petrobras and PUC-Rio's teams, and continuous support of a highly qualified research team. Main opportunities for improvement, based on our lessons learned, rely on better adapting Lean Inceptions to the DT context and on scaling the approach to a project portfolio level of abstraction.	Digital transformation; Agile methods; Lean; Research and development; Continuous experimentation; Digital transformation;  Agile methods;  Lean;  Research and development;  Continuous experimentation	Kalinowski, Marcos; Lopes, Helio; Teixeira, Alex Furtado; Cardoso, Gabriel da Silva; Kuramoto, Andre; Itagyba, Bruno; Batista, Solon Tarso; Pereira, Juliana Alves; Silva, Thuener; Warrak, Jorge Alam; da Costa, Marcelo; Fischer, Marinho; Salgado, Cristiane; Teixeira, Bianca; Chueke, Jacques; Ferreira, Bruna; Lima, Rodrigo; Villamizar, Hugo; Brandao, Andre; Barbosa, Simone; Poggi, Marcus; Pelizaro, Carlos; Lemes, Deborah; Waltemberg, Marcus; Lopes, Odnei; Goulart, Willer	Proceedings - 46th Euromicro Conference on Software Engineering and Advanced Applications, SEAA 2020	https://doi.org/10.1007/978-3-030-64148-1\_7		106-124	"""@inproceedings{WOS:000766320200007,
    Author = ""Kalinowski, Marcos and Lopes, Helio and Teixeira, Alex Furtado and Cardoso, Gabriel da Silva and Kuramoto, Andre and Itagyba, Bruno and Batista, Solon Tarso and Pereira, Juliana Alves and Silva, Thuener and Warrak, Jorge Alam and da Costa, Marcelo and Fischer, Marinho and Salgado, Cristiane and Teixeira, Bianca and Chueke, Jacques and Ferreira, Bruna and Lima, Rodrigo and Villamizar, Hugo and Brandao, Andre and Barbosa, Simone and Poggi, Marcus and Pelizaro, Carlos and Lemes, Deborah and Waltemberg, Marcus and Lopes, Odnei and Goulart, Willer"",
    Editor = ""Morisio, M and Torchiano, M and Jedlitschka, A"",
    Title = ""Lean R\\&D: An Agile Research and Development Approach for Digital Transformation"",
    Booktitle = ""PRODUCT-FOCUSED SOFTWARE PROCESS IMPROVEMENT (PROFES 2020)"",
    Series = ""Lecture Notes in Computer Science"",
    Year = ""2020"",
    Volume = ""12562"",
    Pages = ""106-124"",
    Note = ""21st International Conference on Product-Focused Software Process Improvement (PROFES), ELECTR NETWORK, NOV 25-27, 2020"",
    Abstract = ""Petrobras is a large publicly-held company that operates in the oil, gas and energy industry. Recently, they conducted internal dynamics to identify several Digital Transformation (DT) opportunities to leverage their operational excellence. Addressing such opportunities typically requires Research and Development (R\\&D) uncertainties that could lead traditional R\\&D cooperation terms to be negotiated in years. However, there are time-to-market constraints for fast-paced deliveries to experiment solution options. With this in mind, they partnered up with PUC-Rio to establish a new DT initiative. The goal of this paper is to present the Lean R\\&D approach, tailored within this new initiative, and results of two case studies regarding its application in practice. We designed Lean R\\&D integrating the following building blocks: (i) Lean Inceptions, to allow stakeholders to jointly outline a Minimal Viable Product (MVP); (ii) early parallel technical feasibility assessment and conception phases, allowing to `fail fast'; (iii) scrum-based development management; and (iv) strategically aligned continuous experimentation to test business hypotheses. In the two reported case studies, Lean R\\&D enabled addressing research-related uncertainties early and to efficiently deliver valuable MVPs within four months, showing itself suitable for supporting the DT initiative. Key success factors were the business strategy alignment, the defined roles and co-creation philosophy with strong integration between Petrobras and PUC-Rio's teams, and continuous support of a highly qualified research team. Main opportunities for improvement, based on our lessons learned, rely on better adapting Lean Inceptions to the DT context and on scaling the approach to a project portfolio level of abstraction."",
    Publisher = ""SPRINGER INTERNATIONAL PUBLISHING AG"",
    Address = ""GEWERBESTRASSE 11, CHAM, CH-6330, SWITZERLAND"",
    Type = ""Proceedings Paper"",
    Language = ""English"",
    Affiliation = ""Kalinowski, M (Corresponding Author), Pontifical Catholic Univ Rio De Janeiro PUC Rio, Rio De Janeiro, Brazil. Kalinowski, Marcos; Lopes, Helio; Batista, Solon Tarso; Pereira, Juliana Alves; Silva, Thuener; Teixeira, Bianca; Chueke, Jacques; Ferreira, Bruna; Lima, Rodrigo; Villamizar, Hugo; Brandao, Andre; Barbosa, Simone; Poggi, Marcus, Pontifical Catholic Univ Rio De Janeiro PUC Rio, Rio De Janeiro, Brazil. Teixeira, Alex Furtado; Cardoso, Gabriel da Silva; Kuramoto, Andre; Itagyba, Bruno; Warrak, Jorge Alam; da Costa, Marcelo; Fischer, Marinho; Salgado, Cristiane; Pelizaro, Carlos; Lemes, Deborah; Waltemberg, Marcus; Lopes, Odnei; Goulart, Willer, Petrobras SA, Rio De Janeiro, RJ, Brazil."",
    DOI = ""10.1007/978-3-030-64148-1\\_7"",
    ISSN = ""0302-9743"",
    EISSN = ""1611-3349"",
    ISBN = ""978-3-030-64148-1; 978-3-030-64147-4"",
    Keywords = ""Digital transformation; Agile methods; Lean; Research and development; Continuous experimentation"",
    Keywords-Plus = ""ACCEPTANCE; MODEL"",
    Research-Areas = ""Computer Science"",
    Web-of-Science-Categories = ""Computer Science, Software Engineering; Computer Science, Theory \\& Methods"",
    Author-Email = ""kalinowski@exacta.inf.puc-rio.br lopes@exacta.inf.puc-rio.br alex.teixeira@petrobrascom.br gscardoso@petrobrascom.br kuramoto@petrobrascom.br itagyba@petrobrascom.br tarso@exacta.inf.puc-rio.br juliana@exacta.inf.puc-rio.br thuener@exacta.inf.puc-rio.br jawk@petrobrascom.br mceloscosta@petrobrascom.br marinhof@petrobrascom.br cristiance.salgado@petrobrascom.br bianca@exacta.inf.puc-rio.br jacques@exacta.inf.puc-rio.br bruna@exacta.inf.puc-rio.br rodrigolima@exacta.inf.puc-rio.br hvillamizar@exacta.inf.puc-rio.br andre@exacta.inf.puc-rio.br simone@exacta.inf.puc-rio.br poggi@exacta.inf.puc-rio.br carlos.pelizaro@petrobrascom.br delemes@petrobrascom.br marcuswaltemberg@petrobrascom.br odnei@petrobrascom.br wilier@petrobrascom.br"",
    Affiliations = ""Pontificia Universidade Catolica do Rio de Janeiro; Petrobras"",
    ResearcherID-Numbers = ""Ferreira, Bruna/HZJ-4183-2023 Barbosa, Simone/F-8012-2014 Lopes, Helio/A-2369-2009"",
    ORCID-Numbers = ""Lopes, Helio/0000-0003-4584-1455 Alves Pereira, Juliana/0000-0002-0799-2829"",
    Number-of-Cited-References = ""24"",
    Times-Cited = ""10"",
    Usage-Count-Last-180-days = ""0"",
    Usage-Count-Since-2013 = ""18"",
    Doc-Delivery-Number = ""BS7RZ"",
    Web-of-Science-Index = ""Conference Proceedings Citation Index - Science (CPCI-S)"",
    Unique-ID = ""WOS:000766320200007"",
    DA = ""2024-10-22""
}
"""	Excluded	Excluded	new_screen			2	Web of Science		Lean R&D: An Agile Research and Development Approach for Digital Transformation	https://www.webofscience.com/wos/woscc/full-record/WOS:000766320200007	SPRINGER INTERNATIONAL PUBLISHING AG	nan; References
459	Behave	Lean Software Development -- What Exactly Are We Talking About?	As the Software Engineering landscape continues to evolve and new paradigms are introduced, there can be a tendency for both industry and academia to enthusiastically embrace new approaches and march forward under whatever banner conventional wisdom has decided to adopt. One such banner is Lean Software Development, a paradigm that continues to see a growth in interest driven by the need for cost reductions within industry. The term lean attracts the attention of business, but precisely how it applies within software development is still being debated. In addition, its relationship to the better understood agile methodologies is also a topic for debate. Having been drawn into this research area ourselves, we present here a review of Lean Software Development and try to distil out for the reader some understanding of this somewhat undefined topic. We conclude with some thoughts on where this subject might go to from here.	Software Engineering; Software Development; Lean; Agile	Cawley, Ois{\'i}n; Wang, Xiaofeng; Richardson, Ita	International Conference on Lean Enterprise Software and Systems	https://doi.org/10.1007/978-3-642-44930-7_2		16--31	"""@InProceedings{10.1007/978-3-642-44930-7_2,
    author = ""Cawley, Ois{\'i}n and Wang, Xiaofeng and Richardson, Ita"",
    editor = ""Fitzgerald, Brian and Conboy, Kieran and Power, Ken and Valerdi, Ricardo and Morgan, Lorraine and Stol, Klaas-Jan"",
    title = ""Lean Software Development -- What Exactly Are We Talking About?"",
    booktitle = ""Lean Enterprise Software and Systems"",
    year = ""2013"",
    publisher = ""Springer Berlin Heidelberg"",
    address = ""Berlin, Heidelberg"",
    pages = ""16--31"",
    abstract = ""As the Software Engineering landscape continues to evolve and new paradigms are introduced, there can be a tendency for both industry and academia to enthusiastically embrace new approaches and march forward under whatever banner conventional wisdom has decided to adopt. One such banner is Lean Software Development, a paradigm that continues to see a growth in interest driven by the need for cost reductions within industry. The term lean attracts the attention of business, but precisely how it applies within software development is still being debated. In addition, its relationship to the better understood agile methodologies is also a topic for debate. Having been drawn into this research area ourselves, we present here a review of Lean Software Development and try to distil out for the reader some understanding of this somewhat undefined topic. We conclude with some thoughts on where this subject might go to from here."",
    isbn = ""978-3-642-44930-7""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Lean Software Development – What Exactly Are We Talking About?	https://link.springer.com/chapter/10.1007/978-3-642-44930-7_2	Springer Berlin Heidelberg	nan; References
460	Behave	Logic, Computation and Rigorous Methods		logic; theory of computation; rigorous methods; Abstract State Machines; Event-B; hybrid systems; knowledge representation; business processes; modelling; formal models; complexity theory; non-deterministic choice; polynomial time; mitotic sets; verification	Alexander RaschkeORCID:https://orcid.org/---; Elvinia RiccobeneORCID:https://orcid.org/---; Klaus-Dieter ScheweORCID:https://orcid.org/---		https://link.springer.com/book/10.1007/978-3-030-76020-5				Excluded	Excluded	new_screen			2	Springer Link		Logic, Computation and Rigorous Methods	https://link.springer.com/book/10.1007/978-3-030-76020-5	Springer Link	nan; Venue; Abstract; References; Pages; Year; Bibtex
461	Behave	Making It Better	As mentioned before, the term ``Admin'' in Salesforce is overloaded. It can refer to the traditional role of monitoring a production system to ensure it is stable and available to users, but it is just as likely to refer to a user who makes click-based changes to build or improve Salesforce. That latter role is better described as an ``App Builder,'' but that term hasn't gotten much traction beyond being the name of a Salesforce certification. For example, the Admin Zone at Salesforce conferences or the Awesome Admin community online spends most of its energy explaining the click-based Builders and techniques for innovating on the platform without code.		Davis, Andrew	Mastering Salesforce DevOps	https://doi.org/10.1007/978-1-4842-5473-8_12		427--437	"""@Inbook{Davis2019,
    author = ""Davis, Andrew"",
    title = ""Making It Better"",
    bookTitle = ""Mastering Salesforce DevOps : A Practical Guide to Building Trust While Delivering Innovation"",
    year = ""2019"",
    publisher = ""Apress"",
    address = ""Berkeley, CA"",
    pages = ""427--437"",
    abstract = ""As mentioned before, the term ``Admin'' in Salesforce is overloaded. It can refer to the traditional role of monitoring a production system to ensure it is stable and available to users, but it is just as likely to refer to a user who makes click-based changes to build or improve Salesforce. That latter role is better described as an ``App Builder,'' but that term hasn't gotten much traction beyond being the name of a Salesforce certification. For example, the Admin Zone at Salesforce conferences or the Awesome Admin community online spends most of its energy explaining the click-based Builders and techniques for innovating on the platform without code."",
    isbn = ""978-1-4842-5473-8"",
    doi = ""10.1007/978-1-4842-5473-8\_12"",
    url = ""https://doi.org/10.1007/978-1-4842-5473-8\_12""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Making It Better	https://doi.org/10.1007/978-1-4842-5473-8_12	Apress	nan; Keywords; References; Link
462	Behave	Measuring Test Case Similarity to Support Test Suite Understanding	In order to support test suite understanding, we investigate whether we can automatically derive relations between test cases. In particular, we search for trace-based similarities between (high-level) end-to-end tests on the one hand and fine grained unit tests on the other. Our approach uses the shared word count metric to determine similarity. We evaluate our approach in two case studies and show which relations between end-to-end and unit tests are found by our approach, and how this information can be used to support test suite understanding.		Greiler, Michaela; van Deursen, Arie; Zaidman, Andy	OBJECTS, MODELS, COMPONENTS, PATTERNS, TOOLS 2012	https://www.webofscience.com/wos/woscc/full-record/WOS:000320619000008		91-107	"""@inproceedings{WOS:000320619000008,
    Author = ""Greiler, Michaela and van Deursen, Arie and Zaidman, Andy"",
    Editor = ""Furia, CA and Nanz, S"",
    Title = ""Measuring Test Case Similarity to Support Test Suite Understanding"",
    Booktitle = ""OBJECTS, MODELS, COMPONENTS, PATTERNS, TOOLS 2012"",
    Series = ""Lecture Notes in Computer Science"",
    Year = ""2012"",
    Volume = ""7304"",
    Pages = ""91-107"",
    Note = ""50th International Conference on Objects, Models, Components, Patterns (TOOLS), Prague, CZECH REPUBLIC, MAY 29-31, 2012"",
    Organization = ""Microsoft Res; European Assoc Programming Languages \\& Syst"",
    Abstract = ""In order to support test suite understanding, we investigate whether we can automatically derive relations between test cases. In particular, we search for trace-based similarities between (high-level) end-to-end tests on the one hand and fine grained unit tests on the other. Our approach uses the shared word count metric to determine similarity. We evaluate our approach in two case studies and show which relations between end-to-end and unit tests are found by our approach, and how this information can be used to support test suite understanding."",
    Publisher = ""SPRINGER-VERLAG BERLIN"",
    Address = ""HEIDELBERGER PLATZ 3, D-14197 BERLIN, GERMANY"",
    Type = ""Proceedings Paper"",
    Language = ""English"",
    Affiliation = ""Greiler, M (Corresponding Author), Delft Univ Technol, NL-2600 AA Delft, Netherlands. Greiler, Michaela; van Deursen, Arie; Zaidman, Andy, Delft Univ Technol, NL-2600 AA Delft, Netherlands."",
    ISSN = ""0302-9743"",
    EISSN = ""1611-3349"",
    ISBN = ""978-3-642-30561-0"",
    Research-Areas = ""Computer Science"",
    Web-of-Science-Categories = ""Computer Science, Software Engineering"",
    Author-Email = ""m.s.greiler@tudelft.nl arie.vandeursen@tudelft.nl a.e.zaidman@tudelft.nl"",
    Affiliations = ""Delft University of Technology"",
    ResearcherID-Numbers = ""van Deursen, Arie/G-3084-2011 Zaidman, Andy/O-6542-2014"",
    ORCID-Numbers = ""van Deursen, Arie/0000-0003-4850-3312 Zaidman, Andy/0000-0003-2413-3935"",
    Number-of-Cited-References = ""16"",
    Times-Cited = ""6"",
    Usage-Count-Last-180-days = ""0"",
    Usage-Count-Since-2013 = ""0"",
    Doc-Delivery-Number = ""BFN43"",
    Web-of-Science-Index = ""Conference Proceedings Citation Index - Science (CPCI-S)"",
    Unique-ID = ""WOS:000320619000008"",
    DA = ""2024-12-04""
}
"""	Excluded	Excluded	new_screen			2	Web of Science		Measuring Test Case Similarity to Support Test Suite Understanding	https://www.webofscience.com/wos/woscc/full-record/WOS:000320619000008	SPRINGER-VERLAG BERLIN	nan; Keywords; References
463	Behave	Meshing agile and plan-driven development in safety-critical software: a case study	Organizations developing safety-critical software are increasingly seeking to create better practices by meshing agile and plan-driven development processes. Significant differences between the agile and the plan-driven processes make meshing difficult, and very little empirical evidence on using agile processes for safety-critical software development exists. There are four areas of concern, in particular, for meshing the development of safety-critical software concerning: documentation, requirements, life cycle and testing. We report on a case study of a pharmaceutical organization in which a Scrum process was implemented to support agile software development in a plan-driven safety-critical project. The purpose was to answer the following research question: For safety-critical software, what can a software team do to mesh agile and plan-driven processes effectively? The main contribution of the paper is an elaborated understanding of meshing in the four areas of concern and how the conditions for safety-critical software influence them. We discuss how meshing within the four areas of concern is a contribution to existing research.	Agile software development; Plan-driven software development; Process; Safety-critical software meshing compliance scrum; FDA; Agile software development;  Plan-driven software development;  Process;  Safety-critical software meshing compliance scrum;  FDA	Heeager, Lise Tordrup; Nielsen, Peter Axel	EMPIRICAL SOFTWARE ENGINEERING	https://doi.org/10.1007/s10664-020-09804-z	Abdelaziz A, El-Tahir Y, Osman R (2015) Adaptive software development for developing safety critical software. International Conference on Computing, Control, Networking, Electronics and Embedded Systems Engineering (ICCNEEE), Khartoum, Sudan; Bedoll R (2003) A tail of two projects: how 'agile' methods succeeded after 'traditional' methods had failed in a critical system-development project. Conference on Extreme Programming and Agile Methods; Beznosov K (2003) Extreme Security Engineering: On Employing XP Practices to Achieve 'Good Enough Security' without Defining It X. The First ACM Workshop on Business Driven Security Engineering, BizSec, Fairfax; Beznosov K, Kruchten P (2004) Towards agile security assurance. Proceedings of the 2004 Workshop on New Security Paradigms, Nova Scotia; citation_title=Balancing agility and discipline: a guide for the perplexed; citation_publication_date=2005; citation_id=CR5; citation_author=B Boehm; citation_author=R Turner; citation_publisher=Addison-Wesley Professional; Bostrom G, Wayrynen J, Boden M, Beznosov K, Kruchten P (2006) Extending XP practices to support security requirements engineering. Proceedings of the 2006 international workshop on software engineering for secure systems, Shanghai; citation_title=Agile software development: the cooperative game; citation_publication_date=2006; citation_id=CR7; citation_author=A Cockburn; citation_publisher=Addison-Wesley Professional; citation_journal_title=Inf Syst Res; citation_title=Agility from first principles: reconstructing the concept of agility in information systems development; citation_author=K Conboy; citation_volume=20; citation_issue=3; citation_publication_date=2009; citation_pages=329-354; citation_doi=10.1287/isre.1090.0236; citation_id=CR8; citation_title=Investigating the Suitability of Using Agile for Medical Embedded Software Development; citation_inbook_title=Communications in Computer and Information Science; citation_publication_date=2016; citation_pages=409-416; citation_id=CR9; citation_author=Surafel Demissie; citation_author=Frank Keenan; citation_author=Fergal McCaffery; citation_publisher=Springer International Publishing; citation_journal_title=IEEE Softw; citation_title=Piloting XP on four mission-critical projects; citation_author=J Drobka, D Noftz, R Raghu; citation_volume=21; citation_issue=6; citation_publication_date=2004; citation_pages=70; citation_doi=10.1109/Ms.2004.47; citation_id=CR10; Fitzgerald B, Stol K-J, O'Sullivan R, O'Brien D (2013) Scaling agile methods to regulated environments: An industry case study. Proceedings of the 2013 International Conference on Software Engineering, San Francisco; citation_journal_title=Softw - Pract Exper; citation_title=Agile methods for open source safety-critical software; citation_author=K Gary, A Enquobahrie, L Ibanez, P Cheng, Z Yaniv, K Cleary, S Kokoori, B Muffih, J Heidenreich; citation_volume=41; citation_issue=9; citation_publication_date=2011; citation_pages=945-962; citation_doi=10.1002/spe.1075; citation_id=CR12; citation_title=An iterative approach for development of safety-critical software and safety arguments; citation_publication_date=2010; citation_id=CR13; citation_author=X Ge; citation_author=RF Paige; citation_author=JA McDermid; citation_publisher=The Agile Conference (AGILE); citation_journal_title=Comput Therm Sci; citation_title=Assessment of risks introduced to safety critical software by agile practices-a software engineer's perspective; citation_author=J Gorski, K Lukasiewicz; citation_volume=13; citation_issue=4; citation_publication_date=2012; citation_pages=165-182; citation_id=CR14; Gorski J, Lukasiewicz K (2013) Towards agile development of critical software. The International Workshop on Software Engineering for Resilient Systems; citation_journal_title=MIS Q; citation_title=The nature of theory in information systems; citation_author=S Gregor; citation_volume=30; citation_issue=3; citation_publication_date=2006; citation_pages=611-642; citation_doi=10.2307/25148742; citation_id=CR16; citation_journal_title=IEEE Softw; citation_title=Launching extreme programming at a process-intensive company; citation_author=J Grenning; citation_volume=18; citation_issue=6; citation_publication_date=2001; citation_pages=27; citation_doi=10.1109/52.965799; citation_id=CR17; citation_journal_title=Lect Notes Softw Eng; citation_title=An insight into the difficulties of software development projects in the pharmaceutical industry; citation_author=A Hajou, R Batenburg, S Jansen; citation_volume=3; citation_issue=4; citation_publication_date=2015; citation_pages=267; citation_doi=10.7763/LNSE.2015.V3.202; citation_id=CR18; citation_journal_title=Lect Notes Softw Eng; citation_title=Method ae, the agile software development method tailored for the pharmaceutical industry; citation_author=A Hajou, R Batenburg, S Jansen; citation_volume=3; citation_issue=4; citation_publication_date=2015; citation_pages=251; citation_doi=10.7763/LNSE.2015.V3.200; citation_id=CR19; citation_journal_title=J Info Technol Case Appl Res; citation_title=Introducing agile practices in a documentation-driven software development practice: a case study; citation_author=L Heeager; citation_volume=14; citation_issue=1; citation_publication_date=2012; citation_pages=3-24; citation_id=CR20; Heeager L, Nielsen PA (2009) Agile software development and its compatibility with a document-driven approach? A Case Study. The Australasian Conference on Information Systems, Melbourne; citation_journal_title=Inf Softw Technol; citation_title=A conceptual model of agile software development in a safety-critical context: a systematic literature review; citation_author=LT Heeager, PA Nielsen; citation_volume=103; citation_publication_date=2018; citation_pages=22-39; citation_doi=10.1016/j.infsof.2018.06.004; citation_id=CR22; Jonsson H, Larsson S, Punnekkat S (2012) Agile Practices in Regulated Railway Software Development. The 23rd International Symposium on Software Reliability Engineering Workshops (ISSREW); citation_journal_title=Empir Softw Eng; citation_title=Integrating agile software development into stage-gate managed product development; citation_author=D Karlstrom, P Runeson; citation_volume=11; citation_publication_date=2006; citation_pages=203-225; citation_doi=10.1007/s10664-006-6402-8; citation_id=CR24; Kasauli R, Knauss E, Kanagwa B, Nilsson A, Calikli G (2018) Safety-Critical Systems and Agile Development: A Mapping Study. The 2018 44th Euromicro Conference on Software Engineering and Advanced Applications (SEAA); Kuhrmann M, Diebold P, Munch J, Tell P, Garousi V, Felderer M, Trektere K, McCaffery F, Linssen O, Hanser E, Prause CR (2017) Hybrid Software and System Development in Practice: Waterfall, Scrum, and Beyond. Proceedings of the 2017 International Conference on Software and System Process; citation_journal_title=MIS Q; citation_title=Toward agile: an integrated analysis of quantitative and qualitative field data on software development agility; citation_author=G Lee, WD Xia; citation_volume=34; citation_issue=1; citation_publication_date=2010; citation_pages=87-114; citation_doi=10.2307/20721416; citation_id=CR27; Lin W, Fan X (2009) Software Development Practice for FDA-Compliant Medical Devices. International Joint Conference on Computational Sciences and Optimization (CSO), Hainan, Sanya; McCaffery F, Trektere K, Ozcan-Top O (2016) Agile-Is it Suitable for Medical Device Software Development? International Conference on Software Process Improvement and Capability Determination (SPICE), Dublin; citation_title=Barriers to Adopting Agile Practices When Developing Medical Device Software; citation_inbook_title=Communications in Computer and Information Science; citation_publication_date=2012; citation_pages=141-147; citation_id=CR30; citation_author=Martin McHugh; citation_author=Fergal McCaffery; citation_author=Valentine Casey; citation_publisher=Springer Berlin Heidelberg; McHugh M, Cawley O, McCaffery F, Richardson I, Wang X (2013) An Agile V-Model for Medical Device Software Development to Overcome the Challenges with Plan-Driven Software Development Lifecycles. 5th International Workshop onSoftware Engineering in Health Care (SEHC), San Francisco; citation_journal_title=J Softw-Evol Process; citation_title=Adopting agile practices when developing software for use in the medical domain; citation_author=M McHugh, F McCaffery, V Casey; citation_volume=26; citation_issue=5; citation_publication_date=2014; citation_pages=504-512; citation_doi=10.1002/smr.1608; citation_id=CR32; McHugh, M., McCaffery, F., & Coady, G. (2014b). An Agile Implementation within a Medical Device Software Organisation. International Conference on Software Process Improvement and Capability Determination, Vilnius, Lithuania; Mehrfard H, Pirzadeh H, Hamou-Lhadj A (2010) Investigating the capability of agile processes to support life-science regulations: the case of XP and FDA regulations with a focus on human factor requirements. In Software Engineering Research, Management and Applications 2010 (pp. 241-255): Springer; citation_journal_title=Int J Qual Reliabil Manag; citation_title=Identifying some critical changes required in adopting agile practices in traditional software development projects; citation_author=S Misra, V Kumar, U Kumar; citation_volume=27; citation_issue=4; citation_publication_date=2010; citation_pages=451-474; citation_doi=10.1108/02656711011035147; citation_id=CR35; Myklebust T, Stalhane T (2016) Safety Stories-A New Concept in Agile Development. International Conference on Computer Safety, Reliability, and Security (SAFECOMP 2016); citation_title=The Agile Safety Case: springer; citation_publication_date=2018; citation_id=CR37; citation_author=T Myklebust; citation_author=T Stalhane; Notander JP, Host M, Runeson P (2013a) Challenges in flexible safety-critical software development-an industrial qualitative survey. International Conference on Product Focused Software Process Improvement, paphos, Cyprus; Notander JP, Runeson P, Host M (2013b) A model-based framework for flexible safety-critical software development: a design study. The 28th Annual ACM Symposium on Applied Computing, Coimbra; Ozcan-Top O, McCaffery F (2019) To what extent the medical device software regulations can be achieved with agile software development methods? XP--DSDM--scrum. J Supercomput:1-34; Paige RF, Chivers H, McDermid JA, Stephenson ZR (2005) High-integrity extreme programming. The ACM symposium on Applied computing, Santa Fe; Paige RF, Charalambous R, Ge X, Brooke PJ (2008) Towards agile engineering of high-integrity systems. International Conference on Computer Safety, Reliability, and Security, Newcastle upon Tyne; Rasmussen R, Hughes T, Jenks J, Skach J (2009) Adopting agile in an FDA regulated environment. Agile Conference (AGILE), Chigaco; Ronkainen J, Abrahamsson P (2003) Software development under stringent hardware constraints: Do agile methods have a chance? International Conference on Extreme Programming and Agile Processes in Software Engineering, New Orleans; Rottier PA, Rodrigues V (2008) Agile development in a medical device company. Agile Conference (AGILE), Toronto; citation_journal_title=Empir Softw Eng; citation_title=Guidelines for conducting and reporting case study research in software engineering; citation_author=P Runeson, M Host; citation_volume=14; citation_issue=2; citation_publication_date=2009; citation_pages=131; citation_doi=10.1007/s10664-008-9102-8; citation_id=CR46; citation_title=Agile software development with scrum; citation_publication_date=2001; citation_id=CR47; citation_author=K Schwaber; citation_author=M Beedle; citation_publisher=Prentice Hall; Shafiq S, Minhas NM (2014) Integrating formal methods in XP--A conceptual solution. J Softw Eng Appl 2014; Sidky A, Arthur J (2007) Determining the applicability of agile practices to mission and life-critical systems. Paper presented at the Software Engineering Workshop (SEW), Columbia; Spence J (2005) There has to be a better way![software development]. Paper presented at the Agile Development Conference (ADC'05), Denver; Stalhane T, Myklebust T, Hanssen G (2012) The application of safe scrum to IEC 61508 certifiable software. Paper presented at the European Safety and Reliability Conference (ESREL), Helsinki; U. S. Department of Health and Human Services (2010) FDA U.S. Food and Drug Administration. In: U.S. Department of Health and Human Services; citation_title=Agile methods for safety-critical systems: a primer using medical device example; citation_publication_date=2018; citation_id=CR53; citation_author=N Schooenderwoert; citation_author=B Shoemaker; citation_publisher=CreateSpace Publishing; VanderLeest SH, Buter A (2009) Escape the waterfall: agile for aerospace. The 28th Digital Avionics Systems Conference, Orlanda; Vogel D (2006) Agile methods: Most are not ready for prime time in medical device software design and development. DesignFax Online:1-6; citation_journal_title=Eur J Inf Syst; citation_title=Doing interpretive research; citation_author=G Walsham; citation_volume=15; citation_issue=3; citation_publication_date=2006; citation_pages=320-330; citation_doi=10.1057/palgrave.ejis.3000589; citation_id=CR56; Wang Y, Wagner S (2018) Combining STPA and BDD for safety analysis and verification in agile development: a controlled experiment. International Conference on Agile Software Development; Wang Y, Ramadani J, Wagner S (2017) An exploratory study on applying a scrum development process for safety-critical systems. International Conference on Product-Focused Software Process Improvement; citation_journal_title=LNCS; citation_title=Security engineering and eXtreme programming: an impossible marriage? XP/Agile Universe 2004; citation_author=J Wayrynen, M Boden, G Bostrom; citation_volume=3134; citation_publication_date=2004; citation_pages=117-128; citation_id=CR59; citation_title=Agility in the Avionics Software World; citation_inbook_title=Extreme Programming and Agile Processes in Software Engineering; citation_publication_date=2006; citation_pages=123-132; citation_id=CR60; citation_author=Andrew Wils; citation_author=Stefan Van Baelen; citation_author=Tom Holvoet; citation_author=Karel De Vlaminck; citation_publisher=Springer Berlin Heidelberg; citation_title=Effective Project Management: traditional, agile; citation_publication_date=2011; citation_id=CR61; citation_author=RK Wysocki; citation_publisher=Wiley; citation_title=Case study research: design and methods; citation_publication_date=2009; citation_id=CR62; citation_author=RK Yin; citation_publisher=Sage Publications Inc.	1035-1062	"""@article{WOS:000515762900001,
    Author = ""Heeager, Lise Tordrup and Nielsen, Peter Axel"",
    Title = ""Meshing agile and plan-driven development in safety-critical software: a case study"",
    Journal = ""EMPIRICAL SOFTWARE ENGINEERING"",
    Year = ""2020"",
    Volume = ""25"",
    Number = ""2, SI"",
    Pages = ""1035-1062"",
    Month = ""MAR"",
    Abstract = ""Organizations developing safety-critical software are increasingly seeking to create better practices by meshing agile and plan-driven development processes. Significant differences between the agile and the plan-driven processes make meshing difficult, and very little empirical evidence on using agile processes for safety-critical software development exists. There are four areas of concern, in particular, for meshing the development of safety-critical software concerning: documentation, requirements, life cycle and testing. We report on a case study of a pharmaceutical organization in which a Scrum process was implemented to support agile software development in a plan-driven safety-critical project. The purpose was to answer the following research question: For safety-critical software, what can a software team do to mesh agile and plan-driven processes effectively? The main contribution of the paper is an elaborated understanding of meshing in the four areas of concern and how the conditions for safety-critical software influence them. We discuss how meshing within the four areas of concern is a contribution to existing research."",
    Publisher = ""SPRINGER"",
    Address = ""VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS"",
    Type = ""Article"",
    Language = ""English"",
    Affiliation = ""Nielsen, PA (Corresponding Author), Aalborg Univ, Dept Comp Sci, Selma Lagerlofs Vej 300, DK-9220 Aalborg O, Denmark. Heeager, Lise Tordrup, Aarhus Univ, Dept Management, Fuglesangs Alle 4, DK-8210 Aarhus V, Denmark. Nielsen, Peter Axel, Aalborg Univ, Dept Comp Sci, Selma Lagerlofs Vej 300, DK-9220 Aalborg O, Denmark."",
    DOI = ""10.1007/s10664-020-09804-z"",
    EarlyAccessDate = ""FEB 2020"",
    ISSN = ""1382-3256"",
    EISSN = ""1573-7616"",
    Keywords = ""Agile software development; Plan-driven software development; Process; Safety-critical software meshing compliance scrum; FDA"",
    Keywords-Plus = ""XP"",
    Research-Areas = ""Computer Science"",
    Web-of-Science-Categories = ""Computer Science, Software Engineering"",
    Author-Email = ""lith@mgmt.au.dk pan@cs.aau.dk"",
    Affiliations = ""Aarhus University; Aalborg University"",
    ResearcherID-Numbers = ""Nielsen, Peter/K-1952-2019"",
    ORCID-Numbers = ""Nielsen, Peter Axel/0000-0002-0282-7445 Tordrup, Lise/0000-0003-4495-3084"",
    Number-of-Cited-References = ""61"",
    Times-Cited = ""9"",
    Usage-Count-Last-180-days = ""4"",
    Usage-Count-Since-2013 = ""18"",
    Journal-ISO = ""Empir. Softw. Eng."",
    Doc-Delivery-Number = ""KT0VU"",
    Web-of-Science-Index = ""Science Citation Index Expanded (SCI-EXPANDED)"",
    Unique-ID = ""WOS:000515762900001"",
    DA = ""2024-12-04""
}
"""	Excluded	Excluded	new_screen			2	Web of Science		Meshing agile and plan-driven development in safety-critical software: a case study	https://link.springer.com/article/10.1007/s10664-020-09804-z	SPRINGER	
464	Behave	Microservices: The Evolution and Extinction of Web Services?	In the early 2000s, service-oriented architectures (SOA) emerged as a paradigm for distributed computing, e-business processing, and enterprise integration. Rapidly, SOA and web services became the subject of hype, and virtually every organization tried to adopt them, no matter their actual suitability. Even worse, there were nearly as many definitions of SOA as people adopting it. This led to a big fail on many of those attempts, as they tried to change the problem to fit the solution. Nowadays, microservices are the new weapon of choice to achieve the same (and even more) goals posed to SOA years ago. Microservices (``SOA done right'') describe a particular way of designing software applications as suites of independently deployable services, bringing dynamism, modularity, distributed development, and integration of heterogeneous systems. However, nothing comes for free: new (and old) challenges appeared, including service design and specification, data integrity, and consistency management. In this chapter, we identify such challenges through an evolutionary view from the early years of SOA to microservices, and beyond. Our findings are backed by a literature review, comprising both academic and gray literature. Afterwards, we analyze how such challenges are addressed in practice, and which challenges remain open, by inspecting microservice-related projects on GitHub, the largest open-source repository to date.		Baresi, Luciano; Garriga, Martin	Microservices	https://doi.org/10.1007/978-3-030-31646-4_1		3--28	"""@Inbook{Baresi2020,
    author = ""Baresi, Luciano and Garriga, Martin"",
    editor = ""Bucchiarone, Antonio and Dragoni, Nicola and Dustdar, Schahram and Lago, Patricia and Mazzara, Manuel and Rivera, Victor and Sadovykh, Andrey"",
    title = ""Microservices: The Evolution and Extinction of Web Services?"",
    bookTitle = ""Microservices: Science and Engineering"",
    year = ""2020"",
    publisher = ""Springer International Publishing"",
    address = ""Cham"",
    pages = ""3--28"",
    abstract = ""In the early 2000s, service-oriented architectures (SOA) emerged as a paradigm for distributed computing, e-business processing, and enterprise integration. Rapidly, SOA and web services became the subject of hype, and virtually every organization tried to adopt them, no matter their actual suitability. Even worse, there were nearly as many definitions of SOA as people adopting it. This led to a big fail on many of those attempts, as they tried to change the problem to fit the solution. Nowadays, microservices are the new weapon of choice to achieve the same (and even more) goals posed to SOA years ago. Microservices (``SOA done right'') describe a particular way of designing software applications as suites of independently deployable services, bringing dynamism, modularity, distributed development, and integration of heterogeneous systems. However, nothing comes for free: new (and old) challenges appeared, including service design and specification, data integrity, and consistency management. In this chapter, we identify such challenges through an evolutionary view from the early years of SOA to microservices, and beyond. Our findings are backed by a literature review, comprising both academic and gray literature. Afterwards, we analyze how such challenges are addressed in practice, and which challenges remain open, by inspecting microservice-related projects on GitHub, the largest open-source repository to date."",
    isbn = ""978-3-030-31646-4"",
    doi = ""10.1007/978-3-030-31646-4\_1"",
    url = ""https://doi.org/10.1007/978-3-030-31646-4\_1""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Microservices: The Evolution and Extinction of Web Services?	https://link.springer.com/chapter/10.1007/978-3-030-31646-4_1	Springer International Publishing	nan; Keywords; References
465	Behave	Microservices: Yesterday, Today, and Tomorrow	Microservices is an architectural style inspired by service-oriented computing that has recently started gaining popularity. Before presenting the current state of the art in the field, this chapter reviews the history of software architecture, the reasons that led to the diffusion of objects and services first, and microservices later. Finally, open problems and future challenges are introduced. This survey primarily addresses newcomers to the discipline, while offering an academic viewpoint on the topic. In addition, we investigate some practical issues and point out a few potential solutions.		Dragoni, Nicola; Giallorenzo, Saverio; Lafuente, Alberto Lluch; Mazzara, Manuel; Montesi, Fabrizio; Mustafin, Ruslan; Safina, Larisa	Present and Ulterior Software Engineering	https://doi.org/10.1007/978-3-319-67425-4_12		195--216	"""@Inbook{Dragoni2017,
    author = ""Dragoni, Nicola and Giallorenzo, Saverio and Lafuente, Alberto Lluch and Mazzara, Manuel and Montesi, Fabrizio and Mustafin, Ruslan and Safina, Larisa"",
    editor = ""Mazzara, Manuel and Meyer, Bertrand"",
    title = ""Microservices: Yesterday, Today, and Tomorrow"",
    bookTitle = ""Present and Ulterior Software Engineering"",
    year = ""2017"",
    publisher = ""Springer International Publishing"",
    address = ""Cham"",
    pages = ""195--216"",
    abstract = ""Microservices is an architectural style inspired by service-oriented computing that has recently started gaining popularity. Before presenting the current state of the art in the field, this chapter reviews the history of software architecture, the reasons that led to the diffusion of objects and services first, and microservices later. Finally, open problems and future challenges are introduced. This survey primarily addresses newcomers to the discipline, while offering an academic viewpoint on the topic. In addition, we investigate some practical issues and point out a few potential solutions."",
    isbn = ""978-3-319-67425-4"",
    doi = ""10.1007/978-3-319-67425-4\_12"",
    url = ""https://doi.org/10.1007/978-3-319-67425-4\_12""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Microservices: Yesterday, Today, and Tomorrow	https://doi.org/10.1007/978-3-319-67425-4_12	Springer International Publishing	nan; Keywords; References; Link
466	Behave	Towards an Architecture-Centric Methodology for Migrating to Microservices	The euphoria around microservices has decreased over the years, but the trend of modernizing legacy systems to this novel architectural style is unbroken to date. A variety of approaches have been proposed in academia and industry, aiming to structure and automate the often long-lasting and cost-intensive migration journey. However, our research shows that there is still a need for more systematic guidance. While grey literature is dominant for knowledge exchange among practitioners, academia has contributed a significant body of knowledge as well, catching up on its initial neglect. A vast number of studies on the topic yielded novel techniques, often backed by industry evaluations. However, practitioners hardly leverage these resources. In this paper, we report on our efforts to design an architecture-centric methodology for migrating to microservices. As its main contribution, a framework provides guidance for architects during the three phases of a migration. We refer to methods, techniques, and approaches based on a variety of scientific studies that have not been made available in a similarly comprehensible manner before. Through an accompanying tool to be developed, architects will be in a position to systematically plan their migration, make better informed decisions, and use the most appropriate techniques and tools to transition their systems to microservices.	microservices; refactoring; software architecture	Jonas Fritzsch; Justus Bogner; Markus Haug; Stefan Wagner; Alfred Zimmermann	International Conference on Agile Software Development	https://doi.org/10.1007/978-3-031-48550-3_5		39-47		Excluded	Excluded	new_screen			2	Springer Link		Migrating to Microservices	https://link.springer.com/chapter/10.1007/978-3-031-48550-3_5	Springer, Cham	nan; References; Year; Bibtex
467	Behave	Layout and Image Recognition Driving Cross-Platform Automated Mobile Testing	The fragmentation problem has extended from Android to different platforms, such as iOS, mobile web, and even mini-programs within some applications (app), like WeChat1. In such a situation, recording and replaying test scripts is one of the most popular automated mobile app testing approaches. However, such approach encounters severe problems when crossing platforms. Different versions of the same app need to be developed to support different platforms relying on different platform supports. Therefore, mobile app developers need to develop and maintain test scripts for multiple platforms aimed at completely the same test requirements, greatly increasing testing costs. However, we discover that developers adopt highly similar user interface layouts for versions of the same app on different platforms. Such a phenomenon inspires us to replay test scripts from the perspective of similar UI layouts.In this paper, we propose an image-driven mobile app testing framework, utilizing Widget Feature Matching and Layout Characterization Matching to analyze app UIs. We use computer vision (CV) technologies to perform UI feature comparison and layout hierarchy extraction on mobile app screenshots to obtain UI structures containing rich contextual information of app widgets, including coordinates, relative relationship, etc. Based on acquired UI structures, we can form a platform-independent test script, and then locate the target widgets under test. Thus, the proposed framework non-intrusively replays test scripts according to a novel platform-independent test script model. We also design and implement a tool named LIRAT to devote the proposed framework into practice, based on which, we conduct an empirical study to evaluate the effectiveness and usability of the proposed testing framework. The results show that the overall replay accuracy reaches around 65.85\% on Android (8.74\% improvement over state-of-the-art approaches) and 35.26\% on iOS (35\% improvement over state-of-the-art approaches).	Record and Replay;  Mobile Testing;  Image Analysis;  Cross-Platform Testing; Record and Replay, Mobile Testing, Image Analysis, Cross-Platform Testing	Yu, Shengcheng; Fang, Chunrong; Yun, Yexiao; Feng, Yang		https://doi.org/10.1109/ICSE43902.2021.00139		1561-1571	"""@inproceedings{10.1109/ICSE43902.2021.00139,
    author = ""Yu, Shengcheng and Fang, Chunrong and Yun, Yexiao and Feng, Yang"",
    title = ""Layout and Image Recognition Driving Cross-Platform Automated Mobile Testing"",
    year = ""2021"",
    isbn = ""9781450390859"",
    publisher = ""IEEE Press"",
    url = ""https://doi.org/10.1109/ICSE43902.2021.00139"",
    doi = ""10.1109/ICSE43902.2021.00139"",
    abstract = ""The fragmentation problem has extended from Android to different platforms, such as iOS, mobile web, and even mini-programs within some applications (app), like WeChat1. In such a situation, recording and replaying test scripts is one of the most popular automated mobile app testing approaches. However, such approach encounters severe problems when crossing platforms. Different versions of the same app need to be developed to support different platforms relying on different platform supports. Therefore, mobile app developers need to develop and maintain test scripts for multiple platforms aimed at completely the same test requirements, greatly increasing testing costs. However, we discover that developers adopt highly similar user interface layouts for versions of the same app on different platforms. Such a phenomenon inspires us to replay test scripts from the perspective of similar UI layouts.In this paper, we propose an image-driven mobile app testing framework, utilizing Widget Feature Matching and Layout Characterization Matching to analyze app UIs. We use computer vision (CV) technologies to perform UI feature comparison and layout hierarchy extraction on mobile app screenshots to obtain UI structures containing rich contextual information of app widgets, including coordinates, relative relationship, etc. Based on acquired UI structures, we can form a platform-independent test script, and then locate the target widgets under test. Thus, the proposed framework non-intrusively replays test scripts according to a novel platform-independent test script model. We also design and implement a tool named LIRAT to devote the proposed framework into practice, based on which, we conduct an empirical study to evaluate the effectiveness and usability of the proposed testing framework. The results show that the overall replay accuracy reaches around 65.85\\% on Android (8.74\\% improvement over state-of-the-art approaches) and 35.26\\% on iOS (35\\% improvement over state-of-the-art approaches)."",
    booktitle = ""Proceedings of the 43rd International Conference on Software Engineering"",
    pages = ""1561-1571"",
    numpages = ""11"",
    keywords = ""Record and Replay, Mobile Testing, Image Analysis, Cross-Platform Testing"",
    location = ""Madrid, Spain"",
    series = ""ICSE '21""
}
"""	Excluded	Excluded	new_screen			2	ACM		Mobile Testing	https://dl.acm.org/doi/10.1109/ICSE43902.2021.00139	IEEE Press	nan; Venue; References
468	Behave	Mock objects for testing java systems	When testing software artifacts that have several dependencies, one has the possibility of either instantiating these dependencies or using mock objects to simulate the dependencies' expected behavior. Even though recent quantitative studies showed that mock objects are widely used both in open source and proprietary projects, scientific knowledge is still lacking on how and why practitioners use mocks. An empirical understanding of the situations where developers have (and have not) been applying mocks, as well as the impact of such decisions in terms of coupling and software evolution can be used to help practitioners adapt and improve their future usage. To this aim, we study the usage of mock objects in three OSS projects and one industrial system. More specifically, we manually analyze more than 2,000 mock usages. We then discuss our findings with developers from these systems, and identify practices, rationales, and challenges. These results are supported by a structured survey with more than 100 professionals. Finally, we manually analyze how the usage of mock objects in test code evolve over time as well as the impact of their usage on the coupling between test and production code. Our study reveals that the usage of mocks is highly dependent on the responsibility and the architectural concern of the class. Developers report to frequently mock dependencies that make testing difficult (e.g., infrastructure-related dependencies) and to not mock classes that encapsulate domain concepts/rules of the system. Among the key challenges, developers report that maintaining the behavior of the mock compatible with the behavior of original class is hard and that mocking increases the coupling between the test and the production code. Their perceptions are confirmed by our data, as we observed that mocks mostly exist since the very first version of the test class, and that they tend to stay there for its whole lifetime, and that changes in production code often force the test code to also change.	Artificial Intelligence; Software testing; Mocking practices; Mockito; Empirical software engineering	Davide Spadini,; Mauricio Aniche; Magiel Bruntink; Alberto Bacchelli	Empirical Software Engineering	https://doi.org/10.1007/s10664-018-9663-0	"Alves TL, Ypma C, Visser J (2010) Deriving metric thresholds from benchmark data. In: IEEE international conference on software maintenance ICSM. 
                    https://doi.org/10.1109/ICSM.2010.5609747; Aniche M, Treude C, Zaidman A, Deursen AV, Gerosa MA (2016) SATT: tailoring code metric thresholds for different software architectures. In: Proceedings - 2016 IEEE 16th international working conference on source code analysis and manipulation, SCAM 2016, pp 41-50. 
                    https://doi.org/10.1109/SCAM.2016.19; Arcuri A, Fraser G, Galeotti JP (2014) Automated unit test generation for classes with environment dependencies. In: Proceedings of the 29th ACM/IEEE international conference on automated software engineering, pp 79-90. ACM; Arcuri A, Fraser G, Just R (2017) Private api access and functional mocking in automated unit test generation. In: 2017 IEEE international conference on software testing, verification and validation (ICST), pp 126-137. IEEE; citation_title=Modern information retrieval, vol 463; citation_publication_date=1999; citation_id=CR5; citation_author=R Baeza-Yates; citation_author=B Ribeiro-Neto; citation_publisher=ACM Press; citation_journal_title=Empir Softw Eng; citation_title=Are test smells really harmful? An empirical study; citation_author=G Bavota, A Qusef, R Oliveto, A Lucia, D Binkley; citation_volume=20; citation_issue=4; citation_publication_date=2015; citation_pages=1052-1094; citation_doi=10.1007/s10664-014-9313-0; citation_id=CR6; citation_title=Test-driven development: by example; citation_publication_date=2003; citation_id=CR7; citation_author=K Beck; citation_publisher=Addison-Wesley Professional; Biegel B, Soetens QD, Hornig W, Diehl S, Demeyer S (2011) Comparison of similarity metrics for refactoring detection. In: Proceedings of the 8th working conference on mining software repositories, pp 53-62. ACM; Bruntink M, Van Deursen A (2004) Predicting class testability using object-oriented metrics. In: 4th IEEE international workshop on source code analysis and manipulation, 2004. pp 136-145. IEEE; D'Ambros M, Lanza M, Robbes R (2010) An extensive comparison of bug prediction approaches. In: 2010 7th IEEE working conference on mining software repositories (MSR), p 31-41. IEEE; EasyMock (2016) 
                    http://easymock.org
                    
                  . Online, Accessed 3 Feb 2016; citation_title=Domain-driven design: tackling complexity in the heart of software; citation_publication_date=2004; citation_id=CR12; citation_author=E Evans; citation_publisher=Addison-Wesley Professional; citation_title=Patterns of enterprise application architecture; citation_publication_date=2002; citation_id=CR13; citation_author=M Fowler; citation_publisher=Addison-wesley Longman Publishing Co. Inc; Fowler M, Beck K, Hansson DH (2014) Is tdd dead? 
                    https://plus.google.com/events/ci2g23mk0lh9too9bgbp3rbut0k
                    
                  . Last access in July, 2018; Fraser G, Arcuri A (2011) Evosuite: automatic test suite generation for object-oriented software. In: Proceedings of the 19th ACM SIGSOFT symposium and the 13th European conference on foundations of software engineering, pp 416-419. ACM; Freeman S, Mackinnon T, Pryce N, Walnes J (2004) Mock roles, objects. In: Companion to the 19th annual ACM SIGPLAN conference on object-oriented programming systems, languages, and applications, pp 236-246. ACM; citation_title=Growing object-oriented software, guided by tests; citation_publication_date=2009; citation_id=CR17; citation_author=S Freeman; citation_author=N Pryce; citation_publisher=Pearson Education; Greiler M, van Deursen A, Storey MA (2013) Automated detection of test fixture strategies and smells. In: 2013 IEEE 6th international conference on software testing, verification and validation, pp 322-331. 
                    https://doi.org/10.1109/ICST.2013.45; Greiler M, Zaidman A, van Deursen A, Storey MA (2013) Strategies for avoiding text fixture smells during software evolution. In: Proceedings of the 10th Working Conference on Mining Software Repositories (MSR), pp 387-396. IEEE; Hamill P (2004) Unit test frameworks: tools for high-quality software development. O'Reilly Media; citation_title=Universal methods of design: 100 ways to research complex problems, develop innovative ideas, and design effective solutions; citation_publication_date=2012; citation_id=CR21; citation_author=B Hanington; citation_author=B Martin; citation_publisher=Rockport Publishers; Henderson F (2017) Software Engineering at Google. arXiv:
                    1702.01715; citation_title=Robust confidence intervals for effect sizes: a comparative study of cohen's d and cliff's delta under non-normality and heterogeneous variances; citation_publication_date=2004; citation_id=CR23; citation_author=MR Hess; citation_author=JD Kromrey; citation_publisher=American Educational Research Association; Hunt A, Thomas D (2004) Pragmatic unit testing in c# with nunit. The Pragmatic Programmers; JMock (2016) 
                    http://www.jmock.org
                    
                  . Online, Accessed 3 Feb 2016; Kaczanowski T (2012) Practical Unit Testing with testNG and Mockito. Tomasz Kaczanowski; Karlesky M, Williams G, Bereza W, Fletcher M (2007) Mocking the embedded world: test-driven development, continuous integration, and design patterns. In: Embedded systems conference Silicon Valley (San Jose, California) ESC 413, april 2007. ESC 413; Kim SS (2016) Mocking embedded hardware for software validation. Ph.D thesis; Kotlin (2016) 
                    https://kotlinlang.org
                    
                  . Online; Accessed 3 Feb 2016; Langr J, Hunt A, Thomas D (2015) Pragmatic unit testing in java 8 with JUnit. Pragmatic Bookshelf; Li B, Vendome C, Linares-Vasquez M, Poshyvanyk D, Kraft NA (2016) Automatically documenting unit test cases. In: 2016 IEEE international conference on software testing, verification and validation (ICST), pp 341-352. IEEE; citation_title=Extreme Programming Examined; citation_publication_date=2001; citation_id=CR32; citation_author=T Mackinnon; citation_author=S Freeman; citation_author=P Craig; citation_publisher=Addison-Wesley Longman Publishing Co., Inc.; citation_journal_title=AST; citation_title=An empirical study of testing file-system-dependent software with mock objects; citation_author=MR Marri, T Xie, N Tillmann, J Halleux, W Schulte; citation_volume=9; citation_publication_date=2009; citation_pages=149-153; citation_id=CR33; citation_journal_title=IEEE Trans Softw Eng; citation_title=A complexity measure; citation_author=T McCabe; citation_volume=SE-2; citation_issue=4; citation_publication_date=1976; citation_pages=308-320; citation_doi=10.1109/TSE.1976.233837; citation_id=CR34; citation_title=xUnit test patterns: Refactoring test code; citation_publication_date=2007; citation_id=CR35; citation_author=G Meszaros; citation_publisher=Pearson Education; Mostafa S, Wang X (2014) An empirical study on the usage of mocking frameworks in software testing. In: 2014 14th international conference on quality software, pp 127-132. IEEE. 
                    https://doi.org/10.1109/QSIC.2014.19
                    
                  . 
                    http://ieeexplore.ieee.org/document/6958396/; Mock (2016) 
                    https://github.com/testing-cabal/mock
                    
                  . Online, Accessed 3 Feb 2016; Mocker (2016) 
                    https://labix.org/mocker
                    
                  . Online, Accessed 3 Feb 2016; Mockito (2016) 
                    http://site.mockito.org
                    
                  . Online, Accessed 3 Feb 2016; MyBatis (2016) 
                    http://www.mybatis.org/
                    
                  . Online, Accessed 3 Feb 2016; citation_journal_title=Eur J Social Psychol; citation_title=Methods of coping with social desirability bias: a review; citation_author=AJ Nederhof; citation_volume=15; citation_issue=3; citation_publication_date=1985; citation_pages=263-280; citation_doi=10.1002/ejsp.2420150303; citation_id=CR41; Osherove R (2009) The art of unit testing: with examples in.NET Manning; Palomba F, Di Nucci D, Panichella A, Oliveto R, De Lucia A (2016) On the diffusion of test smells in automatically generated test code: an empirical study. In: Proceedings of the 9th international workshop on search-based software testing, pp 5-14. ACM; Pereira F (2014) Mockists are dead. long live classicists. 
                    https://www.thoughtworks.com/insights/blog/mockists-are-dead-long-live-classicists
                    
                  . Last access in July, 2018; PowerMock (2016) 
                    https://github.com/powermock/powermock
                    
                  . Online, Accessed 3 Feb 2016; citation_journal_title=J Statist Model Anal; citation_title=Power comparisons of Shapiro-Wilk, Kolmogorov-Smirnov, Lilliefors and Anderson-Darling tests; citation_author=NM Razali, YB Wah; citation_volume=2; citation_issue=1; citation_publication_date=2011; citation_pages=21-33; citation_id=CR46; citation_journal_title=Computing; citation_title=Article picture sorts and item sorts; citation_author=G Rugg; citation_volume=22; citation_issue=3; citation_publication_date=2005; citation_pages=94; citation_id=CR47; citation_journal_title=IEEE Softw; citation_title=A survey of unit testing practices; citation_author=P Runeson; citation_volume=23; citation_issue=4; citation_publication_date=2006; citation_pages=22-29; citation_doi=10.1109/MS.2006.91; citation_id=CR48; Samimi H, Hicks R, Fogel A, Millstein T (2013) Declarative mocking categories and subject descriptors, pp 246-256; Spadini D (2017) To Mock or Not To Mock? Online Appendix. 
                    https://doi.org/10.4121/uuid:fce8653c-344c-4dcb-97ab-c9c1407ad2f0; Spadini D, Aniche M, Bacchelli A, Bruntink M (2017) MockExtractor. The tool is available at 
                    http://www.doi.org/10.5281/zenodo.1475900; Spadini D, Aniche M, Bruntink M, Bacchelli A (2017) To mock or not to mock?: an empirical study on mocking practices. In: Proceedings of the 14th international conference on mining software repositories, pp 402-412. IEEE Press; Spencer D (2004) Card sorting: a definitive guide. 
                    http://boxesandarrows.com/card-sorting-a-definitive-guide/; Taneja K, Zhang Y, Xie T (2010) MODA: automated test generation for database applications via mock objects. In: Proceedings of the IEEE/ACM international conference on Automated software engineering - ASE '10, p 289. ACM Press, New York. 
                    https://doi.org/10.1145/1858996.1859053
                    
                  . 
                    http://portal.acm.org/citation.cfm?doid=1858996.1859053; Tufano M, Palomba F, Bavota G, Di Penta M, Oliveto R, De Lucia A, Poshyvanyk D (2016) An empirical investigation into the nature of test smells. In: Proceedings of the 31st IEEE/ACM international conference on automated software engineering, ASE 2016, pp 4-15. ACM, New York; Vahabzadeh A, Fard AM, Mesbah A (2015) An empirical study of bugs in test code. In: 2015 IEEE international conference on software maintenance and evolution (ICSME), pp 101-110. IEEE; van Deursen A, Moonen L, Bergh A, Kok G (2001) Refactoring test code. In: Proceedings of the 2nd international conference on extreme programming and flexible processes in software engineering (XP), pp 92-95; citation_journal_title=IEEE Trans Softw Eng; citation_title=On the detection of test smells: a metrics-based approach for general fixture and eager test; citation_author=B Rompaey, B Du Bois, S Demeyer, M Rieger; citation_volume=33; citation_issue=12; citation_publication_date=2007; citation_pages=800-817; citation_doi=10.1109/TSE.2007.70745; citation_id=CR58; Vonken F, Zaidman A (2012) Refactoring with unit testing: a match made in heaven?. In: 2012 19th working conference on reverse engineering (WCRE), pp 29-38. IEEE; citation_journal_title=IEEE Softw; citation_title=Testing component-based software: a cautionary tale; citation_author=E Weyuker; citation_volume=15; citation_issue=5; citation_publication_date=1998; citation_pages=54-59; citation_doi=10.1109/52.714817; citation_id=CR60; citation_journal_title=J Econ Entomol; citation_title=Individual comparisons of grouped data by ranking methods; citation_author=F Wilcoxon; citation_volume=39; citation_issue=6; citation_publication_date=1946; citation_pages=269; citation_doi=10.1093/jee/39.2.269; citation_id=CR61; Wynne M, Hellesoy A (2012) The cucumber book: behaviour-driven development for testers and developers. Pragmatic Bookshelf; Wynne M, Hellesoy A (2012) The cucumber book: Behaviour-driven development for testers and developers. Pragmatic Bookshelf; Xie T, Tillmann N, De Halleux J, Schulte W (2010) Future of developer testing: Building quality in code. In: Proceedings of the FSE/SDP workshop on Future of software engineering research, pp 415-420. ACM; Zaidman A, Rompaey BV, Demeyer S, Deursen AV (2008) Mining software repositories to study co-evolution of production and test code. In: 2008 1st international conference on software testing, verification, and validation, vol 3, pp 220-229. 
                    https://doi.org/10.1109/ICST.2008.47; Zaidman A, Van Rompaey B, Demeyer S, Van Deursen A (2008) Mining software repositories to study co-evolution of production & test code. In: 2008 1St international conference on software testing, verification, and validation, pp 220-229. IEEE"			Excluded	Excluded	new_screen			2	Springer Link		Mock objects for testing java systems	https://doi.org/10.1007/s10664-018-9663-0	Springer Link	nan; Pages; Year; Bibtex; Link
469	Behave	Modeling and Analyzing Using ASMs: The Landing Gear System Case Study	The paper presents an Abstract State Machine (ASM) specification of the Landing Gear System case study, and shows how the ASMETA framework can be used to support the modeling and analysis (validation and verification) activities for developing a rigorous and correct model in terms of ASMs. We exploit the two fundamental concepts of the ASM method, i.e., the notion of ground model and the refinement principle, and we achieve model development and model analysis by the combined use of formal methods for specification and for verification.		Arcaini, Paolo; Gargantini, Angelo; Riccobene, Elvinia	International Conference on Abstract State Machines, Alloy, B, TLA, VDM, and Z	https://doi.org/10.1007/978-3-319-07512-9_3		36--51	"""@InProceedings{10.1007/978-3-319-07512-9_3,
    author = ""Arcaini, Paolo and Gargantini, Angelo and Riccobene, Elvinia"",
    editor = ""Boniol, Fr{\'e}d{\'e}ric and Wiels, Virginie and Ait Ameur, Yamine and Schewe, Klaus-Dieter"",
    title = ""Modeling and Analyzing Using ASMs: The Landing Gear System Case Study"",
    booktitle = ""ABZ 2014: The Landing Gear Case Study"",
    year = ""2014"",
    publisher = ""Springer International Publishing"",
    address = ""Cham"",
    pages = ""36--51"",
    abstract = ""The paper presents an Abstract State Machine (ASM) specification of the Landing Gear System case study, and shows how the ASMETA framework can be used to support the modeling and analysis (validation and verification) activities for developing a rigorous and correct model in terms of ASMs. We exploit the two fundamental concepts of the ASM method, i.e., the notion of ground model and the refinement principle, and we achieve model development and model analysis by the combined use of formal methods for specification and for verification."",
    isbn = ""978-3-319-07512-9""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Modeling and Analyzing Using ASMs: The Landing Gear System Case Study	https://doi.org/10.1007/978-3-319-07512-9_3	Springer International Publishing	nan; Keywords; References; Link
470	Behave	Modeling in Agile Software Development: Decomposing Use Cases Towards Logical Architecture Design	[Context and motivation] There are a plethora of agile practices that relate to management (e.g., Sprints, Scrum ceremonies), development (e.g., pair programming, TDD, BDD, DevOps) or strategy (e.g., Lean Startup), [Question/problem] but lack a comprehensive description on how its adoption influences requirements modeling and ``You Aren't Gonna Need It'' (YAGNI) features. [Principal ideas/results] This paper presents Agile Modeling Process for Logical Architectures (AMPLA), an Agile Modeling (AM) oriented process composed by UML diagrams (namely, Sequence, Use Cases and Component). [Contributions] AMPLA uses agile practices in order to deliver small increments (of a requirements package) and to promote continuous customer feedback. The proposed AM process also includes a candidate architecture and further requirements refinement in parallel with a software increment delivery.	Agile modeling; Agile RE; UML use cases; Logical architectures; Agile modeling;  Agile RE;  UML use cases;  Logical architectures	Santos, Nuno; Pereira, Jaime; Ferreira, Nuno; Machado, Ricardo J.	International Conference on Product-Focused Software Process Improvement	https://doi.org/10.1007/978-3-030-03673-7\_31		396--408	"""@InProceedings{10.1007/978-3-030-03673-7_31,
    author = ""Santos, Nuno and Pereira, Jaime and Ferreira, Nuno and Machado, Ricardo J."",
    editor = {Kuhrmann, Marco and Schneider, Kurt and Pfahl, Dietmar and Amasaki, Sousuke and Ciolkowski, Marcus and Hebig, Regina and Tell, Paolo and Kl{\""u}nder, Jil and K{\""u}pper, Steffen},
    title = ""Modeling in Agile Software Development: Decomposing Use Cases Towards Logical Architecture Design"",
    booktitle = ""Product-Focused Software Process Improvement"",
    year = ""2018"",
    publisher = ""Springer International Publishing"",
    address = ""Cham"",
    pages = ""396--408"",
    abstract = ""[Context and motivation] There are a plethora of agile practices that relate to management (e.g., Sprints, Scrum ceremonies), development (e.g., pair programming, TDD, BDD, DevOps) or strategy (e.g., Lean Startup), [Question/problem] but lack a comprehensive description on how its adoption influences requirements modeling and ``You Aren't Gonna Need It'' (YAGNI) features. [Principal ideas/results] This paper presents Agile Modeling Process for Logical Architectures (AMPLA), an Agile Modeling (AM) oriented process composed by UML diagrams (namely, Sequence, Use Cases and Component). [Contributions] AMPLA uses agile practices in order to deliver small increments (of a requirements package) and to promote continuous customer feedback. The proposed AM process also includes a candidate architecture and further requirements refinement in parallel with a software increment delivery."",
    isbn = ""978-3-030-03673-7""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Modeling in Agile Software Development: Decomposing Use Cases Towards Logical Architecture Design	https://link.springer.com/chapter/10.1007/978-3-030-03673-7_31	Springer International Publishing	nan; References
471	Behave	Modeling Software Requirements	Enhancing requirements elicitation and specification extraction has always been of added value to software engineering, as it expedites the software development life cycle. In this context, the main challenge is to construct formal models that are capable of storing requirements from multimodal formats and can facilitate requirements reuse. In this chapter, we present an approach that captures the static and dynamic view of software projects and generates traceable system specifications. Our ontology-based approach can receive input in the form of functional requirements, UML use case and activity diagrams, and storyboards and allows for reasoning over the stored requirements for validation and reuse purposes.		Diamantopoulos, Themistoklis; Symeonidis, Andreas L.	Mining Software Engineering Data for Software Reuse	https://doi.org/10.1007/978-3-030-30106-4_3		47--74	"""@Inbook{Diamantopoulos2020,
    author = ""Diamantopoulos, Themistoklis and Symeonidis, Andreas L."",
    title = ""Modeling Software Requirements"",
    bookTitle = ""Mining Software Engineering Data for Software Reuse"",
    year = ""2020"",
    publisher = ""Springer International Publishing"",
    address = ""Cham"",
    pages = ""47--74"",
    abstract = ""Enhancing requirements elicitation and specification extraction has always been of added value to software engineering, as it expedites the software development life cycle. In this context, the main challenge is to construct formal models that are capable of storing requirements from multimodal formats and can facilitate requirements reuse. In this chapter, we present an approach that captures the static and dynamic view of software projects and generates traceable system specifications. Our ontology-based approach can receive input in the form of functional requirements, UML use case and activity diagrams, and storyboards and allows for reasoning over the stored requirements for validation and reuse purposes."",
    isbn = ""978-3-030-30106-4"",
    doi = ""10.1007/978-3-030-30106-4\_3"",
    url = ""https://doi.org/10.1007/978-3-030-30106-4\_3""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Modeling Software Requirements	https://link.springer.com/chapter/10.1007/978-3-030-30106-4_3	Springer International Publishing	nan; Keywords; References
472	Behave	NLP-Assisted Model Generation	Until today natural language text still is the universal communication mean between stakeholders and engineers in the design of highly complex systems. Although formal models offer a unique interpretation since they are based on a formal semantic, they are hard to incorporate at this early stage since they require expert knowledge. Textual specifications on the other side are often comprehensible immediately, but allow lots of space for interpretation due to ambiguities and different text understanding of the readers. However, these ambiguities and differences in text understanding can lead to severe errors in a later stage of the design flow if they are not detected as early as possible [47].		Soeken, Mathias; Drechsler, Rolf	Formal Specification Level	https://doi.org/10.1007/978-3-319-08699-6_3		23--55	"""@Inbook{Soeken2015,
    author = ""Soeken, Mathias and Drechsler, Rolf"",
    title = ""NLP-Assisted Model Generation"",
    bookTitle = ""Formal Specification Level: Concepts, Methods, and Algorithms"",
    year = ""2015"",
    publisher = ""Springer International Publishing"",
    address = ""Cham"",
    pages = ""23--55"",
    abstract = ""Until today natural language text still is the universal communication mean between stakeholders and engineers in the design of highly complex systems. Although formal models offer a unique interpretation since they are based on a formal semantic, they are hard to incorporate at this early stage since they require expert knowledge. Textual specifications on the other side are often comprehensible immediately, but allow lots of space for interpretation due to ambiguities and different text understanding of the readers. However, these ambiguities and differences in text understanding can lead to severe errors in a later stage of the design flow if they are not detected as early as possible [47]."",
    isbn = ""978-3-319-08699-6"",
    doi = ""10.1007/978-3-319-08699-6\_3"",
    url = ""https://doi.org/10.1007/978-3-319-08699-6\_3""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		NLP-Assisted Model Generation	https://link.springer.com/chapter/10.1007/978-3-319-08699-6_3	Springer International Publishing	nan; Keywords; References
473	Behave	Node Modules	A typical MEAN application can often depend on up to hundreds of packages. These modules are often small and consist of both Node.js and Bower libraries. By combining libraries, you are able to create a mashup of small-shared building blocks and custom apps for the purpose of solving a larger problem.	Version Option; Command Line; Open Source Project; Node Module; Test Drive Development	Elrom, Elad	Pro MEAN Stack Development	https://doi.org/10.1007/978-1-4842-2044-3_3		51--73	"""@Inbook{Elrom2016,
    author = ""Elrom, Elad"",
    title = ""Node Modules"",
    bookTitle = ""Pro MEAN Stack Development"",
    year = ""2016"",
    publisher = ""Apress"",
    address = ""Berkeley, CA"",
    pages = ""51--73"",
    abstract = ""A typical MEAN application can often depend on up to hundreds of packages. These modules are often small and consist of both Node.js and Bower libraries. By combining libraries, you are able to create a mashup of small-shared building blocks and custom apps for the purpose of solving a larger problem."",
    isbn = ""978-1-4842-2044-3"",
    doi = ""10.1007/978-1-4842-2044-3\_3"",
    url = ""https://doi.org/10.1007/978-1-4842-2044-3\_3""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Node Modules	https://link.springer.com/chapter/10.1007/978-1-4842-2044-3_3	Apress	nan; References
474	Behave	Normen, Standards, Practices	"Die folgenden Unterkapitel geben einen kurzen Abriss einiger Normen, Standards und Practices, die in Bezug zum Sicherheits-, Kontinuit{\""a}ts- und Risikomanagement stehen. Hierzu geh{\""o}ren die Standards und das IT-Grundschutz-Kompendium des BSI, die ISO/IEC-27000-Familie zur Informationssicherheit, die ISO/IEC 20000 sowie ITIL(r) und COBIT(r). Der Abriss erm{\""o}glicht zum einen den {\""u}berblicksartigen Vergleich des Vorgehensmodells und der Inhalte der Sicherheitspyramide mit Normen, Standards und Practices sowie zum anderen verschiedentlich die Herstellung von Bez{\""u}gen von der Sicherheitspyramide auf Normen, Standards und Practices und das Aufzeigen von Entwicklungen."		"M{\""u}ller, Klaus-Rainer"	IT-Sicherheit mit System	https://doi.org/10.1007/978-3-658-22065-5_5		90--196	"""@Inbook{Muller2018,
    author = {M{\""u}ller, Klaus-Rainer},
    title = ""Normen, Standards, Practices"",
    bookTitle = {IT-Sicherheit mit System: Integratives IT-Sicherheits-, Kontinuit{\""a}ts- und Risikomanagement -- Sichere Anwendungen -- Standards und Practices},
    year = ""2018"",
    publisher = ""Springer Fachmedien Wiesbaden"",
    address = ""Wiesbaden"",
    pages = ""90--196"",
    abstract = {Die folgenden Unterkapitel geben einen kurzen Abriss einiger Normen, Standards und Practices, die in Bezug zum Sicherheits-, Kontinuit{\""a}ts- und Risikomanagement stehen. Hierzu geh{\""o}ren die Standards und das IT-Grundschutz-Kompendium des BSI, die ISO/IEC-27000-Familie zur Informationssicherheit, die ISO/IEC 20000 sowie ITIL(r) und COBIT(r). Der Abriss erm{\""o}glicht zum einen den {\""u}berblicksartigen Vergleich des Vorgehensmodells und der Inhalte der Sicherheitspyramide mit Normen, Standards und Practices sowie zum anderen verschiedentlich die Herstellung von Bez{\""u}gen von der Sicherheitspyramide auf Normen, Standards und Practices und das Aufzeigen von Entwicklungen.},
    isbn = ""978-3-658-22065-5"",
    doi = ""10.1007/978-3-658-22065-5\_5"",
    url = ""https://doi.org/10.1007/978-3-658-22065-5\_5""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Normen, Standards, Practices	https://link.springer.com/chapter/10.1007/978-3-658-22065-5_5	Springer Fachmedien Wiesbaden	nan; Keywords; References
475	Behave	Onstage Product Owner	Writing user stories, refine stories, administerting the backlog, prioritiser in chief, work with the team, 3 Amigos, testing, estimating - these are a few of the more visable things Product Owners do.		Kelly, Allan	The Art of Agile Product Ownership	https://doi.org/10.1007/978-1-4842-5168-3_8		57--61	"""@Inbook{Kelly2019,
    author = ""Kelly, Allan"",
    title = ""Onstage Product Owner"",
    bookTitle = ""The Art of Agile Product Ownership: A Guide for Product Managers, Business Analysts, and Entrepreneurs"",
    year = ""2019"",
    publisher = ""Apress"",
    address = ""Berkeley, CA"",
    pages = ""57--61"",
    abstract = ""Writing user stories, refine stories, administerting the backlog, prioritiser in chief, work with the team, 3 Amigos, testing, estimating - these are a few of the more visable things Product Owners do."",
    isbn = ""978-1-4842-5168-3"",
    doi = ""10.1007/978-1-4842-5168-3\_8"",
    url = ""https://doi.org/10.1007/978-1-4842-5168-3\_8""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Onstage Product Owner	https://doi.org/10.1007/978-1-4842-5168-3_8	Apress	nan; Keywords; References; Link
476	Behave	Open Debates	Technology has fundamentally changed how we communicate with each other. New tools and platforms allow us to share our stories more vibrantly than ever before. In this chapter, we focus on a cornerstone of discourse: debates. We build a Jekyll-based debate platform that can leverage the full capabilities of GitHub to host open debates. We begin with an introduction to the debate platform and the rules of an Oxford-style debate. After that, we provide an in-depth overview of GitHub and all of its features, including some features of GitHub Pages that we have not yet had a chance to cover. We then create a prototype based on the rules to help us find a theme. When we have found a suitable theme and understood the requirements for this project, we can start editing the theme to obtain our final debate platform. Finally, we end this chapter with a discussion of how our platform can take advantage of the open standards and use them in conducting the debates.	Home Page; Current Debate; Project Site; Organization Site; Domain Name System	Dhillon, Vikram	Creating Blogs with Jekyll	https://doi.org/10.1007/978-1-4842-1464-0_10		163--193	"""@Inbook{Dhillon2016,
    author = ""Dhillon, Vikram"",
    title = ""Open Debates"",
    bookTitle = ""Creating Blogs with Jekyll"",
    year = ""2016"",
    publisher = ""Apress"",
    address = ""Berkeley, CA"",
    pages = ""163--193"",
    abstract = ""Technology has fundamentally changed how we communicate with each other. New tools and platforms allow us to share our stories more vibrantly than ever before. In this chapter, we focus on a cornerstone of discourse: debates. We build a Jekyll-based debate platform that can leverage the full capabilities of GitHub to host open debates. We begin with an introduction to the debate platform and the rules of an Oxford-style debate. After that, we provide an in-depth overview of GitHub and all of its features, including some features of GitHub Pages that we have not yet had a chance to cover. We then create a prototype based on the rules to help us find a theme. When we have found a suitable theme and understood the requirements for this project, we can start editing the theme to obtain our final debate platform. Finally, we end this chapter with a discussion of how our platform can take advantage of the open standards and use them in conducting the debates."",
    isbn = ""978-1-4842-1464-0"",
    doi = ""10.1007/978-1-4842-1464-0\_10"",
    url = ""https://doi.org/10.1007/978-1-4842-1464-0\_10""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Open Debates	https://doi.org/10.1007/978-1-4842-1464-0_10	Apress	nan; References; Link
477	Behave	Organization of the Software Test in Agile Projects	This chapter examines multiple approaches, all of which have proven to be useful models in the respective project environment. Thus, the applicability of the traditional test process according to ISTQB in the agile context is considered and the Four Test Quadrants in Agile Testing are discussed. Another important topic for agile companies is scaling - therefore the approaches LeSS and SAFe are briefly presented. Additionally, case studies are outlined to illustrate what an agile test organization can look like.		Baumgartner, Manfred; Klonk, Martin; Mastnak, Christian; Pichler, Helmut; Seidl, Richard; Tanczos, Siegfried	Agile Testing	https://doi.org/10.1007/978-3-030-73209-7_3		37--77	"""@Inbook{Baumgartner2021,
    author = ""Baumgartner, Manfred and Klonk, Martin and Mastnak, Christian and Pichler, Helmut and Seidl, Richard and Tanczos, Siegfried"",
    title = ""Organization of the Software Test in Agile Projects"",
    bookTitle = ""Agile Testing: The Agile Way to Quality"",
    year = ""2021"",
    publisher = ""Springer International Publishing"",
    address = ""Cham"",
    pages = ""37--77"",
    abstract = ""This chapter examines multiple approaches, all of which have proven to be useful models in the respective project environment. Thus, the applicability of the traditional test process according to ISTQB in the agile context is considered and the Four Test Quadrants in Agile Testing are discussed. Another important topic for agile companies is scaling - therefore the approaches LeSS and SAFe are briefly presented. Additionally, case studies are outlined to illustrate what an agile test organization can look like."",
    isbn = ""978-3-030-73209-7"",
    doi = ""10.1007/978-3-030-73209-7\_3"",
    url = ""https://doi.org/10.1007/978-3-030-73209-7\_3""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Organization of the Software Test in Agile Projects	https://doi.org/10.1007/978-3-030-73209-7_3	Springer International Publishing	nan; Keywords; References; Link
478	Behave	Patterns -- Wie geht es weiter?	"In diesem Kapitel m{\""o}chten wir Ihnen einige andere Bereiche vorstellen, in denen Sie Wissen und Erfahrungen {\""u}ber Patterns ver{\""o}ffentlicht finden k{\""o}nnen. In diesem Sinne verstehen Sie es bitte als eine Art kommentierte Literaturliste, die Ihnen als Anregung dienen soll."		Eilebrecht, Karl; Starke, Gernot	Patterns kompakt	https://doi.org/10.1007/978-3-642-34718-4_11		205--211	"""@Inbook{Eilebrecht2013,
    author = ""Eilebrecht, Karl and Starke, Gernot"",
    title = ""Patterns -- Wie geht es weiter?"",
    bookTitle = {Patterns kompakt: Entwurfsmuster f{\""u}r effektive Software-Entwicklung},
    year = ""2013"",
    publisher = ""Springer Berlin Heidelberg"",
    address = ""Berlin, Heidelberg"",
    pages = ""205--211"",
    abstract = {In diesem Kapitel m{\""o}chten wir Ihnen einige andere Bereiche vorstellen, in denen Sie Wissen und Erfahrungen {\""u}ber Patterns ver{\""o}ffentlicht finden k{\""o}nnen. In diesem Sinne verstehen Sie es bitte als eine Art kommentierte Literaturliste, die Ihnen als Anregung dienen soll.},
    isbn = ""978-3-642-34718-4"",
    doi = ""10.1007/978-3-642-34718-4\_11"",
    url = ""https://doi.org/10.1007/978-3-642-34718-4\_11""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Patterns – Wie geht es weiter?	https://doi.org/10.1007/978-3-642-34718-4_11	Springer Berlin Heidelberg	nan; Keywords; References; Link
479	Behave	People and Tools	As a consultant, most customers that call me to help them start working with test automation start with the questions: ``Which tools are there?'' and ``which tools should I use''? If you're in that situation yourself, then you're probably asking this question too. The short answer to the first question is that there are a bazillion tools out there for test automation. Oh, and there's Selenium, too, of course, so there are bazillion and one. And the short answer to the second question is the classical consultant's answer: ``It depends.''		Axelrod, Arnon	Complete Guide to Test Automation	https://doi.org/10.1007/978-1-4842-3832-5_3		31--61	"""@Inbook{Axelrod2018,
    author = ""Axelrod, Arnon"",
    title = ""People and Tools"",
    bookTitle = ""Complete Guide to Test Automation: Techniques, Practices, and Patterns for Building and Maintaining Effective Software Projects"",
    year = ""2018"",
    publisher = ""Apress"",
    address = ""Berkeley, CA"",
    pages = ""31--61"",
    abstract = ""As a consultant, most customers that call me to help them start working with test automation start with the questions: ``Which tools are there?'' and ``which tools should I use''? If you're in that situation yourself, then you're probably asking this question too. The short answer to the first question is that there are a bazillion tools out there for test automation. Oh, and there's Selenium, too, of course, so there are bazillion and one. And the short answer to the second question is the classical consultant's answer: ``It depends.''"",
    isbn = ""978-1-4842-3832-5"",
    doi = ""10.1007/978-1-4842-3832-5\_3"",
    url = ""https://doi.org/10.1007/978-1-4842-3832-5\_3""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		People and Tools	https://doi.org/10.1007/978-1-4842-3832-5_3	Apress	nan; Keywords; References; Link
480	Behave	Planning Your Work	Developers who are just starting out often believe that their job is to build what they're told to build by their managers or clients. The more experienced a developer becomes, the more they realize that building the right thing is more important than building the thing right. Effectively planning your work before you do it increases your effectiveness, as it ensures you properly understand the problem you're trying to solve.		Northwood, Chris	The Full Stack Developer	https://doi.org/10.1007/978-1-4842-4152-3_2		11--46	"""@Inbook{Northwood2018,
    author = ""Northwood, Chris"",
    title = ""Planning Your Work"",
    bookTitle = ""The Full Stack Developer: Your Essential Guide to the Everyday Skills Expected of a Modern Full Stack Web Developer"",
    year = ""2018"",
    publisher = ""Apress"",
    address = ""Berkeley, CA"",
    pages = ""11--46"",
    abstract = ""Developers who are just starting out often believe that their job is to build what they're told to build by their managers or clients. The more experienced a developer becomes, the more they realize that building the right thing is more important than building the thing right. Effectively planning your work before you do it increases your effectiveness, as it ensures you properly understand the problem you're trying to solve."",
    isbn = ""978-1-4842-4152-3"",
    doi = ""10.1007/978-1-4842-4152-3\_2"",
    url = ""https://doi.org/10.1007/978-1-4842-4152-3\_2""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Planning Your Work	https://doi.org/10.1007/978-1-4842-4152-3_2	Apress	nan; Keywords; References; Link
481	Behave	Polytrix: A Pacto-Powered Polyglot Test Matrix	We have created a polyglot test framework named Polytrix to compare, benchmark, and independently verify a suite of open-source OpenStack SDKs that each target a different programming language. The framework validates sample code from each SDK against a shared test scenario to validate that each SDK correctly implements a given scenario. It uses Pacto for integration contract testing between the SDKs and the OpenStack services, and generates test reports that help compare and document each SDK. It is designed so interactive training materials can be generated in future versions.	Public Cloud; Sample Code; Private Cloud; Literate Program; Test Code	Lincoln, Max; Alves, Fernando	IFIP International Conference on Open Source Systems	https://doi.org/10.1007/978-3-642-55128-4_27		191--194	"""@InProceedings{10.1007/978-3-642-55128-4_27,
    author = ""Lincoln, Max and Alves, Fernando"",
    editor = ""Corral, Luis and Sillitti, Alberto and Succi, Giancarlo and Vlasenko, Jelena and Wasserman, Anthony I."",
    title = ""Polytrix: A Pacto-Powered Polyglot Test Matrix"",
    booktitle = ""Open Source Software: Mobile Open Source Technologies"",
    year = ""2014"",
    publisher = ""Springer Berlin Heidelberg"",
    address = ""Berlin, Heidelberg"",
    pages = ""191--194"",
    abstract = ""We have created a polyglot test framework named Polytrix to compare, benchmark, and independently verify a suite of open-source OpenStack SDKs that each target a different programming language. The framework validates sample code from each SDK against a shared test scenario to validate that each SDK correctly implements a given scenario. It uses Pacto for integration contract testing between the SDKs and the OpenStack services, and generates test reports that help compare and document each SDK. It is designed so interactive training materials can be generated in future versions."",
    isbn = ""978-3-642-55128-4""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Polytrix: A Pacto-Powered Polyglot Test Matrix	https://doi.org/10.1007/978-3-642-55128-4_27	Springer Berlin Heidelberg	nan; References; Link
482	Behave	Poor Foundations	What can be done early on to set your teams up for success? What kinds of things are worth investing time in and how much do you try to solve for not knowing exactly what is needed in the long run? Furthermore, how do you front load a project with all the foundational-type work (think continuous integration, frameworks, etc.) that will make the rest of the project go smoothly? Once you think you know what those things are, how do you convince management that this upfront cost will pay off in the long run? One thing is fairly certain: if you don't invest in a solid foundation your Agile project will pay for it in the long run.		Brizard, Tim	Broken Agile	https://doi.org/10.1007/978-1-4842-1745-0_4		15--18	"""@Inbook{Brizard2015,
    author = ""Brizard, Tim"",
    title = ""Poor Foundations"",
    bookTitle = ""Broken Agile: Stories from the Trenches"",
    year = ""2015"",
    publisher = ""Apress"",
    address = ""Berkeley, CA"",
    pages = ""15--18"",
    abstract = ""What can be done early on to set your teams up for success? What kinds of things are worth investing time in and how much do you try to solve for not knowing exactly what is needed in the long run? Furthermore, how do you front load a project with all the foundational-type work (think continuous integration, frameworks, etc.) that will make the rest of the project go smoothly? Once you think you know what those things are, how do you convince management that this upfront cost will pay off in the long run? One thing is fairly certain: if you don't invest in a solid foundation your Agile project will pay for it in the long run."",
    isbn = ""978-1-4842-1745-0"",
    doi = ""10.1007/978-1-4842-1745-0\_4"",
    url = ""https://doi.org/10.1007/978-1-4842-1745-0\_4""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Poor Foundations	https://doi.org/10.1007/978-1-4842-1745-0_4	Apress	nan; Keywords; References; Link
483	Behave	PowerShell-Skripte testen mit Pester	"Je umfangreicher ein Skript wird, desto h{\""o}her ist die Wahrscheinlichkeit, dass irgendetwas nicht so ausgef{\""u}hrt wird, wie es sich der Autor des Skriptes vorgestellt hat. Das gilt vor allem, wenn es mehrere Autoren gibt, die in zeitlich versetzten Abst{\""a}nden irgendwelche {\""A}nderungen vornehmen. An diesem Punkt muss eine wichtige Entscheidung getroffen werden. Soll das Skript wie bisher weiterentwickelt und gepflegt werden? Oder sollen Methoden eingef{\""u}hrt werden, wie sie auch in der Software-Entwicklung {\""u}blich sind? Das bedeutet vor allem zwei Dinge: Eine Versionsverwaltung und das Testen einzelner Funktionalit{\""a}ten mit Hilfe eines daf{\""u}r vorgesehenen Werkzeugs. Das Thema Versionsverwaltung ist in Kap. 7an der Reihe, das Thema Testen mit Hilfe des Pester-Moduls wird in diesem Kapitel vorgestellt. Pester ist ein Modul, das bei Windows Server 2016 und Windows 10 von Anfang an dabei ist. Es enth{\""a}lt eine Reihe von Functions, mit deren Hilfe sich Skripte, DSC-Ressourcen, Server-Konfigurationen und alles das, was per Befehlszeile abfragbar ist, automatisiert testen lassen. Das Besondere an den Functions ist, dass ihre Namen so gew{\""a}hlt wurden, dass sie an ein in der Software-Entwicklung {\""u}bliches Testverfahren orientieren."		Monadjemi, Peter	Windows Server-Administration mit PowerShell 5.1	https://doi.org/10.1007/978-3-658-17666-2_6		87--98	"""@Inbook{Monadjemi2017,
    author = ""Monadjemi, Peter"",
    title = ""PowerShell-Skripte testen mit Pester"",
    bookTitle = {Windows Server-Administration mit PowerShell 5.1: Eine kompakte und praxisorientierte Einf{\""u}hrung},
    year = ""2017"",
    publisher = ""Springer Fachmedien Wiesbaden"",
    address = ""Wiesbaden"",
    pages = ""87--98"",
    abstract = {Je umfangreicher ein Skript wird, desto h{\""o}her ist die Wahrscheinlichkeit, dass irgendetwas nicht so ausgef{\""u}hrt wird, wie es sich der Autor des Skriptes vorgestellt hat. Das gilt vor allem, wenn es mehrere Autoren gibt, die in zeitlich versetzten Abst{\""a}nden irgendwelche {\""A}nderungen vornehmen. An diesem Punkt muss eine wichtige Entscheidung getroffen werden. Soll das Skript wie bisher weiterentwickelt und gepflegt werden? Oder sollen Methoden eingef{\""u}hrt werden, wie sie auch in der Software-Entwicklung {\""u}blich sind? Das bedeutet vor allem zwei Dinge: Eine Versionsverwaltung und das Testen einzelner Funktionalit{\""a}ten mit Hilfe eines daf{\""u}r vorgesehenen Werkzeugs. Das Thema Versionsverwaltung ist in Kap. 7an der Reihe, das Thema Testen mit Hilfe des Pester-Moduls wird in diesem Kapitel vorgestellt. Pester ist ein Modul, das bei Windows Server 2016 und Windows 10 von Anfang an dabei ist. Es enth{\""a}lt eine Reihe von Functions, mit deren Hilfe sich Skripte, DSC-Ressourcen, Server-Konfigurationen und alles das, was per Befehlszeile abfragbar ist, automatisiert testen lassen. Das Besondere an den Functions ist, dass ihre Namen so gew{\""a}hlt wurden, dass sie an ein in der Software-Entwicklung {\""u}bliches Testverfahren orientieren.},
    isbn = ""978-3-658-17666-2"",
    doi = ""10.1007/978-3-658-17666-2\_6"",
    url = ""https://doi.org/10.1007/978-3-658-17666-2\_6""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		PowerShell-Skripte testen mit Pester	https://doi.org/10.1007/978-3-658-17666-2_6	Springer Fachmedien Wiesbaden	nan; Keywords; References; Link
484	Behave	Preparing the Project	In the early days of agile, agilists wanted to avoid all upfront work before the iterations of requirements, coding, and testing started: no architecture, no initial requirements, not even getting their development environment set up. (The emergent design fans still use this approach.) I think this is an overreaction to the waterfall method. The pendulum of popular development style swung from too-much-upfront work to no-upfront work. Fortunately, that pendulum is swinging back to some upfront work that some agilists call upfront learning.		Cline, Alan	Agile Development in the Real World	https://doi.org/10.1007/978-1-4842-1679-8_4		75--90	"""@Inbook{Cline2015,
    author = ""Cline, Alan"",
    title = ""Preparing the Project"",
    bookTitle = ""Agile Development in the Real World"",
    year = ""2015"",
    publisher = ""Apress"",
    address = ""Berkeley, CA"",
    pages = ""75--90"",
    abstract = ""In the early days of agile, agilists wanted to avoid all upfront work before the iterations of requirements, coding, and testing started: no architecture, no initial requirements, not even getting their development environment set up. (The emergent design fans still use this approach.) I think this is an overreaction to the waterfall method. The pendulum of popular development style swung from too-much-upfront work to no-upfront work. Fortunately, that pendulum is swinging back to some upfront work that some agilists call upfront learning."",
    isbn = ""978-1-4842-1679-8"",
    doi = ""10.1007/978-1-4842-1679-8\_4"",
    url = ""https://doi.org/10.1007/978-1-4842-1679-8\_4""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Preparing the Project	https://doi.org/10.1007/978-1-4842-1679-8_4	Apress	nan; Keywords; References; Link
485	Behave	Reducing Barriers to Entry by Removing Prerequisites for a CS1 Introductory Programming Course	Introductory programming has evolved in many places to become a CS0 course, enabling students to get their feet wet with programming without completing significant math coursework. A scan of CS programs shows that a majority of CS1 programming courses that count towards an undergraduate CS degree continue to have a math or CS0 prerequisite. This experience report discusses the impact of removing the math prerequisite at an R2 university and a small liberal arts college. Having minimal prerequisites has beneficial effects in terms of diversifying the CS student body as well as enabling students to begin CS coursework early, often in the first semester, potentially impacting persistence, but also enabling students to decide, early, if CS is right for them. The high success rate of students of various backgrounds taking CS certificates and pursuing graduate school also shows that aggressive prerequisites in the past may have been functioning as barriers to entering CS programs. If we are serious about supporting diversity, we need to acknowledge the wide disparity in high school education nationwide and that prerequisites are perhaps functioning as a needless barrier. Where the CS0 course doesn't count towards a degree, or there isn't space for that requirement in the program, it is also worth considering whether the CS0 prerequisite is necessary.	Barrier Reduction;  Broadening Participation in Computing (BPC);  CS1;  Diversity;  Intro Programming; Barrier Reduction, Broadening Participation in Computing (BPC), CS1, Diversity, Intro Programming	Das, Udayan; Fulton, Chris		https://doi.org/10.1145/3626253.3635492		1616-1617	"""@inproceedings{10.1145/3626253.3635492,
    author = ""Das, Udayan and Fulton, Chris"",
    title = ""Reducing Barriers to Entry by Removing Prerequisites for a CS1 Introductory Programming Course"",
    year = ""2024"",
    isbn = ""9798400704246"",
    publisher = ""Association for Computing Machinery"",
    address = ""New York, NY, USA"",
    url = ""https://doi.org/10.1145/3626253.3635492"",
    doi = ""10.1145/3626253.3635492"",
    abstract = ""Introductory programming has evolved in many places to become a CS0 course, enabling students to get their feet wet with programming without completing significant math coursework. A scan of CS programs shows that a majority of CS1 programming courses that count towards an undergraduate CS degree continue to have a math or CS0 prerequisite. This experience report discusses the impact of removing the math prerequisite at an R2 university and a small liberal arts college. Having minimal prerequisites has beneficial effects in terms of diversifying the CS student body as well as enabling students to begin CS coursework early, often in the first semester, potentially impacting persistence, but also enabling students to decide, early, if CS is right for them. The high success rate of students of various backgrounds taking CS certificates and pursuing graduate school also shows that aggressive prerequisites in the past may have been functioning as barriers to entering CS programs. If we are serious about supporting diversity, we need to acknowledge the wide disparity in high school education nationwide and that prerequisites are perhaps functioning as a needless barrier. Where the CS0 course doesn't count towards a degree, or there isn't space for that requirement in the program, it is also worth considering whether the CS0 prerequisite is necessary."",
    booktitle = ""Proceedings of the 55th ACM Technical Symposium on Computer Science Education V. 2"",
    pages = ""1616-1617"",
    numpages = ""2"",
    keywords = ""Barrier Reduction, Broadening Participation in Computing (BPC), CS1, Diversity, Intro Programming"",
    location = ""Portland, OR, USA"",
    series = ""SIGCSE 2024""
}
"""	Excluded	Excluded	new_screen			2	ACM		Prerequisites	https://dl.acm.org/doi/10.1145/3626253.3635492	Association for Computing Machinery	nan; Venue; References
486	Behave	Prioritization of User Story Acceptance Tests in Agile Software Development Using Meta-Heuristic Techniques and Comparative Analysis	User stories that are the requirements engineering artifacts in agile software development must be accepted by the end user before being implemented. Acceptance testing is used to confirm the acceptance of user stories. User story acceptance tests are driven by user-defined acceptance criteria. The number of acceptance tests increases as the application size increases. One of the prominent reasons for adopting agile software development is quicker delivery of working software. In this paper, we attempt to prioritize acceptance tests in order to identify critical tests. Execution of critical acceptance tests is sufficient to satisfy the acceptance criteria for a user story and reduces the time to delivery of software. Prioritization of acceptance tests is realized by application of meta-heuristic techniques, i.e., genetic algorithm (GA), cuckoo search algorithm, and micro-GA algorithm. The information flow (IF) model is used as a basis of fitness function to ensure maximum coverage of user acceptance criteria. We demonstrate the applicability and effectiveness of the proposed approach with the help of a realistic example. A comparative analysis of the application of meta-heuristic techniques is performed to choose the best one.	Agile software development; Acceptance testing; Genetic algorithm; Cuckoo search; Micro-GA	Sibal, Ritu; Kaur, Preeti; Sharma, Chayanika	Towards Extensible and Adaptable Methods in Computing	https://doi.org/10.1007/978-981-13-2348-5_4		43--55	"""@Inbook{Sibal2018,
    author = ""Sibal, Ritu and Kaur, Preeti and Sharma, Chayanika"",
    editor = ""Chakraverty, Shampa and Goel, Anil and Misra, Sanjay"",
    title = ""Prioritization of User Story Acceptance Tests in Agile Software Development Using Meta-Heuristic Techniques and Comparative Analysis"",
    bookTitle = ""Towards Extensible and Adaptable Methods in Computing"",
    year = ""2018"",
    publisher = ""Springer Singapore"",
    address = ""Singapore"",
    pages = ""43--55"",
    abstract = ""User stories that are the requirements engineering artifacts in agile software development must be accepted by the end user before being implemented. Acceptance testing is used to confirm the acceptance of user stories. User story acceptance tests are driven by user-defined acceptance criteria. The number of acceptance tests increases as the application size increases. One of the prominent reasons for adopting agile software development is quicker delivery of working software. In this paper, we attempt to prioritize acceptance tests in order to identify critical tests. Execution of critical acceptance tests is sufficient to satisfy the acceptance criteria for a user story and reduces the time to delivery of software. Prioritization of acceptance tests is realized by application of meta-heuristic techniques, i.e., genetic algorithm (GA), cuckoo search algorithm, and micro-GA algorithm. The information flow (IF) model is used as a basis of fitness function to ensure maximum coverage of user acceptance criteria. We demonstrate the applicability and effectiveness of the proposed approach with the help of a realistic example. A comparative analysis of the application of meta-heuristic techniques is performed to choose the best one."",
    isbn = ""978-981-13-2348-5"",
    doi = ""10.1007/978-981-13-2348-5\_4"",
    url = ""https://doi.org/10.1007/978-981-13-2348-5\_4""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Prioritization of User Story Acceptance Tests in Agile Software Development Using Meta-Heuristic Techniques and Comparative Analysis	https://doi.org/10.1007/978-981-13-2348-5_4	Springer Singapore	nan; References; Link
487	Behave	A tentative framework for connecting long-term business and product planning with iterative \&amp; incremental software product development	"For a company in the software product business, it is essential to understand how to connect business management and software development [17] and employ a solid, value-based approach in its decision-making. However, software engineering literature (SE) commonly addresses what should be done at the ""floor level"" and leaves the link to business and product management unaddressed [14]. Also, existing software development models mostly adhere to the viewpoint of individual development projects and thus fail to sufficiently address common product development concerns such as multi-project or project portfolio management [20]."		"V\""{a}h\""{a}niitty, Jarno"		https://doi.org/10.1145/1083091.1083097		1-4	"""@inproceedings{10.1145/1083091.1083097,
    author = {V\""{a}h\""{a}niitty, Jarno},
    title = ""A tentative framework for connecting long-term business and product planning with iterative \\&amp; incremental software product development"",
    year = ""2005"",
    isbn = ""159593118X"",
    publisher = ""Association for Computing Machinery"",
    address = ""New York, NY, USA"",
    url = ""https://doi.org/10.1145/1083091.1083097"",
    doi = ""10.1145/1083091.1083097"",
    abstract = {For a company in the software product business, it is essential to understand how to connect business management and software development [17] and employ a solid, value-based approach in its decision-making. However, software engineering literature (SE) commonly addresses what should be done at the ""floor level"" and leaves the link to business and product management unaddressed [14]. Also, existing software development models mostly adhere to the viewpoint of individual development projects and thus fail to sufficiently address common product development concerns such as multi-project or project portfolio management [20].},
    booktitle = ""Proceedings of the Seventh International Workshop on Economics-Driven Software Engineering Research"",
    pages = ""1-4"",
    numpages = ""4"",
    location = ""St. Louis, Missouri"",
    series = ""EDSER '05""
}

@article{10.1145/1082983.1083097,
    author = {V\""{a}h\""{a}niitty, Jarno},
    title = ""A tentative framework for connecting long-term business and product planning with iterative \\&amp; incremental software product development"",
    year = ""2005"",
    issue_date = ""July 2005"",
    publisher = ""Association for Computing Machinery"",
    address = ""New York, NY, USA"",
    volume = ""30"",
    number = ""4"",
    issn = ""0163-5948"",
    url = ""https://doi.org/10.1145/1082983.1083097"",
    doi = ""10.1145/1082983.1083097"",
    abstract = {For a company in the software product business, it is essential to understand how to connect business management and software development [17] and employ a solid, value-based approach in its decision-making. However, software engineering literature (SE) commonly addresses what should be done at the ""floor level"" and leaves the link to business and product management unaddressed [14]. Also, existing software development models mostly adhere to the viewpoint of individual development projects and thus fail to sufficiently address common product development concerns such as multi-project or project portfolio management [20].},
    journal = ""SIGSOFT Softw. Eng. Notes"",
    month = ""may"",
    pages = ""1-4"",
    numpages = ""4""
}
"""	Excluded	Excluded	new_screen			2	ACM		Product Planning	https://dl.acm.org/doi/10.1145/1083091.1083097	Association for Computing Machinery	nan; Venue; Keywords; References
488	Behave	Program comprehension of domain-specific and general-purpose languages: replication of a family of experiments using integrated development environments	Domain-specific languages (DSLs) allow developers to write code at a higher level of abstraction compared with general-purpose languages (GPLs). Developers often use DSLs to reduce the complexity of GPLs. Our previous study found that developers performed program comprehension tasks more accurately and efficiently with DSLs than with corresponding APIs in GPLs. This study replicates our previous study to validate and extend the results when developers use IDEs to perform program comprehension tasks. We performed a dependent replication of a family of experiments. We made two specific changes to the original study: (1) participants used IDEs to perform the program comprehension tasks, to address a threat to validity in the original experiment and (2) each participant performed program comprehension tasks on either DSLs or GPLs, not both as in the original experiment. The results of the replication are consistent with and expanded the results of the original study. Developers are significantly more effective and efficient in tool-based program comprehension when using a DSL than when using a corresponding API in a GPL. The results indicate that, where a DSL is available, developers will perform program comprehension better using the DSL than when using the corresponding API in a GPL.	Problem oriented languages; Controlled experiment; Domain specific languages; General purpose languages; Program comprehension; Replication; Digital subscriber lines; Problem oriented languages;  Controlled experiment;  Domain specific languages;  General purpose languages;  Program comprehension;  Replication;  Digital subscriber lines	Kosar, Tomaz; Gaberc, Saso; Carver, Jeffrey C.; Mernik, Marjan	Empirical Software Engineering	https://doi.org/10.1007/s10664-017-9593-2		2734 - 2763	"""@ARTICLE{Kosar20182734,
    author = ""Kosar, Tomaz and Gaberc, Saso and Carver, Jeffrey C. and Mernik, Marjan"",
    title = ""Program comprehension of domain-specific and general-purpose languages: replication of a family of experiments using integrated development environments"",
    year = ""2018"",
    journal = ""Empirical Software Engineering"",
    volume = ""23"",
    number = ""5"",
    pages = ""2734 - 2763"",
    doi = ""10.1007/s10664-017-9593-2"",
    url = ""https://www.scopus.com/inward/record.uri?eid=2-s2.0-85041817185\&doi=10.1007\%2fs10664-017-9593-2\&partnerID=40\&md5=08584b57449331c4801a21d3a4bc386c"",
    affiliations = ""Faculty of Electrical Engineering and Computer Science, University of Maribor, Koroska cesta 46, Maribor, 2000, Slovenia; Department of Computer Science, University of Alabama, Tuscaloosa, AL, United States"",
    abstract = ""Domain-specific languages (DSLs) allow developers to write code at a higher level of abstraction compared with general-purpose languages (GPLs). Developers often use DSLs to reduce the complexity of GPLs. Our previous study found that developers performed program comprehension tasks more accurately and efficiently with DSLs than with corresponding APIs in GPLs. This study replicates our previous study to validate and extend the results when developers use IDEs to perform program comprehension tasks. We performed a dependent replication of a family of experiments. We made two specific changes to the original study: (1) participants used IDEs to perform the program comprehension tasks, to address a threat to validity in the original experiment and (2) each participant performed program comprehension tasks on either DSLs or GPLs, not both as in the original experiment. The results of the replication are consistent with and expanded the results of the original study. Developers are significantly more effective and efficient in tool-based program comprehension when using a DSL than when using a corresponding API in a GPL. The results indicate that, where a DSL is available, developers will perform program comprehension better using the DSL than when using the corresponding API in a GPL. (c) 2018, Springer Science+Business Media, LLC, part of Springer Nature."",
    author_keywords = ""Controlled experiment; Domain-specific languages; General-purpose languages; Program comprehension; Replication"",
    keywords = ""Problem oriented languages; Controlled experiment; Domain specific languages; General purpose languages; Program comprehension; Replication; Digital subscriber lines"",
    correspondence_address = ""T. Kosar; Faculty of Electrical Engineering and Computer Science, University of Maribor, Maribor, Koroska cesta 46, 2000, Slovenia; email: tomaz.kosar@um.si"",
    publisher = ""Springer New York LLC"",
    issn = ""13823256"",
    coden = ""ESENF"",
    language = ""English"",
    abbrev_source_title = ""Empir Software Eng"",
    type = ""Article"",
    publication_stage = ""Final"",
    source = ""Scopus"",
    note = ""Cited by: 28""
}
"""	Excluded	Excluded	new_screen			2	Scopus Signed In		Program comprehension of domain-specific and general-purpose languages: replication of a family of experiments using integrated development environments	https://www.scopus.com/record/display.uri?eid=2-s2.0-85041817185&origin=resultslist&sort=plf-f&src=s&sid=c90b5bbc91466be5a8ba1d9ad5261c2b&sot=b&sdt=b&s=TITLE-ABS-KEY%28program+comprehension+of+domain+specific+and+general+purpose+languages+replication+of+a+family+of+experiments+using+integrated+development+environments%29&sl=166&sessionSearchId=c90b5bbc91466be5a8ba1d9ad5261c2b&relpos=0	Springer New York LLC	nan; References
489	Behave	PTCWA: Performance Testing of Cloud Based Web Applications	Testing in a cloud environment involves a range of tests to analyze various aspects of the system in various cloud adoption scenarios such as public, private, or hybrid. Performance testing is a key aspect of the cloud testing strategy and it evaluates the application/software for various issues such as speed, stability, and scalability under varying load conditions. The key issues that must be considered in a cloud set-up as a part of the performance testing strategy are collection of statistics on the load, conducting stress test, monitoring the memory, checking for elasticity and scalability. This paper focuses on testing the resource utilization in cloud infrastructure in general and memory utilization in particular. The memory utilization is evaluated in public and private cloud environment with simulation of 10 users to 10,000 users.	Performance testing; Public cloud; Private cloud; Memory and CPU utilization	Geetha Devasena, M. S.; Kingsy Grace, R.; Manju, S.; Krishna Kumar, V.	New Trends in Computational Vision and Bio-inspired Computing	https://doi.org/10.1007/978-3-030-41862-5_32		345--356	"""@Inbook{GeethaDevasena2020,
    author = ""Geetha Devasena, M. S. and Kingsy Grace, R. and Manju, S. and Krishna Kumar, V."",
    editor = ""Smys, S. and Iliyasu, Abdullah M. and Bestak, Robert and Shi, Fuqian"",
    title = ""PTCWA: Performance Testing of Cloud Based Web Applications"",
    bookTitle = ""New Trends in Computational Vision and Bio-inspired Computing: Selected works presented at the ICCVBIC 2018, Coimbatore, India"",
    year = ""2020"",
    publisher = ""Springer International Publishing"",
    address = ""Cham"",
    pages = ""345--356"",
    abstract = ""Testing in a cloud environment involves a range of tests to analyze various aspects of the system in various cloud adoption scenarios such as public, private, or hybrid. Performance testing is a key aspect of the cloud testing strategy and it evaluates the application/software for various issues such as speed, stability, and scalability under varying load conditions. The key issues that must be considered in a cloud set-up as a part of the performance testing strategy are collection of statistics on the load, conducting stress test, monitoring the memory, checking for elasticity and scalability. This paper focuses on testing the resource utilization in cloud infrastructure in general and memory utilization in particular. The memory utilization is evaluated in public and private cloud environment with simulation of 10 users to 10,000 users."",
    isbn = ""978-3-030-41862-5"",
    doi = ""10.1007/978-3-030-41862-5\_32"",
    url = ""https://doi.org/10.1007/978-3-030-41862-5\_32""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		PTCWA: Performance Testing of Cloud Based Web Applications	https://doi.org/10.1007/978-3-030-41862-5_32	Springer International Publishing	nan; References; Link
490	Behave	Public Administration for the Next Generation	Public Administration incorporates the development of statutes and regulations to bring order and control to aspects of society. In democratic societies this is accompanied by gathering opinion from the population on the span and degree of this control and on some of the details. This essay explores ways in which developments in digital technologies can facilitate this process, aid policymakers in ensuring consistency of regulations, and streamline the process between regulation and software in situations where this is relevant and helpful. It looks forward to what the coming generation of citizens might expect from their public administrators.		Winstanley, Peter	Government 3.0 - Next Generation Government Technology Infrastructure and Services	https://doi.org/10.1007/978-3-319-63743-3_2		27--36	"""@Inbook{Winstanley2017,
    author = ""Winstanley, Peter"",
    editor = ""Ojo, Adegboyega and Millard, Jeremy"",
    title = ""Public Administration for the Next Generation"",
    bookTitle = ""Government 3.0 -- Next Generation Government Technology Infrastructure and Services: Roadmaps, Enabling Technologies {\\&} Challenges"",
    year = ""2017"",
    publisher = ""Springer International Publishing"",
    address = ""Cham"",
    pages = ""27--36"",
    abstract = ""Public Administration incorporates the development of statutes and regulations to bring order and control to aspects of society. In democratic societies this is accompanied by gathering opinion from the population on the span and degree of this control and on some of the details. This essay explores ways in which developments in digital technologies can facilitate this process, aid policymakers in ensuring consistency of regulations, and streamline the process between regulation and software in situations where this is relevant and helpful. It looks forward to what the coming generation of citizens might expect from their public administrators."",
    isbn = ""978-3-319-63743-3"",
    doi = ""10.1007/978-3-319-63743-3\_2"",
    url = ""https://doi.org/10.1007/978-3-319-63743-3\_2""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Public Administration for the Next Generation	https://doi.org/10.1007/978-3-319-63743-3_2	Springer International Publishing	nan; Keywords; References; Link
491	Behave	Putting ASP.NET MVC in Context	ASP.NET MVC is a Web development framework from Microsoft that combines the effectiveness and tidiness of model-view-controller (MVC) architecture, the most up-to-date ideas and techniques from agile development, and the best parts of the existing ASP.NET platform. It is a complete alternative to traditional ASP.NET Web Forms, delivering advantages for all but the most trivial of Web development projects. In this chapter, you'll learn why Microsoft created ASP.NET MVC, how it compares to its predecessors and alternatives, and, finally, what's new in ASP.NET MVC 5 and what's covered in this book.	Unit Testing; Visual Studio; Agile Development; Cascade Style Sheets; Agile Methodology	Adam Freeman	Pro ASP.NET MVC 5	https://doi.org/10.1007/978-1-4302-6530-6_1		1-10		Excluded	Excluded	new_screen			2	Springer Link		Putting ASP.NET MVC in Context	https://link.springer.com/chapter/10.1007/978-1-4302-6530-6_1	Apress, Berkeley, CA	nan; References; Year; Bibtex
492	Behave	QTREDS: a Ruby on Rails-based platform for omics laboratories	Background: In recent years, the experimental aspects of the laboratory activities have been growing in complexity in terms of amount and diversity of data produced, equipment used, of computer-based workflows needed to process and analyze the raw data generated. To enhance the level of quality control over the laboratory activities and efficiently handle the large amounts of data produced, a Laboratory Management Information System (LIMS) is highly-recommended. A LIMS is a complex software platform that helps researchers to have a complete knowledge of the laboratory activities at each step encouraging them to adopt good laboratory practices. Results: We have designed and implemented Quality and TRacEability Data System - QTREDS, a software platform born to address the specific needs of the CRS4 Sequencing and Genotyping Platform (CSGP). The system written in the Ruby programming language and developed using the Rails framework is based on four main functional blocks: a sample handler, a workflow generator, an inventory management system and a user management system. The wizard-based sample handler allows to manage one or multiple samples at a time, tracking the path of each sample and providing a full chain of custody. The workflow generator encapsulates a user-friendly JavaScript-based visual tool that allows users to design customized workflows even for those without a technical background. With the inventory management system, reagents, laboratory glassware and consumables can be easily added through their barcodes and minimum stock levels can be controlled to avoid shortages of essential laboratory supplies. QTREDS provides a system for privileges management and authorizations to create different user roles, each with a well-defined access profile. Conclusions: Tracking and monitoring all the phases of the laboratory activities can help to identify and troubleshoot problems more quickly, reducing the risk of process failures and their related costs. QTREDS was designed to address the specific needs of the CSGP laboratory, where it has been successfully used for over a year, but thanks to its flexibility it can be easily adapted to other ``omics{''} laboratories. The software is freely available for academic users from http://qtreds.crs4.it.	Computational Biology; Humans; Information Systems; Internet; Software; User-Computer Interface; Workflow; Functional programming; Inventory control; Laboratories; Quality control; Ruby; Complex software; Experimental aspects; Inventory management systems; Laboratory management; Laboratory practices; Large amounts of data; Software platforms; Technical background; article; biology; computer interface; computer program; human; information system; Internet; workflow; Information management; Computational Biology;  Humans;  Information Systems;  Internet;  Software;  User-Computer Interface;  Workflow;  Functional programming;  Inventory control;  Laboratories;  Quality control;  Ruby;  Complex software;  Experimental aspects;  Inventory management systems;  Laboratory management;  Laboratory practices;  Large amounts of data;  Software platforms;  Technical background;  article;  biology;  computer interface;  computer program;  human;  information system;  Internet;  workflow;  Information management	Palla, Piergiorgio; Frau, Gianfranco; Vargiu, Laura; Rodriguez-Tome, Patricia	BMC BIOINFORMATICS	https://doi.org/10.1186/1471-2105-15-S1-S13	"citation_journal_title=BMC Bioinformatics; citation_title=Next generation tools for genomic data generation, distribution, and visualization; citation_author=DA Nix, TL Di Sera, BK Dalley, BA Milash, RM Cundick, KS Quinn, SJ Courdy; citation_volume=11; citation_issue=1; citation_publication_date=2010; citation_pages=455; citation_doi=10.1186/1471-2105-11-455; citation_id=CR1; citation_journal_title=BMC Bioinformatics; citation_title=iLAP a workflow-driven software for experimental protocol development, data acquisition and analysis; citation_author=G Stocker, M Fischer, D Rieder, G Bindea, S Kainz, M Oberstolz, J McNally, Z Trajanoski; citation_volume=10; citation_publication_date=2009; citation_pages=390; citation_doi=10.1186/1471-2105-10-390; citation_id=CR2; citation_journal_title=Source Code Biol Med; citation_title=A Perl toolkit for LIMS development; citation_author=JA Morris, SA Gayther, IJ Jacobs, C Jones; citation_volume=3; citation_issue=1; citation_publication_date=2008; citation_pages=4; citation_doi=10.1186/1751-0473-3-4; citation_id=CR3; citation_journal_title=Chemom Intell Lab Syst; citation_title=Trends in laboratory information system; citation_author=PJ Prosad, GL Bodhe; citation_volume=118; citation_publication_date=2012; citation_pages=187-192; citation_doi=10.1016/j.chemolab.2012.07.001; citation_id=CR4; citation_journal_title=Laboratory Automation & Information Management; citation_title=A brief history of LIMS; citation_author=GA Gibbon; citation_volume=32; citation_issue=1; citation_publication_date=1996; citation_pages=1-5; citation_doi=10.1016/1381-141X(95)00024-K; citation_id=CR5; citation_inbook_title=Analysis of a Laboratory Information Management System (LIMS); citation_publication_date=1999; citation_id=CR6; citation_author=D Bentley; citation_inbook_title=STARLIMS web-based platform for unified laboratory informatics; citation_publication_date=2013; citation_id=CR7; citation_inbook_title=Examplar LIMS; citation_publication_date=2010; citation_id=CR8; citation_title=How differences in technology affect LIMS functionality, cost & ROI; citation_inbook_title=Tech rep; citation_publication_date=2011; citation_id=CR9; citation_journal_title=Am Lab; citation_title=Comprehensive Laboratory Informatics: A Multilayer Approach; citation_author=S Wood; citation_volume=39; citation_issue=16; citation_publication_date=2007; citation_pages=20-23; citation_id=CR10; citation_inbook_title=The Right LIMS Delivery Method; citation_publication_date=2009; citation_id=CR11; citation_author=JT Kent; citation_journal_title=BMC Bioinformatics; citation_title=openBIS: a flexible framework for managing and analyzing complex data in biology research; citation_author=A Bauch, I Adamczyk, P Buczek, F-J Elmer, K Enimanev, P Glyzewski, M Kohler, T Pylak, A Quandt, C Ramakrishnan, C Beisel, L Malmstrom, R Aebersold, B Rinn; citation_volume=12; citation_issue=1; citation_publication_date=2011; citation_pages=468; citation_doi=10.1186/1471-2105-12-468; citation_id=CR12; citation_journal_title=BMC Bioinformatics; citation_title=MolabIS - An integrated information system for storing and managing molecular genetics data; citation_author=CVC Truong, LF Groeneveld, B Morgenstern, E Groeneveld; citation_volume=12; citation_issue=1; citation_publication_date=2011; citation_pages=425; citation_doi=10.1186/1471-2105-12-425; citation_id=CR13; citation_journal_title=BMC Bioinformatics; citation_title=The EnzymeTracker: an open-source laboratory information management system for sample tracking; citation_author=T Triplet, G Butler; citation_volume=13; citation_issue=1; citation_publication_date=2012; citation_pages=15; citation_doi=10.1186/1471-2105-13-15; citation_id=CR14; citation_inbook_title=Open-LIMS; citation_publication_date=2010; citation_id=CR15; citation_author=R Konertz; citation_inbook_title=Bika Lims; citation_publication_date=2011; citation_id=CR16; citation_journal_title=BMC Bioinformatics; citation_title=LabKey Server: An open source platform for scientific data integration, analysis and collaboration; citation_author=EK Nelson, B Piehler, J Eckels, A Rauch, M Bellew, P Hussey, S Ramsay, C Nathe, K Lum, K Krouse, D Stearns, B Connolly, T Skillman, M Igra; citation_volume=12; citation_issue=1; citation_publication_date=2011; citation_pages=71; citation_doi=10.1186/1471-2105-12-71; citation_id=CR17; citation_journal_title=Bioinformatics; citation_title=SLIMS--a user-friendly sample operations and inventory management system for genotyping labs; citation_author=T Van Rossum, B Tripp, D Daley; citation_volume=26; citation_issue=14; citation_publication_date=2010; citation_pages=1808-1810; citation_doi=10.1093/bioinformatics/btq271; citation_id=CR18; citation_inbook_title=15 Free and Open source LIMS: Laboratory information management system programs and projects; citation_publication_date=2010; citation_id=CR19; citation_title=Whole Genome Sequencing of 2100 Individuals in the founder Sardinian Population [abstract]; citation_inbook_title=Abstract volume of the 62nd Annual Meeting of The American Society of Human Genetics: 6-10 November 2012; San Francisco, USA; citation_publication_date=2012; citation_pages=76; citation_id=CR20; citation_author=C Sidore; citation_author=S Sanna; citation_author=A Kwong; citation_author=HM Kang; citation_author=R Cusano; citation_author=M Pitzalis; citation_author=M Zoledziewska; citation_author=A Maschio; citation_author=F Busonero; citation_author=M Lobina; citation_author=A Angius; citation_author=R Lyons; citation_author=B Terrier; citation_author=C Brennan; citation_author=R Atzeni; citation_author=A Mulas; citation_author=M Dei; citation_author=M Piras; citation_author=S Lai; citation_author=F Reinier; citation_author=R Berutti; citation_author=C Jones; citation_author=M Marcelli; citation_author=M Urru; citation_author=M Oppo; citation_author=D Schlessinger; citation_author=G Abecasis; citation_author=C F; citation_inbook_title=Ruby on Rails Framework; citation_publication_date=2004; citation_id=CR21; citation_author=D Heinemeier Hansson; Oracle Inc: MySQL: The world's most popular open source database. last visited: 10 May 2013, [
                    http://www.mysql.com/
                    
                  ]; citation_inbook_title=Prototype JavaScript Framework; citation_publication_date=2005; citation_id=CR23; citation_author=S Stephenson; citation_inbook_title=Ajax: A New Approach to Web Applications; citation_publication_date=2005; citation_id=CR24; citation_author=J Garrett; citation_inbook_title=script.aculo.us; citation_publication_date=2005; citation_id=CR25; citation_author=T Fuchs; citation_journal_title=Nat Biotechnol; citation_title=Promoting coherent minimum reporting guidelines for biological and biomedical investigations: the MIBBI project; citation_author=CF Taylor, D Field, S-A Sansone, J Aerts, R Apweiler, M Ashburner, CA Ball, P-A Binz, M Bogue, T Booth, A Brazma, RR Brinkman, A Michael Clark, EW Deutsch, O Fiehn, J Fostel, P Ghazal, F Gibson, T Gray, G Grimes, JM Hancock, NW Hardy, H Hermjakob, RK Julian, M Kane, C Kettner, C Kinsinger, E Kolker, M Kuiper, NL Novere; citation_volume=26; citation_issue=8; citation_publication_date=2008; citation_pages=889-896; citation_doi=10.1038/nbt.1411; citation_id=CR26; citation_journal_title=Bioinformatics; citation_title=ISA software suite: supporting standards-compliant experimental annotation and enabling curation at the community level; citation_author=P Rocca-Serra, M Brandizi, E Maguire, N Sklyar, C Taylor, K Begley, D Field, S Harris, W Hide, O Hofmann, S Neumann, P Sterk, W Tong, SA Sansone; citation_volume=26; citation_issue=18; citation_publication_date=2010; citation_pages=2354-2356; citation_doi=10.1093/bioinformatics/btq415; citation_id=CR27; citation_journal_title=Embnet.journal; citation_title=QTreds: a flexible LIMS for omics laboratories [abstract]; citation_author=P Palla, G Frau, L Vargiu, P Rodriguez-Tome; citation_volume=18; citation_issue=Suppl B; citation_publication_date=2012; citation_pages=38-39; citation_id=CR28; citation_journal_title=Acm T Internet Tech; citation_title=Principled design of the modern Web architecture; citation_author=RT Fielding, RN Taylor; citation_volume=2; citation_issue=2; citation_publication_date=2002; citation_pages=115-150; citation_doi=10.1145/514183.514185; citation_id=CR29"	1 - 11	"""@article{WOS:000330686700013,
    Author = ""Palla, Piergiorgio and Frau, Gianfranco and Vargiu, Laura and Rodriguez-Tome, Patricia"",
    Title = ""QTREDS: a Ruby on Rails-based platform for omics laboratories"",
    Journal = ""BMC BIOINFORMATICS"",
    Year = ""2014"",
    Volume = ""15"",
    Number = ""1"",
    Month = ""JAN 10"",
    Abstract = ""Background: In recent years, the experimental aspects of the laboratory activities have been growing in complexity in terms of amount and diversity of data produced, equipment used, of computer-based workflows needed to process and analyze the raw data generated. To enhance the level of quality control over the laboratory activities and efficiently handle the large amounts of data produced, a Laboratory Management Information System (LIMS) is highly-recommended. A LIMS is a complex software platform that helps researchers to have a complete knowledge of the laboratory activities at each step encouraging them to adopt good laboratory practices. Results: We have designed and implemented Quality and TRacEability Data System - QTREDS, a software platform born to address the specific needs of the CRS4 Sequencing and Genotyping Platform (CSGP). The system written in the Ruby programming language and developed using the Rails framework is based on four main functional blocks: a sample handler, a workflow generator, an inventory management system and a user management system. The wizard-based sample handler allows to manage one or multiple samples at a time, tracking the path of each sample and providing a full chain of custody. The workflow generator encapsulates a user-friendly JavaScript-based visual tool that allows users to design customized workflows even for those without a technical background. With the inventory management system, reagents, laboratory glassware and consumables can be easily added through their barcodes and minimum stock levels can be controlled to avoid shortages of essential laboratory supplies. QTREDS provides a system for privileges management and authorizations to create different user roles, each with a well-defined access profile. Conclusions: Tracking and monitoring all the phases of the laboratory activities can help to identify and troubleshoot problems more quickly, reducing the risk of process failures and their related costs. QTREDS was designed to address the specific needs of the CSGP laboratory, where it has been successfully used for over a year, but thanks to its flexibility it can be easily adapted to other ``omics{''} laboratories. The software is freely available for academic users from http://qtreds.crs4.it."",
    Publisher = ""BMC"",
    Address = ""CAMPUS, 4 CRINAN ST, LONDON N1 9XW, ENGLAND"",
    Type = ""Article"",
    Language = ""English"",
    Affiliation = ""Palla, P (Corresponding Author), Ctr Adv Studies Res \\& Dev Sardinia CRS4, I-09010 Loc Piscina Manna, Pula, Italy. Palla, Piergiorgio; Frau, Gianfranco; Vargiu, Laura; Rodriguez-Tome, Patricia, Ctr Adv Studies Res \\& Dev Sardinia CRS4, I-09010 Loc Piscina Manna, Pula, Italy. Palla, Piergiorgio, Univ Cagliari, Dept Elect \\& Elect Engn DIEE, I-09123 Cagliari, Italy. Vargiu, Laura, Univ Cagliari, Dept Life \\& Environm Sci, I-09042 Cagliari, Italy."",
    DOI = ""10.1186/1471-2105-15-S1-S13"",
    Article-Number = ""S13"",
    ISSN = ""1471-2105"",
    Keywords-Plus = ""MANAGEMENT-SYSTEM; SOFTWARE"",
    Research-Areas = ""Biochemistry \\& Molecular Biology; Biotechnology \\& Applied Microbiology; Mathematical \\& Computational Biology"",
    Web-of-Science-Categories = ""Biochemical Research Methods; Biotechnology \\& Applied Microbiology; Mathematical \\& Computational Biology"",
    Author-Email = ""piergiorgio.palla@crs4.it"",
    Affiliations = ""University of Cagliari; University of Cagliari"",
    Funding-Acknowledgement = ""Sardegna Ricerche"",
    Funding-Text = ""The publication costs for this article were funded by Sardegna Ricerche."",
    Number-of-Cited-References = ""29"",
    Times-Cited = ""7"",
    Usage-Count-Last-180-days = ""0"",
    Usage-Count-Since-2013 = ""17"",
    Journal-ISO = ""BMC Bioinformatics"",
    Doc-Delivery-Number = ""303PO"",
    Web-of-Science-Index = ""Science Citation Index Expanded (SCI-EXPANDED)"",
    Unique-ID = ""WOS:000330686700013"",
    OA = ""gold, Green Published"",
    DA = ""2024-10-22""
}
"""	Excluded	Excluded	new_screen			2	Web of Science		QTREDS: a Ruby on Rails-based platform for omics laboratories	https://www.webofscience.com/wos/woscc/full-record/WOS:000330686700013	BMC	
493	Behave	Cognitive biases in software quality and testing	Humans are an integral entity for performing software quality and testing activities. The quality is compromised when human-thought process deviates from the laws of rational thinking, referred to as cognitive biases. The work carried out so far from this perspective in software quality and testing is very scarce and is limited to one cognitive bias only. This work aims to explore the phenomenon of cognitive biases in software quality and testing in more detail. Furthermore, investigating the factors that exist in an organisational context and that trigger the biases, which in turn deteriorate the quality of software, is also the focus of this work. Acquiring the knowledge of cognitive biases and the triggering factors will help in circumventing them, thus improving software quality.	software testing;  software quality;  software psychology;  human factors;  cognitive bias; software testing, software quality, software psychology, human factors, cognitive bias	Salman, Iflaah		https://doi.org/10.1145/2889160.2889265		823-826	"""@inproceedings{10.1145/2889160.2889265,
    author = ""Salman, Iflaah"",
    title = ""Cognitive biases in software quality and testing"",
    year = ""2016"",
    isbn = ""9781450342056"",
    publisher = ""Association for Computing Machinery"",
    address = ""New York, NY, USA"",
    url = ""https://doi.org/10.1145/2889160.2889265"",
    doi = ""10.1145/2889160.2889265"",
    abstract = ""Humans are an integral entity for performing software quality and testing activities. The quality is compromised when human-thought process deviates from the laws of rational thinking, referred to as cognitive biases. The work carried out so far from this perspective in software quality and testing is very scarce and is limited to one cognitive bias only. This work aims to explore the phenomenon of cognitive biases in software quality and testing in more detail. Furthermore, investigating the factors that exist in an organisational context and that trigger the biases, which in turn deteriorate the quality of software, is also the focus of this work. Acquiring the knowledge of cognitive biases and the triggering factors will help in circumventing them, thus improving software quality."",
    booktitle = ""Proceedings of the 38th International Conference on Software Engineering Companion"",
    pages = ""823-826"",
    numpages = ""4"",
    keywords = ""software testing, software quality, software psychology, human factors, cognitive bias"",
    location = ""Austin, Texas"",
    series = ""ICSE '16""
}
"""	Excluded	Excluded	new_screen			2	ACM		Quality and Testing	https://dl.acm.org/doi/10.1145/2889160.2889265	Association for Computing Machinery	nan; Venue; References
494	Behave	2014 Software Evolution Week - IEEE Conference on Software Maintenance, Reengineering, and Reverse Engineering, CSMR-WCRE 2014 - Proceedings	The proceedings contain 71 papers. The topics discussed include: NL-based query refinement and contextualized code search results: a user study; automated construction of a software-specific word similarity database; a case study of paired interleaving for evaluating code search techniques; broken promises: an empirical study into evolution problems in Java programs caused by library upgrades; detecting infeasible branches based on code patterns; an empirical study on the fault-proneness of clone migration in clone genealogies; automatic ranking of clones for refactoring through mining association rules; towards more accurate multi-label software behavior learning; identifying risky areas of software code in agile/lean software development: an industrial experience report; an empirical study of bug report field reassignment; and towards a context-aware IDE-based meta search engine for recommendation about programming errors and exceptions.		Ervin Varga	2014 Software Evolution Week - IEEE Conference on Software Maintenance, Reengineering, and Reverse Engineering, CSMR-WCRE 2014 - Proceedings	https://www.scopus.com/record/display.uri?eid=2-s2.0-84898437914&origin=resultslist&sort=r-f&src=s&sid=4cbe199031697f5e0993bd441fcf9350&sot=b&sdt=b&s=TITLE%28reengineering+and+reverse+engineering%29&sl=44&sessionSearchId=4cbe199031697f5e0993bd441fcf9350&relpos=0			"""@CONFERENCE{2014,
    title = ""2014 Software Evolution Week - IEEE Conference on Software Maintenance, Reengineering, and Reverse Engineering, CSMR-WCRE 2014 - Proceedings"",
    year = ""2014"",
    journal = ""2014 Software Evolution Week - IEEE Conference on Software Maintenance, Reengineering, and Reverse Engineering, CSMR-WCRE 2014 - Proceedings"",
    url = ""https://www.scopus.com/inward/record.uri?eid=2-s2.0-84898437914\&partnerID=40\&md5=a3ced623e5fa277d6101aea375266fdc"",
    abstract = ""The proceedings contain 71 papers. The topics discussed include: NL-based query refinement and contextualized code search results: a user study; automated construction of a software-specific word similarity database; a case study of paired interleaving for evaluating code search techniques; broken promises: an empirical study into evolution problems in Java programs caused by library upgrades; detecting infeasible branches based on code patterns; an empirical study on the fault-proneness of clone migration in clone genealogies; automatic ranking of clones for refactoring through mining association rules; towards more accurate multi-label software behavior learning; identifying risky areas of software code in agile/lean software development: an industrial experience report; an empirical study of bug report field reassignment; and towards a context-aware IDE-based meta search engine for recommendation about programming errors and exceptions."",
    publisher = ""IEEE Computer Society"",
    language = ""English"",
    abbrev_source_title = ""Softw. Evol. Week - IEEE Conf. Softw. Maint., Reengineering, Reverse Eng., CSMR-WCRE - Proc."",
    type = ""Conference review"",
    publication_stage = ""Final"",
    source = ""Scopus"",
    note = ""Cited by: 0; Conference name: 2014 1st Software Evolution Week - IEEE Conference on Software Maintenance, Reengineering, and Reverse Engineering, CSMR-WCRE 2014; Conference date: 3 February 2014 through 6 February 2014; Conference code: 103278""
}
"""	Excluded	Excluded	new_screen			2	Scopus Signed In		Reengineering and Reverse Engineering	https://www.scopus.com/record/display.uri?eid=2-s2.0-84898437914&origin=resultslist&sort=r-f&src=s&sid=4cbe199031697f5e0993bd441fcf9350&sot=b&sdt=b&s=TITLE%28reengineering+and+reverse+engineering%29&sl=44&sessionSearchId=4cbe199031697f5e0993bd441fcf9350&relpos=0	IEEE Computer Society	nan; Authors; Keywords; References; Pages
495	Behave	Exploiting the progress of OO refactoring tools with Android code smells: RAndroid, a plugin for Android studio	"Mobile applications market is facing a stronger demand continuously, due to the growing popularity of mobile phones. A demand that forces developers to rush the implementation process and shorten the conception phase, leading to poor conception and implementation choices known as code smells. These smells have a negative effect on both device and application's performance, and must therefore be corrected to ensure the quality of mobile applications and the smoothness of their users' experience. This task requires the identification of the infected entities and their refactoring. Most existing refactoring approaches and techniques are focused on object-oriented applications' code smells while only a few of them are destined to Android specific code smells.In this paper, we present a tool, named RAndroid, that handles automatic refactoring for four different Android specific code smells, and gives recommendations on how to manually refactor a fifth one. RAndroid is built as an Android Studio plugin adapting the logic of the well-known oriented-object refactoring tool ""JDeodorant"" [13] as it's first layer. We evaluated RAndroid on 52 real-world open-source Android applications, developed by both experts and beginners, covering 194 code smell instances."	refactoring;  mobile application;  code smells;  Java;  Android; refactoring, mobile application, code smells, Java, Android	Gattal, Abderraouf; Hammache, Abir; Bousbia, Nabila; Henniche, Adel Nassim		https://doi.org/10.1145/3412841.3442129		1580-1583	"""@inproceedings{10.1145/3412841.3442129,
    author = ""Gattal, Abderraouf and Hammache, Abir and Bousbia, Nabila and Henniche, Adel Nassim"",
    title = ""Exploiting the progress of OO refactoring tools with Android code smells: RAndroid, a plugin for Android studio"",
    year = ""2021"",
    isbn = ""9781450381048"",
    publisher = ""Association for Computing Machinery"",
    address = ""New York, NY, USA"",
    url = ""https://doi.org/10.1145/3412841.3442129"",
    doi = ""10.1145/3412841.3442129"",
    abstract = {Mobile applications market is facing a stronger demand continuously, due to the growing popularity of mobile phones. A demand that forces developers to rush the implementation process and shorten the conception phase, leading to poor conception and implementation choices known as code smells. These smells have a negative effect on both device and application's performance, and must therefore be corrected to ensure the quality of mobile applications and the smoothness of their users' experience. This task requires the identification of the infected entities and their refactoring. Most existing refactoring approaches and techniques are focused on object-oriented applications' code smells while only a few of them are destined to Android specific code smells.In this paper, we present a tool, named RAndroid, that handles automatic refactoring for four different Android specific code smells, and gives recommendations on how to manually refactor a fifth one. RAndroid is built as an Android Studio plugin adapting the logic of the well-known oriented-object refactoring tool ""JDeodorant"" [13] as it's first layer. We evaluated RAndroid on 52 real-world open-source Android applications, developed by both experts and beginners, covering 194 code smell instances.},
    booktitle = ""Proceedings of the 36th Annual ACM Symposium on Applied Computing"",
    pages = ""1580-1583"",
    numpages = ""4"",
    keywords = ""refactoring, mobile application, code smells, Java, Android"",
    location = ""Virtual Event, Republic of Korea"",
    series = ""SAC '21""
}
"""	Excluded	Excluded	new_screen			2	ACM		Refactoring Tools	https://dl.acm.org/doi/10.1145/3412841.3442129	Association for Computing Machinery	nan; Venue; References
496	Behave	Requirement Engineering as a Software Development Process	The paper introduces a novel requirements management tool, incorporating software development practices into requirements engineering. It is motivated by an expectation that using well-established techniques should provide benefits such as increase of requirements quality, better alignment of tooling to organization needs and support for Agile project management techniques. Our aim, therefore, is to provide an open architecture for various requirements engineering activities, as till now, many of existing requirements management tools do not follow the latest developments in software development practices. In this paper, we propose a mapping of various aspects of software development based on Continuous Integration to requirements engineering and describe a prototype requirements management tool built to validate the proposed concept.		Baszuro, Pawel; Swacha, Jakub	Data-Centric Business and Applications	https://doi.org/10.1007/978-3-030-34706-2_2		21--39	"""@Inbook{Baszuro2020,
    author = ""Baszuro, Pawel and Swacha, Jakub"",
    editor = ""Poniszewska-Mara{\'{n}}da, Aneta and Kryvinska, Natalia and Jarz{\k{a}}bek, Stanis{\l}aw and Madeyski, Lech"",
    title = ""Requirement Engineering as a Software Development Process"",
    bookTitle = ""Data-Centric Business and Applications: Towards Software Development (Volume 4)"",
    year = ""2020"",
    publisher = ""Springer International Publishing"",
    address = ""Cham"",
    pages = ""21--39"",
    abstract = ""The paper introduces a novel requirements management tool, incorporating software development practices into requirements engineering. It is motivated by an expectation that using well-established techniques should provide benefits such as increase of requirements quality, better alignment of tooling to organization needs and support for Agile project management techniques. Our aim, therefore, is to provide an open architecture for various requirements engineering activities, as till now, many of existing requirements management tools do not follow the latest developments in software development practices. In this paper, we propose a mapping of various aspects of software development based on Continuous Integration to requirements engineering and describe a prototype requirements management tool built to validate the proposed concept."",
    isbn = ""978-3-030-34706-2"",
    doi = ""10.1007/978-3-030-34706-2\_2"",
    url = ""https://doi.org/10.1007/978-3-030-34706-2\_2""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Requirement Engineering as a Software Development Process	https://doi.org/10.1007/978-3-030-34706-2_2	Springer International Publishing	nan; Keywords; References; Link
497	Behave	Requirements Engineering and Semantic Web*	The author discusses modern methods of requirements engineering oriented on human communication and proposes the way for their transformation into semantic annotation of these requirements, suitable for manipulation in the Semantic Web environment.	Artificial Intelligence; requirementsengineering; semantic annotation; Semantic Web; specification by examples; teamcommunications	L. P. Babenko	Cybernetics and Systems Analysis	https://doi.org/10.1007/s10559-016-9808-3	"citation_title=Specification by Example; citation_publication_date=2011; citation_id=CR1; citation_author=G Adzic; citation_publisher=How Successful Teams Deliver the Right Software, Manning Publications; citation_title=The RSpec Book: Behaviour-Driven Development with Rspec, Cucumber, and Friends; citation_publication_date=2010; citation_id=CR2; citation_author=D Chelimsky; citation_author=D Astels; citation_author=D Zach; citation_author=A Hellesoy; citation_author=B Helmkamp; citation_author=D North; citation_publisher=The Pragmatic Bookshelf; M. Bolton, Acceptance Tests: Let's Change the Title, Too, 
                    http://www.developsense.com/blog/2010/08/acceptance-tests-lets-changethe-title-too/
                    
                  .; citation_title=Bridging the Communication Gap: Specification by Example and Agile Acceptance Testing; citation_publication_date=2009; citation_id=CR4; citation_author=G Adzic; citation_publisher=Neuri Limited; citation_journal_title=Global J. Research and Development; citation_title=The use of ontologies in requirements engineering; citation_author=V Castaneda, L Ballejos, ML Caliusco, MR Galli; citation_volume=10; citation_issue=6; citation_publication_date=2010; citation_pages=2-8; citation_id=CR5; K. Ellis,; K. I. Siegemund, E. J. Thomas, Yuting Zhao, J. Pan, and U. Assmann,; D. Fritsch, J. Lehmann, K. Lauenroth, S. Lohmann, Th. Riechert, and S. Dietzold,; L. P. Babenko,; Web Service Description Language. W3C Recommendation, 
                    http://www.w3.org/TR/2007/REC-wsdl20-20070626
                    
                  . 11. Semantic Annotations for WSDL and XML Schema. W3C recommendation, 
                    http://www.w3.org/TR/sawsdl/
                    
                  .; Semantic Annotations for WSDL and XML Schema. W3C recommendation, http://www.w3.org/TR/sawsdl/.; Web Service Modeling Ontology, WSMO, 
                    http://www.w3.org/Submission/WSMO/
                    
                  .; citation_journal_title=Transactions on Services Computing; citation_title=Identification and analysis of business and software services. A consolidated approach; citation_author=T Kohlborn, A Korthaus, T Chan, M Rosemann; citation_volume=2; citation_issue=1; citation_publication_date=2009; citation_pages=81-96; citation_id=CR13; citation_journal_title=Cybern. Syst. Analysis; citation_title=Method of normalization of knowledge on the software development infrastructure; citation_author=LP Babenko, SL Polyanichko; citation_volume=42; citation_issue=1; citation_publication_date=2006; citation_pages=147-152; citation_doi=10.1007/s10559-006-0046-y; citation_id=CR14"			Excluded	Excluded	new_screen			2	Springer Link		Requirements Engineering and Semantic Web*	https://doi.org/10.1007/s10559-016-9808-3	Springer Link	nan; Pages; Year; Bibtex; Link
498	Behave	Requirements Engineering for Cyber-Physical Systems	According to a widely shared view, manufacturing is currently un- dergoing its fourth industrial revolution, termed ``Industrie 4.0'' in the high-tech strategy of the German government. Smart Factories with vertically and hori- zontally integrated production systems are enabled through the realization of machines, storage systems and utilities as Cyber-Physical Systems (CPS), which are able to share information, act, and control each other autonomously. The development of CPS requires the collaboration of different disciplines, like mechanical engineering, electrical engineering and computer science. This cre- ates new challenges for Requirements Engineering (RE), which needs to estab- lish a common perception of the targeted CPS for the involved stakeholders. This paper will elaborate the specific challenges in RE for CPS based on a lit- erature review. Natural Language Processing (NLP) is used as an approach to automatically translate shared informal requirements specifications to formal domain specific models for the involved disciplines, to develop a comprehen- sive RE methodology for CPS.	Requirements Engineering; Industrie 4.0; Cyber-Physical Systems; Natural Language Processing; MSEE Integrated Project	Wiesner, Stefan; Gorldt, Christian; Soeken, Mathias; Thoben, Klaus-Dieter; Drechsler, Rolf	IFIP International Conference on Advances in Production Management Systems	https://doi.org/10.1007/978-3-662-44739-0_35		281--288	"""@InProceedings{10.1007/978-3-662-44739-0_35,
    author = ""Wiesner, Stefan and Gorldt, Christian and Soeken, Mathias and Thoben, Klaus-Dieter and Drechsler, Rolf"",
    editor = ""Grabot, Bernard and Vallespir, Bruno and Gomes, Samuel and Bouras, Abdelaziz and Kiritsis, Dimitris"",
    title = ""Requirements Engineering for Cyber-Physical Systems"",
    booktitle = ""Advances in Production Management Systems. Innovative and Knowledge-Based Production Management in a Global-Local World"",
    year = ""2014"",
    publisher = ""Springer Berlin Heidelberg"",
    address = ""Berlin, Heidelberg"",
    pages = ""281--288"",
    abstract = ""According to a widely shared view, manufacturing is currently un- dergoing its fourth industrial revolution, termed ``Industrie 4.0'' in the high-tech strategy of the German government. Smart Factories with vertically and hori- zontally integrated production systems are enabled through the realization of machines, storage systems and utilities as Cyber-Physical Systems (CPS), which are able to share information, act, and control each other autonomously. The development of CPS requires the collaboration of different disciplines, like mechanical engineering, electrical engineering and computer science. This cre- ates new challenges for Requirements Engineering (RE), which needs to estab- lish a common perception of the targeted CPS for the involved stakeholders. This paper will elaborate the specific challenges in RE for CPS based on a lit- erature review. Natural Language Processing (NLP) is used as an approach to automatically translate shared informal requirements specifications to formal domain specific models for the involved disciplines, to develop a comprehen- sive RE methodology for CPS."",
    isbn = ""978-3-662-44739-0""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Requirements Engineering for Cyber-Physical Systems	https://doi.org/10.1007/978-3-662-44739-0_35	Springer Berlin Heidelberg	nan; References; Link
499	Behave	Requirements Thread	Chapter 8gave an overview of the iteration process, tasks, and artifacts for the team as a whole. This chapter contains a detailed look at the work of a Business Analyst (BA). It shows how the BA uses inputs from other team members and produces outputs for them. This chapter compares use cases and user stories, and describes a guideline for how agile BAs may do their job. It should help other team members understand the BA on their team, and possibly allow novice BAs working in an agile team to perform the business analysis and requirements function better. If the team does not have a BA, then this chapter may help others complete the requirements-centric tasks normally performed by the BA.		Cline, Alan	Agile Development in the Real World	https://doi.org/10.1007/978-1-4842-1679-8_9		165--195	"""@Inbook{Cline2015,
    author = ""Cline, Alan"",
    title = ""Requirements Thread"",
    bookTitle = ""Agile Development in the Real World"",
    year = ""2015"",
    publisher = ""Apress"",
    address = ""Berkeley, CA"",
    pages = ""165--195"",
    abstract = ""Chapter 8gave an overview of the iteration process, tasks, and artifacts for the team as a whole. This chapter contains a detailed look at the work of a Business Analyst (BA). It shows how the BA uses inputs from other team members and produces outputs for them. This chapter compares use cases and user stories, and describes a guideline for how agile BAs may do their job. It should help other team members understand the BA on their team, and possibly allow novice BAs working in an agile team to perform the business analysis and requirements function better. If the team does not have a BA, then this chapter may help others complete the requirements-centric tasks normally performed by the BA."",
    isbn = ""978-1-4842-1679-8"",
    doi = ""10.1007/978-1-4842-1679-8\_9"",
    url = ""https://doi.org/10.1007/978-1-4842-1679-8\_9""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Requirements Thread	https://doi.org/10.1007/978-1-4842-1679-8_9	Apress	nan; Keywords; References; Link
500	Behave	Resolving Interoperability in Concurrent Engineering	To face an increasingly competitive environment within a globalization context, and to focus on core high-added value business activities, enterprises have to establish partnerships with other companies specialized in complementary domains. Such an approach, primarily based on optimization of the value chain, is called virtualization of the Enterprise. Enterprises relying on virtualization, sub-contracting and outsourcing have to coordinate activities of all the partners, to integrate the results of their activities, to manage federated information coming from the different implied information systems and to re-package them as a product for the clients. The adopted organization, which is considering as well as the internal and external resources, is called ``Extended Enterprise''. Nevertheless, in such complex emerging networked organizations, it is more and more challenging to be able to interchange, to share and to manage internal and external resources such as digital information, digital services and computer-enacted processes. In addition, digital artifacts produced by enterprise activities are more and more heterogeneous and complex. After characterizing expected interoperability for collaborative platform systems and highlighting interoperability issues and brakes not yet addressed, this chapter describes an innovative approach to build interoperability based on a Federated Framework of legacy eBusiness standards of a given ecosystem. It implies facing important issues related to semantic preservation along the lifecycle of the artifacts and infrastructures required to define and exploit an application. We present two use case studies that apply interoperability strategies.		Figay, Nicolas; da Silva, Catarina Ferreira; Ghodous, Parisa; Jardim-Goncalves, Ricardo	Concurrent Engineering in the 21st Century	https://doi.org/10.1007/978-3-319-13776-6_6		133--163	"""@Inbook{Figay2015,
    author = ""Figay, Nicolas and da Silva, Catarina Ferreira and Ghodous, Parisa and Jardim-Goncalves, Ricardo"",
    editor = ""Stjepandi{\'{c}}, Josip and Wognum, Nel and J.C. Verhagen, Wim"",
    title = ""Resolving Interoperability in Concurrent Engineering"",
    bookTitle = ""Concurrent Engineering in the 21st Century: Foundations, Developments and Challenges"",
    year = ""2015"",
    publisher = ""Springer International Publishing"",
    address = ""Cham"",
    pages = ""133--163"",
    abstract = ""To face an increasingly competitive environment within a globalization context, and to focus on core high-added value business activities, enterprises have to establish partnerships with other companies specialized in complementary domains. Such an approach, primarily based on optimization of the value chain, is called virtualization of the Enterprise. Enterprises relying on virtualization, sub-contracting and outsourcing have to coordinate activities of all the partners, to integrate the results of their activities, to manage federated information coming from the different implied information systems and to re-package them as a product for the clients. The adopted organization, which is considering as well as the internal and external resources, is called ``Extended Enterprise''. Nevertheless, in such complex emerging networked organizations, it is more and more challenging to be able to interchange, to share and to manage internal and external resources such as digital information, digital services and computer-enacted processes. In addition, digital artifacts produced by enterprise activities are more and more heterogeneous and complex. After characterizing expected interoperability for collaborative platform systems and highlighting interoperability issues and brakes not yet addressed, this chapter describes an innovative approach to build interoperability based on a Federated Framework of legacy eBusiness standards of a given ecosystem. It implies facing important issues related to semantic preservation along the lifecycle of the artifacts and infrastructures required to define and exploit an application. We present two use case studies that apply interoperability strategies."",
    isbn = ""978-3-319-13776-6"",
    doi = ""10.1007/978-3-319-13776-6\_6"",
    url = ""https://doi.org/10.1007/978-3-319-13776-6\_6""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Resolving Interoperability in Concurrent Engineering	https://doi.org/10.1007/978-3-319-13776-6_6	Springer International Publishing	nan; Keywords; References; Link
501	Behave	REST API	In this tutorial, we'll build a RESTful API. In addition to Express.js, we'll use MongoDB via the Mongoskin library. We'll also use Mocha and SuperAgent to write functional tests.		Mardan, Azat	Pro Express.js	https://doi.org/10.1007/978-1-4842-0037-7_21		249--261	"""@Inbook{Mardan2014,
    author = ""Mardan, Azat"",
    title = ""REST API"",
    bookTitle = ""Pro Express.js"",
    year = ""2014"",
    publisher = ""Apress"",
    address = ""Berkeley, CA"",
    pages = ""249--261"",
    abstract = ""In this tutorial, we'll build a RESTful API. In addition to Express.js, we'll use MongoDB via the Mongoskin library. We'll also use Mocha and SuperAgent to write functional tests."",
    isbn = ""978-1-4842-0037-7"",
    doi = ""10.1007/978-1-4842-0037-7\_21"",
    url = ""https://doi.org/10.1007/978-1-4842-0037-7\_21""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		REST API	https://doi.org/10.1007/978-1-4842-0037-7_21	Apress	nan; Keywords; References; Link
502	Behave	Rigorous development process of a safety-critical system: from ASM models to Java code	The paper presents an approach for rigorous development of safety-critical systems based on the Abstract State Machine formal method. The development process starts from a high levelformalview of the system and, throughrefinement, derives more detailed models till the desired level of specification. Along the process, different validation and verification activities are available, as simulation, model review, and model checking. Moreover, each refinement step can be proved correct using an SMT-based approach. As last step of the refinement process, a Java implementation can be developed and linked to the formal specification. The correctness of the implementation w.r.t. its formal specification can be proved by means of model-based testing and runtime verification. The process is exemplified by using a Landing Gear System as case study.	Abstract State Machines; Landing Gear System; Refinement; Validation and verification; Model-based testing; Runtime verification	Paolo Arcaini; Angelo Gargantini; Elvinia Riccobene	International Journal on Software Tools for Technology Transfer	https://doi.org/10.1007/s10009-015-0394-x	citation_title=Modeling in Event-B: System and Software Engineering; citation_publication_date=2010; citation_id=CR1; citation_author=J-R Abrial; citation_publisher=Cambridge University Press; Arcaini, P., Gargantini, A., Riccobene, E.: AsmetaSMV: a way to link high-level ASM models to low-level NuSMV specifications. In: Proceedings of the 2nd International Conference on Abstract State Machines, Alloy, B and Z (ABZ 2010), volume 5977 of Lecture Notes in Computer Science, pages 61-74. Springer (2010); Arcaini, P., Gargantini, A., Riccobene, E.: Automatic Review of Abstract State Machines by Meta-Property Verification. In: Munoz, C. (ed.) Proceedings of the Second NASA Formal Methods Symposium (NFM 2010), NASA/CP-2010-216215, pp. 4-13. NASA (2010); Arcaini, P., Gargantini, A., Riccobene, E.: CoMA: Conformance monitoring of Java programs by Abstract State Machines. In: Khurshid, S., Sen, K. (eds.) Runtime Verification volume 7186 of Lecture Notes in Computer Science, pp. 223-238. Springer (2012); Arcaini, P., Gargantini, A., Riccobene, E.: Combining model-based testing and runtime monitoring for program testing in the presence of nondeterminism. In: 2013 IEEE Sixth International Conference on Software Testing, Verification and Validation, Workshops Proceedings, Luxembourg, March 18-22, 2013, pp. 178-187. IEEE (2013); Arcaini, P., Gargantini, A., Riccobene, E.: Modeling and Analyzing Using ASMs: The Landing Gear System Case Study. In: Boniol, F., Wiels, V., Ait Ameur, Y., Schewe, K.D. (eds.) ABZ 2014: The Landing Gear Case Study volume 433 of Communications in Computer and Information Science, pp. 36-51. Springer International Publishing (2014); Arcaini, P., Gargantini, A., Riccobene, E.: Offline Model-Based Testing and Runtime Monitoring of the Sensor Voting Module. In: Boniol, F., Wiels, V., Ait Ameur, Y., Schewe, K.D. (eds.) ABZ 2014: The Landing Gear Case Study volume 433 of Communications in Computer and Information Science, pp. 95-109. Springer International Publishing (2014); Arcaini, P., Gargantini, A., Riccobene, E.: Using SMT for dealing with nondeterminism in ASM-based runtime verification. ECEASST 70 (2014); citation_journal_title=Softw.: Pract. Exp.; citation_title=A model-driven process for engineering a toolset for a formal method; citation_author=P Arcaini, A Gargantini, E Riccobene, P Scandurra; citation_volume=41; citation_publication_date=2011; citation_pages=155-166; citation_id=CR9; Banach, R.: The Landing Gear Case Study in Hybrid Event-B. In: Boniol, F., Wiels, V., Ait Ameur, Y., Schewe, K.D. (eds.) ABZ 2014: The Landing Gear Case Study volume 433 of Communications in Computer and Information Science, pp. 126-141. Springer International Publishing (2014); citation_journal_title=J. Syst. Softw.; citation_title=Runtime verification of NET contracts; citation_author=M Barnett, W Schulte; citation_volume=65; citation_issue=3; citation_publication_date=2003; citation_pages=199-208; citation_doi=10.1016/S0164-1212(02)00041-9; citation_id=CR11; Bauer, A., Leucker, M., Schallhart, C.: Runtime verification for LTL and TLTL. ACM Trans. Softw. Method. (TOSEM) 20 (2011); Berthomieu, B., Dal Zilio, S., Fronc, L.: Model-Checking Real-Time Properties of an Aircraft Landing Gear System Using Fiacre. In: Boniol, F., Wiels, V., Ait Ameur, Y., Schewe, K.D. (eds.) ABZ 2014: The Landing Gear Case Study, volume 433 of Communications in Computer and Information Science, pp. 110-125. Springer International Publishing (2014); Boniol, F., Wiels, V.: The Landing Gear System Case Study. In: Boniol, F., Wiels, V., Ait Ameur, Y., Schewe, K.D. (eds.) ABZ 2014: The Landing Gear Case Study, volume 433 of Communications in Computer and Information Science, pp. 1-18. Springer International Publishing (2014); Boniol, F., Wiels, V., Ameur, Y.A., Schewe, K.-D.: ABZ 2014: The Landing Gear Case Study Case Study Track, Held at the 4th International Conference on Abstract State Machines, Alloy, B, TLA, VDM, and Z Toulouse, France, June 2-6, 2014, Proceedings. Springer International Publishing (2014); citation_journal_title=Form. Aspects Comput.; citation_title=The ASM refinement method; citation_author=E Borger; citation_volume=15; citation_publication_date=2003; citation_pages=237-257; citation_doi=10.1007/s00165-003-0012-7; citation_id=CR16; Borger, E.: The ASM method for system design and analysis. A tutorial introduction. In: Gramlich, B. (ed.) Proceedings of Frontiers of Combining Systems, 5th International Workshop, FroCoS 2005, Vienna, Austria, September 19-21, 2005, volume 3717 of Lecture Notes in Computer Science, pp. 264-283. Springer (2005); citation_title=Abstract State Machines: A Method for High-Level System Design and Analysis; citation_publication_date=2003; citation_id=CR18; citation_author=E Borger; citation_publisher=Springer; Carioni, A., Gargantini, A., Riccobene, E., Scandurra, P.: A Scenario-Based Validation Language for ASMs. In: Proceedings of the 1st International Conference on Abstract State Machines, B and Z (ABZ 2008), volume 5238 of Lecture Notes in Computer Science, pp. 71-84. Springer-Verlag (2008); Chen, F., D'Amorim, M., Rosu, G.: A formal monitoring-based framework for software development and analysis. In: Davies, J., Schulte, W., Barnett, M. (eds.) Formal Methods and Software Engineering, volume of 3308 LNCS, pp. 357-372. Springer, Berlin / Heidelberg (2004); citation_title=Model Checking; citation_publication_date=1999; citation_id=CR21; citation_author=EM Clarke; citation_author=O Grumberg; citation_author=DA Peled; citation_publisher=MIT Press; Dausend, M., Raschke, A.: Introducing Aspect-Oriented Specification for Abstract State Machines. In: Ait Ameur, Y., Schewe, K.-D. (eds.) Abstract State Machines, Alloy, B, TLA, VDM, and Z, volume 8477 of Lecture Notes in Computer Science, pp. 174-187. Springer Berlin Heidelberg (2014); Dausend, M., Stegmaier, M., Raschke, A.: Debugging Abstract State Machine Specifications: An Extension of CoreASM. In: Mazzanti, F., Trentanni, G. (eds.) Proceedings of iFM 2012 & ABZ 2012 - Posters & Tool demos Session, pp. 21-25 (2012); citation_journal_title=IEEE Trans. Softw. Eng.; citation_title=A taxonomy and catalog of runtime software-fault monitoring tools; citation_author=N Delgado, AQ Gates, S Roach; citation_volume=30; citation_issue=12; citation_publication_date=2004; citation_pages=859-872; citation_doi=10.1109/TSE.2004.91; citation_id=CR24; Dhaussy, P., Teodorov, C.: Context-Aware Verification of a Landing Gear System. In: Boniol, F., Wiels, V., Ait Ameur, Y., Schewe, K.-D. (eds.) ABZ 2014: The Landing Gear Case Study, volume 433 of Communications in Computer and Information Science, pp. 52-65. Springer International Publishing (2014); Falcone, Y., Havelund, K., Reger, G.: A Tutorial on Runtime Verification. In: Engineering Dependable Software Systems, volume 34 of NATO Science for Peace and Security Series--D: Information and Communication Security, pp. 141-175. IOS Press (2013); citation_journal_title=Softw., Pract. Exp.; citation_title=The CoreASM modeling framework; citation_author=R Farahbod, U Glasser; citation_volume=41; citation_issue=2; citation_publication_date=2011; citation_pages=167-178; citation_doi=10.1002/spe.1029; citation_id=CR27; citation_journal_title=J. Univ. Comput. Sci.; citation_title=ASM-based testing: coverage criteria and automatic test sequence generation; citation_author=A Gargantini, E Riccobene; citation_volume=7; citation_publication_date=2001; citation_pages=262-265; citation_id=CR28; Gargantini, A., Riccobene, E., Rinzivillo, S.: Using Spin to Generate Tests from ASM Specifications. In: Borger, E., Gargantini, A., Riccobene, E. (eds.) Abstract State Machines 2003, volume of 2589 Lecture Notes in Computer Science, pp. 263-277. Springer, Berlin Heidelberg (2003); citation_journal_title=J. Univ. Comput. Sci.; citation_title=A metamodel-based language and a simulation engine for abstract state machines; citation_author=A Gargantini, E Riccobene, P Scandurra; citation_volume=14; citation_issue=12; citation_publication_date=2008; citation_pages=1949-1983; citation_id=CR30; citation_journal_title=Dagstuhl Rep.; citation_title=Integration of tools for rigorous software construction and analysis (Dagstuhl Seminar 13372); citation_author=U Glasser, S Hallerstede, M Leuschel, E Riccobene; citation_volume=3; citation_issue=9; citation_publication_date=2013; citation_pages=74-105; citation_id=CR31; Hansen, D., Ladenberger, L., Wiegard, H., Bendisposto, J., Leuschel, M.: Validation of the ABZ Landing Gear System Using ProB. In: Boniol, F., Wiels, V., Ait Ameur, Y., Schewe, K.-D. (eds.) ABZ 2014: The Landing Gear Case Study volume 433 of Communications in Computer and Information Science, pp. 66-79.Springer International Publishing (2014); citation_journal_title=Softw. Test. Verif. Reliab.; citation_title=Editorial: special issue on specification-based testing; citation_author=R Hierons, J Derrick; citation_volume=10; citation_issue=4; citation_publication_date=2000; citation_pages=201-202; citation_doi=10.1002/1099-1689(200012)10:4<201::AID-STVR214>3.0.CO;2-Z; citation_id=CR33; Kossak, F.: Landing Gear System: An ASM-Based Solution for the ABZ Case Study. In: Boniol, F., Wiels, V., Ait Ameur, Y., Schewe, K.-D. (eds.) ABZ 2014: The Landing Gear Case Study, volume 433 of Communications in Computer and Information Science, pp. 142-147. Springer International Publishing (2014); citation_title=AspectJ in Action: Practical Aspect-Oriented Programming; citation_publication_date=2003; citation_id=CR35; citation_author=R Laddad; citation_publisher=Manning Publications Co.; citation_journal_title=Innov. Syst. Soft. Eng.; citation_title=Software monitoring through formal specification animation; citation_author=H Liang, J Dong, J Sun, W Wong; citation_volume=5; citation_publication_date=2009; citation_pages=231-241; citation_doi=10.1007/s11334-009-0096-1; citation_id=CR36; Mammar, A., Laleau, R.: Modeling a Landing Gear System in Event-B. In: Boniol, F., Wiels, V., Ait Ameur, Y., Schewe, K.-D. (eds.) ABZ 2014: The Landing Gear Case Study, volume 433 of Communications in Computer and Information Science, pp. 80-94. Springer International Publishing (2014); Mery, D., Singh, N. K.: Modeling an Aircraft Landing System in Event-B. In: Boniol, F., Wiels, V., Ait Ameur, Y., Schewe, K.-D., (eds.) ABZ 2014: The Landing Gear Case Study, volume 433 of Communications in Computer and Information Science, pp. 154-159. Springer International Publishing (2014); citation_journal_title=J. Univ. Comput. Sci.; citation_title=Verification of ASM refinements using generalized forward simulation; citation_author=G Schellhorn; citation_volume=7; citation_issue=11; citation_publication_date=2001; citation_pages=952-979; citation_id=CR39; citation_journal_title=J. Univ. Comput. Sci.; citation_title=Simulation of timed abstract state machines with predicate logic model-checking; citation_author=A Slissenko, P Vasilyev; citation_volume=14; citation_issue=12; citation_publication_date=2008; citation_pages=1984-2006; citation_id=CR40; Stark, R.F., Schmid, J., Borger, E.: Java and the Java Virtual Machine: Definition, Verification, Validation. Springer (2001); Su, W., Abrial, J.-R.: Aircraft Landing Gear System: Approaches with Event-B to the Modeling of an Industrial System. In: Boniol, F., Wiels, V., Ait Ameur, Y., Schewe, K.-D. (eds.) ABZ 2014: The Landing Gear Case Study, volume 433 of Communications in Computer and Information Science, pp. 19-35. Springer International Publishing (2014); citation_title=Practical Model-Based Testing: A Tools Approach; citation_publication_date=2006; citation_id=CR43; citation_author=M Utting; citation_author=B Legeard; citation_publisher=Morgan-Kaufmann; citation_journal_title=ACM Comput. Surv.; citation_title=Formal methods: practice and experience; citation_author=J Woodcock, PG Larsen, J Bicarregui, J Fitzgerald; citation_volume=41; citation_issue=4; citation_publication_date=2009; citation_pages=19:1-19:36; citation_doi=10.1145/1592434.1592436; citation_id=CR44			Excluded	Excluded	new_screen			2	Springer Link		Rigorous development process of a safety-critical system: from ASM models to Java code	https://doi.org/10.1007/s10009-015-0394-x	Springer Link	nan; Pages; Year; Bibtex; Link
503	Behave	Robust Design of a Collaborative Platform for Model-Based System Engineering: Experience from an Industrial Deployment	Model-Based System Engineering is gaining momentum in the industry. In order to be successful, it requires adequate tooling support. In addition to functional requirements related to model edition, verification and transformation, key non-functional requirements need to be carefully addressed such as versioning, usability/team work, reliability, security, ease of integration. In this paper, we first give an overview of how we dealt with such requirements in the context of the development of a real world platform for a global telecom operator, with a focus on early steps of system modelling. We then present a more detailed design of the tooling architecture and a high availability protocol for accessing a mainstream model repository. The proposed protocol is modelled and verified using the Alloy language and model-checker.	Model-Based System Engineering; Tool support; Modelling; Industrial transfer; High availability; Alloy; Model-checking	Ponsard, Christophe; Darimont, Robert; Touzani, Mounir	International Conference on Model and Data Engineering	https://doi.org/10.1007/978-3-030-32065-2_23		333--347	"""@InProceedings{10.1007/978-3-030-32065-2_23,
    author = ""Ponsard, Christophe and Darimont, Robert and Touzani, Mounir"",
    editor = ""Schewe, Klaus-Dieter and Singh, Neeraj Kumar"",
    title = ""Robust Design of a Collaborative Platform for Model-Based System Engineering: Experience from an Industrial Deployment"",
    booktitle = ""Model and Data Engineering"",
    year = ""2019"",
    publisher = ""Springer International Publishing"",
    address = ""Cham"",
    pages = ""333--347"",
    abstract = ""Model-Based System Engineering is gaining momentum in the industry. In order to be successful, it requires adequate tooling support. In addition to functional requirements related to model edition, verification and transformation, key non-functional requirements need to be carefully addressed such as versioning, usability/team work, reliability, security, ease of integration. In this paper, we first give an overview of how we dealt with such requirements in the context of the development of a real world platform for a global telecom operator, with a focus on early steps of system modelling. We then present a more detailed design of the tooling architecture and a high availability protocol for accessing a mainstream model repository. The proposed protocol is modelled and verified using the Alloy language and model-checker."",
    isbn = ""978-3-030-32065-2""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Robust Design of a Collaborative Platform for Model-Based System Engineering: Experience from an Industrial Deployment	https://doi.org/10.1007/978-3-030-32065-2_23	Springer International Publishing	nan; References; Link
504	Behave	ROM: An Approach to Self-consistency Verification of a Runnable Ontology Model	In the quest for the highest possible abstraction of software systems, Runnable Knowledge has been proposed for MDA. But in order to be useful in practice as a system design, it must be amenable to verification. This work precisely describes the necessary steps by which ROM -- a Runnable Ontology Model tool -- concurrently generates a running model and its respective test script from the designed Runnable Knowledge, allowing verification that the model is self-consistent. The novel implementation idea is to use ready-made mock object libraries to efficiently obtain the code for a running model. Detailed examples are provided to illustrate each of the ROM generation steps.	Runnable Knowledge; Ontology; Ontology States; Model Testing; Mock Objects; Self-consistency; Verification	Exman, Iaakov; Yagel, Reuven	International Joint Conference on Knowledge Discovery, Knowledge Engineering, and Knowledge Management	https://doi.org/10.1007/978-3-642-54105-6_18		271--283	"""@InProceedings{10.1007/978-3-642-54105-6_18,
    author = ""Exman, Iaakov and Yagel, Reuven"",
    editor = ""Fred, Ana and Dietz, Jan L. G. and Liu, Kecheng and Filipe, Joaquim"",
    title = ""ROM: An Approach to Self-consistency Verification of a Runnable Ontology Model"",
    booktitle = ""Knowledge Discovery, Knowledge Engineering and Knowledge Management"",
    year = ""2013"",
    publisher = ""Springer Berlin Heidelberg"",
    address = ""Berlin, Heidelberg"",
    pages = ""271--283"",
    abstract = ""In the quest for the highest possible abstraction of software systems, Runnable Knowledge has been proposed for MDA. But in order to be useful in practice as a system design, it must be amenable to verification. This work precisely describes the necessary steps by which ROM -- a Runnable Ontology Model tool -- concurrently generates a running model and its respective test script from the designed Runnable Knowledge, allowing verification that the model is self-consistent. The novel implementation idea is to use ready-made mock object libraries to efficiently obtain the code for a running model. Detailed examples are provided to illustrate each of the ROM generation steps."",
    isbn = ""978-3-642-54105-6""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		ROM: An Approach to Self-consistency Verification of a Runnable Ontology Model	https://doi.org/10.1007/978-3-642-54105-6_18	Springer Berlin Heidelberg	nan; References; Link
505	Behave	SAFECode Whitepaper: Fundamental Practices for Secure Software Development 2nd Edition	A review of the secure software development processes used by SAFECode members reveals that there are corresponding security practices for each activity in the software development lifecycle that can improve software security and are applicable across diverse environments. The examination of these vendor practices reinforces the assertion that software security must be addressed throughout the software development lifecycle to be effective and not treated as a one-time event or single box on a checklist. Moreover, these security methods are currently in practice among SAFECode members, a testament to their ability to be integrated and adapted into real-world development environments.		Stacy Simpson	ISSE 2014 Securing Electronic Business Processes	https://doi.org/10.1007/978-3-658-06708-3_1		1-32		Excluded	Excluded	new_screen			2	Springer Link		SAFECode Whitepaper: Fundamental Practices for Secure Software Development 2nd Edition	https://link.springer.com/chapter/10.1007/978-3-658-06708-3_1	Springer Vieweg, Wiesbaden	nan; Keywords; References; Year; Bibtex
506	Behave	Scala Testing	This chapter examines the various facilities available within Scala to perform a range of tests.	Scale Tests; IntelliJ; Assert Class; Test-driven Development; Refactoring	Hunt, John	A Beginner's Guide to Scala, Object Orientation and Functional Programming	https://doi.org/10.1007/978-3-319-75771-1_37		415--429	"""@Inbook{Hunt2018,
    author = ""Hunt, John"",
    title = ""Scala Testing"",
    bookTitle = ""A Beginner's Guide to Scala, Object Orientation and Functional Programming"",
    year = ""2018"",
    publisher = ""Springer International Publishing"",
    address = ""Cham"",
    pages = ""415--429"",
    abstract = ""This chapter examines the various facilities available within Scala to perform a range of tests."",
    isbn = ""978-3-319-75771-1"",
    doi = ""10.1007/978-3-319-75771-1\_37"",
    url = ""https://doi.org/10.1007/978-3-319-75771-1\_37""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Scala Testing	https://doi.org/10.1007/978-3-319-75771-1_37	Springer International Publishing	nan; References; Link
507	Behave	Scaling Your Team	Thanks for hanging in and reading all this way. We've covered a lot of ground so far. We've discussed the Scala language and developed a whole bunch of idioms for building applications using Scala. We've explored how Scala can be used by different team members in different ways. We've seen how Scala allows you to compose fine-grained pieces of code together into complex systems that work well together.	Team Member; Business People; Java Code; Scala Code; Code Review	David Pollak	Beginning Scala	https://doi.org/10.1007/978-1-4302-1990-3_9		263-290		Excluded	Excluded	new_screen			2	Springer Link		Scaling Your Team	https://link.springer.com/chapter/10.1007/978-1-4302-1990-3_9	Apress	nan; References; Year; Bibtex
508	Behave	Benchmarking Runtime Scripting Performance in Wasmer	In this paper, we explore the use of Wasmer and WebAssembly (WASM) as a sandboxed environment for general-purpose runtime scripting. Our work differs from prior research focusing on browser-based performance or SPEC benchmarks. In particular, we use micro-benchmarks and a macro-benchmark (both written in Rust) to compare execution times between WASM and native mode. We first measure which elements of script execution have the largest performance impact, using simple micro-benchmarks. Then we consider a Web proxy caching simulator, with different cache replacement policies, as a macro-benchmark. Using this simulator, we demonstrate a 5-10x performance penalty for WASM compared to native execution.	benchmarking;  caching;  performance;  scripting;  webassembly; benchmarking, caching, performance, scripting, webassembly	Hockley, Devon; Williamson, Carey		https://doi.org/10.1145/3491204.3527477		97-104	"""@inproceedings{10.1145/3491204.3527477,
    author = ""Hockley, Devon and Williamson, Carey"",
    title = ""Benchmarking Runtime Scripting Performance in Wasmer"",
    year = ""2022"",
    isbn = ""9781450391597"",
    publisher = ""Association for Computing Machinery"",
    address = ""New York, NY, USA"",
    url = ""https://doi.org/10.1145/3491204.3527477"",
    doi = ""10.1145/3491204.3527477"",
    abstract = ""In this paper, we explore the use of Wasmer and WebAssembly (WASM) as a sandboxed environment for general-purpose runtime scripting. Our work differs from prior research focusing on browser-based performance or SPEC benchmarks. In particular, we use micro-benchmarks and a macro-benchmark (both written in Rust) to compare execution times between WASM and native mode. We first measure which elements of script execution have the largest performance impact, using simple micro-benchmarks. Then we consider a Web proxy caching simulator, with different cache replacement policies, as a macro-benchmark. Using this simulator, we demonstrate a 5-10x performance penalty for WASM compared to native execution."",
    booktitle = ""Companion of the 2022 ACM/SPEC International Conference on Performance Engineering"",
    pages = ""97-104"",
    numpages = ""8"",
    keywords = ""benchmarking, caching, performance, scripting, webassembly"",
    location = ""Bejing, China"",
    series = ""ICPE '22""
}
"""	Excluded	Excluded	new_screen			2	Scopus Signed In		Scripting	https://dl.acm.org/doi/10.1145/3491204.3527477	Association for Computing Machinery	nan; Venue; References
509	Behave	Scrum Framework und Praxis	"Das handlungsorientierte Framework Scrum, das bereits sehr breit in der Softwareentwicklung, aber auch in anderen Bereichen der fertigenden Industrie etabliert ist, eignet sich als guter Start, um den praktischen Einsatz agiler Arbeitsweise zu diskutieren. Ich gehe auf die wesentlichen Artefakte des Frameworks ein, um an diesem Beispiel die Frage des Warums f{\""u}r die drei Zielgruppen des Buches (Unternehmer, Kunden, Mitarbeiter) praktisch zu diskutieren. Das Kapitel greift Entwicklungen der Scrum Community auf und zeigt Weiterentwicklungen des Frameworks gegen{\""u}ber seinem Erscheinen im Jahre 2001 auf und geht auf die Gr{\""u}nde und {\""U}berlegungen ein, die zu diesen Ver{\""a}nderungen gef{\""u}hrt haben. Vom Verst{\""a}ndnis des Team-Commitments {\""u}ber die Notwendigkeit der Sch{\""a}tzung bis zur praktischen Anwendbarkeit des Verfahrens in Vertr{\""a}gen werden die Artefakte der Methodik greifbar."		"B{\""o}hm, Janko"	Erfolgsfaktor Agilitat	https://doi.org/10.1007/978-3-658-25085-0_3		35--74	"""@Inbook{Bohm2019,
    author = {B{\""o}hm, Janko},
    title = ""Scrum Framework und Praxis"",
    bookTitle = {Erfolgsfaktor Agilit{\""a}t : Warum Scrum und Kanban zu zufriedenen Mitarbeitern und erfolgreichen Kunden f{\""u}hren},
    year = ""2019"",
    publisher = ""Springer Fachmedien Wiesbaden"",
    address = ""Wiesbaden"",
    pages = ""35--74"",
    abstract = {Das handlungsorientierte Framework Scrum, das bereits sehr breit in der Softwareentwicklung, aber auch in anderen Bereichen der fertigenden Industrie etabliert ist, eignet sich als guter Start, um den praktischen Einsatz agiler Arbeitsweise zu diskutieren. Ich gehe auf die wesentlichen Artefakte des Frameworks ein, um an diesem Beispiel die Frage des Warums f{\""u}r die drei Zielgruppen des Buches (Unternehmer, Kunden, Mitarbeiter) praktisch zu diskutieren. Das Kapitel greift Entwicklungen der Scrum Community auf und zeigt Weiterentwicklungen des Frameworks gegen{\""u}ber seinem Erscheinen im Jahre 2001 auf und geht auf die Gr{\""u}nde und {\""U}berlegungen ein, die zu diesen Ver{\""a}nderungen gef{\""u}hrt haben. Vom Verst{\""a}ndnis des Team-Commitments {\""u}ber die Notwendigkeit der Sch{\""a}tzung bis zur praktischen Anwendbarkeit des Verfahrens in Vertr{\""a}gen werden die Artefakte der Methodik greifbar.},
    isbn = ""978-3-658-25085-0"",
    doi = ""10.1007/978-3-658-25085-0\_3"",
    url = ""https://doi.org/10.1007/978-3-658-25085-0\_3""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Scrum Framework und Praxis	https://doi.org/10.1007/978-3-658-25085-0_3	Springer Fachmedien Wiesbaden	nan; Keywords; References; Link
510	Behave	Semi-automated Design Guidance Enhancer (SADGE): A Framework for Architectural Guidance Development	Architectural decision making is a non-trivial task for architects in the software development projects. Researchers have developed several concepts, methods and tools to assist practitioners in their decision making and decision capturing activities. One of these approaches is a decision identification technique that creates architectural guidance models from decisions made in previous projects and from knowledge about a domain found in the literature. To apply this technique, significant manual knowledge engineering effort has to be invested initially. In this paper, we introduce a framework that automatically extracts architectural knowledge entities from architectural related documents by applying natural language processing. A knowledge engineer then manually post processes and fine-tunes the extracted knowledge entities. We applied evaluation techniques from the information retrieval community to measure the sensitivity and accuracy of the framework. Our results show that the automatic approach has the highest recall and shortest processing time while the semiautomatic approach has the highest precision.	Architectural decision making; design guidance; information extraction; natural language processing; automatic annotation; Architectural decision making;  design guidance;  information extraction;  natural language processing;  automatic annotation	Anvaari, Mohsen; Zimmermann, Olaf	SOFTWARE ARCHITECTURE, ECSA 2014	https://doi.org/10.1007/978-3-319-09970-5_4		41-49	"""@inproceedings{WOS:000345083000004,
    Author = ""Anvaari, Mohsen and Zimmermann, Olaf"",
    Editor = ""Avgeriou, P and Zdun, U"",
    Title = ""Semi-automated Design Guidance Enhancer (SADGE): A Framework for Architectural Guidance Development"",
    Booktitle = ""SOFTWARE ARCHITECTURE, ECSA 2014"",
    Series = ""Lecture Notes in Computer Science"",
    Year = ""2014"",
    Volume = ""8627"",
    Pages = ""41-49"",
    Note = ""8th European Conference on Software Architecture (ECSA), Vienna, AUSTRIA, AUG 25-29, 2014"",
    Abstract = ""Architectural decision making is a non-trivial task for architects in the software development projects. Researchers have developed several concepts, methods and tools to assist practitioners in their decision making and decision capturing activities. One of these approaches is a decision identification technique that creates architectural guidance models from decisions made in previous projects and from knowledge about a domain found in the literature. To apply this technique, significant manual knowledge engineering effort has to be invested initially. In this paper, we introduce a framework that automatically extracts architectural knowledge entities from architectural related documents by applying natural language processing. A knowledge engineer then manually post processes and fine-tunes the extracted knowledge entities. We applied evaluation techniques from the information retrieval community to measure the sensitivity and accuracy of the framework. Our results show that the automatic approach has the highest recall and shortest processing time while the semiautomatic approach has the highest precision."",
    Publisher = ""SPRINGER INTERNATIONAL PUBLISHING AG"",
    Address = ""GEWERBESTRASSE 11, CHAM, CH-6330, SWITZERLAND"",
    Type = ""Proceedings Paper"",
    Language = ""English"",
    Affiliation = ""Anvaari, M (Corresponding Author), Norwegian Univ Sci \\& Technol, N-7034 Trondheim, Norway. Anvaari, Mohsen, Norwegian Univ Sci \\& Technol, N-7034 Trondheim, Norway. Zimmermann, Olaf, Univ Appl Sci Eastern Switzerland, Rapperswil, Switzerland."",
    ISSN = ""0302-9743"",
    EISSN = ""1611-3349"",
    ISBN = ""978-3-319-09970-5; 978-3-319-09969-9"",
    Keywords = ""Architectural decision making; design guidance; information extraction; natural language processing; automatic annotation"",
    Research-Areas = ""Computer Science"",
    Web-of-Science-Categories = ""Computer Science, Software Engineering; Computer Science, Theory \\& Methods"",
    Author-Email = ""mohsena@idi.ntnu.no ozimmerm@hsr.ch"",
    Affiliations = ""Norwegian University of Science \\& Technology (NTNU)"",
    Number-of-Cited-References = ""16"",
    Times-Cited = ""4"",
    Usage-Count-Last-180-days = ""0"",
    Usage-Count-Since-2013 = ""0"",
    Doc-Delivery-Number = ""BB6WR"",
    Web-of-Science-Index = ""Conference Proceedings Citation Index - Science (CPCI-S)"",
    Unique-ID = ""WOS:000345083000004"",
    DA = ""2024-10-22""
}
"""	Excluded	Excluded	new_screen			2	Web of Science		Semi-automated Design Guidance Enhancer (SADGE): A Framework for Architectural Guidance Development	https://www.webofscience.com/wos/woscc/full-record/WOS:000345083000004	SPRINGER INTERNATIONAL PUBLISHING AG	nan; References
511	Behave	Shorter Feedback Loops By Means of Continuous Deployment	Gathering early feedback on features is critical to many projects. Many Agile methodologies define feedback loops. Often, the feedback loop for completed features only closes after the iteration finishes. In this paper we will introduce a way of closing this feedback loop early, by means of continuous deployment. This also lowers the deployment effort for developers, increasing their happiness.		Claassen, Arjan; Boekhorst, Laurens	International Conference on Agile Software Development	https://doi.org/10.1007/978-3-319-18612-2_24		248--253	"""@InProceedings{10.1007/978-3-319-18612-2_24,
    author = ""Claassen, Arjan and Boekhorst, Laurens"",
    editor = ""Lassenius, Casper and Dings{\o}yr, Torgeir and Paasivaara, Maria"",
    title = ""Shorter Feedback Loops By Means of Continuous Deployment"",
    booktitle = ""Agile Processes in Software Engineering and Extreme Programming"",
    year = ""2015"",
    publisher = ""Springer International Publishing"",
    address = ""Cham"",
    pages = ""248--253"",
    abstract = ""Gathering early feedback on features is critical to many projects. Many Agile methodologies define feedback loops. Often, the feedback loop for completed features only closes after the iteration finishes. In this paper we will introduce a way of closing this feedback loop early, by means of continuous deployment. This also lowers the deployment effort for developers, increasing their happiness."",
    isbn = ""978-3-319-18612-2""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Shorter Feedback Loops By Means of Continuous Deployment	https://doi.org/10.1007/978-3-319-18612-2_24	Springer International Publishing	nan; Keywords; References; Link
512	Behave	Software Processes in the Software Product Life Cycle	Apart from the different formats of software process descriptions and life cycle models as discussed in the previous chapter, there are many different types of such models. The basis for these models is formed by several fundamental life cycles, in particular sequential models such as the waterfall model or the V-shaped model, and iterative-incremental models such as the spiral model or Scrum. These fundamental life cycles can be varied in many forms, or extended by adding information leading to detailed process models such as the (Rational) Unified Process. The models can also include different sets of processes, where at one end of the spectrum, software processes support software development by structuring the different development-related activities. At the other end of the spectrum, software processes also provide a more comprehensive perspective, e.g. including operation and IT service management, or interfacing with organisational and administrative tasks. Depending on the purpose of the model, there are some very different types of process reference models available, including for example method-driven life cycle models, agile methodologies, process assessment models. In this chapter, we survey these different types of software processes and their role in the software life cycle. We provide a categorization of software processes, introduce the basic life cycle models, and present some selected reference models.		Kneuper, Ralf	Software Processes and Life Cycle Models	https://doi.org/10.1007/978-3-319-98845-0_3		69--157	"""@Inbook{Kneuper2018,
    author = ""Kneuper, Ralf"",
    title = ""Software Processes in the Software Product Life Cycle"",
    bookTitle = ""Software Processes and Life Cycle Models: An Introduction to Modelling, Using and Managing Agile, Plan-Driven and Hybrid Processes"",
    year = ""2018"",
    publisher = ""Springer International Publishing"",
    address = ""Cham"",
    pages = ""69--157"",
    abstract = ""Apart from the different formats of software process descriptions and life cycle models as discussed in the previous chapter, there are many different types of such models. The basis for these models is formed by several fundamental life cycles, in particular sequential models such as the waterfall model or the V-shaped model, and iterative-incremental models such as the spiral model or Scrum. These fundamental life cycles can be varied in many forms, or extended by adding information leading to detailed process models such as the (Rational) Unified Process. The models can also include different sets of processes, where at one end of the spectrum, software processes support software development by structuring the different development-related activities. At the other end of the spectrum, software processes also provide a more comprehensive perspective, e.g. including operation and IT service management, or interfacing with organisational and administrative tasks. Depending on the purpose of the model, there are some very different types of process reference models available, including for example method-driven life cycle models, agile methodologies, process assessment models. In this chapter, we survey these different types of software processes and their role in the software life cycle. We provide a categorization of software processes, introduce the basic life cycle models, and present some selected reference models."",
    isbn = ""978-3-319-98845-0"",
    doi = ""10.1007/978-3-319-98845-0\_3"",
    url = ""https://doi.org/10.1007/978-3-319-98845-0\_3""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Software Processes in the Software Product Life Cycle	https://doi.org/10.1007/978-3-319-98845-0_3	Springer International Publishing	nan; Keywords; References; Link
513	Behave	Software Quality Assurance During Implementation: Results of a Survey in Software Houses from Germany, Austria and Switzerland	Context: Quality assurance performed during the implementation phase, e.g., by coding guidelines, static analysis or unit testing, is of high importance to ensure quality of software, but there is a lack of common knowledge and best practices on it. Objective: The goal of this paper is to investigate the state-of-practice of quality assurance during the implementation phase in software houses. Method: For this purpose, we conducted a survey in Germany, Austria, and Switzerland where 57 software houses participated. The questionnaire comprised questions regarding techniques, tools, and effort for software quality assurance during implementation as well as the perceived quality after implementation. The results were complemented by interviews and results from other surveys on software quality in general. Results: Results from the survey show that the most common software quality assurance techniques used during implementation are unit testing, code reviews and coding guidelines. Most tool support is used in the areas of bug tracking, version control and project management. Due to relationships between the used tool types, it seems that the introduction of one tool leads to the adoption of several others. Also quality assurance techniques and tools are correlated. Bug fixing takes a significant ratio of the overall project effort assigned to implementation. Furthermore, we found that the more developers a software company has, the more effort is spent on bug fixing. Finally, more than half of all companies rated the quality after implementation as rather good to good. Conclusion: For the most important quality assurance techniques and supporting tool types clear usage patterns can be seen and serve as a basis to provide guidelines on their application in practice.	Software quality assurance; Implementation; Software development; Software quality; Software houses; Survey	Felderer, Michael; Auer, Florian	International Conference on Software Quality	https://doi.org/10.1007/978-3-319-49421-0_7		87--102	"""@InProceedings{10.1007/978-3-319-49421-0_7,
    author = ""Felderer, Michael and Auer, Florian"",
    editor = ""Winkler, Dietmar and Biffl, Stefan and Bergsmann, Johannes"",
    title = ""Software Quality Assurance During Implementation: Results of a Survey in Software Houses from Germany, Austria and Switzerland"",
    booktitle = ""Software Quality. Complexity and Challenges of Software Engineering in Emerging Technologies"",
    year = ""2017"",
    publisher = ""Springer International Publishing"",
    address = ""Cham"",
    pages = ""87--102"",
    abstract = ""Context: Quality assurance performed during the implementation phase, e.g., by coding guidelines, static analysis or unit testing, is of high importance to ensure quality of software, but there is a lack of common knowledge and best practices on it. Objective: The goal of this paper is to investigate the state-of-practice of quality assurance during the implementation phase in software houses. Method: For this purpose, we conducted a survey in Germany, Austria, and Switzerland where 57 software houses participated. The questionnaire comprised questions regarding techniques, tools, and effort for software quality assurance during implementation as well as the perceived quality after implementation. The results were complemented by interviews and results from other surveys on software quality in general. Results: Results from the survey show that the most common software quality assurance techniques used during implementation are unit testing, code reviews and coding guidelines. Most tool support is used in the areas of bug tracking, version control and project management. Due to relationships between the used tool types, it seems that the introduction of one tool leads to the adoption of several others. Also quality assurance techniques and tools are correlated. Bug fixing takes a significant ratio of the overall project effort assigned to implementation. Furthermore, we found that the more developers a software company has, the more effort is spent on bug fixing. Finally, more than half of all companies rated the quality after implementation as rather good to good. Conclusion: For the most important quality assurance techniques and supporting tool types clear usage patterns can be seen and serve as a basis to provide guidelines on their application in practice."",
    isbn = ""978-3-319-49421-0""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Software Quality Assurance During Implementation: Results of a Survey in Software Houses from Germany, Austria and Switzerland	https://doi.org/10.1007/978-3-319-49421-0_7	Springer International Publishing	nan; References; Link
514	Behave	Quantum Software Testing 101	Quantum software testing (QST) is an emerging research area within quantum software engineering (QSE) to ensure quantum software functional and non-functional correctness and dependability. Since quantum computers perform computations significantly differently than classical computing, testing quantum software running on these quantum computers also differs due to quantum computing's unique characteristics, e.g., entanglement and superposition. Due to the rising interest of the software engineering community in QSE, we will provide an introduction to QST. We will introduce quantum computing and its various principles, quantum software development as quantum circuits, and current QST literature, including a key set of techniques with examples. Finally, a set of future research challenges related to QST will be presented.	quantum computing;  quantum programs;  quantum software testing; quantum computing, quantum programs, quantum software testing	Ali, Shaukat		https://doi.org/10.1145/3639478.3643059		426-427	"""@inproceedings{10.1145/3639478.3643059,
    author = ""Ali, Shaukat"",
    title = ""Quantum Software Testing 101"",
    year = ""2024"",
    isbn = ""9798400705021"",
    publisher = ""Association for Computing Machinery"",
    address = ""New York, NY, USA"",
    url = ""https://doi.org/10.1145/3639478.3643059"",
    doi = ""10.1145/3639478.3643059"",
    abstract = ""Quantum software testing (QST) is an emerging research area within quantum software engineering (QSE) to ensure quantum software functional and non-functional correctness and dependability. Since quantum computers perform computations significantly differently than classical computing, testing quantum software running on these quantum computers also differs due to quantum computing's unique characteristics, e.g., entanglement and superposition. Due to the rising interest of the software engineering community in QSE, we will provide an introduction to QST. We will introduce quantum computing and its various principles, quantum software development as quantum circuits, and current QST literature, including a key set of techniques with examples. Finally, a set of future research challenges related to QST will be presented."",
    booktitle = ""Proceedings of the 2024 IEEE/ACM 46th International Conference on Software Engineering: Companion Proceedings"",
    pages = ""426-427"",
    numpages = ""2"",
    keywords = ""quantum computing, quantum programs, quantum software testing"",
    location = ""Lisbon, Portugal"",
    series = ""ICSE-Companion '24""
}
"""	Excluded	Excluded	new_screen			2	ACM		Software Testing	https://dl.acm.org/doi/10.1145/3639478.3643059	Association for Computing Machinery	nan; Venue; References
515	Behave	Specification by Example for Educational Purposes	The Specification By Example (SBE) is a guideline for building the right software, a software that meets customer requirements. It is based on seven process patterns and enhances communication and collaboration and it usually is used in agile software development. The connection between education and agile software development sounds actually as an emergent topic. In this paper, we propose to structure a teaching approach in analogy to an agile software developement by transposing each process pattern of SBE to a corresponding one in the teaching domain. Moreover, we show that thanks to the emergence of a collective intelligence process, the students are more confident and more responsible. Such a course offers the opportunity to learn not only technical skills, but also some values in a new mindset.	specification by example;  agile teaching;  agile software development; specification by example, agile teaching, agile software development	Blasquez, Isabelle; Leblanc, Herv\'{e}		https://doi.org/10.1145/3059009.3059039		212-217	"""@inproceedings{10.1145/3059009.3059039,
    author = ""Blasquez, Isabelle and Leblanc, Herv\'{e}"",
    title = ""Specification by Example for Educational Purposes"",
    year = ""2017"",
    isbn = ""9781450347044"",
    publisher = ""Association for Computing Machinery"",
    address = ""New York, NY, USA"",
    url = ""https://doi.org/10.1145/3059009.3059039"",
    doi = ""10.1145/3059009.3059039"",
    abstract = ""The Specification By Example (SBE) is a guideline for building the right software, a software that meets customer requirements. It is based on seven process patterns and enhances communication and collaboration and it usually is used in agile software development. The connection between education and agile software development sounds actually as an emergent topic. In this paper, we propose to structure a teaching approach in analogy to an agile software developement by transposing each process pattern of SBE to a corresponding one in the teaching domain. Moreover, we show that thanks to the emergence of a collective intelligence process, the students are more confident and more responsible. Such a course offers the opportunity to learn not only technical skills, but also some values in a new mindset."",
    booktitle = ""Proceedings of the 2017 ACM Conference on Innovation and Technology in Computer Science Education"",
    pages = ""212-217"",
    numpages = ""6"",
    keywords = ""specification by example, agile teaching, agile software development"",
    location = ""Bologna, Italy"",
    series = ""ITiCSE '17""
}
"""	Excluded	Excluded	new_screen			2	ACM		Specification by Example	https://dl.acm.org/doi/10.1145/3059009.3059039	Association for Computing Machinery	nan; Venue; References
516	Behave	Specifications and testing aided by a variant of the cause-effect process	For many years the cause-effect process has played a role in testing [1, 2]. A simplified variation of the cause-effect process will be shown. This variation is not only effective for testing and carefully analyzing existing specifications, but is also useful for developing complete specifications. The cause-effect graph is claimed to be unnecessary.		Baxter, Anthony Q.; French, J. Austin		https://doi.org/10.1145/503720.503750		405-408	"""@inproceedings{10.1145/503720.503750,
    author = ""Baxter, Anthony Q. and French, J. Austin"",
    title = ""Specifications and testing aided by a variant of the cause-effect process"",
    year = ""1992"",
    isbn = ""0897915062"",
    publisher = ""Association for Computing Machinery"",
    address = ""New York, NY, USA"",
    url = ""https://doi.org/10.1145/503720.503750"",
    doi = ""10.1145/503720.503750"",
    abstract = ""For many years the cause-effect process has played a role in testing [1, 2]. A simplified variation of the cause-effect process will be shown. This variation is not only effective for testing and carefully analyzing existing specifications, but is also useful for developing complete specifications. The cause-effect graph is claimed to be unnecessary."",
    booktitle = ""Proceedings of the 30th Annual ACM Southeast Regional Conference"",
    pages = ""405-408"",
    numpages = ""4"",
    location = ""Raleigh, North Carolina"",
    series = ""ACMSE '92""
}
"""	Excluded	Excluded	new_screen			2	ACM		Specifications and Testing	https://dl.acm.org/doi/10.1145/503720.503750	Association for Computing Machinery	nan; Venue; Keywords; References
517	Behave	SportsStore: A Real Application	You've heard about the benefits of the ASP.NET MVC platform, and you've learned some of the theory behind its design. Now it's time to put the framework into action for real and see how those benefits work out in a realistic e-commerce application.	Real Application; Unit Test; Visual Studio; Public Class; Constructor Parameter	Sanderson, Steven	Pro ASP.NET MVC 2 Framework	https://doi.org/10.1007/978-1-4302-2887-5_4		91--134	"""@Inbook{Sanderson2010,
    author = ""Sanderson, Steven"",
    editor = ""Buckingham, Ewan and Andres, Clay and Anglin, Steve and Beckner, Mark and Buckingham, Ewan and Cornell, Gary and Gennick, Jonathan and Hassell, Jonathan and Lowman, Michelle and Moodie, Matthew and Parkes, Duncan and Pepper, Jeffrey and Pohlmann, Frank and Pundick, Douglas and Renow-Clarke, Ben and Shakeshaft, Dominic and Wade, Matt and Welsh, Tom and Collett, Anne and Larson, Damon"",
    title = ""SportsStore: A Real Application"",
    bookTitle = ""Pro ASP.NET MVC 2 Framework"",
    year = ""2010"",
    publisher = ""Apress"",
    address = ""Berkeley, CA"",
    pages = ""91--134"",
    abstract = ""You've heard about the benefits of the ASP.NET MVC platform, and you've learned some of the theory behind its design. Now it's time to put the framework into action for real and see how those benefits work out in a realistic e-commerce application."",
    isbn = ""978-1-4302-2887-5"",
    doi = ""10.1007/978-1-4302-2887-5\_4"",
    url = ""https://doi.org/10.1007/978-1-4302-2887-5\_4""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		SportsStore: A Real Application	https://doi.org/10.1007/978-1-4302-2887-5_4	Apress	nan; References; Link
518	Behave	SportsStore: Navigation and Shopping Cart	In Chapter 4, you set up the majority of the core infrastructure needed to build SportsStore. There's already a basic product list backed by a SQL Server database. However, you're still several steps away from dominating global online commerce. In this chapter, then, you'll get deep into the ASP.NET MVC development process, adding catalog navigation, a shopping cart, and a checkout process. As you do, you'll learn how to do the following:	Action Method; Unit Test; Partial View; Controller Class; Session Collection	Sanderson, Steven	Pro ASP.NET MVC 2 Framework	https://doi.org/10.1007/978-1-4302-2887-5_5		135--178	"""@Inbook{Sanderson2010,
    author = ""Sanderson, Steven"",
    editor = ""Buckingham, Ewan and Andres, Clay and Anglin, Steve and Beckner, Mark and Buckingham, Ewan and Cornell, Gary and Gennick, Jonathan and Hassell, Jonathan and Lowman, Michelle and Moodie, Matthew and Parkes, Duncan and Pepper, Jeffrey and Pohlmann, Frank and Pundick, Douglas and Renow-Clarke, Ben and Shakeshaft, Dominic and Wade, Matt and Welsh, Tom and Collett, Anne and Larson, Damon"",
    title = ""SportsStore: Navigation and Shopping Cart"",
    bookTitle = ""Pro ASP.NET MVC 2 Framework"",
    year = ""2010"",
    publisher = ""Apress"",
    address = ""Berkeley, CA"",
    pages = ""135--178"",
    abstract = ""In Chapter 4, you set up the majority of the core infrastructure needed to build SportsStore. There's already a basic product list backed by a SQL Server database. However, you're still several steps away from dominating global online commerce. In this chapter, then, you'll get deep into the ASP.NET MVC development process, adding catalog navigation, a shopping cart, and a checkout process. As you do, you'll learn how to do the following:"",
    isbn = ""978-1-4302-2887-5"",
    doi = ""10.1007/978-1-4302-2887-5\_5"",
    url = ""https://doi.org/10.1007/978-1-4302-2887-5\_5""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		SportsStore: Navigation and Shopping Cart	https://doi.org/10.1007/978-1-4302-2887-5_5	Apress	nan; References; Link
519	Behave	Spotify Tailoring for Architectural Governance	Organisations usually tailor Agile methods to fit their needs best. Spotify has developed its own Agile culture to facilitate software development for hundreds of developers across multiple cities. The Spotify model has become influential among agile proponents and hence formed the basis of methods used in other organisations. We have identified a lack of research into agile architecture using the Spotify model.	Spotify tailoring; Architecture governance; Autonomous teams; Large-scale; FinTech; Intervention embedded case study	Salameh, Abdallah; Bass, Julian M.	International Conference on Agile Software Development	https://doi.org/10.1007/978-3-030-58858-8_24		236--244	"""@InProceedings{10.1007/978-3-030-58858-8_24,
    author = ""Salameh, Abdallah and Bass, Julian M."",
    editor = ""Paasivaara, Maria and Kruchten, Philippe"",
    title = ""Spotify Tailoring for Architectural Governance"",
    booktitle = ""Agile Processes in Software Engineering and Extreme Programming -- Workshops"",
    year = ""2020"",
    publisher = ""Springer International Publishing"",
    address = ""Cham"",
    pages = ""236--244"",
    abstract = ""Organisations usually tailor Agile methods to fit their needs best. Spotify has developed its own Agile culture to facilitate software development for hundreds of developers across multiple cities. The Spotify model has become influential among agile proponents and hence formed the basis of methods used in other organisations. We have identified a lack of research into agile architecture using the Spotify model."",
    isbn = ""978-3-030-58858-8""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Spotify Tailoring for Architectural Governance	https://doi.org/10.1007/978-3-030-58858-8_24	Springer International Publishing	nan; References; Link
520	Behave	Sprint 1: Starting a Game	It's time to begin writing features for Kojack Games! With our initial backlog created and prioritized, our development infrastructure established, and our initial product backlog prioritized, we are ready to start coding features! In this chapter we'll layout a plan on how to approach writing features using BDD and see it through to the code implementation. We'll go through the practice of a sprint planning session, the way daily stands-up work, and how to manage the task board and burn-down charts.	Acceptance Criterion; Action Item; User Story; Feature File; Task Board	Blankenship, Jerrel; Bussa, Matthew; Millett, Scott	Pro Agile .NET Development with Scrum	https://doi.org/10.1007/978-1-4302-3534-7_5		87--133	"""@Inbook{Blankenship2011,
    author = ""Blankenship, Jerrel and Bussa, Matthew and Millett, Scott"",
    title = ""Sprint 1: Starting a Game"",
    bookTitle = ""Pro Agile .NET Development with Scrum"",
    year = ""2011"",
    publisher = ""Apress"",
    address = ""Berkeley, CA"",
    pages = ""87--133"",
    abstract = ""It's time to begin writing features for Kojack Games! With our initial backlog created and prioritized, our development infrastructure established, and our initial product backlog prioritized, we are ready to start coding features! In this chapter we'll layout a plan on how to approach writing features using BDD and see it through to the code implementation. We'll go through the practice of a sprint planning session, the way daily stands-up work, and how to manage the task board and burn-down charts."",
    isbn = ""978-1-4302-3534-7"",
    doi = ""10.1007/978-1-4302-3534-7\_5"",
    url = ""https://doi.org/10.1007/978-1-4302-3534-7\_5""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Sprint 1: Starting a Game	https://doi.org/10.1007/978-1-4302-3534-7_5	Apress	nan; References; Link
521	Behave	Subconscious Requirements: The Fright of Every Tester	Subconscious requirements are requirements that stakeholders do not explicitly ask for, but still expect to be present in a system. Such requirements are problematic to testers as they will easily be overlooked and not be included in the specifications and therefore may not be tested at all. Over time, less notable (non-) functional requirements tend to end up as subconscious. The development of ever more complex IT solutions adds to the occurrence of subconscious requirements. They do need to be tested, as ignoring them will lead to expensive rework or rejection. Due to the lack of specifications, tests can only rely on experience-based techniques. To acquire the necessary experience, testers can turn to proven techniques from the requirements engineering discipline.	Software testing; Software quality; Subconscious requirements; Software tester	van Loenhoud, Hans	The Future of Software Quality Assurance	https://doi.org/10.1007/978-3-030-29509-7_16		207--216	"""@Inbook{vanLoenhoud2020,
    author = ""van Loenhoud, Hans"",
    editor = ""Goericke, Stephan"",
    title = ""Subconscious Requirements: The Fright of Every Tester"",
    bookTitle = ""The Future of Software Quality Assurance"",
    year = ""2020"",
    publisher = ""Springer International Publishing"",
    address = ""Cham"",
    pages = ""207--216"",
    abstract = ""Subconscious requirements are requirements that stakeholders do not explicitly ask for, but still expect to be present in a system. Such requirements are problematic to testers as they will easily be overlooked and not be included in the specifications and therefore may not be tested at all. Over time, less notable (non-) functional requirements tend to end up as subconscious. The development of ever more complex IT solutions adds to the occurrence of subconscious requirements. They do need to be tested, as ignoring them will lead to expensive rework or rejection. Due to the lack of specifications, tests can only rely on experience-based techniques. To acquire the necessary experience, testers can turn to proven techniques from the requirements engineering discipline."",
    isbn = ""978-3-030-29509-7"",
    doi = ""10.1007/978-3-030-29509-7\_16"",
    url = ""https://doi.org/10.1007/978-3-030-29509-7\_16""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Subconscious Requirements: The Fright of Every Tester	https://link.springer.com/chapter/10.1007/978-3-030-29509-7_16	Springer International Publishing	nan; References
522	Behave	Success and Failure Factors for Adopting a Combined Approach: A Case Study of Two Software Development Teams	The combination of Agile, User-Centered Design and Lean Startup has emerged as a solution for teams that are struggling with lack of user involvement and delivering products that fulfill stakeholder needs. Adopting such a development approach involves several factors, some of which can assist or hinder the adoption process. Currently, the literature reports on studies on such factors, but only for agile-only methods. Motivated by this knowledge gap, our goal is to map the success and failure factors of a combined approach adoption. We conduct a case study with two software development teams from a large organization transitioning to the combined approach. We used semi-structured interviews and focus group sessions to collect data. Our findings show five success factors categories (e.g., team engagement, technical aspects) and one failure factor category (team autonomy at risk), along with several argumentation points suggested by the teams to argue against a company policy perceived to be a very impactful failure factor. This study contributes to academic literature by reporting on success and failure factors of a combined approach transformation, and could be used as a starting point in defining tools (e.g., maturity models) to aid organizations in transitioning to the combined approach.	Agile; User-centered design; Lean startup; Success factors; Failure factors; Agile transformation	Signoretti, Ingrid; Zorzetti, Maximilian; Salerno, Larissa; Moralles, Cassiano; Pereira, Eliana; Trindade, C{\'a}ssio; Marczak, Sabrina; Bastos, Ricardo	International Conference on Product-Focused Software Process Improvement	https://doi.org/10.1007/978-3-030-64148-1_8		125--141	"""@InProceedings{10.1007/978-3-030-64148-1_8,
    author = ""Signoretti, Ingrid and Zorzetti, Maximilian and Salerno, Larissa and Moralles, Cassiano and Pereira, Eliana and Trindade, C{\'a}ssio and Marczak, Sabrina and Bastos, Ricardo"",
    editor = ""Morisio, Maurizio and Torchiano, Marco and Jedlitschka, Andreas"",
    title = ""Success and Failure Factors for Adopting a Combined Approach: A Case Study of Two Software Development Teams"",
    booktitle = ""Product-Focused Software Process Improvement"",
    year = ""2020"",
    publisher = ""Springer International Publishing"",
    address = ""Cham"",
    pages = ""125--141"",
    abstract = ""The combination of Agile, User-Centered Design and Lean Startup has emerged as a solution for teams that are struggling with lack of user involvement and delivering products that fulfill stakeholder needs. Adopting such a development approach involves several factors, some of which can assist or hinder the adoption process. Currently, the literature reports on studies on such factors, but only for agile-only methods. Motivated by this knowledge gap, our goal is to map the success and failure factors of a combined approach adoption. We conduct a case study with two software development teams from a large organization transitioning to the combined approach. We used semi-structured interviews and focus group sessions to collect data. Our findings show five success factors categories (e.g., team engagement, technical aspects) and one failure factor category (team autonomy at risk), along with several argumentation points suggested by the teams to argue against a company policy perceived to be a very impactful failure factor. This study contributes to academic literature by reporting on success and failure factors of a combined approach transformation, and could be used as a starting point in defining tools (e.g., maturity models) to aid organizations in transitioning to the combined approach."",
    isbn = ""978-3-030-64148-1""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Success and Failure Factors for Adopting a Combined Approach: A Case Study of Two Software Development Teams	https://doi.org/10.1007/978-3-030-64148-1_8	Springer International Publishing	nan; References; Link
523	Behave	Supporting Agile Software Development by Natural Language Processing	Agile software development puts more emphasis on working programs than on documentation. However, this may cause complications from the management perspective when an overview of the progress achieved within a project needs to be provided. In this paper, we outline the potential for applying natural language processing (NLP) in order to support agile development. We point out that using NLP, the artifacts created during agile software development activities can be traced back to the requirements expressed in user stories. This allows determining how far the project has progressed in terms of realized requirements.	Agile Software Development; Project Management; Machine Learning; Natural Language Processing	Plank, Barbara; Sauer, Thomas; Schaefer, Ina	International Workshop on Eternal Systems	https://doi.org/10.1007/978-3-642-45260-4_7		91--102	"""@InProceedings{10.1007/978-3-642-45260-4_7,
    author = ""Plank, Barbara and Sauer, Thomas and Schaefer, Ina"",
    editor = ""Moschitti, Alessandro and Plank, Barbara"",
    title = ""Supporting Agile Software Development by Natural Language Processing"",
    booktitle = ""Trustworthy Eternal Systems via Evolving Software, Data and Knowledge"",
    year = ""2013"",
    publisher = ""Springer Berlin Heidelberg"",
    address = ""Berlin, Heidelberg"",
    pages = ""91--102"",
    abstract = ""Agile software development puts more emphasis on working programs than on documentation. However, this may cause complications from the management perspective when an overview of the progress achieved within a project needs to be provided. In this paper, we outline the potential for applying natural language processing (NLP) in order to support agile development. We point out that using NLP, the artifacts created during agile software development activities can be traced back to the requirements expressed in user stories. This allows determining how far the project has progressed in terms of realized requirements."",
    isbn = ""978-3-642-45260-4""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Supporting Agile Software Development by Natural Language Processing	https://doi.org/10.1007/978-3-642-45260-4_7	Springer Berlin Heidelberg	nan; References; Link
524	Behave	Taking it to 11	"""What do you mean, dotPlane is selling off its fleet?"" Leigh asked Dinesh as they drove toward the airport in the fading light of Wednesday's sun. ""Are they buying bigger planes?"""	Dinesh; Acceptance Test Driven Development; Pipeline Applications; Enablement Team; Automatic Test	Jeffrey Scheaffer; Aruna Ravichandran; Alex Martins	Economist (United Kingdom)	https://doi.org/10.1007/978-1-4842-3661-1_5		55-81	"""@ARTICLE{2016,
    title = ""Taking it to 11"",
    year = ""2016"",
    journal = ""Economist (United Kingdom)"",
    volume = ""412"",
    number = ""9005"",
    url = ""https://www.scopus.com/inward/record.uri?eid=2-s2.0-85020478756\&partnerID=40\&md5=d0cc5b4ffcf874f07562c8cd115a665f"",
    publisher = ""Economist Newspaper Ltd"",
    issn = ""00130613"",
    language = ""English"",
    abbrev_source_title = ""Economist"",
    type = ""Short survey"",
    publication_stage = ""Final"",
    source = ""Scopus"",
    note = ""Cited by: 0""
}
"""	Excluded	Excluded	new_screen			2	Scopus Signed In		Taking It to 11	https://link.springer.com/chapter/10.1007/978-1-4842-3661-1_5	Economist Newspaper Ltd	nan; References
525	Behave	TDD and BDD for Node.js with Mocha	Test-driven development (TDD), as many of you might know, is one of the main, agile development techniques. The genius of TDD lies in increased quality of code, faster development resulting from greater programmer confidence, and improved bug detection (duh!).		Mardan, Azat	Practical Node.js	https://doi.org/10.1007/978-1-4302-6596-2_3		57--69	"""@Inbook{Mardan2014,
    author = ""Mardan, Azat"",
    title = ""TDD and BDD for Node.js with Mocha"",
    bookTitle = ""Practical Node.js: Building Real-World Scalable Web Apps"",
    year = ""2014"",
    publisher = ""Apress"",
    address = ""Berkeley, CA"",
    pages = ""57--69"",
    abstract = ""Test-driven development (TDD), as many of you might know, is one of the main, agile development techniques. The genius of TDD lies in increased quality of code, faster development resulting from greater programmer confidence, and improved bug detection (duh!)."",
    isbn = ""978-1-4302-6596-2"",
    doi = ""10.1007/978-1-4302-6596-2\_3"",
    url = ""https://doi.org/10.1007/978-1-4302-6596-2\_3""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		TDD and BDD for Node.js with Mocha	https://doi.org/10.1007/978-1-4302-6596-2_3	Apress	nan; Keywords; References; Link
526	Behave	TDD as an API Design Technique	"TDD is usually associated with the phrase ""Write tests first, and then implement."" However, this is a rather distorted and reduced view of TDD."	Factory Method; Client Application; Unique String; Step Definition; Public Void	Ervin Varga	Creating Maintainable APIs	https://doi.org/10.1007/978-1-4842-2196-9_4		69-95		Excluded	Excluded	new_screen			2	Springer Link		TDD as an API Design Technique	https://link.springer.com/chapter/10.1007/978-1-4842-2196-9_4	Apress, Berkeley, CA	nan; References; Year; Bibtex
527	Behave	Temporal Random Testing for Spark Streaming	With the rise of Big Data technologies, distributed stream processing systems (SPS) have gained popularity in the last years. Among them, Spark Streaming stands out as a particularly attractive option with a growing adoption in the industry. In this work we explore the combination of temporal logic and property-based testing for testing Spark Streaming programs, by adding temporal logic operators to ScalaCheck generators and properties. This allows us to deal with the time component that complicates the testing of Spark Streaming programs and SPS in general. In particular we propose a discrete time linear temporal logic for finite words, that allows to associate a timeout to each temporal operator in order to increase the expressiveness of generators and properties. Finally, our prototype is presented with some examples.	Stream processing systems; Spark streaming; Property-based testing; Random testing; Linear temporal logic; Scala; Big data	Riesco, Adri{\'a}n; Rodr{\'i}guez-Hortal{\'a}, Juan	International Conference on Integrated Formal Methods	https://doi.org/10.1007/978-3-319-33693-0_25		393--408	"""@InProceedings{10.1007/978-3-319-33693-0_25,
    author = ""Riesco, Adri{\'a}n and Rodr{\'i}guez-Hortal{\'a}, Juan"",
    editor = ""{\'A}brah{\'a}m, Erika and Huisman, Marieke"",
    title = ""Temporal Random Testing for Spark Streaming"",
    booktitle = ""Integrated Formal Methods"",
    year = ""2016"",
    publisher = ""Springer International Publishing"",
    address = ""Cham"",
    pages = ""393--408"",
    abstract = ""With the rise of Big Data technologies, distributed stream processing systems (SPS) have gained popularity in the last years. Among them, Spark Streaming stands out as a particularly attractive option with a growing adoption in the industry. In this work we explore the combination of temporal logic and property-based testing for testing Spark Streaming programs, by adding temporal logic operators to ScalaCheck generators and properties. This allows us to deal with the time component that complicates the testing of Spark Streaming programs and SPS in general. In particular we propose a discrete time linear temporal logic for finite words, that allows to associate a timeout to each temporal operator in order to increase the expressiveness of generators and properties. Finally, our prototype is presented with some examples."",
    isbn = ""978-3-319-33693-0""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Temporal Random Testing for Spark Streaming	https://doi.org/10.1007/978-3-319-33693-0_25	Springer International Publishing	nan; References; Link
528	Behave	Test early, test often: a formative usability kit for writers	http://link.springer.com/chapter/10.1007/978-3-030-30701-1_6		Kaminsky, Sophie Kohn		https://doi.org/10.1145/147001.147007		47-55	"""@inproceedings{10.1145/147001.147007,
    author = ""Kaminsky, Sophie Kohn"",
    title = ""Test early, test often: a formative usability kit for writers"",
    year = ""1992"",
    isbn = ""0897915321"",
    publisher = ""Association for Computing Machinery"",
    address = ""New York, NY, USA"",
    url = ""https://doi.org/10.1145/147001.147007"",
    doi = ""10.1145/147001.147007"",
    booktitle = ""Proceedings of the 10th Annual International Conference on Systems Documentation"",
    pages = ""47-55"",
    numpages = ""9"",
    location = ""Ottawa, Ontario, Canada"",
    series = ""SIGDOC '92""
}
"""	Excluded	Excluded	new_screen			2	ACM		Test Early, Test Often	https://dl.acm.org/doi/10.1145/147001.147007	Association for Computing Machinery	nan; Venue; Abstract; Keywords; References
529	Behave	Test Frameworks	This chapter covers the topic of test frameworks. In a broad sense, a test framework is a technology or set of tools that supports automated software testing. Most developers are familiar with one of the code-driven test frameworks, which are commonly referred to as unit testing frameworks. In this chapter, you will learn about the four most popular unit testing frameworks. Another important component to any test framework is the test runner. You will learn about a variety of test runners, from the minimalist runners to those that are well-integrated into Visual Studio. This chapter also provides an overview of the xUnit test pattern and explains how each of the unit testing frameworks discussed fits the pattern.	Visual Studio; Generally Accept Account Principle; Test Framework; Test Code; Code Coverage	Ritchie, Stephen D.	Pro .NET Best Practices	https://doi.org/10.1007/978-1-4302-4024-2_12		265--312	"""@Inbook{Ritchie2011,
    author = ""Ritchie, Stephen D."",
    title = ""Test Frameworks"",
    bookTitle = ""Pro .NET Best Practices"",
    year = ""2011"",
    publisher = ""Apress"",
    address = ""Berkeley, CA"",
    pages = ""265--312"",
    abstract = ""This chapter covers the topic of test frameworks. In a broad sense, a test framework is a technology or set of tools that supports automated software testing. Most developers are familiar with one of the code-driven test frameworks, which are commonly referred to as unit testing frameworks. In this chapter, you will learn about the four most popular unit testing frameworks. Another important component to any test framework is the test runner. You will learn about a variety of test runners, from the minimalist runners to those that are well-integrated into Visual Studio. This chapter also provides an overview of the xUnit test pattern and explains how each of the unit testing frameworks discussed fits the pattern."",
    isbn = ""978-1-4302-4024-2"",
    doi = ""10.1007/978-1-4302-4024-2\_12"",
    url = ""https://doi.org/10.1007/978-1-4302-4024-2\_12""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Test Frameworks	https://doi.org/10.1007/978-1-4302-4024-2_12	Apress	nan; References; Link
530	Behave	Gamification in Test-Driven Development Practice	The challenge of effectively developing and sustaining high-performance professional development practices in software engineering education is one that must be addressed. Test-driven development (TDD), an example of a key professional practical activity, is strongly linked to these high-performance practices. To examine the effects of gamification - the use of game design elements in a non-game context - on motivating students to develop and sustain TDD practice, an experiment was conducted and utilized ordinary least squares (OLS) regression to analyze the data. This experiment showed that gamification motivates students to do high-performing TDD practice. More specifically, gamification changes the individual's TDD behavior, increases engagement in the development activity, and the effect continues for a longer period even after gamification has ceased. Furthermore, a positive association between gamification and the maintainability of the team codebase was supported by the data.	Engagement;  Gamification;  Maintainability;  Software Engineering;  Test-driven Development; Engagement, Gamification, Maintainability, Software Engineering, Test-driven Development	Ren, Wei		https://doi.org/10.1145/3617553.3617889		38-46	"""@inproceedings{10.1145/3617553.3617889,
    author = ""Ren, Wei"",
    title = ""Gamification in Test-Driven Development Practice"",
    year = ""2023"",
    isbn = ""9798400703737"",
    publisher = ""Association for Computing Machinery"",
    address = ""New York, NY, USA"",
    url = ""https://doi.org/10.1145/3617553.3617889"",
    doi = ""10.1145/3617553.3617889"",
    abstract = ""The challenge of effectively developing and sustaining high-performance professional development practices in software engineering education is one that must be addressed. Test-driven development (TDD), an example of a key professional practical activity, is strongly linked to these high-performance practices. To examine the effects of gamification - the use of game design elements in a non-game context - on motivating students to develop and sustain TDD practice, an experiment was conducted and utilized ordinary least squares (OLS) regression to analyze the data. This experiment showed that gamification motivates students to do high-performing TDD practice. More specifically, gamification changes the individual's TDD behavior, increases engagement in the development activity, and the effect continues for a longer period even after gamification has ceased. Furthermore, a positive association between gamification and the maintainability of the team codebase was supported by the data."",
    booktitle = ""Proceedings of the 2nd International Workshop on Gamification in Software Development, Verification, and Validation"",
    pages = ""38-46"",
    numpages = ""9"",
    keywords = ""Engagement, Gamification, Maintainability, Software Engineering, Test-driven Development"",
    location = ""San Francisco, CA, USA"",
    series = ""Gamify 2023""
}
"""	Excluded	Excluded	new_screen			2	ACM		Test-Driven Development	https://dl.acm.org/doi/10.1145/3617553.3617889	Association for Computing Machinery	nan; Venue; References
531	Behave	Test-Driven Development 101	In this chapter, we will learn how to apply TDD in our daily development routine through a step-by-step guide. Along with this demo, you will get an idea of how to split a big task into relatively smaller ones and complete each one with a set of passing tests while learning some refactoring techniques. Before we dive into the code, let's get a fundamental understanding of how to write a proper test.		Qiu, Juntao	Test-Driven Development with React	https://doi.org/10.1007/978-1-4842-6972-5_3		35--45	"""@Inbook{Qiu2021,
    author = ""Qiu, Juntao"",
    title = ""Test-Driven Development 101"",
    bookTitle = ""Test-Driven Development with React: Apply Test-Driven Development in Your Applications"",
    year = ""2021"",
    publisher = ""Apress"",
    address = ""Berkeley, CA"",
    pages = ""35--45"",
    abstract = ""In this chapter, we will learn how to apply TDD in our daily development routine through a step-by-step guide. Along with this demo, you will get an idea of how to split a big task into relatively smaller ones and complete each one with a set of passing tests while learning some refactoring techniques. Before we dive into the code, let's get a fundamental understanding of how to write a proper test."",
    isbn = ""978-1-4842-6972-5"",
    doi = ""10.1007/978-1-4842-6972-5\_3"",
    url = ""https://doi.org/10.1007/978-1-4842-6972-5\_3""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Test-Driven Development 101	https://doi.org/10.1007/978-1-4842-6972-5_3	Apress	nan; Keywords; References; Link
532	Behave	Test-Driven Development as a Reliable Embedded Software Engineering Practice	Due to embedded co-design considerations, testing embedded software is typically deferred after the integration phase. Contrasting with the current embedded engineering practices, Test-Driven Development (TDD) promotes testing software during its development, even before the target hardware becomes available. Principally, TDD promotes a fast feedback cycle in which a test is written before the implementation. Moreover, each test is added to a test suite, which runs at every step in the TDD cycle. As a consequence, test-driven code is well tested and maintainable. Still, embedded software has some typical properties which impose challenges to apply the TDD cycle. Essentially, uploading software to target is generally too time-consuming to frequently run tests on target. Secondary issues are hardware dependencies and limited resources, such as memory footprint or processing power. In order to deal with these limitations, four methods have been identified and evaluated. Furthermore, a number of relevant design patterns are discussed to apply TDD in an embedded environment.		Cordemans, Piet; Van Landschoot, Sille; Boydens, Jeroen; Steegmans, Eric	Embedded and Real Time System Development: A Software Engineering Perspective	https://doi.org/10.1007/978-3-642-40888-5_4		91--130	"""@Inbook{Cordemans2014,
    author = ""Cordemans, Piet and Van Landschoot, Sille and Boydens, Jeroen and Steegmans, Eric"",
    editor = ""Khan, Mohammad Ayoub and Saeed, Saqib and Darwish, Ashraf and Abraham, Ajith"",
    title = ""Test-Driven Development as a Reliable Embedded Software Engineering Practice"",
    bookTitle = ""Embedded and Real Time System Development: A Software Engineering Perspective: Concepts, Methods and Principles"",
    year = ""2014"",
    publisher = ""Springer Berlin Heidelberg"",
    address = ""Berlin, Heidelberg"",
    pages = ""91--130"",
    abstract = ""Due to embedded co-design considerations, testing embedded software is typically deferred after the integration phase. Contrasting with the current embedded engineering practices, Test-Driven Development (TDD) promotes testing software during its development, even before the target hardware becomes available. Principally, TDD promotes a fast feedback cycle in which a test is written before the implementation. Moreover, each test is added to a test suite, which runs at every step in the TDD cycle. As a consequence, test-driven code is well tested and maintainable. Still, embedded software has some typical properties which impose challenges to apply the TDD cycle. Essentially, uploading software to target is generally too time-consuming to frequently run tests on target. Secondary issues are hardware dependencies and limited resources, such as memory footprint or processing power. In order to deal with these limitations, four methods have been identified and evaluated. Furthermore, a number of relevant design patterns are discussed to apply TDD in an embedded environment."",
    isbn = ""978-3-642-40888-5"",
    doi = ""10.1007/978-3-642-40888-5\_4"",
    url = ""https://doi.org/10.1007/978-3-642-40888-5\_4""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Test-Driven Development as a Reliable Embedded Software Engineering Practice	https://doi.org/10.1007/978-3-642-40888-5_4	Springer Berlin Heidelberg	nan; Keywords; References; Link
533	Behave	Test-Driven Development in Swift	http://link.springer.com/chapter/10.1007/978-1-4842-5602-2_12	Swift; iOS; Compiler; Dependency Injection; Mocks; App; development; programming; coding; networking; UIViewController; TDD; test-driven development; XCTest	Gio Lodi		https://link.springer.com/book/10.1007/978-1-4842-7002-8				Excluded	Excluded	new_screen			2	Springer Link		Test-Driven Development in Swift	https://link.springer.com/book/10.1007/978-1-4842-7002-8	Springer Link	nan; Venue; Abstract; References; Pages; Year; Bibtex
534	Behave	Automated Testing of Networked Systems Reliability	The reliability of a network is a crucial requirement for systems such as IoT, client-server, or cloud-based solutions. Unfortunately, real networks cannot be assumed to be fault-free, especially when considering various hardware problems, performance issues, or malicious attacks. Testing networked systems should therefore include evaluating fault tolerance under various network conditions. The paper presents a doctoral research project on automated verification of networked systems using fault-attack injection using a derived model of network communication.	Networked systems;  fault/attack injection;  network model;  testing; Networked systems, fault/attack injection, network model, testing	Rozs\'{\i}val, Michal		https://doi.org/10.1145/3650212.3685559		1920-1922	"""@inproceedings{10.1145/3650212.3685559,
    author = ""Rozs\'{\i}val, Michal"",
    title = ""Automated Testing of Networked Systems Reliability"",
    year = ""2024"",
    isbn = ""9798400706127"",
    publisher = ""Association for Computing Machinery"",
    address = ""New York, NY, USA"",
    url = ""https://doi.org/10.1145/3650212.3685559"",
    doi = ""10.1145/3650212.3685559"",
    abstract = ""The reliability of a network is a crucial requirement for systems such as IoT, client-server, or cloud-based solutions. Unfortunately, real networks cannot be assumed to be fault-free, especially when considering various hardware problems, performance issues, or malicious attacks. Testing networked systems should therefore include evaluating fault tolerance under various network conditions. The paper presents a doctoral research project on automated verification of networked systems using fault-attack injection using a derived model of network communication."",
    booktitle = ""Proceedings of the 33rd ACM SIGSOFT International Symposium on Software Testing and Analysis"",
    pages = ""1920-1922"",
    numpages = ""3"",
    keywords = ""Networked systems, fault/attack injection, network model, testing"",
    location = ""Vienna, Austria"",
    series = ""ISSTA 2024""
}
"""	Excluded	Excluded	new_screen			2	ACM		Testing	https://dl.acm.org/doi/10.1145/3650212.3685559	Association for Computing Machinery	nan; Venue; References
535	Behave	Testing {\&} Debugging	It is time to shift our focus to another important part of API design, which is the testing and debugging of the source code. This chapter will briefly share some interesting points on why testing is essential, as well as dive into the implementation details for creating unit and integration tests. Also included in this chapter will be complete instructions on how to debug the source code of compiled external libraries by using their symbols loaded from the Internet.	Dotnet; HttpClient; Behavior-driven Development (BDD); Class Integration Test; ICalculator	Reynders, Fanie	Modern API Design with ASP.NET Core 2	https://doi.org/10.1007/978-1-4842-3519-5_10		185--201	"""@Inbook{Reynders2018,
    author = ""Reynders, Fanie"",
    title = ""Testing {\\&} Debugging"",
    bookTitle = ""Modern API Design with ASP.NET Core 2: Building Cross-Platform Back-End Systems"",
    year = ""2018"",
    publisher = ""Apress"",
    address = ""Berkeley, CA"",
    pages = ""185--201"",
    abstract = ""It is time to shift our focus to another important part of API design, which is the testing and debugging of the source code. This chapter will briefly share some interesting points on why testing is essential, as well as dive into the implementation details for creating unit and integration tests. Also included in this chapter will be complete instructions on how to debug the source code of compiled external libraries by using their symbols loaded from the Internet."",
    isbn = ""978-1-4842-3519-5"",
    doi = ""10.1007/978-1-4842-3519-5\_10"",
    url = ""https://doi.org/10.1007/978-1-4842-3519-5\_10""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Testing & Debugging	https://doi.org/10.1007/978-1-4842-3519-5_10	Apress	nan; References; Link
536	Behave	Testing and Debugging Projects	Test-driven development (TDD) promotes the writing of executable test cases before you start coding. After you add the desired functionality, you then run the tests to make sure the new functionality works as expected, and that the changes don't break something else. The NetBeans IDE provides quick access to the TDD support that is provided by Ruby and the Rails framework through the IDE's menu actions, keyboard shortcuts, and Test Results window.	Source Line; Unit Test; Main Menu; Output Window; Test File		NetBeans(tm) Ruby and Rails IDE with JRuby	https://doi.org/10.1007/978-1-4302-1637-7_7		105--125	"""@Inbook{Kutler2009,
    title = ""Testing and Debugging Projects"",
    bookTitle = ""NetBeans{\texttrademark} Ruby and Rails IDE with JRuby"",
    year = ""2009"",
    publisher = ""Apress"",
    address = ""Berkeley, CA"",
    pages = ""105--125"",
    abstract = ""Test-driven development (TDD) promotes the writing of executable test cases before you start coding. After you add the desired functionality, you then run the tests to make sure the new functionality works as expected, and that the changes don't break something else. The NetBeans IDE provides quick access to the TDD support that is provided by Ruby and the Rails framework through the IDE's menu actions, keyboard shortcuts, and Test Results window."",
    isbn = ""978-1-4302-1637-7"",
    doi = ""10.1007/978-1-4302-1637-7\_7"",
    url = ""https://doi.org/10.1007/978-1-4302-1637-7\_7""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Testing and Debugging Projects	https://doi.org/10.1007/978-1-4302-1637-7_7	Apress	nan; Authors; References; Link
537	Behave	Testing Batch Processes	Testing is everyone's favorite part of programming. The funny thing is, like most things in life, once you get good at it, testing actually is fun. It allows you to be more productive. It provides a safety net for you to try new things. Programmatic tests also give you a test bed to try new technologies (most companies don't mind if you want to try something new in the tests but mind greatly if you try it in code that's going to production). You've spent the previous ten chapters writing code without the ability to prove that any of it works. This chapter looks at how to exercise your code in a variety of ways so you can not only prove that it works as designed, but also provide a safety net for when you change it.		Minella, Michael T.	The Definitive Guide to Spring Batch	https://doi.org/10.1007/978-1-4842-3724-3_13		435--454	"""@Inbook{Minella2019,
    author = ""Minella, Michael T."",
    title = ""Testing Batch Processes"",
    bookTitle = ""The Definitive Guide to Spring Batch: Modern Finite Batch Processing in the Cloud"",
    year = ""2019"",
    publisher = ""Apress"",
    address = ""Berkeley, CA"",
    pages = ""435--454"",
    abstract = ""Testing is everyone's favorite part of programming. The funny thing is, like most things in life, once you get good at it, testing actually is fun. It allows you to be more productive. It provides a safety net for you to try new things. Programmatic tests also give you a test bed to try new technologies (most companies don't mind if you want to try something new in the tests but mind greatly if you try it in code that's going to production). You've spent the previous ten chapters writing code without the ability to prove that any of it works. This chapter looks at how to exercise your code in a variety of ways so you can not only prove that it works as designed, but also provide a safety net for when you change it."",
    isbn = ""978-1-4842-3724-3"",
    doi = ""10.1007/978-1-4842-3724-3\_13"",
    url = ""https://doi.org/10.1007/978-1-4842-3724-3\_13""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Testing Batch Processes	https://doi.org/10.1007/978-1-4842-3724-3_13	Apress	nan; Keywords; References; Link
538	Behave	Testing Chatbots with Charm	Chatbots are software programs with a conversational user interface, typically embedded in webs or messaging systems like Slack, Facebook Messenger or Telegram. Many companies are investing in chatbots to improve their customer support. This has led to a proliferation of chatbot creation platforms (e.g., Dialogflow, Lex, Watson). However, there is currently little support for testing chatbots, which may impact in their final quality.	Chatbots; Testing; Botium; Dialogflow	Bravo-Santos, Sergio; Guerra, Esther; de Lara, Juan	International Conference on the Quality of Information and Communications Technology	https://doi.org/10.1007/978-3-030-58793-2_34		426--438	"""@InProceedings{10.1007/978-3-030-58793-2_34,
    author = ""Bravo-Santos, Sergio and Guerra, Esther and de Lara, Juan"",
    editor = ""Shepperd, Martin and Brito e Abreu, Fernando and Rodrigues da Silva, Alberto and P{\'e}rez-Castillo, Ricardo"",
    title = ""Testing Chatbots with Charm"",
    booktitle = ""Quality of Information and Communications Technology"",
    year = ""2020"",
    publisher = ""Springer International Publishing"",
    address = ""Cham"",
    pages = ""426--438"",
    abstract = ""Chatbots are software programs with a conversational user interface, typically embedded in webs or messaging systems like Slack, Facebook Messenger or Telegram. Many companies are investing in chatbots to improve their customer support. This has led to a proliferation of chatbot creation platforms (e.g., Dialogflow, Lex, Watson). However, there is currently little support for testing chatbots, which may impact in their final quality."",
    isbn = ""978-3-030-58793-2""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Testing Chatbots with Charm	https://doi.org/10.1007/978-3-030-58793-2_34	Springer International Publishing	nan; References; Link
539	Behave	Testing Go Applications	Automated testing is an important practice in software engineering that ensures the quality of your applications. If you are concerned about application quality, you should write automated tests to verify the behavior of the components of your applications. In your Go applications, automated tests can ensure that the Go packages behave the way they were designed to work. Go provides the fundamental testing capabilities through its standard library packages and tooling support. In this chapter, you will learn how to write unit tests using standard library packages and third-party packages.		Varghese, Shiju	Web Development with Go	https://doi.org/10.1007/978-1-4842-1052-9_10		211--249	"""@Inbook{Varghese2015,
    author = ""Varghese, Shiju"",
    title = ""Testing Go Applications"",
    bookTitle = ""Web Development with Go: Building Scalable Web Apps and RESTful Services"",
    year = ""2015"",
    publisher = ""Apress"",
    address = ""Berkeley, CA"",
    pages = ""211--249"",
    abstract = ""Automated testing is an important practice in software engineering that ensures the quality of your applications. If you are concerned about application quality, you should write automated tests to verify the behavior of the components of your applications. In your Go applications, automated tests can ensure that the Go packages behave the way they were designed to work. Go provides the fundamental testing capabilities through its standard library packages and tooling support. In this chapter, you will learn how to write unit tests using standard library packages and third-party packages."",
    isbn = ""978-1-4842-1052-9"",
    doi = ""10.1007/978-1-4842-1052-9\_10"",
    url = ""https://doi.org/10.1007/978-1-4842-1052-9\_10""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Testing Go Applications	https://doi.org/10.1007/978-1-4842-1052-9_10	Apress	nan; Keywords; References; Link
540	Behave	Testing Idempotence for Infrastructure as Code	Due to the competitiveness of the computing industry, software developers are pressured to quickly deliver new code releases. At the same time, operators are expected to update and keep production systems stable at all times. To overcome the development--operations barrier, organizations have started to adopt Infrastructure as Code (IaC) tools to efficiently deploy middleware and applications using automation scripts. These automations comprise a series of steps that should be idempotent to guarantee repeatability and convergence. Rigorous testing is required to ensure that the system idempotently converges to a desired state, starting from arbitrary states. We propose and evaluate a model-based testing framework for IaC. An abstracted system model is utilized to derive state transition graphs, based on which we systematically generate test cases for the automation. The test cases are executed in light-weight virtual machine environments. Our prototype targets one popular IaC tool (Chef), but the approach is general. We apply our framework to a large base of public IaC scripts written by operators, showing that it correctly detects non-idempotent automations.	Middleware Deployment; Software Automation; Idempotence; Convergence; Infrastructure as Code; Software Testing	Hummer, Waldemar; Rosenberg, Florian; Oliveira, F{\'a}bio; Eilam, Tamar	ACM/IFIP/USENIX International Conference on Distributed Systems Platforms and Open Distributed Processing	https://doi.org/10.1007/978-3-642-45065-5_19		368--388	"""@InProceedings{10.1007/978-3-642-45065-5_19,
    author = ""Hummer, Waldemar and Rosenberg, Florian and Oliveira, F{\'a}bio and Eilam, Tamar"",
    editor = ""Eyers, David and Schwan, Karsten"",
    title = ""Testing Idempotence for Infrastructure as Code"",
    booktitle = ""Middleware 2013"",
    year = ""2013"",
    publisher = ""Springer Berlin Heidelberg"",
    address = ""Berlin, Heidelberg"",
    pages = ""368--388"",
    abstract = ""Due to the competitiveness of the computing industry, software developers are pressured to quickly deliver new code releases. At the same time, operators are expected to update and keep production systems stable at all times. To overcome the development--operations barrier, organizations have started to adopt Infrastructure as Code (IaC) tools to efficiently deploy middleware and applications using automation scripts. These automations comprise a series of steps that should be idempotent to guarantee repeatability and convergence. Rigorous testing is required to ensure that the system idempotently converges to a desired state, starting from arbitrary states. We propose and evaluate a model-based testing framework for IaC. An abstracted system model is utilized to derive state transition graphs, based on which we systematically generate test cases for the automation. The test cases are executed in light-weight virtual machine environments. Our prototype targets one popular IaC tool (Chef), but the approach is general. We apply our framework to a large base of public IaC scripts written by operators, showing that it correctly detects non-idempotent automations."",
    isbn = ""978-3-642-45065-5""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Testing Idempotence for Infrastructure as Code	https://link.springer.com/chapter/10.1007/978-3-642-45065-5_19	Springer Berlin Heidelberg	nan; References
541	Behave	Testing in DevOps	DevOps can be explained by a set of principles and these principles indicate that Testing in DevOps should be looked at differently. The customer must be at the center of testing and more specialized tests must also be used. To ensure that there is continuous feedback, automation should be used as much as possible. All these tests are the responsibility of one team. To achieve this, a test engineer in DevOps must become a T-shaped engineer.	Software testing; Software quality; Test automation; Test engineer; DevOps; Agile testing	Faber, Frank	The Future of Software Quality Assurance	https://doi.org/10.1007/978-3-030-29509-7_3		27--38	"""@Inbook{Faber2020,
    author = ""Faber, Frank"",
    editor = ""Goericke, Stephan"",
    title = ""Testing in DevOps"",
    bookTitle = ""The Future of Software Quality Assurance"",
    year = ""2020"",
    publisher = ""Springer International Publishing"",
    address = ""Cham"",
    pages = ""27--38"",
    abstract = ""DevOps can be explained by a set of principles and these principles indicate that Testing in DevOps should be looked at differently. The customer must be at the center of testing and more specialized tests must also be used. To ensure that there is continuous feedback, automation should be used as much as possible. All these tests are the responsibility of one team. To achieve this, a test engineer in DevOps must become a T-shaped engineer."",
    isbn = ""978-3-030-29509-7"",
    doi = ""10.1007/978-3-030-29509-7\_3"",
    url = ""https://doi.org/10.1007/978-3-030-29509-7\_3""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Testing in DevOps	https://link.springer.com/chapter/10.1007/978-3-030-29509-7_3	Springer International Publishing	nan; References
542	Behave	Testing in Node.js	Testing allows you the peace of mind to know that the code you wrote is actually performing the operations that it was intended to do. Node.js offers a native implementation for writing some form of unit tests, and the Node.js community has created several robust libraries to aid you in your test-driven development process.	Test Suite; Application Programming Interface; Coverage Test; Code Coverage; Callback Function	Gackenheimer, Cory	Node.js Recipes	https://doi.org/10.1007/978-1-4302-6059-2_11		281--310	"""@Inbook{Gackenheimer2013,
    author = ""Gackenheimer, Cory"",
    title = ""Testing in Node.js"",
    bookTitle = ""Node.js Recipes"",
    year = ""2013"",
    publisher = ""Apress"",
    address = ""Berkeley, CA"",
    pages = ""281--310"",
    abstract = ""Testing allows you the peace of mind to know that the code you wrote is actually performing the operations that it was intended to do. Node.js offers a native implementation for writing some form of unit tests, and the Node.js community has created several robust libraries to aid you in your test-driven development process."",
    isbn = ""978-1-4302-6059-2"",
    doi = ""10.1007/978-1-4302-6059-2\_11"",
    url = ""https://doi.org/10.1007/978-1-4302-6059-2\_11""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Testing in Node.js	https://link.springer.com/chapter/10.1007/978-1-4302-6059-2_11	Apress	nan; References
543	Behave	Testing Strategies in an Agile Context	Testing in an Agile context is extremely important, not only with its function to ensure quality but also to guide development efforts into the right direction. This is related to a shift in testing paradigms, with quality being viewed as a factor early on in product development, rather than a late-stage reactive activity. It also requires the application of different approaches, such as automation, to enable the flow of potentially shippable product increments. Many teams find themselves stuck into the old ways of testing, especially as they work on legacy systems. However, investment in upskilling quality experts, applying the proper tools, and changing the way testing is done can bring tremendous value and opportunities for innovation. Proper change management needs to be applied to enable teams transition successfully into an Agile mindset and new practices.	Software testing; Software quality; Agile testing; Test automation	Nikolova, Zornitsa	The Future of Software Quality Assurance	https://doi.org/10.1007/978-3-030-29509-7_9		111--121	"""@Inbook{Nikolova2020,
    author = ""Nikolova, Zornitsa"",
    editor = ""Goericke, Stephan"",
    title = ""Testing Strategies in an Agile Context"",
    bookTitle = ""The Future of Software Quality Assurance"",
    year = ""2020"",
    publisher = ""Springer International Publishing"",
    address = ""Cham"",
    pages = ""111--121"",
    abstract = ""Testing in an Agile context is extremely important, not only with its function to ensure quality but also to guide development efforts into the right direction. This is related to a shift in testing paradigms, with quality being viewed as a factor early on in product development, rather than a late-stage reactive activity. It also requires the application of different approaches, such as automation, to enable the flow of potentially shippable product increments. Many teams find themselves stuck into the old ways of testing, especially as they work on legacy systems. However, investment in upskilling quality experts, applying the proper tools, and changing the way testing is done can bring tremendous value and opportunities for innovation. Proper change management needs to be applied to enable teams transition successfully into an Agile mindset and new practices."",
    isbn = ""978-3-030-29509-7"",
    doi = ""10.1007/978-3-030-29509-7\_9"",
    url = ""https://doi.org/10.1007/978-3-030-29509-7\_9""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Testing Strategies in an Agile Context	https://doi.org/10.1007/978-3-030-29509-7_9	Springer International Publishing	nan; References; Link
544	Behave	Testing Strategies: How to Become a Better Tester?	This chapter about the general strategies to testing. We present the possible sources of testers' inspiration, psychological aspects of software testing, and several methodological laws and tools that may be helpful in the tester's everyday work. We also discuss the role of several methods and techniques, such as: standards and norms, error models, plans, documentation, estimation, metrics and simulations.		Roman, Adam	Thinking-Driven Testing	https://doi.org/10.1007/978-3-319-73195-7_2		53--97	"""@Inbook{Roman2018,
    author = ""Roman, Adam"",
    title = ""Testing Strategies: How to Become a Better Tester?"",
    bookTitle = ""Thinking-Driven Testing: The Most Reasonable Approach to Quality Control"",
    year = ""2018"",
    publisher = ""Springer International Publishing"",
    address = ""Cham"",
    pages = ""53--97"",
    abstract = ""This chapter about the general strategies to testing. We present the possible sources of testers' inspiration, psychological aspects of software testing, and several methodological laws and tools that may be helpful in the tester's everyday work. We also discuss the role of several methods and techniques, such as: standards and norms, error models, plans, documentation, estimation, metrics and simulations."",
    isbn = ""978-3-319-73195-7"",
    doi = ""10.1007/978-3-319-73195-7\_2"",
    url = ""https://doi.org/10.1007/978-3-319-73195-7\_2""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Testing Strategies: How to Become a Better Tester?	https://doi.org/10.1007/978-3-319-73195-7_2	Springer International Publishing	nan; Keywords; References; Link
545	Behave	Testing the Distributed System	In this chapter, you'll see the importance of having good test suites in a distributed system. You'll realize how Cucumber and structuring the test project into layers can provide a simple and powerful solution to cover an end-to-end strategy. Cucumber provides a business-friendly language to design the test cases---Gherkin---and it integrates with Java, so it's a choice that combines perfectly with our use case.	Dependency Injection; User John; assertThat; Microservices; Spring Boot	Macero, Moises	Learn Microservices with Spring Boot	https://doi.org/10.1007/978-1-4842-3165-4_6		267--314	"""@Inbook{Macero2017,
    author = ""Macero, Moises"",
    title = ""Testing the Distributed System"",
    bookTitle = ""Learn Microservices with Spring Boot: A Practical Approach to RESTful Services using RabbitMQ, Eureka, Ribbon, Zuul and Cucumber"",
    year = ""2017"",
    publisher = ""Apress"",
    address = ""Berkeley, CA"",
    pages = ""267--314"",
    abstract = ""In this chapter, you'll see the importance of having good test suites in a distributed system. You'll realize how Cucumber and structuring the test project into layers can provide a simple and powerful solution to cover an end-to-end strategy. Cucumber provides a business-friendly language to design the test cases---Gherkin---and it integrates with Java, so it's a choice that combines perfectly with our use case."",
    isbn = ""978-1-4842-3165-4"",
    doi = ""10.1007/978-1-4842-3165-4\_6"",
    url = ""https://doi.org/10.1007/978-1-4842-3165-4\_6""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Testing the Distributed System	https://doi.org/10.1007/978-1-4842-3165-4_6	Apress	nan; References; Link
546	Behave	Testing the User Interface	User Interface (UI) tests allow you to test your application from the outside, just as your users would see the application. Every time you decide to run your application on the simulator or device, you are, in effect, testing the UI of your application. Since Xcode 7, Apple has provided the ability to create automated UI tests. These automated UI tests are great at finding regression defects, and used correctly can reduce the regression testing effort for your apps.		Mishra, Abhishek	iOS Code Testing	https://doi.org/10.1007/978-1-4842-2689-6_13		407--432	"""@Inbook{Mishra2017,
    author = ""Mishra, Abhishek"",
    title = ""Testing the User Interface"",
    bookTitle = ""iOS Code Testing: Test-Driven Development and Behavior-Driven Development with Swift"",
    year = ""2017"",
    publisher = ""Apress"",
    address = ""Berkeley, CA"",
    pages = ""407--432"",
    abstract = ""User Interface (UI) tests allow you to test your application from the outside, just as your users would see the application. Every time you decide to run your application on the simulator or device, you are, in effect, testing the UI of your application. Since Xcode 7, Apple has provided the ability to create automated UI tests. These automated UI tests are great at finding regression defects, and used correctly can reduce the regression testing effort for your apps."",
    isbn = ""978-1-4842-2689-6"",
    doi = ""10.1007/978-1-4842-2689-6\_13"",
    url = ""https://doi.org/10.1007/978-1-4842-2689-6\_13""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Testing the User Interface	https://doi.org/10.1007/978-1-4842-2689-6_13	Apress	nan; Keywords; References; Link
547	Behave	Testing URLSession	This chapter will examine the process of applying TDD techniques to the networking layer of your application. There are various types of networking technologies available to iOS developers. This chapter will only cover networking with the URLSession class. The URLSession connection allows you to conveniently download resources over HTTP connections.		Mishra, Abhishek	iOS Code Testing	https://doi.org/10.1007/978-1-4842-2689-6_7		211--256	"""@Inbook{Mishra2017,
    author = ""Mishra, Abhishek"",
    title = ""Testing URLSession"",
    bookTitle = ""iOS Code Testing: Test-Driven Development and Behavior-Driven Development with Swift"",
    year = ""2017"",
    publisher = ""Apress"",
    address = ""Berkeley, CA"",
    pages = ""211--256"",
    abstract = ""This chapter will examine the process of applying TDD techniques to the networking layer of your application. There are various types of networking technologies available to iOS developers. This chapter will only cover networking with the URLSession class. The URLSession connection allows you to conveniently download resources over HTTP connections."",
    isbn = ""978-1-4842-2689-6"",
    doi = ""10.1007/978-1-4842-2689-6\_7"",
    url = ""https://doi.org/10.1007/978-1-4842-2689-6\_7""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Testing URLSession	https://doi.org/10.1007/978-1-4842-2689-6_7	Apress	nan; Keywords; References; Link
548	Behave	Testing Your Backbone.js Application	Testing is one of the most essential development activities that you will undertake in large-scale JavaScript applications. Within the vast JavaScript ecosystem, there are a number of options for testing applications, which means there is no longer any excuse for not testing your JavaScript code. This chapter will take a look at the leading testing frameworks available and how creating testable code will not only improve the stability of your application but lead to a cleaner architecture. This chapter also examines some of the key reasons to apply Test-Driven Development to your JavaScript code.	Test Suite; Unit Test; Testing Framework; Test Execution; Profile View	Sugrue, James	Beginning Backbone.js	https://doi.org/10.1007/978-1-4302-6335-7_8		151--178	"""@Inbook{Sugrue2013,
    author = ""Sugrue, James"",
    title = ""Testing Your Backbone.js Application"",
    bookTitle = ""Beginning Backbone.js"",
    year = ""2013"",
    publisher = ""Apress"",
    address = ""Berkeley, CA"",
    pages = ""151--178"",
    abstract = ""Testing is one of the most essential development activities that you will undertake in large-scale JavaScript applications. Within the vast JavaScript ecosystem, there are a number of options for testing applications, which means there is no longer any excuse for not testing your JavaScript code. This chapter will take a look at the leading testing frameworks available and how creating testable code will not only improve the stability of your application but lead to a cleaner architecture. This chapter also examines some of the key reasons to apply Test-Driven Development to your JavaScript code."",
    isbn = ""978-1-4302-6335-7"",
    doi = ""10.1007/978-1-4302-6335-7\_8"",
    url = ""https://doi.org/10.1007/978-1-4302-6335-7\_8""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Testing Your Backbone.js Application	https://doi.org/10.1007/978-1-4302-6335-7_8	Apress	nan; References; Link
549	Behave	Testing, Deployment, and Troubleshooting	This chapter contains three small chapters in one, namely, Testing, Deployment, and Troubleshooting. They do not aim to be complete guides for these topics but to provide the essentials for those who are starting this journey and how they apply to a Vue on Rails approach.		Lim, Bryan; LaFranchi, Richard	Vue on Rails	https://doi.org/10.1007/978-1-4842-5116-4_7		155--182	"""@Inbook{Lim2019,
    author = ""Lim, Bryan and LaFranchi, Richard"",
    title = ""Testing, Deployment, and Troubleshooting"",
    bookTitle = ""Vue on Rails: End-to-End Guide to Building Web Apps Using Vue.js and Rails"",
    year = ""2019"",
    publisher = ""Apress"",
    address = ""Berkeley, CA"",
    pages = ""155--182"",
    abstract = ""This chapter contains three small chapters in one, namely, Testing, Deployment, and Troubleshooting. They do not aim to be complete guides for these topics but to provide the essentials for those who are starting this journey and how they apply to a Vue on Rails approach."",
    isbn = ""978-1-4842-5116-4"",
    doi = ""10.1007/978-1-4842-5116-4\_7"",
    url = ""https://doi.org/10.1007/978-1-4842-5116-4\_7""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Testing, Deployment, and Troubleshooting	https://doi.org/10.1007/978-1-4842-5116-4_7	Apress	nan; Keywords; References; Link
550	Behave	Testmanagement und Softwaretest	http://link.springer.com/book/10.1007/978-3-658-25087-4	Softwaretest; Testprozess; Testmanagement; Testkonzept; Fehlermanagement; Testdurchfuhrung; Testplanung; Agiles Testen; Agile Testing; Mobile Testing; Modultest; Multivariate Testing; Systemtest; Testautomatisierung; Testnorm; V-Modell; Testen in der Cloud; Buch Softwaretest	Frank Witte		https://link.springer.com/book/10.1007/978-3-658-25087-4				Excluded	Excluded	new_screen			2	Springer Link		Testmanagement und Softwaretest	https://link.springer.com/book/10.1007/978-3-658-25087-4	Springer Link	nan; Venue; Abstract; References; Pages; Year; Bibtex
551	Behave	Thailand's Software Startup Ecosystem	Software startups are currently very popular in Thailand, and existing information reveals an increase in the number of participants and investors in software startup businesses. Moreover, widespread events have been held to showcase the products and services these businesses have contributed. Software startups primarily develop innovations in the form of software produced from limited resources within a limited time. This software must be able to contribute to a sustainable business, and must be adjustable to each business size. Previous research indicates that both attention and emphasis must be placed on the importance of studying software startups in the form of empirical research. This will assist decision-making for those who are interested in initiating software startups and those who want to support them. Research has scarcely studied software startups in Thailand, and therefore, we are interested in Thai startups' current situation as well as the startup ecosystem. This study clarifies that software startups in Thailand are defined as newly emerging businesses anticipated to help businesses grow quickly. Each software startup is in search of a different business model, as current software startups in Thailand have been created to help and support particular businesses. However, software startups rarely invent their own unique, exotic business models or apply advanced technologies and research in their startups.	Software startups; Software engineering; Case study	Nanthaamornphong, Aziz; Wetprasit, Rattana	Fundamentals of Software Startups	https://doi.org/10.1007/978-3-030-35983-6_12		195--213	"""@Inbook{Nanthaamornphong2020,
    author = ""Nanthaamornphong, Aziz and Wetprasit, Rattana"",
    editor = {Nguyen-Duc, Anh and M{\""u}nch, J{\""u}rgen and Prikladnicki, Rafael and Wang, Xiaofeng and Abrahamsson, Pekka},
    title = ""Thailand's Software Startup Ecosystem"",
    bookTitle = ""Fundamentals of Software Startups: Essential Engineering and Business Aspects"",
    year = ""2020"",
    publisher = ""Springer International Publishing"",
    address = ""Cham"",
    pages = ""195--213"",
    abstract = ""Software startups are currently very popular in Thailand, and existing information reveals an increase in the number of participants and investors in software startup businesses. Moreover, widespread events have been held to showcase the products and services these businesses have contributed. Software startups primarily develop innovations in the form of software produced from limited resources within a limited time. This software must be able to contribute to a sustainable business, and must be adjustable to each business size. Previous research indicates that both attention and emphasis must be placed on the importance of studying software startups in the form of empirical research. This will assist decision-making for those who are interested in initiating software startups and those who want to support them. Research has scarcely studied software startups in Thailand, and therefore, we are interested in Thai startups' current situation as well as the startup ecosystem. This study clarifies that software startups in Thailand are defined as newly emerging businesses anticipated to help businesses grow quickly. Each software startup is in search of a different business model, as current software startups in Thailand have been created to help and support particular businesses. However, software startups rarely invent their own unique, exotic business models or apply advanced technologies and research in their startups."",
    isbn = ""978-3-030-35983-6"",
    doi = ""10.1007/978-3-030-35983-6\_12"",
    url = ""https://doi.org/10.1007/978-3-030-35983-6\_12""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Thailand’s Software Startup Ecosystem	https://doi.org/10.1007/978-3-030-35983-6_12	Springer International Publishing	nan; References; Link
552	Behave	The ASMETA Approach to Safety Assurance of Software Systems	Safety-critical systems require development methods and processes that lead to provably correct systems in order to prevent catastrophic consequences due to system failure or unsafe operation. The use of models and formal analysis techniques is highly demanded both at design-time, to guarantee safety and other desired qualities already at the early stages of the system development, and at runtime, to address requirements assurance during the system operational stage.		Arcaini, Paolo; Bombarda, Andrea; Bonfanti, Silvia; Gargantini, Angelo; Riccobene, Elvinia; Scandurra, Patrizia	Logic, Computation and Rigorous Methods	https://doi.org/10.1007/978-3-030-76020-5_13		215--238	"""@Inbook{Arcaini2021,
    author = ""Arcaini, Paolo and Bombarda, Andrea and Bonfanti, Silvia and Gargantini, Angelo and Riccobene, Elvinia and Scandurra, Patrizia"",
    editor = ""Raschke, Alexander and Riccobene, Elvinia and Schewe, Klaus-Dieter"",
    title = ""The ASMETA Approach to Safety Assurance of Software Systems"",
    bookTitle = {Logic, Computation and Rigorous Methods: Essays Dedicated to Egon B{\""o}rger on the Occasion of His 75th Birthday},
    year = ""2021"",
    publisher = ""Springer International Publishing"",
    address = ""Cham"",
    pages = ""215--238"",
    abstract = ""Safety-critical systems require development methods and processes that lead to provably correct systems in order to prevent catastrophic consequences due to system failure or unsafe operation. The use of models and formal analysis techniques is highly demanded both at design-time, to guarantee safety and other desired qualities already at the early stages of the system development, and at runtime, to address requirements assurance during the system operational stage."",
    isbn = ""978-3-030-76020-5"",
    doi = ""10.1007/978-3-030-76020-5\_13"",
    url = ""https://doi.org/10.1007/978-3-030-76020-5\_13""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		The ASMETA Approach to Safety Assurance of Software Systems	https://doi.org/10.1007/978-3-030-76020-5_13	Springer International Publishing	nan; Keywords; References; Link
553	Behave	The Basic Spring Boot Application	The main goal of this chapter is to introduce the functional requirements of our application and the test-driven development approach you'll follow in this book. You'll create a Spring Boot application by developing some basic functionality using TDD.		Macero, Moises	Learn Microservices with Spring Boot	https://doi.org/10.1007/978-1-4842-3165-4_2		9--21	"""@Inbook{Macero2017,
    author = ""Macero, Moises"",
    title = ""The Basic Spring Boot Application"",
    bookTitle = ""Learn Microservices with Spring Boot: A Practical Approach to RESTful Services using RabbitMQ, Eureka, Ribbon, Zuul and Cucumber"",
    year = ""2017"",
    publisher = ""Apress"",
    address = ""Berkeley, CA"",
    pages = ""9--21"",
    abstract = ""The main goal of this chapter is to introduce the functional requirements of our application and the test-driven development approach you'll follow in this book. You'll create a Spring Boot application by developing some basic functionality using TDD."",
    isbn = ""978-1-4842-3165-4"",
    doi = ""10.1007/978-1-4842-3165-4\_2"",
    url = ""https://doi.org/10.1007/978-1-4842-3165-4\_2""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		The Basic Spring Boot Application	https://doi.org/10.1007/978-1-4842-3165-4_2	Apress	nan; Keywords; References; Link
554	Behave	The basics of simulation	Simulation is experimentation with a model. The behavior of the model imitates some salient aspect of the behavior of the system under study and the user experiments with the model to infer this behavior. This general framework has proven a powerful adjunct to learning, problem solving, design, and control. In this tutorial, we focus principally on discrete-event simulation - its underlying concepts, structure, and application.		White, K. Preston; Ingalls, Ricki G.		https://dl.acm.org/doi/10.5555/3466184.3466308		1087-1101	"""@inproceedings{10.5555/3466184.3466308,
    author = ""White, K. Preston and Ingalls, Ricki G."",
    title = ""The basics of simulation"",
    year = ""2021"",
    isbn = ""9781728194998"",
    publisher = ""IEEE Press"",
    abstract = ""Simulation is experimentation with a model. The behavior of the model imitates some salient aspect of the behavior of the system under study and the user experiments with the model to infer this behavior. This general framework has proven a powerful adjunct to learning, problem solving, design, and control. In this tutorial, we focus principally on discrete-event simulation - its underlying concepts, structure, and application."",
    booktitle = ""Proceedings of the Winter Simulation Conference"",
    pages = ""1087-1101"",
    numpages = ""15"",
    location = ""Orlando, Florida"",
    series = ""WSC '20""
}
"""	Excluded	Excluded	new_screen			2	ACM		The Basics	https://dl.acm.org/doi/10.5555/3466184.3466308	IEEE Press	nan; Venue; Keywords; References
555	Behave	The Big Green Check Mark	All this is a long-winded and hunger-inducing way of saying that there are many elements that determine whether something as simple as a sandwich gets the thumbs up, the seal of approval, the big green check mark. Software is no different. When software is produced, particularly when produced by a team as part of a business, there are lots of ways in which the production of the software could, in the final analysis, be considered unsatisfactory.	Technical Debt; Drudge Work; Smoke Test; Edge Cases; Behavior-driven Development	Gleeson, Patrick	Working with Coders	https://doi.org/10.1007/978-1-4842-2701-5_5		113--138	"""@Inbook{Gleeson2017,
    author = ""Gleeson, Patrick"",
    title = ""The Big Green Check Mark"",
    bookTitle = ""Working with Coders: A Guide to Software Development for the Perplexed Non-Techie"",
    year = ""2017"",
    publisher = ""Apress"",
    address = ""Berkeley, CA"",
    pages = ""113--138"",
    abstract = ""All this is a long-winded and hunger-inducing way of saying that there are many elements that determine whether something as simple as a sandwich gets the thumbs up, the seal of approval, the big green check mark. Software is no different. When software is produced, particularly when produced by a team as part of a business, there are lots of ways in which the production of the software could, in the final analysis, be considered unsatisfactory."",
    isbn = ""978-1-4842-2701-5"",
    doi = ""10.1007/978-1-4842-2701-5\_5"",
    url = ""https://doi.org/10.1007/978-1-4842-2701-5\_5""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		The Big Green Check Mark	https://doi.org/10.1007/978-1-4842-2701-5_5	Apress	nan; References; Link
556	Behave	The Design, Evolution, and Use of KernelF	KernelF is a functional language built on top of MPS. It is designed to be highly extensible and embeddable in order to support its use at the core of domain-specific languages, realising an approach we sometimes call Funclerative Programming. ``Funclerative'' is of course a mash-up of ``functional'' and ``declarative'' and refers to the idea of using functional programming in the small, and declarative language constructs for the larger-scale, often domain-specific, structures in a program. We have used KernelF in a wide range of languages including health and medicine, insurance contract definition, security analysis, salary calculations, smart contracts and language-definition. In this paper, I illustrate the evolution of KernelF over the last two years. I discuss requirements on the language, and how those drove design decisions. I showcase a couple of the DSLs we built on top of KernelF to explain how MPS was used to enable the necessary language modularity. I demonstrate how we have integrated the Z3 solver to verify some aspects of programs. I present the architecture we have used to use KernelF-based DSLs in safety-critical environments. I close the keynote with an outlook on how KernelF might evolve in the future, and point out a few challenges for which we don't yet have good solutions.	Domain-specific languages; Language modularity; Functional Language; Language engineering; Meta programming	Voelter, Markus	International Conference on Theory and Practice of Model Transformations	https://doi.org/10.1007/978-3-319-93317-7_1		3--55	"""@InProceedings{10.1007/978-3-319-93317-7_1,
    author = ""Voelter, Markus"",
    editor = ""Rensink, Arend and S{\'a}nchez Cuadrado, Jes{\'u}s"",
    title = ""The Design, Evolution, and Use of KernelF"",
    booktitle = ""Theory and Practice of Model Transformation"",
    year = ""2018"",
    publisher = ""Springer International Publishing"",
    address = ""Cham"",
    pages = ""3--55"",
    abstract = ""KernelF is a functional language built on top of MPS. It is designed to be highly extensible and embeddable in order to support its use at the core of domain-specific languages, realising an approach we sometimes call Funclerative Programming. ``Funclerative'' is of course a mash-up of ``functional'' and ``declarative'' and refers to the idea of using functional programming in the small, and declarative language constructs for the larger-scale, often domain-specific, structures in a program. We have used KernelF in a wide range of languages including health and medicine, insurance contract definition, security analysis, salary calculations, smart contracts and language-definition. In this paper, I illustrate the evolution of KernelF over the last two years. I discuss requirements on the language, and how those drove design decisions. I showcase a couple of the DSLs we built on top of KernelF to explain how MPS was used to enable the necessary language modularity. I demonstrate how we have integrated the Z3 solver to verify some aspects of programs. I present the architecture we have used to use KernelF-based DSLs in safety-critical environments. I close the keynote with an outlook on how KernelF might evolve in the future, and point out a few challenges for which we don't yet have good solutions."",
    isbn = ""978-3-319-93317-7""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		The Design, Evolution, and Use of KernelF	https://doi.org/10.1007/978-3-319-93317-7_1	Springer International Publishing	nan; References; Link
557	Behave	The Distinct Trends and Transitions in the Information Technology (IT) Space	There is an overwhelming recognition that IT is the real game-changer not only for worldwide businesses but also for the total humanity. The world is investing its talents, treasures, and time on IT, and therefore, there are several noteworthy advancements and accomplishments emerging and evolving in the hot IT field. By sagaciously leveraging those praiseworthy innovations and inventions, business houses across the globe are keeping up the edge earned. All kinds of business acceleration, augmentation, and automation get done through the bevy of IT improvisations. In the recent past, there is a tectonic twist. That is, IT is being adeptly enabled to empower people. All sorts of decision-making, deals, and deeds are being facilitated by IT systems. We can safely anticipate that IT is going to be hugely people-centric hereafter. IT is being tuned for performing not only informational, commercial, and transactional services but also for context-aware, cognitive, and physical services. Humans individually and collectively are getting immensely and immeasurably benefited out of the enigmatic IT. Thus, there is a pioneering and path-breaking impact on people by various evolutions and revolutions in the IT landscape. The disruptions and transformations being brought in by IT are simply incredible. In short, all kinds of industry verticals accelerate their operations, offerings, and outputs through the consistently growing power of IT. Besides IT systems, our everyday devices, machines, instruments, equipment, utensils, wares, consumer electronics, drones, robots, etc., are adequately and adroitly enable to be distinct in their actions and reactions. Physical, mechanical, and electrical systems are IT-enabled to exhibit adaptive behavior in their activities.	Business Acceleration; deploymentDeployment; Cloud Idea; Containment Isolation; Docker Container	Raj, Pethuru; Raman, Anupama	Software-Defined Cloud Centers	https://doi.org/10.1007/978-3-319-78637-7_1		1--12	"""@Inbook{Raj2018,
    author = ""Raj, Pethuru and Raman, Anupama"",
    title = ""The Distinct Trends and Transitions in the Information Technology (IT) Space"",
    bookTitle = ""Software-Defined Cloud Centers: Operational and Management Technologies and Tools"",
    year = ""2018"",
    publisher = ""Springer International Publishing"",
    address = ""Cham"",
    pages = ""1--12"",
    abstract = ""There is an overwhelming recognition that IT is the real game-changer not only for worldwide businesses but also for the total humanity. The world is investing its talents, treasures, and time on IT, and therefore, there are several noteworthy advancements and accomplishments emerging and evolving in the hot IT field. By sagaciously leveraging those praiseworthy innovations and inventions, business houses across the globe are keeping up the edge earned. All kinds of business acceleration, augmentation, and automation get done through the bevy of IT improvisations. In the recent past, there is a tectonic twist. That is, IT is being adeptly enabled to empower people. All sorts of decision-making, deals, and deeds are being facilitated by IT systems. We can safely anticipate that IT is going to be hugely people-centric hereafter. IT is being tuned for performing not only informational, commercial, and transactional services but also for context-aware, cognitive, and physical services. Humans individually and collectively are getting immensely and immeasurably benefited out of the enigmatic IT. Thus, there is a pioneering and path-breaking impact on people by various evolutions and revolutions in the IT landscape. The disruptions and transformations being brought in by IT are simply incredible. In short, all kinds of industry verticals accelerate their operations, offerings, and outputs through the consistently growing power of IT. Besides IT systems, our everyday devices, machines, instruments, equipment, utensils, wares, consumer electronics, drones, robots, etc., are adequately and adroitly enable to be distinct in their actions and reactions. Physical, mechanical, and electrical systems are IT-enabled to exhibit adaptive behavior in their activities."",
    isbn = ""978-3-319-78637-7"",
    doi = ""10.1007/978-3-319-78637-7\_1"",
    url = ""https://doi.org/10.1007/978-3-319-78637-7\_1""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		The Distinct Trends and Transitions in the Information Technology (IT) Space	https://doi.org/10.1007/978-3-319-78637-7_1	Springer International Publishing	nan; References; Link
558	Behave	The Ecosystem: Extending React Native	If you have come this far, you can proudly say you have become a React Native developer. In this final chapter you learn how expedite your React Native development by using some very useful, stable, and popular libraries. These are designed to make your life a bit easier and help you create your apps faster. This chapter covers the following topics:		Paul, Akshat; Nalwaya, Abhishek	React Native for Mobile Development	https://doi.org/10.1007/978-1-4842-4454-8_10		225--232	"""@Inbook{Paul2019,
    author = ""Paul, Akshat and Nalwaya, Abhishek"",
    title = ""The Ecosystem: Extending React Native"",
    bookTitle = ""React Native for Mobile Development: Harness the Power of React Native to Create Stunning iOS and Android Applications"",
    year = ""2019"",
    publisher = ""Apress"",
    address = ""Berkeley, CA"",
    pages = ""225--232"",
    abstract = ""If you have come this far, you can proudly say you have become a React Native developer. In this final chapter you learn how expedite your React Native development by using some very useful, stable, and popular libraries. These are designed to make your life a bit easier and help you create your apps faster. This chapter covers the following topics:"",
    isbn = ""978-1-4842-4454-8"",
    doi = ""10.1007/978-1-4842-4454-8\_10"",
    url = ""https://doi.org/10.1007/978-1-4842-4454-8\_10""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		The Ecosystem: Extending React Native	https://doi.org/10.1007/978-1-4842-4454-8_10	Apress	nan; Keywords; References; Link
559	Behave	The evolution of agile software development in Brazil	Agile software development methods have been increasingly adopted worldwide and became one of the mainstream software development approaches. Agile methods have also had an impact on software engineering education with universities adapting their courses to accommodate this new form of software development. Software engineering research has tried to evaluate the impact of agile methods in industrial projects and discover in which situations it is beneficial to apply such methods. However, there are almost no studies focusing on the progress of the agile movement in Brazil. In this paper, we present an overview of the evolution of the agile movement in Brazil, outlining the history of its first advocates in academia and industry. We describe existing educational initiatives, discuss the impact of the agile development on the national research, and present a report on the agile state-of-the-practice in the Brazilian IT industry.	Artificial Intelligence; Agile software development; Agile educational initiatives; Brazilian agile research; Brazilian agile state-of-the-practice; Object-oriented programming; History of computing	Claudia de O. Melo; Viviane Santos; Eduardo Katayama; Hugo Corbucci; Rafael Prikladnicki; Alfredo Goldman; Fabio Kon	Journal of the Brazilian Computer Society	https://doi.org/10.1007/s13173-013-0114-x	"Abbas N, Gravell AM, Wills GB (2008) Historical roots of agile methods: where did agile thinking come from? In: Agile processes in software engineering and extreme programming. Lecture notes in business information processing, vol 9. Springer, Berlin, pp 94-103; Aniche M, Gerosa M (2010) Most common mistakes in test-driven development practice: results from an online survey with developers. In: 2010 third international conference on software testing, verification, and validation workshops (ICSTW), IEEE, pp 469-478; citation_journal_title=Commun Assoc Inf Syst; citation_title=Assessing personality profiles of software developers in agile development teams; citation_author=V Balijepally, R Mahapatra, SP Nerur; citation_volume=18; citation_publication_date=2006; citation_pages=55-75; citation_id=CR3; citation_title=Extreme programming explained: embrace change, 1999; citation_publication_date=1999; citation_id=CR4; citation_author=K Beck; citation_publisher=Addison-Wesley; Bernardo P, Kon F (2007) Desenvolvendo com agilidade: experiencias na reimplementacao de um sistema de grande porte. In: Proceedings of the 1st workshop on rapid application development (WDRA2007) in the Brazillian symposium on software, quality (SBQS2007), pp 1-4; citation_journal_title=IEEE Softw; citation_title=Management challenges to implementing agile processes in traditional development organizations; citation_author=B Boehm, R Turner; citation_volume=22; citation_issue=5; citation_publication_date=2005; citation_pages=30-39; citation_id=CR6; Bravo M, Goldman A (2010) Reinforcing the learning of agile practices using coding dojos. In: Aalst W, Mylopoulos J, Sadeh NM, Shaw MJ, Szyperski C, Sillitti A, Martin A, Wang X, Whitworth E (eds) Agile processes in software engineering and extreme programming. Lecture notes in business information processing vol 48. Springer, Berlin, pp 379-380.; Brooks FP (1975) The mythical man-month: essays on software engineering. Addison-Wesley, Reading; Bunse C, Feldmann RL, Dorr J (2004) Agile methods in software engineering education. In: Extreme programming and agile processes in software engineering. Lecture notes in computer science, vol 3092. Springer, Berlin, pp 284-293; Cagnin MI, Maldonado JC, Germano FSR, Penteado RD (2003) Parfait: towards a framework-based agile reengineering process. In: Agile development conference, pp 22-31; Cameron KS, Ettington DR (1988) The conceptual foundations of organizational culture. Higher education, vol 4. Kluwer, Dordrecht; Cameron KS, Quinn RE (2011) Diagnosing and changing organizational culture: based on the competing values framework. Jossey-Bass, San Francisco; Cockburn A (2006) Agile software development: the cooperative game. Addison-Wesley Professional, Reading; Cohen J (1988) Statistical power analysis for the behavioral sciences, 2nd edn. Routledge Academic, London; citation_journal_title=Inf Syst Res; citation_title=Agility from first principles: reconstructing the concept of agility in information systems development; citation_author=K Conboy; citation_volume=20; citation_publication_date=2009; citation_pages=329-354; citation_doi=10.1287/isre.1090.0236; citation_id=CR15; Conboy K, Fitzgerald B (2010) Method and developer characteristics for effective agile method tailoring: a study of xp expert opinion. In: ACM Trans Softw Eng Methodol (TOSEM) 20:2:1-2:30; Corbucci H, Bravo M (2007) Archimedes--o cad aberto: Uma aplicacao para desenho tecnico baseada na plataforma do eclipse; Corbucci H, Goldman A, Katayama E, Kon F, Melo C, Santos V (2011) Genesis and evolution of the agile movement in Brazil--perspective from academia and industry, 25th Brazilian symposium on software engineering (SBES), pp 98-107; Creswell J (2009) Research design: qualitative, quantitative, and mixed methods approaches. Sage Publications, London; Derby E, Larsen D (2006) Agile retrospectives--making good teams great. Pragmatic Bookshelf, North Carolina; Dingsoyr T, Dyba T, Brede Moe N (2010) Agile software development: an introduction and overview. In: Agile software development: current research and future directions, 1st edn. Springer, Berlin, pp 1-13; Dingsoyr T, Moe NB, Balijepally V, Nerur SP (eds) (2011) Agile conference 2011, Agile. 
                  http://agile2011.agilealliance.org/
                  
                . Accessed January 2012; Ducasse S (2005) Squeak: learn programming with robots. Apress, New York; citation_journal_title=Inf Softw Technol; citation_title=Empirical studies of agile software development: a systematic review; citation_author=T Dyba, T Dingsoyr; citation_volume=50; citation_publication_date=2008; citation_pages=833-859; citation_doi=10.1016/j.infsof.2008.01.006; citation_id=CR24; citation_journal_title=Inf Softw Technol; citation_title=Empirical studies of agile software development: a systematic review; citation_author=T Dyba, T Dingsoyr; citation_volume=50; citation_publication_date=2008; citation_pages=833-859; citation_doi=10.1016/j.infsof.2008.01.006; citation_id=CR25; citation_journal_title=Qual Res; citation_title=Pluralism in qualitative research: the impact of different researchers and qualitative approaches on the analysis of qualitative data; citation_author=N Frost, SM Nolas, BBGC Esin, A Holt, L Mehdizadeh, P Shinebourne; citation_volume=10; citation_publication_date=2010; citation_pages=441-460; citation_doi=10.1177/1468794110366802; citation_id=CR26; Goldman A, Katayama E (2011) Retrato da comunidade academica de metodos ageis no Brasil. In: Workshop Brasileiro de Metodos Ageis (WBMA 2011), pp 1-10; citation_journal_title=J Brazilian Comput Soc; citation_title=Being extreme in the classroom: experiences teaching xp; citation_author=A Goldman, F Kon, PJS Silva, JW Yoder; citation_volume=10; citation_publication_date=2004; citation_pages=5-21; citation_doi=10.1590/S0104-65002004000300002; citation_id=CR28; Guba EG, Lincoln YS (1994) Competing paradigms in qualitative research. In: Qualitative research. Sage, London, pp 105-117; Hazzan O, Dubinsky Y (2003) Teaching a software development methodology: the case of extreme programming. In: 16th software engineering education and training (CSEE &T), IEEE, pp 176-184; Jalali S, Wohlin C (2012) Systematic literature studies: database searches vs. backward snowballing. In: ESEM, pp 29-38; Krill P (2010) Agile software development is now mainstream. InfoWorld, Pune; citation_journal_title=J Softw Evol Process; citation_title=Contextualizing agile software development; citation_author=P Kruchten; citation_volume=25; citation_issue=4; citation_publication_date=2011; citation_pages=351-361; citation_id=CR33; Kuhn TS (1962) The structure of scientific revolutions. University of Chicago Press, Chicago; citation_journal_title=IEEE Comput Soc; citation_title=Iterative and incremental development: a brief history; citation_author=C Larman, VR Basili; citation_volume=36; citation_publication_date=2003; citation_pages=47-56; citation_doi=10.1109/MC.2003.1204375; citation_id=CR35; citation_journal_title=Inf Softw Technol; citation_title=Revealing actual documentation usage in software maintenance through war stories; citation_author=WG Lutters, CB Seaman; citation_volume=49; citation_publication_date=2007; citation_pages=576-587; citation_doi=10.1016/j.infsof.2007.02.013; citation_id=CR36; Meirelles P, Santos C, Miranda J, Kon F, Terceiro A, Chavez C (2010) A study of the relationships between source code metrics and attractiveness in free software projects. In: 2010 Brazilian symposium on software engineering (SBES), IEEE, pp 11-20; Melnik G, Maurer F (2003) Introducing agile methods in learning environments: lessons learned. In: Extreme programming and agile methods. Lecture notes in computer science, vol 2753. Springer, Berlin, pp 172-184; Melnik G, Maurer F (2005) A cross-program investigation of students' perceptions of agile methods. In: Proceedings of the 27th international conference on software engineering. ACM, New York, pp 481-488; citation_journal_title=Inf Softw Technol; citation_title=Interpretative case studies on agile team productivity and management; citation_author=CO Melo, D Cruzes, F Kon, R Conradi; citation_volume=55; citation_issue=2; citation_publication_date=2012a; citation_pages=412-427; citation_id=CR40; Melo C, Santos VA, Corbucci H, Katayama E, Goldman A, Kon F (2012b) Metodos ageis no Brasil: estado da pratica em times e organizacoes. Technical report 03, Departamento de Computacao (IME-USP). 
                  http://www.agilcoop.bg.br/MetodosAGE-isBrasil2011
                  
                . Accessed June 2013; citation_journal_title=J Brazilian Comput Soc; citation_title=Scriptlattes: an open-source knowledge extraction system from the lattes platform; citation_author=JP Mena-Chalco, RM Cesar; citation_volume=15; citation_publication_date=2009; citation_pages=31-39; citation_doi=10.1007/BF03194511; citation_id=CR42; citation_journal_title=Inf Softw Technol; citation_title=A teamwork model for understanding an agile team: a case study of a scrum project; citation_author=NB Moe, T Dingsoyr, T Dyba; citation_volume=52; citation_publication_date=2010; citation_pages=480-491; citation_doi=10.1016/j.infsof.2009.11.004; citation_id=CR43; Muller MM, Link J, Sand R, Malpohl G (2004) Extreme programming in curriculum: experiences from academia and industry. In: Extreme programming and agile processes in software engineering. Lecture notes in computer science, vol 3092. Springer, Berlin, pp 294-302; citation_journal_title=MIS Q; citation_title=Prototyping: the new paradigm for systems development; citation_author=JD Naumann, AM Jenkins; citation_volume=6; citation_publication_date=1982; citation_pages=29-44; citation_doi=10.2307/248654; citation_id=CR45; Nerur S, Cannon A, Balijepally V, Bond P (2010) Towards an understanding of the conceptual underpinnings of agile development methodologies. In: Dingsoyr T, Dyba T, Moe N (eds) Agile software development. Springer, Berlin, pp 15-29; Oliveira RdM, Goldman A, Melo C (2013) Designing and managing agile informative workspaces: discovering and exploring patterns. In: Proceedings of the 46th Hawaii international conference on systems science (HICSS-46). Grand Wailea, Maui, pp 4790-4799; citation_title=Lean software development: an agile toolkit; citation_publication_date=2003; citation_id=CR48; citation_author=M Poppendieck; citation_author=T Poppendieck; citation_publisher=Addison-Wesley Longman Publishing Co., Inc.; Rico D, Sayani HH (2009) Use of agile methods in software engineering education. In: Agile 2009 conference, IEEE Computer Society, pp 174-179; Ries E (2011) The Lean startup: how today's entrepreneurs use continuous innovation to create radically successful businesses. Crown Business, New York; Royce WW (1970) Managing the development of large software systems. In: Proceedings of WESCON, pp 1-9. Also available in Proc. of ICSE 9, Computer Society Press, 1987; citation_journal_title=J Brazilian Comput Soc; citation_title=Assessing agile methods: an empirical study; citation_author=A Sampaio, A Vasconcelos, P Sampaio; citation_volume=10; citation_publication_date=2004; citation_pages=22-41; citation_doi=10.1590/S0104-65002004000300003; citation_id=CR52; Santos A, Martinez M, Kon F, Gerosa M, Michalsky S, Rozestraten A (2011) Da coleta de dados ao conhecimento obtido durante o desenvolvimento do projeto arquigrafia-Brasil. In: Congresso Internacional de Design da Informacao, pp 1-10; Santos V, Goldman A (2010) Aplicando tecnicas de grounded theory e retrospectiva Agil para buscar melhorias para o curso laboratorio xp (in Portuguese). In: VII experimental software engineering Latin America workshop (ESELAW). Goiania, Goias, pp 60-69; Santos V, Goldman A (2011) An approach on applying organizational learning in agile software organizations. In: Agile processes in software engineering and extreme programming. Lecture notes in business information processing, vol 77. Springer, Berlin, pp 324-325; Sato DT, Corbucci H, Bravo MV (2008) Coding dojo: an environment for learning and sharing agile practices. In: Proceedings agile 2008 conference, IEEE Computer Society, pp 459-464; Sato DT, Goldman A, Kon F (2007) Tracking the evolution of object-oriented quality metrics on agile projects. In: XP, pp 84-92; SBC (ed) (2011a) Experimental software engineering Latin American workshop, ESELAW. 
                  http://cibse.inf.puc-rio.br/pt/program_eselaw.php
                  
                . Accessed January 2012; SBC (ed) (2011b) Simposio Brasileiro de Engenharia de Software, SBES. 
                  http://www.each.usp.br/cbsoft2011/portugues/sbes/sbes_pt.html
                  
                . Acessed January 2012; SBC (ed) (2011c) Workshop Brasileiro de Metodos Ageis, WBMA. 
                  http://www.agilebrazil.com/2011/pt/wbma.php
                  
                . Acessed January 2012; SBC (ed) (2011d) Workshop de Desenvolvimento Rapido de Aplicacoes, WDRA. 
                  http://promise.cin.ufpe.br/wdra2011/index.html
                  
                . Acessed January 2012; Schwaber K, Beedle M (2001) Agile software development with scrum, 1st edn. Prentice Hall PTR, Upper Saddle River; citation_journal_title=Qual Quant; citation_title=Conducting online surveys; citation_author=MV Selm, N Jankowski; citation_volume=40; citation_publication_date=2006; citation_pages=435-456; citation_doi=10.1007/s11135-005-8081-8; citation_id=CR63; citation_journal_title=Am J Sociol; citation_title=The integration of fieldwork and survey methods; citation_author=SD Sieber; citation_volume=78; citation_publication_date=1973; citation_pages=1335-1359; citation_doi=10.1086/225467; citation_id=CR64; Sillitti A, Hazzan O, Bache E, Albaladejo X (eds) (2011) Proceedings of the agile processes in software engineering and extreme programming--12th international conference, XP 2011. Lecture notes in business information processing, vol 77, Madrid, Spain, 10-13 May 2011. Springer, Berlin; Silva AF, Asmussen C, Kon F, Goldman A, Ferreira CE (2004) Mico--university schedule planner. In: 5th workshop on free software (WSL'2004), Porto Alegre, pp 147-150; Silva AFd, Kon F, Torteli C (2005) XP south of the equator: an eXperience implementing XP in Brazil. In: Proceedings of the 6th international conference on extreme programming and agile processes in software engineering (XP2005). Springer, Berlin, pp 10-18; Softex (2010) Software and IT services: the Brazilian industry in perspective, vol 1. Observatorio SOFTEX, Campinas; Sue VM, Ritter LA (2007) Conducting online surveys. Sage Publications, Inc., London; citation_journal_title=Commun ACM; citation_title=Training future software developers to acquire agile development skills; citation_author=CH Tan, HH Teo; citation_volume=50; citation_publication_date=2007; citation_pages=97-98; citation_doi=10.1145/1323688.1323715; citation_id=CR70; Terceiro A, Costa J, Miranda J, Meirelles P, Rios LR, Almeida L, Chavez C, Kon F (2010) Analizo: an extensible multi-language source code analysis and visualization toolkit; VersionOne (2009) 4th annual state of agile development. 
                  http://versionone.com/state_of_agile_development_survey/09; VersionOne (2010) 5th annual state of agile development. 
                  http://versionone.com/state_of_agile_development_survey/10; VersionOne (2012) 7th annual state of agile evelopment. 
                  http://www.versionone.com/pdf/7th-Annual-state-of-Agile-Developmen-survey.pdf; citation_journal_title=Inform Syst Manag; citation_title=Can agile and traditional systems development approaches coexist? An ambidextrous view; citation_author=V Vinekar, C Slinkman, S Nenu; citation_volume=23; citation_issue=3; citation_publication_date=2006; citation_pages=31-42; citation_id=CR75; Wainer M (2003) Adaptations for teaching software development with extreme programming: an experience report. In: Extreme programming and agile methods. Lecture notes in computer science. Springer, Berlin, vol 2753, pp 199-207; West D, Grant T (2010) Agile development: mainstream adoption has changed agility--trends in real-world adoption of agile methods. Technical report, Forrester Research; Whitworth E, Biddle R (2007) The social nature of agile teams. In: Proceedings of the AGILE 2007. IEEE Computer Society, Washington, pp 26-36; citation_journal_title=Adv Comput; citation_title=Agile software development methodologies and practices; citation_author=L Williams; citation_volume=80; citation_publication_date=2010; citation_pages=1-44; citation_doi=10.1016/S0065-2458(10)80001-4; citation_id=CR79"			Excluded	Excluded	new_screen			2	Springer Link		The evolution of agile software development in Brazil	https://doi.org/10.1007/s13173-013-0114-x	Springer Link	nan; Pages; Year; Bibtex; Link
560	Behave	The Goals Approach: Agile Enterprise Driven Software Development	Continuous Business Process Improvement (BPI) is necessary in order to maintain and develop the enterprise competitiveness. However, achieving a level of software development performance that matches enterprise needs in terms of producing noticeable results within small amounts of time is a persnickety task, mainly because most available methods do not deliver full software architectures that can be directly used for in-house software development without iterations between implementation and design, as produced specifications are too close to the user interface, or too close to business regulations and domain modeling. Our approach applies a method that structures business processes, business rules and domain concepts, and uses this information in order to identify user tasks (use cases) and interaction spaces, and by means of their detail, methodically specify the software architecture for a particular BPI, bridging business and software using cross-consistent concepts. We present a theoretical example, and the validation of our method.	Enterprise engineering; Software engineering; Human-Computer interaction; Enterprise architecture; Software architecture	Valente, Pedro; Silva, Thiago; Winckler, Marco; Nunes, Nuno	Complexity in Information Systems Development	https://doi.org/10.1007/978-3-319-52593-8_13		201--219	"""@InProceedings{10.1007/978-3-319-52593-8_13,
    author = ""Valente, Pedro and Silva, Thiago and Winckler, Marco and Nunes, Nuno"",
    editor = ""Goluchowski, Jerzy and Pankowska, Malgorzata and Linger, Henry and Barry, Chris and Lang, Michael and Schneider, Christoph"",
    title = ""The Goals Approach: Agile Enterprise Driven Software Development"",
    booktitle = ""Complexity in Information Systems Development"",
    year = ""2017"",
    publisher = ""Springer International Publishing"",
    address = ""Cham"",
    pages = ""201--219"",
    abstract = ""Continuous Business Process Improvement (BPI) is necessary in order to maintain and develop the enterprise competitiveness. However, achieving a level of software development performance that matches enterprise needs in terms of producing noticeable results within small amounts of time is a persnickety task, mainly because most available methods do not deliver full software architectures that can be directly used for in-house software development without iterations between implementation and design, as produced specifications are too close to the user interface, or too close to business regulations and domain modeling. Our approach applies a method that structures business processes, business rules and domain concepts, and uses this information in order to identify user tasks (use cases) and interaction spaces, and by means of their detail, methodically specify the software architecture for a particular BPI, bridging business and software using cross-consistent concepts. We present a theoretical example, and the validation of our method."",
    isbn = ""978-3-319-52593-8""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		The Goals Approach: Agile Enterprise Driven Software Development	https://doi.org/10.1007/978-3-319-52593-8_13	Springer International Publishing	nan; References; Link
561	Behave	The Goals Approach: Enterprise Model-Driven Agile Human-Centered Software Engineering	Business Process Improvement (BPI) is a key issue in the development of the enterprise competitiveness. However, achieving a level of software development performance that matches enterprise BPI needs in terms of producing noticeable results in small amounts of time requires the existence of a comprehensive and also agile Software Development Process (SDP). Quite often, SDPs do not deliver software architectures that can be directly used for in-house development, as specifications are either too close to the user interface design or too close to business rules and application domain modeling, and produce architectures that do not cope with software development concerns. In this paper we present the Goals Approach, which structures business processes to extract requirements, and methodologically details them in order to specify the user interface, the business logic and the database structures for the architecture of a BPI. Our approach aims in-house software development in small and medium enterprises.	Enterprise engineering; Software engineering; Human-Computer Interaction; Agile software development process; Software architecture	Valente, Pedro; Silva, Thiago Rocha; Winckler, Marco; Nunes, Nuno Jardim	International Working Conference on Human Error, Safety, and System Development	https://doi.org/10.1007/978-3-319-44902-9_17		261--280	"""@InProceedings{10.1007/978-3-319-44902-9_17,
    author = ""Valente, Pedro and Silva, Thiago Rocha and Winckler, Marco and Nunes, Nuno Jardim"",
    editor = ""Bogdan, Cristian and Gulliksen, Jan and Sauer, Stefan and Forbrig, Peter and Winckler, Marco and Johnson, Chris and Palanque, Philippe and Bernhaupt, Regina and Kis, Filip"",
    title = ""The Goals Approach: Enterprise Model-Driven Agile Human-Centered Software Engineering"",
    booktitle = ""Human-Centered and Error-Resilient Systems Development"",
    year = ""2016"",
    publisher = ""Springer International Publishing"",
    address = ""Cham"",
    pages = ""261--280"",
    abstract = ""Business Process Improvement (BPI) is a key issue in the development of the enterprise competitiveness. However, achieving a level of software development performance that matches enterprise BPI needs in terms of producing noticeable results in small amounts of time requires the existence of a comprehensive and also agile Software Development Process (SDP). Quite often, SDPs do not deliver software architectures that can be directly used for in-house development, as specifications are either too close to the user interface design or too close to business rules and application domain modeling, and produce architectures that do not cope with software development concerns. In this paper we present the Goals Approach, which structures business processes to extract requirements, and methodologically details them in order to specify the user interface, the business logic and the database structures for the architecture of a BPI. Our approach aims in-house software development in small and medium enterprises."",
    isbn = ""978-3-319-44902-9""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		The Goals Approach: Enterprise Model-Driven Agile Human-Centered Software Engineering	https://doi.org/10.1007/978-3-319-44902-9_17	Springer International Publishing	nan; References; Link
562	Behave	The MVVM Architectural Pattern	Well over a billion apps have been developed for the iOS platform since its inception. Most of the early apps were rather simple and often developed by a single developer. Over the years, iOS apps have become increasingly complex pieces of software that often involve large, distributed teams of developers working in Agile environments with complex build and release pipelines.		Mishra, Abhishek	iOS Code Testing	https://doi.org/10.1007/978-1-4842-2689-6_3		43--60	"""@Inbook{Mishra2017,
    author = ""Mishra, Abhishek"",
    title = ""The MVVM Architectural Pattern"",
    bookTitle = ""iOS Code Testing: Test-Driven Development and Behavior-Driven Development with Swift"",
    year = ""2017"",
    publisher = ""Apress"",
    address = ""Berkeley, CA"",
    pages = ""43--60"",
    abstract = ""Well over a billion apps have been developed for the iOS platform since its inception. Most of the early apps were rather simple and often developed by a single developer. Over the years, iOS apps have become increasingly complex pieces of software that often involve large, distributed teams of developers working in Agile environments with complex build and release pipelines."",
    isbn = ""978-1-4842-2689-6"",
    doi = ""10.1007/978-1-4842-2689-6\_3"",
    url = ""https://doi.org/10.1007/978-1-4842-2689-6\_3""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		The MVVM Architectural Pattern	https://doi.org/10.1007/978-1-4842-2689-6_3	Apress	nan; Keywords; References; Link
563	Behave	The Product Backlog	One of the most important artifacts in the Scrum Framework is the Product Backlog. Like the other artifacts, its purpose is to make something transparent and clear. It is managed and maintained by the Product Owner, and its purpose is to make clear the plan for developing a product and the sequence in which the product's features and functions are to be created.		Fowler, Frederik M.	Navigating Hybrid Scrum Environments	https://doi.org/10.1007/978-1-4842-4164-6_9		59--66	"""@Inbook{Fowler2019,
    author = ""Fowler, Frederik M."",
    title = ""The Product Backlog"",
    bookTitle = ""Navigating Hybrid Scrum Environments: Understanding the Essentials, Avoiding the Pitfalls"",
    year = ""2019"",
    publisher = ""Apress"",
    address = ""Berkeley, CA"",
    pages = ""59--66"",
    abstract = ""One of the most important artifacts in the Scrum Framework is the Product Backlog. Like the other artifacts, its purpose is to make something transparent and clear. It is managed and maintained by the Product Owner, and its purpose is to make clear the plan for developing a product and the sequence in which the product's features and functions are to be created."",
    isbn = ""978-1-4842-4164-6"",
    doi = ""10.1007/978-1-4842-4164-6\_9"",
    url = ""https://doi.org/10.1007/978-1-4842-4164-6\_9""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		The Product Backlog	https://doi.org/10.1007/978-1-4842-4164-6_9	Apress	nan; Keywords; References; Link
564	Behave	The Protractor Handbook	http://link.springer.com/book/10.1007/978-1-4842-7289-3	Protractor; Selenium; WebDriverJS; Angular; JavaScript; Node.js; wdio; Jasmine; automation testing	Shashank Shukla		https://link.springer.com/book/10.1007/978-1-4842-7289-3				Excluded	Excluded	new_screen			2	Springer Link		The Protractor Handbook	https://link.springer.com/book/10.1007/978-1-4842-7289-3	Springer Link	nan; Venue; Abstract; References; Pages; Year; Bibtex
565	Behave	The State of Agile Software Development in the Czech Republic: Preliminary Findings Indicate the Dominance of ``Abridged'' Scrum	This paper presents preliminary results from a survey focused on the state of agile method adoption in the Czech Republic. To this end, an initial survey sample (N{\thinspace}={\thinspace}120) was analyzed. Scrum is the most frequently used agile software development method, reported by 46.7{\%} of respondents as the agile method of choice. However, the results indicate that Scrum seems to be introduced through cherry-picking of those practices that are quite easy to implement. Specifically, the only widely-spread Scrum practice is the maintenance of Product backlog. To the contrary, the teams are rarely cross-functional and the Scrum master role frequently absents. This suggests that in many organizations, Scrum might be invoked due to being a valuable ``brand name'', rather than due to professionals' subscribing to core Scrum values and assumptions. Our results contribute to the body of empirical knowledge on the state of agile software development initiatives. Our findings confirm the theoretical proposition that in the real world, the implementation of software development methods is often patchy and rarely done ``by the book''.	Software project management; Agile methods; Agile practices; Scrum practices; Scrum variations; Agile method tailoring; Hybrid methods	Dolezel, Michal; Buchalcevova, Alena; Mencik, Michal	International Conference on Research and Practical Issues of Enterprise Information Systems	https://doi.org/10.1007/978-3-030-37632-1_4		43--54	"""@InProceedings{10.1007/978-3-030-37632-1_4,
    author = ""Dolezel, Michal and Buchalcevova, Alena and Mencik, Michal"",
    editor = ""Doucek, Petr and Basl, Josef and Tjoa, A Min and Raffai, Maria and Pavlicek, Antonin and Detter, Katrin"",
    title = ""The State of Agile Software Development in the Czech Republic: Preliminary Findings Indicate the Dominance of ``Abridged'' Scrum"",
    booktitle = ""Research and Practical Issues of Enterprise Information Systems"",
    year = ""2019"",
    publisher = ""Springer International Publishing"",
    address = ""Cham"",
    pages = ""43--54"",
    abstract = ""This paper presents preliminary results from a survey focused on the state of agile method adoption in the Czech Republic. To this end, an initial survey sample (N{\thinspace}={\thinspace}120) was analyzed. Scrum is the most frequently used agile software development method, reported by 46.7{\\%} of respondents as the agile method of choice. However, the results indicate that Scrum seems to be introduced through cherry-picking of those practices that are quite easy to implement. Specifically, the only widely-spread Scrum practice is the maintenance of Product backlog. To the contrary, the teams are rarely cross-functional and the Scrum master role frequently absents. This suggests that in many organizations, Scrum might be invoked due to being a valuable ``brand name'', rather than due to professionals' subscribing to core Scrum values and assumptions. Our results contribute to the body of empirical knowledge on the state of agile software development initiatives. Our findings confirm the theoretical proposition that in the real world, the implementation of software development methods is often patchy and rarely done ``by the book''."",
    isbn = ""978-3-030-37632-1""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		The State of Agile Software Development in the Czech Republic: Preliminary Findings Indicate the Dominance of “Abridged” Scrum	https://doi.org/10.1007/978-3-030-37632-1_4	Springer International Publishing	nan; References; Link
566	Behave	The Study of the Effectiveness of the Secure Software Development Life-Cycle Models in IT Project Management	Software security is an important and a prevalent element in today's society. The System Development Life-Cycle (SDLC) process that is currently used for most of software development does not address any security components until after the software is developed. The Secure Software Development Life-Cycle (SSDLC) is similar to the SDLC but includes security components into the phases. There have been many models proposed that are primary modified from preexisting SSDLC models. A study was conducted to survey different SSDLC models and their effectiveness. The authors first identified four popular SSDLC models in the IT industry, and then analyzed their common characteristics to derived four sets of Criteria for comparison. These criteria are: Focus Areas of Application, Implementation of model, Security Implementations and Enhancements, and Security training and Staff. The comparison results demonstrate that the Rastogi and Jones model is an effective one for being used for many IT projects. However, it is worthy to mentioned that one specific model cannot be used for all types of IT projects because IT projects are different.	System Development Life-cycle (SDLC); Secure Software Development Life-cycle (SSDLC); Security; IT Project Management	Duclervil, Saniora R.; Liou, Jing-Chiou	16th International Conference on Information Technology-New Generations (ITNG 2019)	https://doi.org/10.1007/978-3-030-14070-0_14		91--96	"""@InProceedings{10.1007/978-3-030-14070-0_14,
    author = ""Duclervil, Saniora R. and Liou, Jing-Chiou"",
    editor = ""Latifi, Shahram"",
    title = ""The Study of the Effectiveness of the Secure Software Development Life-Cycle Models in IT Project Management"",
    booktitle = ""16th International Conference on Information Technology-New Generations (ITNG 2019)"",
    year = ""2019"",
    publisher = ""Springer International Publishing"",
    address = ""Cham"",
    pages = ""91--96"",
    abstract = ""Software security is an important and a prevalent element in today's society. The System Development Life-Cycle (SDLC) process that is currently used for most of software development does not address any security components until after the software is developed. The Secure Software Development Life-Cycle (SSDLC) is similar to the SDLC but includes security components into the phases. There have been many models proposed that are primary modified from preexisting SSDLC models. A study was conducted to survey different SSDLC models and their effectiveness. The authors first identified four popular SSDLC models in the IT industry, and then analyzed their common characteristics to derived four sets of Criteria for comparison. These criteria are: Focus Areas of Application, Implementation of model, Security Implementations and Enhancements, and Security training and Staff. The comparison results demonstrate that the Rastogi and Jones model is an effective one for being used for many IT projects. However, it is worthy to mentioned that one specific model cannot be used for all types of IT projects because IT projects are different."",
    isbn = ""978-3-030-14070-0""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		The Study of the Effectiveness of the Secure Software Development Life-Cycle Models in IT Project Management	https://doi.org/10.1007/978-3-030-14070-0_14	Springer International Publishing	nan; References; Link
567	Behave	To Build a Fire	Autumn arrives, and the team is celebrating a year into their journey. They can claim some real victories. They've really stepped up their game with monitoring and gathering metrics; just in the past few months, they've investigated some cool new SaaS-based monitoring services, which has improved their visibility into their application's actual performance in the field. Better yet, they're actually caring about the right things; showing business-facing metrics like their order processing rate is helping everyone visualize the part they're playing in a very long delivery chain. But they are still lacking executive support they need; how can they get the protection to finish the next step of their journey?		Harrison, Dave; Lively, Knox	Achieving DevOps	https://doi.org/10.1007/978-1-4842-4388-6_7		311--367	"""@Inbook{Harrison2019,
    author = ""Harrison, Dave and Lively, Knox"",
    title = ""To Build a Fire"",
    bookTitle = ""Achieving DevOps: A Novel About Delivering the Best of Agile, DevOps, and Microservices"",
    year = ""2019"",
    publisher = ""Apress"",
    address = ""Berkeley, CA"",
    pages = ""311--367"",
    abstract = ""Autumn arrives, and the team is celebrating a year into their journey. They can claim some real victories. They've really stepped up their game with monitoring and gathering metrics; just in the past few months, they've investigated some cool new SaaS-based monitoring services, which has improved their visibility into their application's actual performance in the field. Better yet, they're actually caring about the right things; showing business-facing metrics like their order processing rate is helping everyone visualize the part they're playing in a very long delivery chain. But they are still lacking executive support they need; how can they get the protection to finish the next step of their journey?"",
    isbn = ""978-1-4842-4388-6"",
    doi = ""10.1007/978-1-4842-4388-6\_7"",
    url = ""https://doi.org/10.1007/978-1-4842-4388-6\_7""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		To Build a Fire	https://doi.org/10.1007/978-1-4842-4388-6_7	Apress	nan; Keywords; References; Link
568	Behave	Towards a Taxonomy of Microservices Architectures	The microservices architectural style is gaining more and more momentum for the development of applications as suites of small, autonomous, and conversational services, which are then easy to understand, deploy and scale. However, the proliferation of approaches leveraging microservices calls for a systematic way of analyzing and assessing them as a completely new ecosystem: the first cloud-native architectural style. This paper defines a preliminary analysis framework in the form of a taxonomy of concepts, encompassing the whole microservices lifecycle, as well as organizational aspects. This framework is necessary to enable effective exploration, understanding, assessing, comparing, and selecting microservice-based models, languages, techniques, platforms, and tools. Then, we analyze state of the art approaches related to microservices using this taxonomy to provide a holistic perspective of available solutions.	Microservice Architecture; Preliminary Analytical Framework; Resilience Patterns; Open Cloud Computing Interface (OCCI); OpenAPI Specification	Garriga, Martin	International Conference on Software Engineering and Formal Methods	https://doi.org/10.1007/978-3-319-74781-1_15		203--218	"""@InProceedings{10.1007/978-3-319-74781-1_15,
    author = ""Garriga, Martin"",
    editor = ""Cerone, Antonio and Roveri, Marco"",
    title = ""Towards a Taxonomy of Microservices Architectures"",
    booktitle = ""Software Engineering and Formal Methods"",
    year = ""2018"",
    publisher = ""Springer International Publishing"",
    address = ""Cham"",
    pages = ""203--218"",
    abstract = ""The microservices architectural style is gaining more and more momentum for the development of applications as suites of small, autonomous, and conversational services, which are then easy to understand, deploy and scale. However, the proliferation of approaches leveraging microservices calls for a systematic way of analyzing and assessing them as a completely new ecosystem: the first cloud-native architectural style. This paper defines a preliminary analysis framework in the form of a taxonomy of concepts, encompassing the whole microservices lifecycle, as well as organizational aspects. This framework is necessary to enable effective exploration, understanding, assessing, comparing, and selecting microservice-based models, languages, techniques, platforms, and tools. Then, we analyze state of the art approaches related to microservices using this taxonomy to provide a holistic perspective of available solutions."",
    isbn = ""978-3-319-74781-1""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Towards a Taxonomy of Microservices Architectures	https://doi.org/10.1007/978-3-319-74781-1_15	Springer International Publishing	nan; References; Link
569	Behave	Towards a Verification-Driven Iterative Development of Software for Safety-Critical Cyber-Physical Systems	Software systems are complicated, and the scientific and engineering methodologies for software development are relatively young. Cyber-physical systems are now in every corner of our lives, and we need robust methods for handling the ever-increasing complexity of their software systems. Model-Driven Development is a promising approach to tackle the complexity of systems through the concept of abstraction, enabling analysis at earlier phases of development. In this paper, we propose a model-driven approach with a focus on guaranteeing safety using formal verification. Cyber-physical systems are distributed, concurrent, asynchronous and event-based reactive systems with timing constraints. The actor-based textual modeling language, Rebeca, with model checking support is used for formal verification. Starting from structured requirements and system architecture design the behavioral models, including Rebeca models, are built. Properties of interest are also derived from the structured requirements, and then model checking is used to formally verify the properties. This process can be performed in iterations until satisfaction of desired properties are ensured, and possible ambiguities and inconsistencies in requirements are resolved. The formally verified models can then be used to develop the executable code. The Rebeca models include the details of the signals and messages that are passed at the network level including the timing, and this facilitates the generation of executable code. The natural mappings among the models for requirements, the formal models, and the executable code improve the effectiveness and efficiency of the approach.	Model checking; Verification & validation; Safety-critical systems; Model driven development; Requirements; Cyber-physical systems	Marjan Sirjani,; Luciana Provenzano; Sara Abbaspour Asadollah; Mahshid Helali Moghadam,; Mehrdad Saadatmand	Journal of Internet Services and Applications	https://doi.org/10.1186/s13174-021-00132-z	"Lee EA. Cyber physical systems: Design challenges. In: 2008 11th IEEE International Symposium on Object and Component-oriented Real-time Distributed Computing (ISORC). IEEE: 2008. p. 363-9.; citation_journal_title=Computer; citation_title=The problem with threads; citation_author=EA Lee; citation_volume=39; citation_issue=5; citation_publication_date=2006; citation_pages=33-42; citation_doi=10.1109/MC.2006.180; citation_id=CR2; citation_title=System Design, Modeling, and Simulation Using Ptolemy II, vol. 1; citation_publication_date=2014; citation_id=CR3; citation_author=C Ptolemaeus; citation_publisher=Ptolemy.org; Lee EA, Sirjani M. What good are models? In: Formal Aspects of Component Software - 15th International Conference, FACS 2018, Pohang, South Korea, October 10-12, 2018, Proceedings. Lecture Notes in Computer Science, vol. 11222. Springer: 2018. p. 3-31.; citation_title=Power is overrated, go for friendliness! expressiveness, faithfulness, and usability in modeling: the actor experience; citation_inbook_title=Principles of Modeling; citation_publication_date=2018; citation_id=CR5; citation_author=M Sirjani; citation_publisher=Springer; Holzmann G. Spin Model Checker, the: Primer and Reference Manual. 2003.; citation_journal_title=International Journal on Software Tools for Technology Transfer; citation_title=Nusmv: a new symbolic model checker; citation_author=A Cimatti, E Clarke, F Giunchiglia, M Roveri; citation_volume=2; citation_issue=4; citation_publication_date=2000; citation_pages=410-25; citation_doi=10.1007/s100090050046; citation_id=CR7; citation_journal_title=Int J Softw Tools Technol Tran (STTT); citation_title=Uppaal in a nutshell; citation_author=KG Larsen, P Pettersson, W Yi; citation_volume=1; citation_issue=1; citation_publication_date=1997; citation_pages=134-52; citation_doi=10.1007/s100090050010; citation_id=CR8; citation_journal_title=Sci Comput Program; citation_title=Modelling and simulation of asynchronous real-time systems using timed Rebeca; citation_author=AH Reynisson, M Sirjani, L Aceto, M Cimini, A Jafari, A Ingolfsdottir, SH Sigurdarson; citation_volume=89; citation_publication_date=2014; citation_pages=41-68; citation_doi=10.1016/j.scico.2014.01.008; citation_id=CR9; citation_title=On time actors; citation_inbook_title=Theory and Practice of Formal Methods; citation_publication_date=2016; citation_id=CR10; citation_author=M Sirjani; citation_author=E Khamespanah; citation_publisher=Springer; citation_journal_title=Sci Comput Program; citation_title=Timed Rebeca schedulability and deadlock freedom analysis using bounded floating time transition system; citation_author=E Khamespanah, M Sirjani, Z Sabahi-Kaviani, R Khosravi, M Izadi; citation_volume=98; citation_publication_date=2015; citation_pages=184-204; citation_doi=10.1016/j.scico.2014.07.005; citation_id=CR11; citation_journal_title=Mathematics; citation_title=Verification of cyberphysical systems; citation_author=M Sirjani, EA Lee, E Khamespanah; citation_volume=8; citation_issue=7; citation_publication_date=2020; citation_pages=1068; citation_doi=10.3390/math8071068; citation_id=CR12; citation_title=Formal modeling and analysis of medical systems; citation_inbook_title=International Conference on Coordination Languages and Models; citation_publication_date=2020; citation_id=CR13; citation_author=M Zarneshan; citation_author=F Ghassemi; citation_author=M Sirjani; citation_publisher=Springer; citation_title=An actor-based approach for security analysis of cyber-physical systems; citation_inbook_title=International Conference on Formal Methods for Industrial Critical Systems; citation_publication_date=2020; citation_id=CR14; citation_author=F Moradi; citation_author=SA Asadollah; citation_author=A Sedaghatbaf; citation_author=A Causevic; citation_author=M Sirjani; citation_author=C Talcott; citation_publisher=Springer; Rebeca. Rebeca Homepage. 
                  http://www.rebeca-lang.org/
                  
                . Retrieved July 2019.; citation_journal_title=Fundam Informaticae; citation_title=Modeling and verification of reactive systems using Rebeca; citation_author=M Sirjani, A Movaghar, A Shali, FS De Boer; citation_volume=63; citation_issue=4; citation_publication_date=2004; citation_pages=385-410; citation_id=CR16; citation_title=Rebeca: Theory, applications, and tools; citation_inbook_title=International Symposium on Formal Methods for Components and Objects; citation_publication_date=2006; citation_id=CR17; citation_author=M Sirjani; citation_publisher=Springer; citation_journal_title=ACM Comput Surv; citation_title=A survey of active object languages; citation_author=FS de Boer, V Serbanescu, R Hahnle, L Henrio, J Rochas, CC Din, EB Johnsen, M Sirjani, E Khamespanah, K Fernandez-Reyes, AM Yang; citation_volume=50; citation_issue=5; citation_publication_date=2017; citation_pages=76-17639; citation_id=CR18; Sirjani M, Provenzano L, Asadollah SA, Moghadam MH. From requirements to verifiable executable models using Rebeca. In: International Workshop on Automated and Verifiable Software sYstem DEvelopment: 2019. 
                  http://www.es.mdh.se/publications/5645-
                  
                .; Provenzano L, Hanninen K, Zhou J, Lundqvist K. An ontological approach to elicit safety requirements. In: 2017 24th Asia-Pacific Software Engineering Conference (APSEC). IEEE: 2017. p. 713-8.; Firesmith DG. A taxonomy of safety-related requirements. Requir Eng. 2004. White paper - Carnegie Mellon University.; Zhou J, Hanninen K, Lundqvist K, Provenzano L. An ontological approach to hazard identification for safety-critical systems. In: 2017 Second International Conference on Reliability Systems Engineering (ICRSE). IEEE: 2017. p. 1-7.; Zhou J, Hanninen K, Lundqvist K, Provenzano L. An ontological approach to identify the causes of hazards for safety-critical systems. In: 2017 2nd International Conference on System Reliability and Safety (ICSRS). IEEE: 2017. p. 405-13.; Fowler M. ThoughtWorks: GivenWhenThen. 2013. 
                  https://martinfowler.com/bliki/GivenWhenThen.html
                  
                . Retrieved July 2019.; North D. Introducing BDD. Better Softw Mag. 2006. 
                  https://dannorth.net/introducing-bdd/
                  
                . Retrieved July 2019.; citation_title=ACTORS - a Model of Concurrent Computation in Distributed Systems. MIT Press series in artificial intelligence; citation_publication_date=1990; citation_id=CR26; citation_author=GA Agha; citation_publisher=MIT Press; Hewitt C. Description and theoretical analysis (using schemata) of PLANNER: A language for proving theorems and manipulating models in a robot. Technical report, MIT Artificial Intelligence Technical Report. 1972.; citation_journal_title=STTT; citation_title=Modeling and analyzing real-time wireless sensor and actuator networks using actors and model checking; citation_author=E Khamespanah, M Sirjani, K Mechitov, G Agha; citation_volume=20; citation_issue=5; citation_publication_date=2018; citation_pages=547-61; citation_doi=10.1007/s10009-017-0480-3; citation_id=CR28; citation_journal_title=Form Asp Comput; citation_title=Modeling and efficient verification of wireless ad hoc networks; citation_author=B Yousefi, F Ghassemi, R Khosravi; citation_volume=29; citation_issue=6; citation_publication_date=2017; citation_pages=1051-86; citation_doi=10.1007/s00165-017-0429-z; citation_id=CR29; citation_journal_title=ECEASST; citation_title=Functional and performance analysis of network-on-chips using actor-based modeling and formal verification; citation_author=Z Sharifi, M Mosaffa, S Mohammadi, M Sirjani; citation_volume=66; citation_publication_date=2013; citation_pages=1-16; citation_id=CR30; Nigro L, Sciammarella PF. Time synchronization in wireless sensor networks: A modeling and analysis experience using theatre. In: 2018 IEEE/ACM 22nd International Symposium on Distributed Simulation and Real Time Applications (DS-RT). IEEE: 2018. p. 1-8.; citation_title=Deterministic actors; citation_inbook_title=2019 Forum for Specification and Design Languages (FDL); citation_publication_date=2019; citation_id=CR32; citation_author=M Lohstroh; citation_author=EA Lee; citation_publisher=IEEE; citation_title=Actors revisited for time-critical systems; citation_inbook_title=Proceedings of the 56th Annual Design Automation Conference 2019, DAC 2019; citation_publication_date=2019; citation_id=CR33; citation_author=M Lohstroh; citation_author=M Schoeberl; citation_author=A Goens; citation_author=A Wasicek; citation_author=C Gill; citation_author=M Sirjani; citation_author=EA Lee; citation_publisher=IEEE; Rebeca. Afra Tool. 2019. 
                  http://rebeca-lang.org/alltools/Afra
                  
                . Retrieved July 2019.; Rebeca. RMC Tool. 2016. 
                  http://rebeca-lang.org/alltools/RMC
                  
                . Retrieved July 2019.; Wikipedia. RailwayPlatform. 2019. 
                  https://en.wikipedia.org/wiki/Railway_platform
                  
                . Retrieved July 2019.; citation_title=Model-driven Software Development; citation_publication_date=2005; citation_id=CR37; citation_author=S Beydeda; citation_author=M Book; citation_author=V Gruhn; citation_publisher=Springer; citation_journal_title=Softw Syst Model; citation_title=Model-based engineering in the embedded systems domain: an industrial survey on the state-of-practice; citation_author=G Liebel, N Marko, M Tichy, A Leitner, J Hansson; citation_volume=17; citation_issue=1; citation_publication_date=2018; citation_pages=91-113; citation_doi=10.1007/s10270-016-0523-3; citation_id=CR38; citation_title=CPS Foundations; citation_inbook_title=Proceedings of the 47th Design Automation Conference (DAC '10); citation_publication_date=2010; citation_id=CR39; citation_author=EA Lee; citation_publisher=Association for Computing Machinery; Object Management Group. OMG Systems Modeling Language v1.5. 2017. 
                  https://sysmlforum.com/sysml-specs/
                  
                . Retrieved July 2019.; Object Management Group. UML profile for MARTE, beta 2. 2008. 
                  https://www.omg.org/omgmarte/Specification.htm
                  
                . Retrieved July 2019.; citation_journal_title=Impact Control Technol; citation_title=Cyber-physical systems; citation_author=R Baheti, H Gill; citation_volume=12; citation_issue=1; citation_publication_date=2011; citation_pages=161-6; citation_id=CR42; citation_title=Modeling and Simulation of Systems Using MATLAB and Simulink; citation_publication_date=2017; citation_id=CR43; citation_author=DK Chaturvedi; citation_publisher=CRC press; citation_title=Testing cyber-physical systems via evolutionary algorithms and machine learning; citation_inbook_title=Proceedings of the 12th International Workshop on Search-Based Software Testing (SBST '19); citation_publication_date=2019; citation_id=CR44; citation_author=S Nejati; citation_publisher=IEEE Press; citation_title=Automated model-in-the-loop testing of continuous controllers using search; citation_inbook_title=Search Based Software Engineering; citation_publication_date=2013; citation_id=CR45; citation_author=R Matinnejad; citation_author=S Nejati; citation_author=L Briand; citation_author=T Bruckmann; citation_author=C Poull; citation_publisher=Springer; Marinescu R, Saadatmand M, Bucaioni A, Seceleanu C, Pettersson P. A model-based testing framework for automotive embedded systems. In: 2014 40th EUROMICRO Conference on Software Engineering and Advanced Applications. IEEE: 2014. p. 38-47.; citation_title=dreach: -reachability analysis for hybrid systems; citation_inbook_title=International Conference on TOOLS and Algorithms for the Construction and Analysis of Systems; citation_publication_date=2015; citation_id=CR47; citation_author=S Kong; citation_author=S Gao; citation_author=W Chen; citation_author=E Clarke; citation_publisher=Springer; citation_title=Automatically finding bugs in a commercial cyber-physical system development tool chain with slforge; citation_inbook_title=Proceedings of the 40th International Conference on Software Engineering (ICSE '18); citation_publication_date=2018; citation_id=CR48; citation_author=SA Chowdhury; citation_author=S Mohian; citation_author=S Mehra; citation_author=S Gawsane; citation_author=TT Johnson; citation_author=C Csallner; citation_publisher=Association for Computing Machinery; MathWorks. Stateflow: Model and simulate decision logic using state machines and flow charts. 2018. 
                  https://www.mathworks.com/products/stateflow.html
                  
                . Retrieved July 2019.; citation_journal_title=Sci Comput Program; citation_title=An efficient TCTL model checking algorithm and a reduction technique for verification of timed actor models; citation_author=E Khamespanah, R Khosravi, M Sirjani; citation_volume=153; citation_publication_date=2018; citation_pages=1-29; citation_doi=10.1016/j.scico.2017.11.004; citation_id=CR50; citation_title=PRISM: Probabilistic symbolic model checker; citation_inbook_title=International Conference on Modelling Techniques and Tools for Computer Performance Evaluation; citation_publication_date=2002; citation_id=CR51; citation_author=M Kwiatkowska; citation_author=G Norman; citation_author=D Parker; citation_publisher=Springer; citation_journal_title=Int J Web Inf Syst; citation_title=Translation rules of SysML state machine diagrams into CSP# toward formal model checking; citation_author=T Ando, H Yatsu, W Kong, K Hisazumi, A Fukuda; citation_volume=10; citation_issue=2; citation_publication_date=2014; citation_pages=151-69; citation_doi=10.1108/IJWIS-02-2014-0004; citation_id=CR52; citation_journal_title=Innov Syst Softw Eng; citation_title=Towards model checking executable UML specifications in mCRL2; citation_author=HH Hansen, J Ketema, B Luttik, MR Mousavi, J Van De Pol; citation_volume=6; citation_issue=1-2; citation_publication_date=2010; citation_pages=83-90; citation_doi=10.1007/s11334-009-0116-1; citation_id=CR53; citation_title=A methodology for mapping SysML activity diagram to time petri net for requirement validation of embedded real-time systems with energy constraints; citation_inbook_title=2009 Third International Conference on Digital Society; citation_publication_date=2009; citation_id=CR54; citation_author=E Andrade; citation_author=P Maciel; citation_author=G Callou; citation_author=B Nogueira; citation_publisher=IEEE; Lucio L, Mustafiz S, Denil J, Meyers B, Vangheluwe H. The formalism transformation graph as a guide to model driven engineering. McGill University, Tech. Rep. SOCS-TR2012. 2012.; Lucio L, Denil J, Vangheluwe H. An overview of model transformations for a simple automotive power window. Technical report, McGill University, Tech. Rep. SOCS-TR-2012.2, 2012, http://msdl.cs.mcgill~.... 2012.; Molnar V, Graics B, Voros A, Majzik I, Varro D. The gamma statechart composition framework: Design, verification and code generation for component-based reactive systems. In: 2018 IEEE/ACM 40th International Conference on Software Engineering: Companion (ICSE-Companion). IEEE: 2018. p. 113-6.; citation_title=A model-driven framework for hardware-software co-design of dataflow applications; citation_inbook_title=International Workshop on Design, Modeling, and Evaluation of Cyber Physical Systems; citation_publication_date=2016; citation_id=CR58; citation_author=W Ahmad; citation_author=BM Yildiz; citation_author=A Rensink; citation_author=M Stoelinga; citation_publisher=Springer; Gilliam DP, Powell JD, Bishop M. Application of lightweight formal methods to software security. In: 14th IEEE International Workshops on Enabling Technologies: Infrastructure for Collaborative Enterprise (WETICE'05): 2005. p. 160-5.; citation_title=A first step in the translation of alloy to coq; citation_inbook_title=Formal Methods and Software Engineering; citation_publication_date=2019; citation_id=CR60; citation_author=S Souaf; citation_author=F Loulergue; citation_publisher=Springer; Schlingloff H, Kruse PM, Saadatmand M. Excellence in variant testing. In: Proceedings of the 14th International Working Conference on Variability Modelling of Software-Intensive Systems: 2020. p. 1-2."			Excluded	Excluded	new_screen			2	Springer Link		Towards a Verification-Driven Iterative Development of Software for Safety-Critical Cyber-Physical Systems	https://doi.org/10.1186/s13174-021-00132-z	Springer Link	nan; Pages; Year; Bibtex; Link
570	Behave	Towards an Executable Methodology for the Formalization of Legal Texts	A methodology for the formalization of legal texts is presented. This methodology is based on features of the NAI Suite, a recently developed formalization environment for legal texts. The ability of the tool to execute queries is used in order to drive a correct formalization until all queries are validated. The approach is studied on a fragment of the Smoking Prohibition (Children in Motor Vehicles) (Scotland) Act 2016 of the Scottish Parliament.	Legal reasoning; Deontic logic; Automated reasoning	Libal, Tomer; Steen, Alexander	International Conference on Logic and Argumentation	https://doi.org/10.1007/978-3-030-44638-3_10		151--165	"""@InProceedings{10.1007/978-3-030-44638-3_10,
    author = ""Libal, Tomer and Steen, Alexander"",
    editor = ""Dastani, Mehdi and Dong, Huimin and van der Torre, Leon"",
    title = ""Towards an Executable Methodology for the Formalization of Legal Texts"",
    booktitle = ""Logic and Argumentation"",
    year = ""2020"",
    publisher = ""Springer International Publishing"",
    address = ""Cham"",
    pages = ""151--165"",
    abstract = ""A methodology for the formalization of legal texts is presented. This methodology is based on features of the NAI Suite, a recently developed formalization environment for legal texts. The ability of the tool to execute queries is used in order to drive a correct formalization until all queries are validated. The approach is studied on a fragment of the Smoking Prohibition (Children in Motor Vehicles) (Scotland) Act 2016 of the Scottish Parliament."",
    isbn = ""978-3-030-44638-3""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Towards an Executable Methodology for the Formalization of Legal Texts	https://doi.org/10.1007/978-3-030-44638-3_10	Springer International Publishing	nan; References; Link
571	Behave	Towards Automated UI-Tests for Sensor-Based Mobile Applications	Mobile devices changed human-computer interaction, caused the need for specialized software engineering methods and created new business opportunities. The mobile app market is highly competitive and software developers need to maintain high software quality standards for long-lasting economic success. While powerful software development kits support developers in creating mobile applications, testing them is still cumbersome, time-consuming and error-prone. Especially interaction methods depending on sensor input like device motion gestures prevent automated UI testing -- developers and testers are forced to manually test all different aspects. We present an approach to integrate sensor information into user acceptance tests and use a sensor simulation engine to enable automatic test case execution for mobile applications.		Griebe, Tobias; Hesenius, Marc; Gruhn, Volker	International Conference on Intelligent Software Methodologies, Tools, and Techniques	https://doi.org/10.1007/978-3-319-22689-7_1		3--17	"""@InProceedings{10.1007/978-3-319-22689-7_1,
    author = ""Griebe, Tobias and Hesenius, Marc and Gruhn, Volker"",
    editor = ""Fujita, Hamido and Guizzi, Guido"",
    title = ""Towards Automated UI-Tests for Sensor-Based Mobile Applications"",
    booktitle = ""Intelligent Software Methodologies, Tools and Techniques"",
    year = ""2015"",
    publisher = ""Springer International Publishing"",
    address = ""Cham"",
    pages = ""3--17"",
    abstract = ""Mobile devices changed human-computer interaction, caused the need for specialized software engineering methods and created new business opportunities. The mobile app market is highly competitive and software developers need to maintain high software quality standards for long-lasting economic success. While powerful software development kits support developers in creating mobile applications, testing them is still cumbersome, time-consuming and error-prone. Especially interaction methods depending on sensor input like device motion gestures prevent automated UI testing -- developers and testers are forced to manually test all different aspects. We present an approach to integrate sensor information into user acceptance tests and use a sensor simulation engine to enable automatic test case execution for mobile applications."",
    isbn = ""978-3-319-22689-7""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Towards Automated UI-Tests for Sensor-Based Mobile Applications	https://doi.org/10.1007/978-3-319-22689-7_1	Springer International Publishing	nan; Keywords; References; Link
572	Behave	Towards Establishing Mass Customization Methods for Cloud-Compliant Services	This paper proposes a chain of service models assembled by design, implementation and operation data. To obtain both economy of scale and economy of scope, appropriate chains are required for producing cloud-compliant services. By specifying a target domain and distributing models' attributes into commonality or variability, a chain, which consists of necessary and sufficient models with utmost customizable interfaces, can be determined decisively. A field trial elicits representative chains of models, and shows that the chains, i.e. lifecycle patterns, can be used as templates to develop new services on mass customization basis and tailored to meet clients' varied demands.	Mass Customization; Application Lifecycle Management; Product Line Engineering; Service Factory	Hosono, Shigeru; Shimomura, Yoshiki	The Philosopher's Stone for Sustainability	https://doi.org/10.1007/978-3-642-32847-3_75		447--452	"""@InProceedings{10.1007/978-3-642-32847-3_75,
    author = ""Hosono, Shigeru and Shimomura, Yoshiki"",
    editor = ""Shimomura, Yoshiki and Kimita, Koji"",
    title = ""Towards Establishing Mass Customization Methods for Cloud-Compliant Services"",
    booktitle = ""The Philosopher's Stone for Sustainability"",
    year = ""2013"",
    publisher = ""Springer Berlin Heidelberg"",
    address = ""Berlin, Heidelberg"",
    pages = ""447--452"",
    abstract = ""This paper proposes a chain of service models assembled by design, implementation and operation data. To obtain both economy of scale and economy of scope, appropriate chains are required for producing cloud-compliant services. By specifying a target domain and distributing models' attributes into commonality or variability, a chain, which consists of necessary and sufficient models with utmost customizable interfaces, can be determined decisively. A field trial elicits representative chains of models, and shows that the chains, i.e. lifecycle patterns, can be used as templates to develop new services on mass customization basis and tailored to meet clients' varied demands."",
    isbn = ""978-3-642-32847-3""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Towards Establishing Mass Customization Methods for Cloud-Compliant Services	https://doi.org/10.1007/978-3-642-32847-3_75	Springer Berlin Heidelberg	nan; References; Link
573	Behave	Towards More Flexible Enterprise Information Systems	The aim of this paper is to present the software development techniques used to build the EIS Patterns development framework, which is a testbed for a series of techniques that aim at giving more flexibility to EIS in general. Some of these techniques are customizations or extensions of practices created by the agile software development movement, while others represent new proposals. This paper also aims at helping promoting more discussion around the EIS development questions, since most of research papers in EIS area focus on deployment, IT, or business related issues, leaving the discussion on development techniques ill-treated.	Enterprise Information Systems; Domain Specific Languages; Design Patterns; Statechart Diagrams; Natural Language Processing	"de Carvalho, Rogerio Atem; Johansson, Bj{\""o}rn"	Enterprise Information Systems of the Future	https://doi.org/10.1007/978-3-642-36611-6_12		157--164	"""@InProceedings{10.1007/978-3-642-36611-6_12,
    author = {de Carvalho, Rogerio Atem and Johansson, Bj{\""o}rn},
    editor = ""Poels, Geert"",
    title = ""Towards More Flexible Enterprise Information Systems"",
    booktitle = ""Enterprise Information Systems of the Future"",
    year = ""2013"",
    publisher = ""Springer Berlin Heidelberg"",
    address = ""Berlin, Heidelberg"",
    pages = ""157--164"",
    abstract = ""The aim of this paper is to present the software development techniques used to build the EIS Patterns development framework, which is a testbed for a series of techniques that aim at giving more flexibility to EIS in general. Some of these techniques are customizations or extensions of practices created by the agile software development movement, while others represent new proposals. This paper also aims at helping promoting more discussion around the EIS development questions, since most of research papers in EIS area focus on deployment, IT, or business related issues, leaving the discussion on development techniques ill-treated."",
    isbn = ""978-3-642-36611-6""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Towards More Flexible Enterprise Information Systems	https://doi.org/10.1007/978-3-642-36611-6_12	Springer Berlin Heidelberg	nan; References; Link
574	Behave	Towards Transparent Legal Formalization	A key challenge in making a transparent formalization of a legal text is the dependency on two domain experts. While a legal expert is needed in order to interpret the legal text, a logician or a programmer is needed for encoding it into a program or a formula. Various existing methods are trying to solve this challenge by improving or automating the communication between the two experts. In this paper, we follow a different direction and attempt to eliminate the dependency on the target domain expert. This is achieved by inverting the translation back into the original text. By skipping over the logical translation, a legal expert can now both interpret and evaluate a translation.	Legal knowledge base; Annotation editor; Formal representation	Libal, Tomer; Novotn{\'a}, Tereza	International Workshop on Explainable, Transparent Autonomous Agents and Multi-Agent Systems	https://doi.org/10.1007/978-3-030-82017-6_18		296--313	"""@InProceedings{10.1007/978-3-030-82017-6_18,
    author = ""Libal, Tomer and Novotn{\'a}, Tereza"",
    editor = {Calvaresi, Davide and Najjar, Amro and Winikoff, Michael and Fr{\""a}mling, Kary},
    title = ""Towards Transparent Legal Formalization"",
    booktitle = ""Explainable and Transparent AI and Multi-Agent Systems"",
    year = ""2021"",
    publisher = ""Springer International Publishing"",
    address = ""Cham"",
    pages = ""296--313"",
    abstract = ""A key challenge in making a transparent formalization of a legal text is the dependency on two domain experts. While a legal expert is needed in order to interpret the legal text, a logician or a programmer is needed for encoding it into a program or a formula. Various existing methods are trying to solve this challenge by improving or automating the communication between the two experts. In this paper, we follow a different direction and attempt to eliminate the dependency on the target domain expert. This is achieved by inverting the translation back into the original text. By skipping over the logical translation, a legal expert can now both interpret and evaluate a translation."",
    isbn = ""978-3-030-82017-6""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Towards Transparent Legal Formalization	https://doi.org/10.1007/978-3-030-82017-6_18	Springer International Publishing	nan; References; Link
575	Behave	Towards User-Friendly Projectional Editors	Today's challenges for language development include language extension and composition, as well as the use of diverse notations. A promising approach is projectional editing, a technique to directly manipulate the abstract syntax tree of a program, without relying on parsers. Its potential lies in the ability to combine diverse notational styles -- such as text, symbols, tables, and graphics -- and the support for a wide range of composition techniques. However, projectional editing is often perceived as problematic for developers. Expressed drawbacks include the unfamiliar editing experience and challenges in the integration with existing infrastructure. In this paper we investigate the usability of projectional editors. We systematically identify usability issues resulting from the architecture. We use JetBrains Meta Programming System (MPS) as a case study. The case study discusses the concepts that MPS incorporates to address the identified issues, evaluates effectiveness of these concepts by surveying professional developers, and reports industrial experiences from realizing large-scale systems. Our results show that the benefits of flexible language composition and diverse notations come at the cost of serious usability issues -- which, however, can be effectively mitigated with facilities that emulate editing experience of parser-based editors.		Voelter, Markus; Siegmund, Janet; Berger, Thorsten; Kolb, Bernd	International Conference on Software Language Engineering	https://doi.org/10.1007/978-3-319-11245-9_3		41--61	"""@InProceedings{10.1007/978-3-319-11245-9_3,
    author = ""Voelter, Markus and Siegmund, Janet and Berger, Thorsten and Kolb, Bernd"",
    editor = ""Combemale, Beno{\^i}t and Pearce, David J. and Barais, Olivier and Vinju, Jurgen J."",
    title = ""Towards User-Friendly Projectional Editors"",
    booktitle = ""Software Language Engineering"",
    year = ""2014"",
    publisher = ""Springer International Publishing"",
    address = ""Cham"",
    pages = ""41--61"",
    abstract = ""Today's challenges for language development include language extension and composition, as well as the use of diverse notations. A promising approach is projectional editing, a technique to directly manipulate the abstract syntax tree of a program, without relying on parsers. Its potential lies in the ability to combine diverse notational styles -- such as text, symbols, tables, and graphics -- and the support for a wide range of composition techniques. However, projectional editing is often perceived as problematic for developers. Expressed drawbacks include the unfamiliar editing experience and challenges in the integration with existing infrastructure. In this paper we investigate the usability of projectional editors. We systematically identify usability issues resulting from the architecture. We use JetBrains Meta Programming System (MPS) as a case study. The case study discusses the concepts that MPS incorporates to address the identified issues, evaluates effectiveness of these concepts by surveying professional developers, and reports industrial experiences from realizing large-scale systems. Our results show that the benefits of flexible language composition and diverse notations come at the cost of serious usability issues -- which, however, can be effectively mitigated with facilities that emulate editing experience of parser-based editors."",
    isbn = ""978-3-319-11245-9""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Towards User-Friendly Projectional Editors	https://doi.org/10.1007/978-3-319-11245-9_3	Springer International Publishing	nan; Keywords; References; Link
576	Behave	Transitioning Towards Continuous Experimentation in a Large Software Product and Service Development Organisation -- A Case Study	Context: Companies need capabilities to evaluate the customer value of software-intensive products and services. One way of systematically acquiring data on customer value is running continuous experiments as part of the overall development process. Objective: This paper investigates the first steps of transitioning towards continuous experimentation in a large company, including the challenges faced. Method: We conduct a single-case study using participant observation, interviews, and qualitative analysis of the collected data. Results: Results show that continuous experimentation was well received by the practitioners and practising experimentation helped them to enhance understanding of their product value and user needs. Although the complexities of a large multi-stakeholder business-to-business (B2B) environment presented several challenges such as inaccessible users, it was possible to address impediments and integrate an experiment in an ongoing development project. Conclusion: Developing the capability for continuous experimentation in large organisations is a learning process which can be supported by a systematic introduction approach with the guidance of experts. We gained experience by introducing the approach on a small scale in a large organisation, and one of the major steps for future work is to understand how this can be scaled up to the whole development organisation.	Continuous experimentation; Experiment-driven software development; Product management; Lean startup; Customer development; Customer involvement; Organisational transition; Agile software development; Case study	"Yaman, Sezin Gizem; Fagerholm, Fabian; Munezero, Myriam; M{\""u}nch, J{\""u}rgen; Aaltola, Mika; Palmu, Christina; M{\""a}nnist{\""o}, Tomi"	International Conference on Product-Focused Software Process Improvement	https://doi.org/10.1007/978-3-319-49094-6_22		344--359	"""@InProceedings{10.1007/978-3-319-49094-6_22,
    author = {Yaman, Sezin Gizem and Fagerholm, Fabian and Munezero, Myriam and M{\""u}nch, J{\""u}rgen and Aaltola, Mika and Palmu, Christina and M{\""a}nnist{\""o}, Tomi},
    editor = ""Abrahamsson, Pekka and Jedlitschka, Andreas and Nguyen Duc, Anh and Felderer, Michael and Amasaki, Sousuke and Mikkonen, Tommi"",
    title = ""Transitioning Towards Continuous Experimentation in a Large Software Product and Service Development Organisation -- A Case Study"",
    booktitle = ""Product-Focused Software Process Improvement"",
    year = ""2016"",
    publisher = ""Springer International Publishing"",
    address = ""Cham"",
    pages = ""344--359"",
    abstract = ""Context: Companies need capabilities to evaluate the customer value of software-intensive products and services. One way of systematically acquiring data on customer value is running continuous experiments as part of the overall development process. Objective: This paper investigates the first steps of transitioning towards continuous experimentation in a large company, including the challenges faced. Method: We conduct a single-case study using participant observation, interviews, and qualitative analysis of the collected data. Results: Results show that continuous experimentation was well received by the practitioners and practising experimentation helped them to enhance understanding of their product value and user needs. Although the complexities of a large multi-stakeholder business-to-business (B2B) environment presented several challenges such as inaccessible users, it was possible to address impediments and integrate an experiment in an ongoing development project. Conclusion: Developing the capability for continuous experimentation in large organisations is a learning process which can be supported by a systematic introduction approach with the guidance of experts. We gained experience by introducing the approach on a small scale in a large organisation, and one of the major steps for future work is to understand how this can be scaled up to the whole development organisation."",
    isbn = ""978-3-319-49094-6""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Transitioning Towards Continuous Experimentation in a Large Software Product and Service Development Organisation – A Case Study	https://doi.org/10.1007/978-3-319-49094-6_22	Springer International Publishing	nan; References; Link
577	Behave	TSTL: the template scripting testing language	A test harness, in automated test generation, defines the set of valid tests for a system, as well as their correctness properties. The difficulty of writing test harnesses is a major obstacle to the adoption of automated test generation and model checking. Languages for writing test harnesses are usually tied to a particular tool and unfamiliar to programmers, and often limit expressiveness. Writing test harnesses directly in the language of the software under test (SUT) is a tedious, repetitive, and error-prone task, offers little or no support for test case manipulation and debugging, and produces hard-to-read, hard-to-maintain code. Using existing harness languages or writing directly in the language of the SUT also tends to limit users to one algorithm for test generation, with little ability to explore alternative methods. In this paper, we present TSTL, the template scripting testing language, a domain-specific language (DSL) for writing test harnesses. TSTL compiles harness definitions into an interface for testing, making generic test generation and manipulation tools for all SUTs possible. TSTL includes tools for generating, manipulating, and analyzing test cases, including simple model checkers. This paper motivates TSTL via a large-scale testing effort, directed by an end-user, to find faults in the most widely used geographic information systems tool. This paper emphasizes a new approach to automated testing, where, rather than focus on developing a monolithic tool to extend, the aim is to convert a test harness into a language extension. This approach makes testing not a separate activity to be performed using a tool, but as natural to users of the language of the system under test as is the use of domain-specific libraries such as ArcPy, NumPy, or QIIME, in their domains. TSTL is a language and tool infrastructure, but is also a way to bring testing activities under the control of an existing programming language in a simple, natural way.	Artificial Intelligence; Software testing; Domain-specific languages; Explicit-state model checking; End-user testing; Geographic information systems	Josie Holmes; Alex Groce; Jervis Pinto; Pranjal Mittal; Pooria Azimi; Kevin Kellar; James O'Brien	International Journal on Software Tools for Technology Transfer	https://doi.org/10.1007/s10009-016-0445-y	"Groce, A., Erwig, M.: Finding common ground: choose, assert, and assume. In: Workshop on Dynamic Analysis, pp. 12-17 (2012); Groce, A., Joshi, R.: Random testing and model checking: building a common framework for nondeterministic exploration. In: Workshop on Dynamic Analysis, pp. 22-28 (2008); Gamma, E., Beck, K.: JUnit. 
                    http://junit.sourceforce.net
                    
                  . Accessed 1 Dec 2016; citation_journal_title=Ann. Math. Artif. Intell.; citation_title=Establishing flight software reliability: testing, model checking, constraint-solving, monitoring and learning; citation_author=A Groce, K Havelund, G Holzmann, R Joshi, RG Xu; citation_volume=70; citation_issue=4; citation_publication_date=2014; citation_pages=315-349; citation_doi=10.1007/s10472-014-9408-8; citation_id=CR4; Groce, A., Holzmann, G., Joshi, R.: Randomized differential testing as a prelude to formal verification. In: International Conference on Software Engineering, pp. 621-631 (2007); Cadar, C., Dunbar, D., Engler, D.: KLEE: Unassisted and automatic generation of high-coverage tests for complex systems programs. In: Operating System Design and Implementation, pp. 209-224 (2008); JPF: the Swiss army knife of Java(TM) verification. 
                    http://babelfish.arc.nasa.gov/trac/jpf
                    
                  . Accessed 1 Dec 2016; citation_journal_title=Autom. Softw. Eng.; citation_title=Model checking programs; citation_author=W Visser, K Havelund, G Brat, S Park, F Lerda; citation_volume=10; citation_issue=2; citation_publication_date=2003; citation_pages=203-232; citation_doi=10.1023/A:1022920129859; citation_id=CR8; Kroening, D.: The CBMC homepage. 
                    http://www.cs.cmu.edu/modelcheck/cbmc/
                    
                  . Accessed 1 Dec 2016; Kroening, D., Clarke, E.M., Lerda, F.: A tool for checking ANSI-C programs. In: Tools and Algorithms for the Construction and Analysis of Systems, pp. 168-176 (2004); Visser, W., Pasareanu, C., Pelanek, R.: Test input generation for Java containers using state matching. In: International Symposium on Software Testing and Analysis, pp. 37-48 (2006); Esri: What is ArcPy? 
                    http://resources.arcgis.com/EN/HELP/MAIN/10.1/index.html000v000000v7000000
                    
                  . Accessed 1 Dec 2016; Groce, A., Fern, A., Pinto, J., Bauer, T., Alipour, A., Erwig, M., Lopez, C.: Lightweight automated testing with adaptation-based programming. In: IEEE International Symposium on Software Reliability Engineering, pp. 161-170 (2012); Fraser, G., Arcuri, A.: EvoSuite: automatic test suite generation for object-oriented software. In: ACM SIGSOFT Symposium/European Conference on Foundations of Software Engineering, pp. 416-419 (2011); Pacheco, C., Lahiri, S.K., Ernst, M.D., Ball, T.: Feedback-directed random test generation. In: International Conference on Software Engineering, pp. 75-84 (2007); Groce, A., Pinto, J., Azimi, P., Mittal, P., Holmes, J., Kellar, K.: TSTL: the template scripting testing language. 
                    https://github.com/agroce/tstl
                    
                  . Accessed 1 Dec 2016; Groce, A., Pinto, J.: A little language for testing. In: NASA Formal Methods Symposium, pp. 204-218 (2015); Groce, A., Pinto, J., Azimi, P., Mittal, P.: TSTL: a language and tool for testing (demo). In: ACM International Symposium on Software Testing and Analysis, pp. 414-417 (2015); NumPy. 
                    https://www.numpy.org
                    
                  . Accessed 1 Dec 2016; SciPy. 
                    https://www.scipy.org
                    
                  . Accessed 1 Dec 2016; citation_journal_title=Nat. Methods; citation_title=QIIME allows analysis of high-throughput community sequencing data; citation_author=JG Caporaso, J Kuczynski, J Stombaugh, K Bittinger, FD Bushman, EK Costello, N Fierer, AG Pena, JK Goodrich, JI Gordon; citation_volume=7; citation_issue=5; citation_publication_date=2010; citation_pages=335-336; citation_doi=10.1038/nmeth.f.303; citation_id=CR21; Biopython. 
                    http://biopython.org/wiki/Biopython
                    
                  . Accessed 1 Dec 2016; scikit-bio. 
                    http://scikit-bio.org/
                    
                  . Accessed 1 Dec 2016; Groce, A., Fern, A., Erwig, M., Pinto, J., Bauer, T., Alipour, A.: Learning-based test programming for programmers. In: International Symposium on Leveraging Applications of Formal Methods, Verification and Validation, pp. 752-786 (2012); citation_title=Domain-Specific Languages; citation_publication_date=2010; citation_id=CR25; citation_author=M Fowler; citation_publisher=Addison-Wesley Professional; citation_journal_title=Commun. ACM; citation_title=Programming pearls: little languages; citation_author=J Bentley; citation_volume=29; citation_issue=8; citation_publication_date=1986; citation_pages=711-721; citation_doi=10.1145/6424.315691; citation_id=CR26; Gligoric, M., Gvero, T., Jagannath, V., Khurshid, S., Kuncak, V., Marinov, D.: Test generation through programming in UDITA. In: International Conference on Software Engineering, pp. 225-234 (2010); citation_title=The SPIN Model Checker: Primer and Reference Manual; citation_publication_date=2003; citation_id=CR28; citation_author=GJ Holzmann; citation_publisher=Addison-Wesley Professional; Holzmann, G., Joshi, R.: Model-driven software verification. In: SPIN Workshop on Model Checking of Software, pp. 76-91 (2004); citation_journal_title=Autom. Softw. Eng.; citation_title=Model driven code checking; citation_author=G Holzmann, R Joshi, A Groce; citation_volume=15; citation_issue=3-4; citation_publication_date=2008; citation_pages=283-297; citation_doi=10.1007/s10515-008-0033-9; citation_id=CR30; Groce, A., Havelund, K., Smith, M.: From scripts to specifications: the evolution of a flight software testing effort. In: International Conference on Software Engineering, pp. 129-138 (2010); citation_journal_title=Softw. Test. Verif. Reliab.; citation_title=A taxonomy of model-based testing approaches; citation_author=M Utting, A Pretschner, B Legeard; citation_volume=22; citation_issue=5; citation_publication_date=2012; citation_pages=297-312; citation_doi=10.1002/stvr.456; citation_id=CR32; Kellar, K.: Tstl-java. 
                    https://github.com/flipturnapps/TSTL-Java
                    
                  . Accessed 1 Dec 2016; citation_journal_title=Softw. Eng. IEEE Trans.; citation_title=Simplifying and isolating failure-inducing input; citation_author=A Zeller, R Hildebrandt; citation_volume=28; citation_issue=2; citation_publication_date=2002; citation_pages=183-200; citation_doi=10.1109/32.988498; citation_id=CR34; citation_journal_title=Softw. Pract. Exp.; citation_title=JCrasher: an automatic robustness tester for Java; citation_author=C Csallner, Y Smaragdakis; citation_volume=34; citation_issue=11; citation_publication_date=2004; citation_pages=1025-1050; citation_doi=10.1002/spe.602; citation_id=CR35; Claessen, K., Hughes, J.: QuickCheck: a lightweight tool for random testing of haskell programs. In: ICFP, pp. 268-279 (2000); MacIver, D.R.: Hypothesis: Test faster, fix more. 
                    http://hypothesis.works/
                    
                  . Accessed 1 Dec 2016; citation_journal_title=Digit. Tech. J. Dig. Equip. Corp.; citation_title=Differential testing for software; citation_author=W McKeeman; citation_volume=10; citation_issue=1; citation_publication_date=1998; citation_pages=100-107; citation_id=CR38; citation_journal_title=Commun. ACM; citation_title=End-user software engineering.; citation_author=M Burnett, C Cook, G Rothermel; citation_volume=47; citation_issue=9; citation_publication_date=2004; citation_pages=53-58; citation_doi=10.1145/1015864.1015889; citation_id=CR39; Burnett, M.M., Myers, B.A.: Future of end-user software engineering: beyond the silos. In: Future of Software Engineering, pp. 201-211 (2014); citation_journal_title=ACM Trans. Softw. Eng. Method.; citation_title=A methodology for testing spreadsheets; citation_author=G Rothermel, M Burnett, L Li, C DuPois, A Sheretov; citation_volume=10; citation_issue=1; citation_publication_date=2001; citation_pages=110-147; citation_doi=10.1145/366378.366385; citation_id=CR41; citation_journal_title=IEEE Trans. Softw. Eng.; citation_title=You are the only possible oracle: effective test selection for end users of interactive machine learning systems; citation_author=A Groce, T Kulesza, C Zhang, S Shamasunder, MM Burnett, W Wong, S Stumpf, S Das, A Shinsel, F Bice, K McIntosh; citation_volume=40; citation_issue=3; citation_publication_date=2014; citation_pages=307-323; citation_doi=10.1109/TSE.2013.59; citation_id=CR42; Groce, A., Holzmann, G., Joshi, R., Xu, R.G.: Putting flight software through the paces with testing, model checking, and constraint-solving. In: Workshop on Constraints in Formal Verification, pp. 1-15 (2008); Andrews, J., Zhang, Y.R., Groce, A.: Comparing automated unit testing strategies. Technical report 736, Department of Computer Science, University of Western Ontario (2010); citation_title=A Discipline of Programming; citation_publication_date=1976; citation_id=CR45; citation_author=EW Dijkstra; citation_publisher=Prentice-Hall; citation_journal_title=J. ACM; citation_title=Nondeterministic algorithms; citation_author=RW Floyd; citation_volume=14; citation_issue=4; citation_publication_date=1967; citation_pages=636-644; citation_doi=10.1145/321420.321422; citation_id=CR46; McCarthy, J.: A basis for a mathematical theory of computation, preliminary report. In: Papers Presented at the May 9-11, 1961, Western Joint IRE-AIEE-ACM Computer Conference, IRE-AIEE-ACM '61 (Western), pp. 225-238. ACM, New York, NY, USA (1961). doi:
                    10.1145/1460690.1460715; Batchelder, N.: Coverage.py. 
                    https://coverage.readthedocs.org/en/coverage-4.0.1/
                    
                  . Accessed 1 Dec 2016; Groce, A., Zhang, C., Eide, E., Chen, Y., Regehr, J.: Swarm testing. In: International Symposium on Software Testing and Analysis, pp. 78-88 (2012); Gligoric, M., Groce, A., Zhang, C., Sharma, R., Alipour, A., Marinov, D.: Comparing non-adequate test suites using coverage criteria. In: International Symposium on Software Testing and Analysis, pp. 302-313 (2013); Le, V., Afshari, M., Su, Z.: Compiler validation via equivalence modulo inputs. In: ACM SIGPLAN Conference on Programming Language Design and Implementation, pp. 216-226 (2014); Hamlet, R.: Random testing. In: Encyclopedia of Software Engineering, pp. 970-978. Wiley (1994); citation_title=Model Checking; citation_publication_date=2000; citation_id=CR53; citation_author=EM Clarke; citation_author=O Grumberg; citation_author=D Peled; citation_publisher=MIT Press; citation_journal_title=Int. J. Softw. Tools Technol. Transf.; citation_title=Directed explicit-state model checking in the validation of communication protocols; citation_author=S Edelkamp, S Leue, A Lluch-Lafuente; citation_volume=5; citation_issue=2; citation_publication_date=2004; citation_pages=247-267; citation_doi=10.1007/s10009-002-0104-3; citation_id=CR54; Groce, A., Visser, W.: Model checking Java programs using structural heuristics. In: International Symposium on Software Testing and Analysis, pp. 12-21 (2002); Courcoubetis, C., Vardi, M.Y., Wolper, P., Yannakakis, M.: Memory efficient algorithms for the verification of temporal properties. In: Proceedings of the 2nd International Workshop on Computer Aided Verification, CAV '90, pp. 233-242. Springer-Verlag, London, UK. 
                    http://dl.acm.org/citation.cfm?id=647759.735018
                    
                  . Accessed 1 Dec 2016 (1991); Groce, A., Alipour, M.A., Zhang, C., Chen, Y., Regehr, J.: Cause reduction for quick testing. In: 2014 IEEE Seventh International Conference on Software Testing, Verification and Validation (ICST), pp. 243-252. IEEE (2014); citation_journal_title=J. Softw. Test. Verif. Reliab.; citation_title=Cause reduction: Delta-debugging, even without bugs; citation_author=A Groce, MA Alipour, C Zhang, Y Chen, J Regehr; citation_volume=26; citation_issue=1; citation_publication_date=2016; citation_pages=40-68; citation_doi=10.1002/stvr.1574; citation_id=CR58; citation_journal_title=Softw. Eng.; citation_title=Test case prioritization. Trans; citation_author=G Rothermel, R Untch, C Chu, MJ Harrold; citation_volume=27; citation_publication_date=2001; citation_pages=929-948; citation_doi=10.1109/32.962562; citation_id=CR59; Rothermel, G., Untch, R.H., Chu, C., Harrold, M.J.: Test case prioritization: an empirical study. In: Proceedings of the IEEE International Conference on Software Maintenance, ICSM '99, pp. 179-188. IEEE Computer Society, Washington, DC, USA (1999). 
                    http://dl.acm.org/citation.cfm?id=519621.853398
                    
                  . Accessed 1 Dec 2016; Zhang, C., Groce, A., Alipour, M.A.: Using test case reduction and prioritization to improve symbolic execution. In: International Symposium on Software Testing and Analysis, pp. 160-170 (2014); Foundation, F.S.: GMP: The Gnu multiple precision arithmetic library. 
                    https://gmplib.org/
                    
                  . Accessed 1 Dec 2016; Groce, A.: Left shift of zero allocates memory. 
                    http://bugs.python.org/issue27870
                    
                  . Accessed 1 Dec 2016; Groce, A.: Raising zero to a large power mismatch with Python long. 
                    https://github.com/aleaxit/gmpy/issues/114
                    
                  . Accessed 1 Dec 2016; SymPy Development Team: SymPy. 
                    http://www.sympy.org/en/index.html
                    
                  . Accessed 1 Dec 2016; Klockner, A.: PyOpenCL. 
                    https://mathema.tician.de/software/pyopencl/
                    
                  . Accessed 1 Dec 2016; Khronos Group: The open standard for parallel programming of heterogenous systems. 
                    https://www.khronos.org/opencl/
                    
                  . Accessed 1 Dec 2016; Gonzalez, J.: FuzzyWuzzy. 
                    https://pypi.python.org/pypi/fuzzywuzzy
                    
                  . Accessed 1 Dec 2016; AstroPy: a community Python library for astronomy. 
                    http://www.astropy.org/
                    
                  . Accessed 1 Dec 2016; Godefroid, P., Klarlund, N., Sen, K.: DART: directed automated random testing. In: Programming Language Design and Implementation, pp. 213-223 (2005); Andrews, J.H., Groce, A., Weston, M., Xu, R.G.: Random test run length and effectiveness. In: Automated Software Engineering, pp. 19-28 (2008); Andrews, J.H., Haldar, S., Lei, Y., Li, C.H.F.: Tool support for randomized unit testing. In: Proceedings of the First International Workshop on Randomized Testing, Portland, Maine, pp. 36-45 (2006); citation_journal_title=IEEE Trans. Softw. Eng. (TSE); citation_title=Genetic algorithms for randomized unit testing; citation_author=JH Andrews, T Menzies, FC Li; citation_volume=37; citation_issue=1; citation_publication_date=2011; citation_pages=80-94; citation_doi=10.1109/TSE.2010.46; citation_id=CR73; Arcuri, A., Briand, L.: Adaptive random testing: An illusion of effectiveness. In: International Symposium on Software Testing and Analysis, pp. 265-275 (2011); Arcuri, A., Iqbal, M.Z.Z., Briand, L.C.: Formal analysis of the effectiveness and predictability of random testing. In: International Symposium on Software Testing and Analysis, pp. 219-230 (2010); Chen, T.Y., Leung, H., Mak, I.K.: Adaptive random testing. In: Advances in Computer Science, pp. 320-329 (2004); Ciupa, I., Leitner, A., Oriol, M., Meyer, B.: Experimental assessment of random testing for object-oriented software. In: Rosenblum, D.S., Elbaum, S.G. (eds.) International Symposium on Software Testing and Analysis, pp. 84-94. ACM (2007); citation_journal_title=IEEE Trans. Softw. Eng.; citation_title=Evaluation of random testing; citation_author=JW Duran, SC Ntafos; citation_volume=10; citation_issue=4; citation_publication_date=1984; citation_pages=438-444; citation_doi=10.1109/TSE.1984.5010257; citation_id=CR78; Hamlet, R.: When only random testing will do. In: International Workshop on Random Testing, pp. 1-9 (2006); Sharma, R., Gligoric, M., Arcuri, A., Fraser, G., Marinov, D.: Testing container classes: Random or systematic? In: Fundamental Approaches to Software Engineering, pp. 262-277 (2011); citation_journal_title=J. Syst. Softw.; citation_title=An orchestrated survey of methodologies for automated software test case generation; citation_author=S Anand, EK Burke, TY Chen, J Clark, MB Cohen, W Grieskamp, M Harman, MJ Harrold, P McMinn; citation_volume=86; citation_issue=8; citation_publication_date=2013; citation_pages=1978-2001; citation_doi=10.1016/j.jss.2013.02.061; citation_id=CR81; Orso, A., Rothermel, G.: Software testing: A research travelogue (2000-2014). In: Proceedings of the on Future of Software Engineering, FOSE, pp. 117-132 (2014); Nilsson, R.: ScalaCheck: property-based testing for Scala. 
                    https://www.scalacheck.org
                    
                  . Accessed 1 Dec 2016; Milicevic, A., Misailovic, S., Marinov, D., Khurshid, S.: Korat: A tool for generating structurally complex test inputs. In: International Conference on Software Engineering, pp. 771-774 (2007); Giannakopoulou, D., Howar, F., Isberner, M., Lauderdale, T., Rakamaric, Z., Raman, V.: Taming test inputs for separation assurance. In: International Conference on Automated Software Engineering, pp. 373-384 (2014); Felderer, M., Zech, P., Fiedler, F., Breu, R.: A tool-based methodology for system testing of service-oriented systems. In: 2010 Second International Conference on Advances in System Testing and Validation Lifecycle (VALID), pp. 108-113 (2010). doi:
                    10.1109/VALID.2010.12; Santiago, D., Cando, A., Mack, C., Nunez, G., Thomas, T., King, T.M.: Towards domain-specific testing languages for software-as-a-service. In: Proceedings of the 2nd International Workshop on Model-Driven Engineering for High Performance and Cloud computing co-located with 16th International Conference on Model Driven Engineering Languages and Systems (MODELS), pp. 43-52 (2013); Im, K., Im, T., McGregor, J.D.: Automating test case definition using a domain specific language. In: Proceedings of the 46th Annual Southeast Regional Conference on XX, ACM-SE, vol. 46, pp. 180-185. ACM, New York, NY, USA (2008). doi:
                    10.1145/1593105.1593152; Chelimsky, D., Astels, D., Helmkamp, B., North, D., Dennis, Z., Hellesoy, A.: The RSpec Book: Behaviour Driven Development with Rspec, Cucumber, and Friends, 1st edn. Pragmatic Bookshelf, Raleigh, NC (2010); Lei, Y., Andrews, J.H.: Minimization of randomized unit test cases. In: International Symposium on Software Reliability Engineering, pp. 267-276 (2005); Pike, L.: SmartCheck: automatic and efficient counterexample reduction and generalization. In: ACM SIGPLAN Symposium on Haskell, pp. 53-64 (2014); Daka, E., Campos, J., Dorn, J., Fraser, G., Weimer, W.: Generating readable unit tests for Guava. In: Search-Based Software Engineering--7th International Symposium, SSBSE 2015, Bergamo, Italy, 5-7 September 2015, Proceedings, pp. 235-241 (2015); Daka, E., Campos, J., Fraser, G., Dorn, J., Weimer, W.: Modeling readability to improve unit tests. In: Foundations of Software Engineering, ESEC/FSE, pp. 107-118 (2015); Maogui, H., Jinfeng, W.: Application of automated testing tool in GIS modeling. In: World Congress on Software Engineering, pp. 184-188 (2009); AbSharma: Functional testing of GIS applications (automated testing). 
                    http://osgeo-org.1560.x6.nabble.com/Functional-Testing-of-GIS-applications-Automated-Testing-td4493673.html
                    
                  . Accessed 1 Dec 2016; XBOSOFT: GIS software testing--lessons learned. 
                    http://xbosoft.com/gis-software-testing-lessons-learned/
                    
                  . Accessed 1 Dec 2016; GRASS Development Team: Testing GRASS GIS source code and modules. 
                    https://grass.osgeo.org/grass71/manuals/libpython/gunittest_testing.html
                    
                  . Accessed 1 Dec 2016; Segal, J.: Some problems of professional end user developers. In: IEEE Symposium on Visual Languages and Human-Centric Computing (2007); Rothermel, K., Cook, C., Burnett, M., Schonfeld, J., Green, T., Rothermel, G.: WYSIWYT testing in the spreadsheet paradigm: an empirical evaluation. Int. Conf. Softw. Eng. 22, 230-240 (2000); Phalgune, A., Kissinger, C., Burnett, M., Cook, C., Beckwith, L., Ruthruff, J.: Garbage in, garbage out? an empirical look at oracle mistakes by end-user programmers. In: IEEE Symp. Visual Languages and Human-Centric Computing, pp. 45-52 (2005); Kulesza, T., Burnett, M., Stumpf, S., Wong, W.K., Das, S., Groce, A., Shinsel, A., Bice, F., McIntosh, K.: Where are my intelligent assistant's mistakes? a systematic testing approach. In: International Symposium on End-User Development, pp. 171-186 (2011); Shinsel, A., Kulesza, T., Burnett, M.M., Curan, W., Groce, A., Stumpf, S., Wong, W.K.: Mini-crowdsourcing end-user assessment of intelligent assistants: a cost-benefit study. In: Visual Languages and Human-Centric Computing, pp. 47-54 (2011)"			Excluded	Excluded	new_screen			2	Springer Link		TSTL: the template scripting testing language	https://doi.org/10.1007/s10009-016-0445-y	Springer Link	nan; Pages; Year; Bibtex; Link
578	Behave	Understanding Core JUnit 5	In the first chapter, we learned the importance of test-driven development (TDD). We also discussed the pivotal role of unit testing. But before we move on to building an application using JUnit 5, it is important to understand its core concepts.		Gulati, Shekhar; Sharma, Rahul	Java Unit Testing with JUnit 5	https://doi.org/10.1007/978-1-4842-3015-2_2		25--44	"""@Inbook{Gulati2017,
    author = ""Gulati, Shekhar and Sharma, Rahul"",
    title = ""Understanding Core JUnit 5"",
    bookTitle = ""Java Unit Testing with JUnit 5: Test Driven Development with JUnit 5"",
    year = ""2017"",
    publisher = ""Apress"",
    address = ""Berkeley, CA"",
    pages = ""25--44"",
    abstract = ""In the first chapter, we learned the importance of test-driven development (TDD). We also discussed the pivotal role of unit testing. But before we move on to building an application using JUnit 5, it is important to understand its core concepts."",
    isbn = ""978-1-4842-3015-2"",
    doi = ""10.1007/978-1-4842-3015-2\_2"",
    url = ""https://doi.org/10.1007/978-1-4842-3015-2\_2""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Understanding Core JUnit 5	https://doi.org/10.1007/978-1-4842-3015-2_2	Apress	nan; Keywords; References; Link
579	Behave	Understanding Services with Reactive Programming	Services are an important building block of any application. Usually, services are the entry point to retrieving data from some kind of provider as well as to updating it, when this option is available.	Search Method; Service Class; Media Item; Duration Property; Player Property	Farhi, Oren	Reactive Programming with Angular and ngrx	https://doi.org/10.1007/978-1-4842-2620-9_5		73--98	"""@Inbook{Farhi2017,
    author = ""Farhi, Oren"",
    title = ""Understanding Services with Reactive Programming"",
    bookTitle = ""Reactive Programming with Angular and ngrx: Learn to Harness the Power of Reactive Programming with RxJS and ngrx Extensions"",
    year = ""2017"",
    publisher = ""Apress"",
    address = ""Berkeley, CA"",
    pages = ""73--98"",
    abstract = ""Services are an important building block of any application. Usually, services are the entry point to retrieving data from some kind of provider as well as to updating it, when this option is available."",
    isbn = ""978-1-4842-2620-9"",
    doi = ""10.1007/978-1-4842-2620-9\_5"",
    url = ""https://doi.org/10.1007/978-1-4842-2620-9\_5""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Understanding Services with Reactive Programming	https://doi.org/10.1007/978-1-4842-2620-9_5	Apress	nan; References; Link
580	Behave	Engaging Developers in Exploratory Unit Testing through Gamification	Exploratory testing, known for its flexibility and ability to uncover unexpected issues, often faces challenges in maintaining systematic coverage and producing reproducible results. To address these challenges, we investigate whether gamification of testing directly in the Integrated Development Environment (IDE) can guide exploratory testing. We therefore show challenges and quests generated by the Gamekins gamification system to make testing more engaging and seamlessly blend it with regular coding tasks. In a 60-minute experiment, we evaluated Gamekins' impact on test suite quality and bug detection. The results show that participants actively interacted with the tool, achieving nearly 90\% line coverage and detecting 11 out of 14 bugs. Additionally, participants reported enjoying the experience, indicating that gamification can enhance developer participation in testing and improve software quality.	Exploratory Testing;  Gamification;  IDE;  IntelliJ;  Software Testing; Exploratory Testing, Gamification, IDE, IntelliJ, Software Testing	Straubinger, Philipp; Fraser, Gordon		https://doi.org/10.1145/3678869.3685683		2-9	"""@inproceedings{10.1145/3678869.3685683,
    author = ""Straubinger, Philipp and Fraser, Gordon"",
    title = ""Engaging Developers in Exploratory Unit Testing through Gamification"",
    year = ""2024"",
    isbn = ""9798400711138"",
    publisher = ""Association for Computing Machinery"",
    address = ""New York, NY, USA"",
    url = ""https://doi.org/10.1145/3678869.3685683"",
    doi = ""10.1145/3678869.3685683"",
    abstract = ""Exploratory testing, known for its flexibility and ability to uncover unexpected issues, often faces challenges in maintaining systematic coverage and producing reproducible results. To address these challenges, we investigate whether gamification of testing directly in the Integrated Development Environment (IDE) can guide exploratory testing. We therefore show challenges and quests generated by the Gamekins gamification system to make testing more engaging and seamlessly blend it with regular coding tasks. In a 60-minute experiment, we evaluated Gamekins' impact on test suite quality and bug detection. The results show that participants actively interacted with the tool, achieving nearly 90\\% line coverage and detecting 11 out of 14 bugs. Additionally, participants reported enjoying the experience, indicating that gamification can enhance developer participation in testing and improve software quality."",
    booktitle = ""Proceedings of the 3rd ACM International Workshop on Gamification in Software Development, Verification, and Validation"",
    pages = ""2-9"",
    numpages = ""8"",
    keywords = ""Exploratory Testing, Gamification, IDE, IntelliJ, Software Testing"",
    location = ""Vienna, Austria"",
    series = ""Gamify 2024""
}
"""	Excluded	Excluded	new_screen			2	ACM		Unit Testing	https://dl.acm.org/doi/10.1145/3678869.3685683	Association for Computing Machinery	nan; Venue; References
581	Behave	Unit Testing and Integration Testing	It is very likely you have already written unit tests for your projects and thus are familiar with the concepts, frameworks, and steps involved in writing unit tests. This chapter therefore mainly deals with how to apply those skills to the effective writing of unit tests for your Web API. As you will see, unit testing is where you start, not where you finish.	Unit Test; Integration Test; Feature File; Controller Context; Public Class	Ugurlu, Tugberk; Zeitler, Alexander; Kheyrollahi, Ali	Pro ASP.NET Web API	https://doi.org/10.1007/978-1-4302-4726-5_15		431--462	"""@Inbook{Ugurlu2013,
    author = ""Ugurlu, Tugberk and Zeitler, Alexander and Kheyrollahi, Ali"",
    title = ""Unit Testing and Integration Testing"",
    bookTitle = ""Pro ASP.NET Web API: HTTP Web Services in ASP.NET"",
    year = ""2013"",
    publisher = ""Apress"",
    address = ""Berkeley, CA"",
    pages = ""431--462"",
    abstract = ""It is very likely you have already written unit tests for your projects and thus are familiar with the concepts, frameworks, and steps involved in writing unit tests. This chapter therefore mainly deals with how to apply those skills to the effective writing of unit tests for your Web API. As you will see, unit testing is where you start, not where you finish."",
    isbn = ""978-1-4302-4726-5"",
    doi = ""10.1007/978-1-4302-4726-5\_15"",
    url = ""https://doi.org/10.1007/978-1-4302-4726-5\_15""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Unit Testing and Integration Testing	https://doi.org/10.1007/978-1-4302-4726-5_15	Apress	nan; References; Link
582	Behave	Unit Tests and TDD	While both acceptance-test-driven development (ATDD) and test-driven development (TDD) are methodologies that advocate writing the tests before the code, ATDD (or BDD) is usually considered to lend itself better to bigger test scopes and to scenarios that describe how the users use the system, while TDD is considered to lend itself more specifically to unit tests, which uses the smallest test scope (of a single class or even a method), and therefore tests more technical details. For that reason, unit tests and TDD are considered practices that are done directly by the same developer that implements the code under test (CUT). While toward the end of this chapter we'll question the distinction between TDD and ATDD, we first need to understand more about unit tests and TDD in general.		Axelrod, Arnon	Complete Guide to Test Automation	https://doi.org/10.1007/978-1-4842-3832-5_17		395--424	"""@Inbook{Axelrod2018,
    author = ""Axelrod, Arnon"",
    title = ""Unit Tests and TDD"",
    bookTitle = ""Complete Guide to Test Automation: Techniques, Practices, and Patterns for Building and Maintaining Effective Software Projects"",
    year = ""2018"",
    publisher = ""Apress"",
    address = ""Berkeley, CA"",
    pages = ""395--424"",
    abstract = ""While both acceptance-test-driven development (ATDD) and test-driven development (TDD) are methodologies that advocate writing the tests before the code, ATDD (or BDD) is usually considered to lend itself better to bigger test scopes and to scenarios that describe how the users use the system, while TDD is considered to lend itself more specifically to unit tests, which uses the smallest test scope (of a single class or even a method), and therefore tests more technical details. For that reason, unit tests and TDD are considered practices that are done directly by the same developer that implements the code under test (CUT). While toward the end of this chapter we'll question the distinction between TDD and ATDD, we first need to understand more about unit tests and TDD in general."",
    isbn = ""978-1-4842-3832-5"",
    doi = ""10.1007/978-1-4842-3832-5\_17"",
    url = ""https://doi.org/10.1007/978-1-4842-3832-5\_17""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Unit Tests and TDD	https://doi.org/10.1007/978-1-4842-3832-5_17	Apress	nan; Keywords; References; Link
583	Behave	Unity Application Testing Automation with Appium and Image Recognition	This work is dedicated to the problem of integrating simple functional tests (smoke tests) into the automated continuous integration pipeline. While functional testing is typically performed manually by the QA staff members, there is a large number of scenarios that can be automated, and readily available instruments, such as Appium and Calabash, designed for this task. Automated smoke testing is especially challenging for the applications with nonstandard GUI, such as games made with Unity. The only viable option in this case is to analyze screen content as a flat image and identify GUI elements with pattern matching algorithms. This approach is not novel, but its practical applicability and limitations are rarely discussed. We consider a case study of a mobile tennis game project, developed in Unity and covered with a suite of Appium-supported functional tests. We show how image matching capabilities of OpenCV library can be used in Appium tests to build a reliable automated QA pipeline.	GUI; Testing; Computer game; Automation; Non-native; Smoke test; OpenCV; Unity; Appium	Mozgovoy, Maxim; Pyshkin, Evgeny	International Conference on Tools and Methods for Program Analysis	https://doi.org/10.1007/978-3-319-71734-0_12		139--150	"""@InProceedings{10.1007/978-3-319-71734-0_12,
    author = ""Mozgovoy, Maxim and Pyshkin, Evgeny"",
    editor = ""Itsykson, Vladimir and Scedrov, Andre and Zakharov, Victor"",
    title = ""Unity Application Testing Automation with Appium and Image Recognition"",
    booktitle = ""Tools and Methods of Program Analysis"",
    year = ""2018"",
    publisher = ""Springer International Publishing"",
    address = ""Cham"",
    pages = ""139--150"",
    abstract = ""This work is dedicated to the problem of integrating simple functional tests (smoke tests) into the automated continuous integration pipeline. While functional testing is typically performed manually by the QA staff members, there is a large number of scenarios that can be automated, and readily available instruments, such as Appium and Calabash, designed for this task. Automated smoke testing is especially challenging for the applications with nonstandard GUI, such as games made with Unity. The only viable option in this case is to analyze screen content as a flat image and identify GUI elements with pattern matching algorithms. This approach is not novel, but its practical applicability and limitations are rarely discussed. We consider a case study of a mobile tennis game project, developed in Unity and covered with a suite of Appium-supported functional tests. We show how image matching capabilities of OpenCV library can be used in Appium tests to build a reliable automated QA pipeline."",
    isbn = ""978-3-319-71734-0""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Unity Application Testing Automation with Appium and Image Recognition	https://doi.org/10.1007/978-3-319-71734-0_12	Springer International Publishing	nan; References; Link
584	Behave	Use, potential, and showstoppers of models in automotive requirements engineering	Several studies report that the use of model-centric methods in the automotive domain is widespread and offers several benefits. However, existing work indicates that few modelling frameworks explicitly include requirements engineering (RE), and that natural language descriptions are still the status quo in RE. Therefore, we aim to increase the understanding of current and potential future use of models in RE, with respect to the automotive domain. In this paper, we report our findings from a multiple-case study with two automotive companies, collecting interview data from 14 practitioners. Our results show that models are used for a variety of different purposes during RE in the automotive domain, e.g. to improve communication and to handle complexity. However, these models are often used in an unsystematic fashion and restricted to few experts. A more widespread use of models is prevented by various challenges, most of which align with existing work on model use in a general sense. Furthermore, our results indicate that there are many potential benefits associated with future use of models during RE. Interestingly, existing research does not align well with several of the proposed use cases, e.g. restricting the use of models to informal notations for communication purposes. Based on our findings, we recommend a stronger focus on informal modelling and on using models for multi-disciplinary environments. Additionally, we see the need for future work in the area of model use, i.e. information extraction from models by non-expert modellers.	Artificial Intelligence; Modelling; MDE; MBE; Requirements engineering; Empirical research; Case study; Automotive	Grischa Liebel; Matthias Tichy; Eric Knauss	Software & Systems Modeling	https://doi.org/10.1007/s10270-018-0683-4	"citation_journal_title=J. Syst. Softw.; citation_title=A brazilian survey on UML and model-driven practices for embedded software development; citation_author=LTW Agner, IW Soares, PC Stadzisz, JM Simao; citation_volume=86; citation_issue=4; citation_publication_date=2013; citation_pages=997-1005; citation_doi=10.1016/j.jss.2012.11.023; citation_id=CR1; citation_journal_title=IEEE Trans. Softw. Eng.; citation_title=Aligning qualitative, real-time, and probabilistic property specification patterns using a structured english grammar; citation_author=M Autili, L Grunske, M Lumpe, P Pelliccione, A Tang; citation_volume=41; citation_issue=7; citation_publication_date=2015; citation_pages=620-638; citation_doi=10.1109/TSE.2015.2398877; citation_id=CR2; citation_title=Relating Software Requirements and Architectures; citation_publication_date=2011; citation_id=CR3; citation_author=P Avgeriou; citation_author=J Grundy; citation_author=JG Hall; citation_author=P Lago; citation_author=I Mistrik; citation_publisher=Springer; Baker, P., Loh, S., Weil, F.: Model-driven engineering in a large industrial context--motorola case study. In: Briand L.C., Williams C. (eds.) Model Driven Engineering Languages and Systems, Lecture Notes in Computer Science, vol. 3713, pp. 476-491 (2005); Barmi, Z.A., Ebrahimi, A.H., Feldt, R.: Alignment of requirements specification and testing: a systematic mapping study. In: 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops, pp. 476-485 (2011); Berenbach, B., Schneider, F., Naughton, H.: The use of a requirements modeling language for industrial applications. In: 20th IEEE International Requirements Engineering Conference (RE), pp. 285-290 (2012); citation_journal_title=Procedia Comput. Sci.; citation_title=Bridging the gap between systems and software engineering by using the spes modeling framework as a general systems engineering philosophy; citation_author=W Bohm, S Henkler, F Houdek, A Vogelsang, T Weyer; citation_volume=28; citation_publication_date=2014; citation_pages=187-194; citation_doi=10.1016/j.procs.2014.03.024; citation_id=CR7; Bohm, W., Junker, M., Vogelsang, A., Teufl, S., Pinger, R., Rahn, K.: A formal systems engineering approach in practice: an experience report. In: Proceedings of the 1st International Workshop on Software Engineering Research and Industrial Practices, pp. 34-41. ACM (2014); citation_journal_title=Complex Syst. Inform. Model. Q.; citation_title=Early validation of automation plant control software using simulation based on assumption modeling and validation use cases; citation_author=V Brandstetter, A Froese, B Tenbergen, A Vogelsang, JC Wehrstedt, T Weyer; citation_volume=4; citation_publication_date=2015; citation_pages=50-65; citation_id=CR9; citation_journal_title=Comput. Sci. Res. Dev.; citation_title=Guiding requirements engineering for software-intensive embedded systems in the automotive industry; citation_author=P Braun, M Broy, F Houdek, M Kirchmayr, M Muller, B Penzenstadler, K Pohl, T Weyer; citation_volume=29; citation_issue=1; citation_publication_date=2014; citation_pages=21-43; citation_doi=10.1007/s00450-010-0136-y; citation_id=CR10; Brings, J., Bellendorf, J., Keller, K., Kempe, M., Kurt, N., Palm, A., Daun, M.: Applying the spes modeling framework. In: Joint Proceedings of REFSQ-2017 Workshops, Doctoral Symposium, Research Method Track, and Poster Track co-located with the 22nd International Conference on Requirements Engineering: Foundation for Software Quality (REFSQ 2017) (2017); Broy, M.: Challenges in automotive software engineering. In: Proceedings of 28th International Conference on Software Engineering (ICSE '06), pp. 33-42 (2006); citation_title=Research Design: Qualitative, Quantitative, and Mixed Methods Approaches, Chap. 10; citation_publication_date=2003; citation_id=CR13; citation_author=JW Creswell; citation_publisher=SAGE Publications; de Almeida Ferreira, D., da Silva, A.R.: A controlled natural language approach for integrating requirements and model-driven engineering. In: 2009 Fourth International Conference on Software Engineering Advances, pp. 518-523 (2009); Dwyer, M.B., Avrunin, G.S., Corbett, J.C.: Patterns in property specifications for finite-state verification. In: Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), pp. 411-420 (1999); Eliasson, U., Heldal, R., Knauss, E., Pelliccione, P.: The need of complementing plan-driven requirements engineering with emerging communication: Experiences from volvo car group. In: IEEE 23rd International Requirements Engineering Conference (RE '15), pp. 372-381 (2015). 
                    https://doi.org/10.1109/RE.2015.7320454; Fockel, M., Holtmann, J.: A requirements engineering methodology combining models and controlled natural language. In: IEEE 4th International Model-Driven Requirements Engineering Workshop (MoDRE '14), pp. 67-76 (2014); Forward, A., Lethbridge, T.C.: Problems and opportunities for model-centric versus code-centric software development: a survey of software professionals. In: International Workshop on Models in Software Engineering (MiSE '08), pp. 27-32 (2008); citation_journal_title=ACM Trans. Softw. Eng. Methodol.; citation_title=Reasoning about inconsistencies in natural language requirements; citation_author=V Gervasi, D Zowghi; citation_volume=14; citation_issue=3; citation_publication_date=2005; citation_pages=277-330; citation_doi=10.1145/1072997.1072999; citation_id=CR19; Glinz, M.: Problems and deficiencies of uml as a requirements specification language. In: 10th International Workshop on Software Specification and Design, p. 11 (2000); citation_journal_title=J. Syst. Softw.; citation_title=On the use of software design models in software development practice: an empirical investigation; citation_author=T Gorschek, E Tempero, L Angelis; citation_volume=95; citation_publication_date=2014; citation_pages=176-193; citation_doi=10.1016/j.jss.2014.03.082; citation_id=CR21; citation_journal_title=IEEE Softw.; citation_title=Improving the state of automotive software engineering; citation_author=A Haghighatkhah, M Oivo, A Banijamali, P Kuvaja; citation_volume=34; citation_issue=5; citation_publication_date=2017; citation_pages=82-86; citation_doi=10.1109/MS.2017.3571571; citation_id=CR22; Hebisch, E., Book, M., Gruhn, V.: Scenario-based architecting with architecture trace diagrams. In: 2015 IEEE/ACM 5th International Workshop on the Twin Peaks of Requirements and Architecture, pp. 16-19 (2015); Heumesser, N., Houdek, F.: Experiences in managing an automotive requirements engineering process. In: Proceedings of 12th IEEE International Requirements Engineering Conference (RE '04), pp. 322-327 (2004); Houdek, F., Pohl, K.: Analyzing requirements engineering processes: a case study. In: Proceedings of 11th International Workshop on Database and Expert Systems Applications, pp. 983-987 (2000); Hutchinson, J., Rouncefield, M., Whittle, J.: Model-driven engineering practices in industry. In: 33rd International Conference on Software Engineering (ICSE '11), pp. 633-642 (2011); citation_journal_title=Sci. Comput. Program.; citation_title=Model-driven engineering practices in industry: social, organizational and managerial factors that lead to success or failure; citation_author=J Hutchinson, J Whittle, M Rouncefield; citation_volume=89, Part B; citation_publication_date=2014; citation_pages=144-161; citation_doi=10.1016/j.scico.2013.03.017; citation_id=CR27; Hutchinson, J., Whittle, J., Rouncefield, M., Kristoffersen, S.: Empirical assessment of mde in industry. In: 33rd International Conference on Software Engineering (ICSE '11), pp. 471-480 (2011); Kirstan, S., Zimmermann, J.: Evaluating costs and benefits of model-based development of embedded software systems in the car industry-results of a qualitative case study. In: Workshop C2M: EEMDD; Liebel, G., Marko, N., Tichy, M., Leitner, A., Hansson, J.: Assessing the state-of-practice of model-based engineering in the embedded systems domain. In: Dingel J., Schulte W., Ramos I., Abraho S., Insfran E. (eds.) Model-Driven Engineering Languages and Systems, Lecture Notes in Computer Science, vol. 8767, pp. 166-182 (2014). 
                    https://doi.org/10.1007/978-3-319-11653-211; citation_journal_title=Softw. Syst. Model.; citation_title=Model-based engineering in the embedded systems domain: an industrial survey on the state-of-practice; citation_author=G Liebel, N Marko, M Tichy, A Leitner, J Hansson; citation_publication_date=2016; citation_id=CR31; citation_journal_title=Requir. Eng.; citation_title=Organisation and communication problems in automotive requirements engineering; citation_author=G Liebel, M Tichy, E Knauss, O Ljungkrantz, G Stieglbauer; citation_volume=23; citation_issue=1; citation_publication_date=2016; citation_pages=145-167; citation_doi=10.1007/s00766-016-0261-7; citation_id=CR32; Loniewski, G., Insfran, E., Abraho, S.: A systematic review of the use of requirements engineering techniques in model-driven development. In: Petriu D., Rouquette N., Haugen O. (eds.) Model Driven Engineering Languages and Systems, Lecture Notes in Computer Science, vol. 6395, pp. 213-227 (2010). 
                    https://doi.org/10.1007/978-3-642-16129-216; Marko, N., Leitner, A., Herbst, B., Wallner, A.: Combining xtext and oslc for integrated model-based requirements engineering. In: 2015 41st Euromicro Conference on Software Engineering and Advanced Applications, pp. 143-150 (2015); citation_journal_title=Role Res Qual. Psychol.; citation_title=Qualitative content analysis-research instrument or mode of interpretation; citation_author=P Mayring; citation_volume=2; citation_publication_date=2002; citation_pages=139-148; citation_id=CR35; Mendez Fernandez, D., Lochmann, K., Penzenstadler, B., Wagner, S.: A case study on the application of an artefact-based requirements engineering approach. In: Evaluation and Assessment in Software Engineering (EASE 2011), 15th Annual Conference on, pp. 104-113. IET (2011); Mendez Fernandez, D., Penzenstadler, B., Kuhrmann, M., Broy, M.: A meta model for artefact-orientation: fundamentals and lessons learned in requirements engineering. In: International Conference on Model Driven Engineering Languages and Systems, pp. 183-197. Springer Berlin Heidelberg (2010); citation_journal_title=Inf. Softw. Technol.; citation_title=Field study on requirements engineering: Investigation of artefacts, project parameters, and execution strategies; citation_author=D Mendez Fernandez, S Wagner, K Lochmann, A Baumann, H Carne; citation_volume=54; citation_publication_date=2011; citation_pages=162-178; citation_doi=10.1016/j.infsof.2011.09.001; citation_id=CR38; Mendez Fernandez, D., Wieringa, R.: Improving requirements engineering by artefact orientation. In: International Conference on Product Focused Software Process Improvement, pp. 108-122. Springer Berlin Heidelberg (2013); Mohagheghi, P., Dehlen, V.: Where is the proof?--A review of experiences from applying mde in industry. In: Schieferdecker I., Hartman A. (eds.) Model Driven Architecture--Foundations and Applications, Lecture Notes in Computer Science, vol. 5095, pp. 432-443 (2008); citation_journal_title=Softw. Syst. Model.; citation_title=Where does model-driven engineering help? Experiences from three industrial cases; citation_author=P Mohagheghi, W Gilani, A Stefanescu, MA Fernandez, B Nordmoen, M Fritzsche; citation_volume=12; citation_issue=3; citation_publication_date=2013; citation_pages=619-639; citation_doi=10.1007/s10270-011-0219-7; citation_id=CR41; North, D.: Introducing behaviour driven development. Better Software Magazine (2006). 
                    https://dannorth.neintroducinbdd/; citation_journal_title=Computer; citation_title=Weaving together requirements and architectures; citation_author=B Nuseibeh; citation_volume=34; citation_issue=3; citation_publication_date=2001; citation_pages=115-119; citation_doi=10.1109/2.910904; citation_id=CR43; Paech, B., Dutoit, A.H., Kerkow, D., Von Knethen, A.: Functional requirements, non-functional requirements, and architecture should not be separated oea position paper (2002); Penzenstadler, B., Sikora, E., Pohl, K.: A requirements reference model for model-based requirements engineering in the automotive domain. In: International Working Conference on Requirements Engineering: Foundation for Software Quality, pp. 212-217 (2009); citation_title=Model-Based Engineering of Embedded Systems: The SPES 2020 Methodology; citation_publication_date=2012; citation_id=CR46; citation_author=K Pohl; citation_author=H Honninger; citation_author=R Achatz; citation_author=M Broy; citation_publisher=Springer; citation_title=Case Study Research in Software Engineering; citation_publication_date=2012; citation_id=CR47; citation_author=P Runeson; citation_author=M Host; citation_author=A Rainer; citation_author=B Regnell; citation_publisher=Wiley; Rungta, N., Tkachuk, O., Person, S., Biatek, J., Whalen, M.W., Castle, J., Gundy-Burlet, K.: Helping system engineers bridge the peaks. In: Proceedings of the 4th International Workshop on Twin Peaks of Requirements and Architecture, TwinPeaks 2014, pp. 9-13 (2014); Scaled Agile Inc.: Scaled agile framework. 
                    http://www.scaledagileframework.com/
                    
                  . Last Accessed Feb 2015; Sikora, E., Tenbergen, B., Pohl, K.: Requirements engineering for embedded systems: an investigation of industry needs. In: Berry D., Franch X. (eds.) Requirements Engineering: Foundation for Software Quality, Lecture Notes in Computer Science, vol. 6606, pp. 151-165 (2011); Torchiano, M., Tomassetti, F., Ricca, F., Tiso, A., Reggio, G.: Preliminary findings from a survey on the md* state of the practice. In: 5th International Symposium on Empirical Software Engineering and Measurement (ESEM '11), pp. 372-375 (2011); van Akkeren, E., Baumann, L., Cannegieter, J.J., Hood, C., Hruschka, P., Lampe, M., Leutbecher, E., van Loenhoud, H., de Roo, P., Staal, S., et al.: Handbook of requirements modeling according to the ireb standard. IREB International Requirements Engineering Board e.V. (2016); Vogelsang, A., Eder, S., Hackenberg, G., Junker, M., Teufl, S.: Supporting concurrent development of requirements and architecture: A model-based approach. In: Model-Driven Engineering and Software Development (MODELSWARD), 2014 2nd International Conference on, pp. 587-595. IEEE (2014); Weber, M., Weisbrod, J.: Requirements engineering in automotive development-experiences and challenges. In: Proceedings of IEEE Joint International Conference on Requirements Engineering (RE '02), pp. 331-340 (2002); Weinstein, M.: TAMS Analyzer. 
                    http://tamsys.sourceforge.net/
                    
                  . Last Accessed Feb 2015; Whittle, J., Hutchinson, J., Rouncefield, M., Burden, H., Heldal, R.: Industrial adoption of model-driven engineering: Are the tools really the problem? In: Moreira A., Schatz B., Gray J., Vallecillo A., Clarke P. (eds.) Model-Driven Engineering Languages and Systems, Lecture Notes in Computer Science, vol. 8107, pp. 1-17 (2013); citation_title=Case study: Design and Methods; citation_publication_date=2009; citation_id=CR57; citation_author=RK Yin; citation_publisher=Sage"			Excluded	Excluded	new_screen			2	Springer Link		Use, potential, and showstoppers of models in automotive requirements engineering	https://doi.org/10.1007/s10270-018-0683-4	Springer Link	nan; Pages; Year; Bibtex; Link
585	Behave	Useful RSpec Tools	RSpec is a very feature-rich library. In this chapter, you learn about the most frequently used features (Figure 5-1), and you try to apply them to a real Ruby application. Also, you will be requested to develop a Ruby class and test cover it with RSpec.		Matsinopoulos, Panos	Practical Test Automation	https://doi.org/10.1007/978-1-4842-6141-5_5		159--198	"""@Inbook{Matsinopoulos2020,
    author = ""Matsinopoulos, Panos"",
    title = ""Useful RSpec Tools"",
    bookTitle = ""Practical Test Automation: Learn to Use Jasmine, RSpec, and Cucumber Effectively for Your TDD and BDD"",
    year = ""2020"",
    publisher = ""Apress"",
    address = ""Berkeley, CA"",
    pages = ""159--198"",
    abstract = ""RSpec is a very feature-rich library. In this chapter, you learn about the most frequently used features (Figure 5-1), and you try to apply them to a real Ruby application. Also, you will be requested to develop a Ruby class and test cover it with RSpec."",
    isbn = ""978-1-4842-6141-5"",
    doi = ""10.1007/978-1-4842-6141-5\_5"",
    url = ""https://doi.org/10.1007/978-1-4842-6141-5\_5""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Useful RSpec Tools	https://doi.org/10.1007/978-1-4842-6141-5_5	Apress	nan; Keywords; References; Link
586	Behave	User Interface Design	As we are heading toward an open-source digital experience platform, DXP's provide collaborative user interface. This chapter provides DXP user interface (UI) concepts and shows how to develop intuitive and interactive UI designs. In this chapter we look at:		Shivakumar, Shailesh Kumar; Sethii, Sourabhh	Building Digital Experience Platforms	https://doi.org/10.1007/978-1-4842-4303-9_4		119--147	"""@Inbook{Shivakumar2019,
    author = ""Shivakumar, Shailesh Kumar and Sethii, Sourabhh"",
    title = ""User Interface Design"",
    bookTitle = ""Building Digital Experience Platforms: A Guide to Developing Next-Generation Enterprise Applications"",
    year = ""2019"",
    publisher = ""Apress"",
    address = ""Berkeley, CA"",
    pages = ""119--147"",
    abstract = ""As we are heading toward an open-source digital experience platform, DXP's provide collaborative user interface. This chapter provides DXP user interface (UI) concepts and shows how to develop intuitive and interactive UI designs. In this chapter we look at:"",
    isbn = ""978-1-4842-4303-9"",
    doi = ""10.1007/978-1-4842-4303-9\_4"",
    url = ""https://doi.org/10.1007/978-1-4842-4303-9\_4""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		User Interface Design	https://doi.org/10.1007/978-1-4842-4303-9_4	Apress	nan; Keywords; References; Link
587	Behave	Using Agile Testing in an Academic Health System Case Study	During the first semester of 2017, at the Brazilian Aeronautics Institute of Technology (Instituto Tecnologico de Aeronautica -- ITA), 30 undergraduate and graduate students from three different courses applied Interdisciplinary Learning Based on Problems (IPBL) and during 17 academic weeks had the opportunity to conceive, model and develop a Computer System to combine data and integrate different actors such as PATIENT, HOSPITAL, PHYSICIAN and SUPPLIER to the decision-making process related to health crisis management, such as epidemics. The purpose of this system based on Big Data and Internet of Things (IoT) was to manage data and information to allow the appropriate decision making. The agile Scrum method and its best practices with Python or Java, Spark, NoSQL databases, Kafka and other technologies were applied collaboratively in a fictional crisis scenario as a proof of concept (PoC) to solve health system problems. The main contribution of this study was the use of agile tests in the verification and validation of this academic system related to the management of health crises.	Health care system; Health crisis management; Agile testing; Big data; Predictive models; Internet of things; Interdisciplinary problem-based learning	da Silva, Daniela America; dos Santos, Samara Cardoso; de Barros Santana, Rodrigo Monteiro; Queiroz, Filipe Santiago; Goncalves, Gildarcio Sousa; Pugliese, Victor Ulisses; Nascimento, Alexandre; Dias, Luiz Alberto Vieira; da Cunha, Adilson Marques; Marques, Johnny; Tasinaffo, Paulo Marcelo	16th International Conference on Information Technology-New Generations (ITNG 2019)	https://doi.org/10.1007/978-3-030-14070-0\_86		605--612	"""@InProceedings{10.1007/978-3-030-14070-0_86,
    author = ""da Silva, Daniela America and dos Santos, Samara Cardoso and de Barros Santana, Rodrigo Monteiro and Queiroz, Filipe Santiago and Goncalves, Gildarcio Sousa and Pugliese, Victor Ulisses and Nascimento, Alexandre and Dias, Luiz Alberto Vieira and da Cunha, Adilson Marques and Marques, Johnny and Tasinaffo, Paulo Marcelo"",
    editor = ""Latifi, Shahram"",
    title = ""Using Agile Testing in an Academic Health System Case Study"",
    booktitle = ""16th International Conference on Information Technology-New Generations (ITNG 2019)"",
    year = ""2019"",
    publisher = ""Springer International Publishing"",
    address = ""Cham"",
    pages = ""605--612"",
    abstract = ""During the first semester of 2017, at the Brazilian Aeronautics Institute of Technology (Instituto Tecnologico de Aeronautica -- ITA), 30 undergraduate and graduate students from three different courses applied Interdisciplinary Learning Based on Problems (IPBL) and during 17 academic weeks had the opportunity to conceive, model and develop a Computer System to combine data and integrate different actors such as PATIENT, HOSPITAL, PHYSICIAN and SUPPLIER to the decision-making process related to health crisis management, such as epidemics. The purpose of this system based on Big Data and Internet of Things (IoT) was to manage data and information to allow the appropriate decision making. The agile Scrum method and its best practices with Python or Java, Spark, NoSQL databases, Kafka and other technologies were applied collaboratively in a fictional crisis scenario as a proof of concept (PoC) to solve health system problems. The main contribution of this study was the use of agile tests in the verification and validation of this academic system related to the management of health crises."",
    isbn = ""978-3-030-14070-0""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Using Agile Testing in an Academic Health System Case Study	https://link.springer.com/chapter/10.1007/978-3-030-14070-0_86	Springer International Publishing	nan; References
588	Behave	Using Data Integration for Security Testing	The explosion of digitisation makes a plethora of security data publicly available for developers. These numerous (often complex) documents expose them to the difficulty of choosing the most appropriate solution for securing their applications. We propose in this paper a method based upon data acquisition and integration, which assists developers in the Threat modelling stage and in the security test case execution. The method firstly helps devise Attack Defense Trees by means of a data-store. These trees show attacks, steps and defenses given under the form of security patterns, which are re-usable solutions to design more secure applications. These trees are then used for the test case generation. The data-store integrates test case stubs, which make this generation easier and developers more efficient. We evaluate our approach on 24 participants and show encouraging results on the use of data integration in software engineering.	Security; Security patterns; Attack Defense Trees; Test case generation	Salva, S{\'e}bastien; Regainia, Loukmen	IFIP International Conference on Testing Software and Systems	https://doi.org/10.1007/978-3-319-67549-7_11		178--194	"""@InProceedings{10.1007/978-3-319-67549-7_11,
    author = ""Salva, S{\'e}bastien and Regainia, Loukmen"",
    editor = {Yevtushenko, Nina and Cavalli, Ana Rosa and Yenig{\""u}n, H{\""u}sn{\""u}},
    title = ""Using Data Integration for Security Testing"",
    booktitle = ""Testing Software and Systems"",
    year = ""2017"",
    publisher = ""Springer International Publishing"",
    address = ""Cham"",
    pages = ""178--194"",
    abstract = ""The explosion of digitisation makes a plethora of security data publicly available for developers. These numerous (often complex) documents expose them to the difficulty of choosing the most appropriate solution for securing their applications. We propose in this paper a method based upon data acquisition and integration, which assists developers in the Threat modelling stage and in the security test case execution. The method firstly helps devise Attack Defense Trees by means of a data-store. These trees show attacks, steps and defenses given under the form of security patterns, which are re-usable solutions to design more secure applications. These trees are then used for the test case generation. The data-store integrates test case stubs, which make this generation easier and developers more efficient. We evaluate our approach on 24 participants and show encouraging results on the use of data integration in software engineering."",
    isbn = ""978-3-319-67549-7""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Using Data Integration for Security Testing	https://link.springer.com/chapter/10.1007/978-3-319-67549-7_11	Springer International Publishing	nan; References
589	Behave	Using language workbenches and domain-specific languages for safety-critical software development	Language workbenches support the efficient creation, integration, and use of domain-specific languages. Typically, they execute models by code generation to programming language code. This can lead to increased productivity and higher quality. However, in safety-/mission-critical environments, generated code may not be considered trustworthy, because of the lack of trust in the generation mechanisms. This makes it harder to justify the use of language workbenches in such an environment. In this paper, we demonstrate an approach to use such tools in critical environments. We argue that models created with domain-specific languages are easier to validate and that the additional risk resulting from the transformation to code can be mitigated by a suitably designed transformation and verification architecture. We validate the approach with an industrial case study from the healthcare domain. We also discuss the degree to which the approach is appropriate for critical software in space, automotive, and robotics systems.	Domain-specific languages; Safety-critical software development; Case study; Language workbenches; Domain-specific languages;  Safety-critical software development;  Case study;  Language workbenches	Voelter, Markus; Kolb, Bernd; Birken, Klaus; Tomassetti, Federico; Alff, Patrick; Wiart, Laurent; Wortmann, Andreas; Nordmann, Arne	SOFTWARE AND SYSTEMS MODELING	https://doi.org/10.1007/s10270-018-0679-0	"citation_journal_title=J. Object Technol.; citation_title=Formal verification techniques for model transformations: a tridimensional classification; citation_author=M Amrani, B Combemale, L Lucio, GMK Selim, J Dingel, YL Traon, H Vangheluwe, JR Cordy; citation_volume=14; citation_issue=3; citation_publication_date=2015; citation_pages=1:1-43; citation_doi=10.5381/jot.2015.14.3.a1; citation_id=CR1; citation_journal_title=IEEE Secur. Priv.; citation_title=Software penetration testing; citation_author=B Arkin, S Stender, G McGraw; citation_volume=3; citation_issue=1; citation_publication_date=2005; citation_pages=84-87; citation_doi=10.1109/MSP.2005.23; citation_id=CR2; Beine, M., Otterbach, R., Jungmann, M.: Development of safety-critical software using automatic code generation. Technical Report, SAE Technical Paper (2004); citation_title=Implementing Domain-Specific Languages with Xtext and Xtend; citation_publication_date=2016; citation_id=CR4; citation_author=L Bettini; citation_publisher=Packt Publishing Ltd; citation_title=Software Engineering Economics; citation_publication_date=1981; citation_id=CR5; citation_author=BW Boehm; citation_publisher=Prentice-hall; Broy, M., Kirstan, S., Krcmar, H., Schatz, B., Zimmermann, J.: What is the benefit of a model-based design of embedded software systems in the car industry? Softw Des Dev Concepts Methodol Tools Appl Concepts Methodol Tools Appl, p.310 (2013). 
                    https://doi.org/10.4018/978-1-4666-4301-7.ch017; citation_journal_title=IEEE Softw.; citation_title=The impact of tools on software productivity; citation_author=T Bruckhaus, N Madhavii, I Janssen, J Henshaw; citation_volume=13; citation_issue=5; citation_publication_date=1996; citation_pages=29-38; citation_doi=10.1109/52.536456; citation_id=CR7; Buckl, C., Regensburger, M., Knoll, A., Schrott, G.: Models for automatic generation of safety-critical real-time systems. In: ARES 2007 Conference. IEEE (2007); citation_journal_title=ACM SIGPLAN Not.; citation_title=A verified compiler for an impure functional language; citation_author=A Chlipala; citation_volume=45; citation_publication_date=2010; citation_pages=93-106; citation_doi=10.1145/1707801.1706312; citation_id=CR9; citation_journal_title=Acm SIGPLAN Not.; citation_title=Quickcheck: a lightweight tool for random testing of haskell programs; citation_author=K Claessen, J Hughes; citation_volume=46; citation_issue=4; citation_publication_date=2011; citation_pages=53-64; citation_doi=10.1145/1988042.1988046; citation_id=CR10; Conmy, P., Paige, R.F.: Challenges when using model driven architecture in the development of safety critical software. In: 4th Intl. Workshop on Model-Based Methodologies for Pervasive and Embedded Software. IEEE (2007); Conrad, M.: Verification and validation according to iso 26262: a workflow to facilitate the development of high-integrity software. In: ERTS2 Conference 2012; Cousot, P., Cousot, R., Feret, J., Mauborgne, L., Mine, A., Monniaux, D., Rival, X.: The astree analyzer. In: Esop, vol. 5, pp. 21-30. Springer (2005); Cuoq, P., Kirchner, F., Kosmatov, N., Prevosto, V., Signoles, J., Yakobowski, B.: Frama-c. In: International Conference on Software Engineering and Formal Methods. Springer (2012); Dahlweid, M., Moskal, M., Santen, T., Tobies, S., Schulte, W.: Vcc: Contract-based modular verification of concurrent c. In: ICSE Companion (2009); Dormoy, F.-X.: Scade 6: a model based solution for safety critical software development. In: Proceedings of the 4th European Congress on Embedded Real Time Software (ERTS'08), pp. 1-9 (2008); Erdweg, S., Van Der Storm, T., Volter, M., Boersma, M., Bosman, R., Cook, W. R., Gerritsen, A., Hulshout, A., Kelly, S., Loh, A., et al.: The state of the art in language workbenches. In: International Conference on Software Language Engineering, pp. 197-217. Springer (2013); Eysholdt, M.: Executable specifications for xtext. Website (2014). 
                    http://www.xpect-tests.org/; citation_journal_title=ACM SIGPLAN Not.; citation_title=Pop-pl: a patient-oriented prescription programming language; citation_author=SP Florence, B Fetscher, M Flatt, WH Temps, T Kiguradze, DP West, C Niznik, PR Yarnold, RB Findler, SM Belknap; citation_volume=51; citation_publication_date=2015; citation_pages=131-140; citation_doi=10.1145/2936314.2814221; citation_id=CR19; Gorke, S., Riebeling, R., Kraus, F., Reichel, R.: Flexible platform approach for fly-by-wire systems. In: 2013 IEEE/AIAA Digital Avionics Systems Conference. IEEE (2013); citation_journal_title=Ann. Rev. Control; citation_title=Programming languages for use in safety-related applications; citation_author=WA Halang, J Zalewski; citation_publication_date=2003; citation_id=CR21; citation_title=Patterns for Fault Tolerant Software; citation_publication_date=2013; citation_id=CR22; citation_author=R Hanmer; citation_publisher=Wiley; Hart, B.: Sdr security threats in an open source world. In: Software Defined Radio Conference, pp. 3-5 (2004); Haxthausen, A.E., Peleska, J.: A domain specific language for railway control systems. In: Proc. of the 6th biennial world conference on integrated design and process technology (2002); Hermans, F., Pinzger, M., Van Deursen, A.: Domain-specific languages in practice: a user study on the success factors. In: International Conference on Model Driven Engineering Languages and Systems, pp. 423-437. Springer (2009); citation_journal_title=ACM SIGPLAN Not.; citation_title=Building embedded systems with embedded dsls; citation_author=PC Hickey, L Pike, T Elliott, J Bielman, J Launchbury; citation_volume=49; citation_publication_date=2014; citation_pages=3-9; citation_doi=10.1145/2692915.2628146; citation_id=CR26; citation_title=Spin Model Checker, the: Primer and Reference Manual; citation_publication_date=2003; citation_id=CR27; citation_author=G Holzmann; citation_publisher=Addison-Wesley Professional; Huang, W.-l., Peleska, J.: Exhaustive model-based equivalence class testing. In: IFIP International Conference on Testing Software and Systems, pp. 49-64. Springer (2013); Karna, J., Tolvanen, J.-P., Kelly, S.: Evaluating the use of domain-specific modeling in practice. In: Proceedings of the 9th OOPSLA Workshop on Domain-Specific Modeling (2009); citation_journal_title=ACM SIGPLAN Not.; citation_title=Integrated language definition testing: enabling test-driven language development; citation_author=LC Kats, R Vermaas, E Visser; citation_volume=46; citation_publication_date=2011; citation_pages=139-154; citation_doi=10.1145/2076021.2048080; citation_id=CR30; Kieburtz, R. B., McKinney, L., Bell, J. M., Hook, J., Kotov, A., Lewis, J., Oliva, D. P., Sheard, T., Smith, I., Walton, L.: A software engineering experiment in software component generation. In: Proceedings of the 18th International Conference on Software Engineering, pp. 542-552. IEEE Computer Society (1996); Koopman, P.: Embedded Software Costs 15-40 per line of code (Update: 25-50). 
                    http://bit.ly/29QHOlo
                    
                   (URL too long); Koopman, P.: Risk areas in embedded software industry projects. In: 2010 Workshop on Embedded Systems Education. ACM (2010); citation_journal_title=Empir. Softw. Eng.; citation_title=Program comprehension of domain-specific and general-purpose languages: comparison using a family of experiments; citation_author=T Kosar, M Mernik, JC Carver; citation_volume=17; citation_issue=3; citation_publication_date=2012; citation_pages=276-304; citation_doi=10.1007/s10664-011-9172-x; citation_id=CR34; Kroening, D., Tautschnig, M.: Cbmc-c bounded model checker. In: International Conference on Tools and Algorithms for the Construction and Analysis of Systems, pp. 389-391. Springer (2014); Kuhn, A., Murphy, G.C., Thompson, C.A.: An exploratory study of forces and frictions affecting large-scale model-driven development. In: International Conference on Model Driven Engineering Languages and Systems, pp. 352-367. Springer (2012); citation_journal_title=ACM SIGPLAN Not.; citation_title=Cakeml: a verified implementation of ml; citation_author=R Kumar, MO Myreen, M Norrish, S Owens; citation_volume=49; citation_publication_date=2014; citation_pages=179-191; citation_id=CR37; Lammel, R.: Grammar testing. In: Proceedings of the 4th International Conference on Fundamental Approaches to Software Engineering (2001); Ledinot, E., Astruc, J.-M., Blanquart, J.-P., Baufreton, P., Boulanger, J.-L., Delseny, H., Gassino, J., Ladier, G., Leeman, M., Machrouh, J., et al.: A cross-domain comparison of software development assurance standards. In: Proc. of ERTS 2012; citation_journal_title=Commun. ACM; citation_title=Formal verification of a realistic compiler; citation_author=X Leroy; citation_volume=52; citation_issue=7; citation_publication_date=2009; citation_pages=107-115; citation_doi=10.1145/1538788.1538814; citation_id=CR40; Lewis, J.: Cryptol: specification, implementation and verification of high-grade cryptographic applications. In: Proceedings of the 2007 ACM workshop on Formal methods in security engineering, pp. 41-41. ACM (2007); Liebel, G., Marko, N., Tichy, M., Leitner, A., Hansson, J.: Assessing the state-of-practice of model-based engineering in the embedded systems domain. In: International Conference on Model Driven Engineering Languages and Systems, pp. 166-182. Springer (2014); citation_journal_title=IEEE Softw.; citation_title=Trends in embedded software engineering; citation_author=P Liggesmeyer, M Trapp; citation_volume=26; citation_issue=3; citation_publication_date=2009; citation_pages=19-25; citation_doi=10.1109/MS.2009.80; citation_id=CR43; Lucio, L., Barroca, B., Amaral, V.: A technique for automatic validation of model transformations. In: MODELS 2010. Springer (2010); Mery, D., Schatz, B., Wassyng, A.: The pacemaker challenge: developing certifiable medical devices (dagstuhl seminar 14062). In: Dagstuhl Reports, vol. 4. Schloss Dagstuhl-Leibniz-Zentrum fuer Informatik (2014); Michailidis, A., Spieth, U., Ringler, T., Hedenetz, B., Kowalewski, S.: Test front loading in early stages of automotive software development based on autosar. In: DATE 2010. IEEE; Motor Industry Software Reliability Association and Motor Industry Software Reliability Association staff: MISRA C: 2012: Guidelines for the Use of the C Language in Critical Systems. Motor Industry Research Association (2013); Molotnikov, Z., Volter, M., Ratiu, D.: Automated domain-specific c verification with mbeddr. In: Proceedings of the 29th ACM/IEEE International Conference on Automated Software Engineering, pp. 539-550. ACM (2014); Munier, P.: Polyspace(r). Industrial Use of Formal Methods: Formal Verification, pp. 123-153 (2012). 
                    https://www.mathworks.com/products/polyspace.html
                    
                  . Accessed 10 Apr 2018; citation_title=Software Reliability; citation_publication_date=1976; citation_id=CR50; citation_author=G J Myers; citation_publisher=Wiley; citation_journal_title=Commun. ACM; citation_title=A controlled experiment in program testing and code walkthroughs/inspections; citation_author=GJ Myers; citation_volume=21; citation_issue=9; citation_publication_date=1978; citation_pages=760-768; citation_doi=10.1145/359588.359602; citation_id=CR51; Nguyen-Tuong, A., Guarnieri, S., Greene, D., Shirley, J., Evans, D.: Automatically hardening web applications using precise tainting. In: IFIP International Information Security Conference. Springer, (2005); citation_journal_title=ACM Trans. Embed. Comput. Syst. (TECS); citation_title=Safety-critical medical device development using the upp2sf model translation tool; citation_author=M Pajic, Z Jiang, I Lee, O Sokolsky, R Mangharam; citation_volume=13; citation_issue=4s; citation_publication_date=2014; citation_pages=127; citation_id=CR53; Ratiu, D., Voelter, M.: Automated testing of DSL implementations. In: 11th IEEE/ACM International Workshop on Automation of Software Test (AST 2016) (2016); Ratiu, D., Schaetz, B., Voelter, M., Kolb, B.: Language engineering as an enabler for incrementally defined formal analyses. In: Proceedings of the First International Workshop on Formal Methods in Software Engineering: Rigorous and Agile Approaches, pp. 9-15. IEEE Press (2012); Ratiu, D., Zeller, M., Killian, L.: Safety.lab: model-based domain specific tooling for safety argumentation. In: International Conference on Computer Safety, Reliability, and Security, pp. 72-82. Springer (2014); Reveillere, L., Merillon, F., Consel, C., Marlet, R., Muller, G.: A dsl approach to improve productivity and safety in device drivers development. In: ASE 2000. IEEE; Santhanam, V.: The anatomy of an faa-qualifiable ada subset compiler. In: ACM SIGAda Ada Letters, vol. 23, pp. 40-43. ACM (2002); Svendsen, A., Olsen, G. K., Endresen, J., Moen, T., Carlson, E., Alme, K.-J., Haugen, O.: The future of train signaling. In: International Conference on Model Driven Engineering Languages and Systems, pp. 128-142. Springer (2008); citation_journal_title=Procedia Comput. Sci.; citation_title=Metamodeling for medical devices: code generation, model-debugging and run-time synchronization; citation_author=J-P Tolvanen, V Djukic, A Popovic; citation_volume=63; citation_publication_date=2015; citation_pages=539-544; citation_doi=10.1016/j.procs.2015.08.382; citation_id=CR60; citation_journal_title=ACM SIGPLAN Not.; citation_title=Domain-specific languages: an annotated bibliography; citation_author=A Deursen, P Klint, J Visser; citation_volume=35; citation_issue=6; citation_publication_date=2000; citation_pages=26-36; citation_doi=10.1145/352029.352035; citation_id=CR61; Vergu, V., Neron, P., Visser, E.: Dynsem: A dsl for dynamic semantics specification. Technical Report, Delft University of Technology, Software Engineering Research Group (2015); Visser, E., Wachsmuth, G., Tolmach, A., Neron, P., Vergu, V., Passalaqua, A., Konat, G.: A language designer's workbench: a one-stop-shop for implementation and verification of language designs. In: Proc. of the 2014 ACM International Symposium on New Ideas, New Paradigms, and Reflections on Programming and Software. ACM (2014); Voelter, M.: Language and ide modularization and composition with mps. In: Generative and Transformational Techniques in Software Engineering IV, pp. 383-430. Springer (2013); citation_title=Generic Tools, Specific Languages; citation_publication_date=2014; citation_id=CR65; citation_author=M Voelter; citation_publisher=TU Delft Delft University of Technology; Voelter, M., Lisson, S.: Supporting diverse notations in MPS' Projectional Editor. GEMOC Workshop; Voelter, M., Molotnikov, Z., Kolb, B.: Towards improving software security using language engineering and mbeddr c. In: Proceeding of the Workshop on Domain-Specific Modeling 2015, pp. 55-62. Pittsburgh, PA, USA, 27-27 October 2015; citation_journal_title=Autom. Softw. Eng.; citation_title=mbeddr: Instantiating a language workbench in the embedded software domain; citation_author=M Voelter, D Ratiu, B Kolb, B Schaetz; citation_volume=20; citation_issue=3; citation_publication_date=2013; citation_pages=339-390; citation_doi=10.1007/s10515-013-0120-4; citation_id=CR68; Voelter, M., Ratiu, D., Tomassetti, F.: Requirements as first-class citizens: integrating requirements closely with implementation artifacts. In: ACESMB@ MoDELS (2013); Voelter, M., Deursen, A. v., Kolb, B., Eberle, S.: Using C language extensions for developing embedded software: a case study In: Proceedings of the 2015 ACM SIGPLAN International Conference on Object-Oriented Programming, Systems, Languages, and Applications, pp. 655-674, Pittsburgh, PA, USA, 25-30 October 2015; Voelter, M., van Deursen, A., Kolb, B., Eberle, S.: Using c language extensions for developing embedded software: a case study. In: OOPSLA 2015 (2015); Voelter, M., Kolb, B., Szabo, T., Ratiu, D., van Deursen, A.: Lessons learned from developing mbeddr: a case study in language engineering with mps. Softw. Syst. Model., pp. 1-46 (2017). 
                    https://doi.org/10.1007/s10270-016-0575-4; Voelter, M., SzabO, T., Engelmann, B.: An Overview of Program Analysis using Formal Methods. Self-published (2017). 
                    http://voelter.de/data/books/introToFormalMethodsAndDSLs-1.0.pdf; citation_journal_title=Electron. Notes Theor. Comput. Sci.; citation_title=Modular architectural representation and analysis of fault propagation and transformation; citation_author=M Wallace; citation_volume=141; citation_issue=3; citation_publication_date=2005; citation_pages=53-71; citation_doi=10.1016/j.entcs.2005.02.051; citation_id=CR74; citation_journal_title=IEEE Softw.; citation_title=Comparison of structural test coverage metrics; citation_author=M Weiser, JD Gannon, PR McMullin; citation_volume=2; citation_issue=2; citation_publication_date=1985; citation_pages=80; citation_doi=10.1109/MS.1985.230356; citation_id=CR75; Whalen, M.W., Heimdahl, M.P.E.: An approach to automatic code generation for safety-critical systems. In: 14th IEEE International Conference on Automated Software Engineering, 1999, pp 315-318. IEEE (1999); citation_journal_title=Commun. ACM; citation_title=Computational thinking; citation_author=JM Wing; citation_volume=49; citation_issue=3; citation_publication_date=2006; citation_pages=33-35; citation_doi=10.1145/1118178.1118215; citation_id=CR77; Wortmann, A., Beet, M.: Domain specific languages for efficient satellite control software development. In: DASIA 2016, vol 736 (2016); Wu, H., Gray, J.G., Mernik, M.: Unit testing for domain-specific languages. In: Domain-Specific Languages, IFIP TC 2 Working Conference, DSL 2009, Oxford, UK, July 15-17, 2009, Proceedings, pp. 125-147 (2009)"	2507-2530	"""@article{WOS:000475599900006,
    Author = ""Voelter, Markus and Kolb, Bernd and Birken, Klaus and Tomassetti, Federico and Alff, Patrick and Wiart, Laurent and Wortmann, Andreas and Nordmann, Arne"",
    Title = ""Using language workbenches and domain-specific languages for safety-critical software development"",
    Journal = ""SOFTWARE AND SYSTEMS MODELING"",
    Year = ""2019"",
    Volume = ""18"",
    Number = ""4"",
    Pages = ""2507-2530"",
    Month = ""AUG"",
    Abstract = ""Language workbenches support the efficient creation, integration, and use of domain-specific languages. Typically, they execute models by code generation to programming language code. This can lead to increased productivity and higher quality. However, in safety-/mission-critical environments, generated code may not be considered trustworthy, because of the lack of trust in the generation mechanisms. This makes it harder to justify the use of language workbenches in such an environment. In this paper, we demonstrate an approach to use such tools in critical environments. We argue that models created with domain-specific languages are easier to validate and that the additional risk resulting from the transformation to code can be mitigated by a suitably designed transformation and verification architecture. We validate the approach with an industrial case study from the healthcare domain. We also discuss the degree to which the approach is appropriate for critical software in space, automotive, and robotics systems."",
    Publisher = ""SPRINGER HEIDELBERG"",
    Address = ""TIERGARTENSTRASSE 17, D-69121 HEIDELBERG, GERMANY"",
    Type = ""Article"",
    Language = ""English"",
    Affiliation = ""Voelter, M (Corresponding Author), Itemis AG, Stuttgart, Germany. Voelter, Markus; Kolb, Bernd; Birken, Klaus, Itemis AG, Stuttgart, Germany. Tomassetti, Federico, TripAdvisor \\& Groupon, Lyon, France. Alff, Patrick; Wiart, Laurent, Voluntis, Paris, France. Wortmann, Andreas, OHB Syst AG, Bremen, Germany. Nordmann, Arne, Bosch Corp Res, Stuttgart, Germany."",
    DOI = ""10.1007/s10270-018-0679-0"",
    ISSN = ""1619-1366"",
    EISSN = ""1619-1374"",
    Keywords = ""Domain-specific languages; Safety-critical software development; Case study; Language workbenches"",
    Keywords-Plus = ""EMBEDDED SOFTWARE; MBEDDR"",
    Research-Areas = ""Computer Science"",
    Web-of-Science-Categories = ""Computer Science, Software Engineering"",
    Author-Email = ""voelter@acm.org kolb@itemis.de birken@itemis.de federico@tomassetti.me Patrick.Alff@voluntis.com Laurent.Wiart@voluntis.com andreas.wortmann@ohb.de arne.nordmann@de.bosch.com"",
    Affiliations = ""OHB SE"",
    Number-of-Cited-References = ""79"",
    Times-Cited = ""16"",
    Usage-Count-Last-180-days = ""1"",
    Usage-Count-Since-2013 = ""2"",
    Journal-ISO = ""Softw. Syst. Model."",
    Doc-Delivery-Number = ""IJ0OR"",
    Web-of-Science-Index = ""Science Citation Index Expanded (SCI-EXPANDED)"",
    Unique-ID = ""WOS:000475599900006"",
    DA = ""2024-12-04""
}
"""	Excluded	Excluded	new_screen			2	Web of Science		Using language workbenches and domain-specific languages for safety-critical software development	https://link.springer.com/article/10.1007/s10270-018-0679-0	SPRINGER HEIDELBERG	
590	Behave	Web Testing Practices	Testing a web application requires not only testing the site itself, but also looking at the various application metrics at every layer of the stack. It's like building an aircraft: each part of the aircraft has to be engineered and tested for safety before it is made a part of the whole. Once each subsystem has been developed and tested, they can all be assembled into the finished product for a test flight. With such a complex system, it only makes sense to be sure you can trust the individual parts before you assume the finished product will get you off the ground.	Sustained Load; Content Delivery Network; Application Metrics; Page Load Time; Quality Assurance Engineer	Sacks, Matthew	Pro Website Development and Operations	https://doi.org/10.1007/978-1-4302-3970-3_3		27--43	"""@Inbook{Sacks2012,
    author = ""Sacks, Matthew"",
    title = ""Web Testing Practices"",
    bookTitle = ""Pro Website Development and Operations: Streamlining DevOps for Large-Scale Websites"",
    year = ""2012"",
    publisher = ""Apress"",
    address = ""Berkeley, CA"",
    pages = ""27--43"",
    abstract = ""Testing a web application requires not only testing the site itself, but also looking at the various application metrics at every layer of the stack. It's like building an aircraft: each part of the aircraft has to be engineered and tested for safety before it is made a part of the whole. Once each subsystem has been developed and tested, they can all be assembled into the finished product for a test flight. With such a complex system, it only makes sense to be sure you can trust the individual parts before you assume the finished product will get you off the ground."",
    isbn = ""978-1-4302-3970-3"",
    doi = ""10.1007/978-1-4302-3970-3\_3"",
    url = ""https://doi.org/10.1007/978-1-4302-3970-3\_3""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Web Testing Practices	https://doi.org/10.1007/978-1-4302-3970-3_3	Apress	nan; References; Link
591	Behave	What Do They Do All Day?	We're going to change gears. Having spent a couple of chapters looking at the management of software development, we're now going to take a closer look at software development itself, and the processes that involves.		Gleeson, Patrick	Working with Coders	https://doi.org/10.1007/978-1-4842-2701-5_4		73--111	"""@Inbook{Gleeson2017,
    author = ""Gleeson, Patrick"",
    title = ""What Do They Do All Day?"",
    bookTitle = ""Working with Coders: A Guide to Software Development for the Perplexed Non-Techie"",
    year = ""2017"",
    publisher = ""Apress"",
    address = ""Berkeley, CA"",
    pages = ""73--111"",
    abstract = ""We're going to change gears. Having spent a couple of chapters looking at the management of software development, we're now going to take a closer look at software development itself, and the processes that involves."",
    isbn = ""978-1-4842-2701-5"",
    doi = ""10.1007/978-1-4842-2701-5\_4"",
    url = ""https://doi.org/10.1007/978-1-4842-2701-5\_4""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		What Do They Do All Day?	https://doi.org/10.1007/978-1-4842-2701-5_4	Apress	nan; Keywords; References; Link
592	Behave	What Is Unit Testing?	Unit testing allows you to test your software in isolation.		D{\={a}}sa, R{\={a}}dh{\={a}}r{\={a}}dhya	Learn CakePHP	https://doi.org/10.1007/978-1-4842-1212-7_2		8--13	"""@Inbook{Dasa2016,
    author = ""D{\={a}}sa, R{\={a}}dh{\={a}}r{\={a}}dhya"",
    title = ""What Is Unit Testing?"",
    bookTitle = ""Learn CakePHP: With Unit Testing"",
    year = ""2016"",
    publisher = ""Apress"",
    address = ""Berkeley, CA"",
    pages = ""8--13"",
    abstract = ""Unit testing allows you to test your software in isolation."",
    isbn = ""978-1-4842-1212-7"",
    doi = ""10.1007/978-1-4842-1212-7\_2"",
    url = ""https://doi.org/10.1007/978-1-4842-1212-7\_2""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		What Is Unit Testing?	https://doi.org/10.1007/978-1-4842-1212-7_2	Apress	nan; Keywords; References; Link
593	Behave	What your plug-in test suites really test: an integration perspective on test suite understanding	Software architectures such as plug-in and service-oriented architectures enable developers to build extensible software products, whose functionality can be enriched by adding or configuring components. A well-known example of such an architecture is Eclipse, best known for its use to create a series of extensible IDEs. Although such architectures give users and developers a great deal of flexibility to create new products, the complexity of the built systems increases. In order to manage this complexity developers use extensive automated test suites. Unfortunately, current testing tools offer little insight in which of the many possible combinations of components and components configurations are actually tested. The goal of this paper is to remedy this problem. To that end, we interview 25 professional developers on the problems they experience in test suite understanding for plug-in architectures. The findings have been incorporated in five architectural views that provide an extensibility perspective on plug-in-based systems and their test suites. The views combine static and dynamic information on plug-in dependencies, extension initialization, extension and service usage, and the test suites. The views have been implemented in ETSE, the Eclipse Plug-in Test Suite Exploration tool. We evaluate the proposed views by analyzing eGit, Mylyn, and a Mylyn connector.	Artificial Intelligence; Plug-in systems; Dynamic analysis; Static analysis; Test suite understanding	Michaela Greiler; Arie van Deursen	Empirical Software Engineering	https://doi.org/10.1007/s10664-012-9235-7	"citation_journal_title=Empir Software Eng; citation_title=Using grounded theory to study the experience of software development; citation_author=S Adolph, W Hall, P Kruchten; citation_volume=16; citation_issue=4; citation_publication_date=2011; citation_pages=487-513; citation_doi=10.1007/s10664-010-9152-6; citation_id=CR1; Binder RV (1999) Testing object-oriented systems: models, patterns, and tools. Addison-Wesley Professional; Bryant A, Charmaz K (2007) The SAGE handbook of grounded theory. SAGE; Chatley R, Eisenbach S, Kramer J, Magee J, Uchitel S (2004) Predictable dynamic plugin systems. In: 7th international conference on fundamental approaches to software engineering (FASE). Springer, pp 129-143; citation_journal_title=Qual Sociol; citation_title=Grounded theory research: Procedures, canons, and evaluative criteria; citation_author=JM Corbin, A Strauss; citation_volume=13; citation_publication_date=1990; citation_pages=3-21; citation_doi=10.1007/BF00988593; citation_id=CR5; Cornelissen B, van Deursen A, Moonen L, Zaidman A (2007) Visualizing testsuites to aid in software understanding. In: Proceedings of the 11th European conference on software maintenance and reengineering (CSMR'07). IEEE Computer Society, pp 213-222; citation_journal_title=IEEE Trans Softw Eng; citation_title=A systematic survey of program comprehension through dynamic analysis; citation_author=B Cornelissen, A Zaidman, A Deursen, L Moonen, R Koschke; citation_volume=35; citation_issue=5; citation_publication_date=2009; citation_pages=684-702; citation_doi=10.1109/TSE.2009.28; citation_id=CR7; Dagenais B, Robillard MP (2010) Creating and evolving developer documentation: understanding the decisions of open source contributors. In: Proceedings foundations of sofatware engineering (FSE). ACM SIGSOFT, pp 127-136; Demeyer S, Ducasse S, Nierstrasz O (2003) Object-oriented reengineering patterns. Morgan Kaufmann; Evans E (2003) Domain-driven design: tackling complexity in the heart of software, 1. a. edn. Addison-Wesley Professional; Feathers M (2004) Working effectively with legacy code. Prentice Hall; Freeman S, Pryce N (2010) Growing object-oriented software, guided by tests. Addison-Wesley; Gaelli M, Lanza M, Nierstrasz O (2005) Towards a taxonomy of SUnit tests. In: 13th international european smalltalk conference (ESUG 2005), pp 1-22; citation_title=Contributing to eclipse: principles, patterns, and plugins; citation_publication_date=2003; citation_id=CR14; citation_author=E Gamma; citation_author=K Beck; citation_publisher=Addison Wesley Longman Publishing Co., Inc; citation_title=An empirical evaluation to study benefits of visual versus textual test coverage information; citation_inbook_title=Proceedings of the 5th international academic and industrial conference on testing--practice and research techniques, TAIC PART'10; citation_publication_date=2010; citation_pages=189-193; citation_id=CR15; citation_author=V Garousi; citation_author=N Koochakzadeh; citation_publisher=Springer; Glaser B, Strauss A (1967) The discovery of grounded theory: strategies for qualitative research. Aldine Transaction; citation_title=Test confessions: a study of testing practices for plug-in systems; citation_inbook_title=Proceedings of the 2012 international conference on software engineering, ICSE 2012; citation_publication_date=2012; citation_pages=244-254; citation_id=CR17; citation_author=M Greiler; citation_author=A Deursen; citation_author=MA Storey; citation_publisher=IEEE Press; Greiler M, Gross HG, van Deursen A (2010) Understanding plug-in test suites from an extensibility perspective. In: Proceedings 17th working conference on reverse engineering (WCRE). IEEE Computer Society, pp 67-76; Hartmann J, Imoberdorf C, Meisinger M (2000) UML-based integration testing. In: International symposium on software testing and analysis. ACM, pp 60-70; Hermans F, Pinzger M, van Deursen A (2011) Supporting professional spreadsheet users by generating leveled dataflow diagrams. In: Gall H, Medvidovic N (eds) Proceedings 33rd international conference on software engineering (ICSE 2011). ACM; citation_journal_title=Commun ACM; citation_title=Object-oriented integration testing; citation_author=PC Jorgensen, C Erickson; citation_volume=37; citation_issue=9; citation_publication_date=1994; citation_pages=30; citation_doi=10.1145/182987.182989; citation_id=CR21; citation_title=Tecrevis: a tool for test coverage and test redundancy visualization; citation_inbook_title=Proceedings of the 5th international academic and industrial conference on testing--practice and research techniques, TAIC PART'10; citation_publication_date=2010; citation_pages=129-136; citation_id=CR22; citation_author=N Koochakzadeh; citation_author=V Garousi; citation_publisher=Springer; citation_title=Patterns for plug-ins; citation_inbook_title=Proceedings 4th european conference on pattern languages of programs (EuroPLoP); citation_publication_date=1999; citation_pages=37; citation_id=CR23; citation_author=K Marquardt; citation_publisher=Bad Irsee; citation_title=Clean code: a handbook of agile software craftsmanship; citation_publication_date=2008; citation_id=CR24; citation_author=RC Martin; citation_publisher=Prentice Hall PTR; Mayer J, Melzer I, Schweiggert F (2003) Lightweight plug-in-based application development. In: International conference NetObjectDays, NODe 2002. Springer, pp 87-102; Mens T, Fernandez-Ramil J, Degrandsart S (2008) The evolution of eclipse. In: Proceedings 24th IEEE international conference on software maintenance (ICSM). IEEE, pp 386-395; Meszaros G (2007) xUnit test patterns: refactoring test code. Addison-Wesley; Pezze M, Young M (2008) Software testing and analysis. Wiley; Reis S, Metzger A, Pohl K (2007) Integration testing in software product line engineering: a model-based technique. In: Lecture notes in computer science, pp 321-335; Rigby PC, Storey MA (2011) Understanding broadcast based peer review on open source software projects. In: ICSE '11: Proceedings of the 33rd international conference on software engineering. ACM; citation_journal_title=IEEE Trans Softw Eng; citation_title=Fragment class analysis for testing of polymorphism in Java software; citation_author=A Rountev, A Milanova, B Ryder; citation_volume=30; citation_issue=6; citation_publication_date=2004; citation_pages=372-387; citation_doi=10.1109/TSE.2004.20; citation_id=CR31; citation_title=Testing with spring and OSGi, chap 9; citation_publication_date=2009; citation_id=CR32; citation_author=D Rubio; citation_publisher=Apress; citation_title=The Java developer's guide to Eclipse; citation_publication_date=2005; citation_id=CR33; citation_author=S Shavor; citation_author=J D'Anjou; citation_author=S Fairbrother; citation_author=D Kehn; citation_author=J Kellerman; citation_author=P McCarthy; citation_publisher=Addison-Wesley Longman; The OSGi Alliance (2011) OSGi Service Platform Core Specification; Release 4, Version 4.3. 
                    http://www.osgi.org
                    
                  . Accessed 22 Aug 2011; van Deursen A, Hofmeister C, Koschke R, Moonen L, Riva C. (2004) Symphony: view-driven software architecture reconstruction. In: Proceedings working IEEE/IFIP conference on software architecture (WICSA'04). IEEE Computer Society Press, pp 122-134; van Deursen A, Moonen L, van Den Bergh A, Kok G (2002) Refactoring test code. In: Succi G, Marchesi M, Wells D, Williams L (eds) Extreme programming perspectives. Addison Wesley, pp 141-152; citation_journal_title=IEEE Trans Softw Eng; citation_title=On the detection of test smells: a metrics-based approach for general fixture and eager test; citation_author=B Rompaey, B Du Bois, S Demeyer, M Rieger; citation_volume=33; citation_issue=12; citation_publication_date=2007; citation_pages=800-817; citation_doi=10.1109/TSE.2007.70745; citation_id=CR37; citation_title=Analyzing the evolution of eclipse plugins; citation_inbook_title=Proceedings of the 2008 international working conference on mining software repositories, MSR '08; citation_publication_date=2008; citation_pages=133-136; citation_id=CR38; citation_author=M Wermelinger; citation_author=Y Yu; citation_publisher=ACM; Zaidman A, van Rompaey B, Demeyer S, van Deursen A (2008) Mining software repositories to study co-evolution of production & test code. In: Proceedings 1st international conference on software testing verification and validation (ICST). IEEE Computer Society, pp 220-229"			Excluded	Excluded	new_screen			2	Springer Link		What your plug-in test suites really test: an integration perspective on test suite understanding	https://doi.org/10.1007/s10664-012-9235-7	Springer Link	nan; Pages; Year; Bibtex; Link
594	Behave	What's Ahead for You and Scrum?	You made it! You read about the drawbacks of plan-driven development, also known as the ``waterfall'' development method. With plan-driven development, we were not providing value to our customers or being transparent with our customers about what we were doing and what they needed. We needed to improve our way of developing software. We needed to get away from 400-page design documents as the solution to a problem. We needed to put our customer back into the forefront of our efforts.		Blankenship, Jerrel; Bussa, Matthew; Millett, Scott	Pro Agile .NET Development with Scrum	https://doi.org/10.1007/978-1-4302-3534-7_10		273--279	"""@Inbook{Blankenship2011,
    author = ""Blankenship, Jerrel and Bussa, Matthew and Millett, Scott"",
    title = ""What's Ahead for You and Scrum?"",
    bookTitle = ""Pro Agile .NET Development with Scrum"",
    year = ""2011"",
    publisher = ""Apress"",
    address = ""Berkeley, CA"",
    pages = ""273--279"",
    abstract = ""You made it! You read about the drawbacks of plan-driven development, also known as the ``waterfall'' development method. With plan-driven development, we were not providing value to our customers or being transparent with our customers about what we were doing and what they needed. We needed to improve our way of developing software. We needed to get away from 400-page design documents as the solution to a problem. We needed to put our customer back into the forefront of our efforts."",
    isbn = ""978-1-4302-3534-7"",
    doi = ""10.1007/978-1-4302-3534-7\_10"",
    url = ""https://doi.org/10.1007/978-1-4302-3534-7\_10""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		What’s Ahead for You and Scrum?	https://link.springer.com/chapter/10.1007/978-1-4302-3534-7_10	Apress	nan; Keywords; References
595	Behave	What's the Big Idea?	ASP.NET MVC is a Web development framework from Microsoft that combines the effectiveness and tidiness of model-view-controller (MVC) architecture, the most up-to-date ideas and techniques from agile development, and the best parts of the existing ASP.NET platform. It's a complete alternative to traditional ASP.NET Web Forms, delivering considerable advantages for all but the most trivial of Web development projects. In this chapter, you'll learn why Microsoft originally created ASP.NET MVC, how it compares to its predecessors and alternatives, and, finally, what's new in ASP.NET MVC 4.	Agile Development; Cascade Style Sheets; Common Gateway Interface; Independent Software Vendor; Abstract Base Class	Freeman, Adam	Pro ASP.NET MVC 4	https://doi.org/10.1007/978-1-4302-4237-6_1		3--13	"""@Inbook{Freeman2012,
    author = ""Freeman, Adam"",
    title = ""What's the Big Idea?"",
    bookTitle = ""Pro ASP.NET MVC 4"",
    year = ""2012"",
    publisher = ""Apress"",
    address = ""Berkeley, CA"",
    pages = ""3--13"",
    abstract = ""ASP.NET MVC is a Web development framework from Microsoft that combines the effectiveness and tidiness of model-view-controller (MVC) architecture, the most up-to-date ideas and techniques from agile development, and the best parts of the existing ASP.NET platform. It's a complete alternative to traditional ASP.NET Web Forms, delivering considerable advantages for all but the most trivial of Web development projects. In this chapter, you'll learn why Microsoft originally created ASP.NET MVC, how it compares to its predecessors and alternatives, and, finally, what's new in ASP.NET MVC 4."",
    isbn = ""978-1-4302-4237-6"",
    doi = ""10.1007/978-1-4302-4237-6\_1"",
    url = ""https://doi.org/10.1007/978-1-4302-4237-6\_1""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		What’s the Big Idea?	https://link.springer.com/chapter/10.1007/978-1-4302-4237-6_1	Apress	nan; References
596	Behave	Why Test-Driven Development Is a Must for Code Quality	Recently, Amazon claimed that it puts a new change into its production system every 1.59 seconds with no risk at all. How can this possibly be true? It's all to do with test-driven development (hereafter TDD).		Hardy, Paul David	Improving the Quality of ABAP Code	https://doi.org/10.1007/978-1-4842-6711-0_2		55--111	"""@Inbook{Hardy2021,
    author = ""Hardy, Paul David"",
    title = ""Why Test-Driven Development Is a Must for Code Quality"",
    bookTitle = ""Improving the Quality of ABAP Code: Striving for Perfection"",
    year = ""2021"",
    publisher = ""Apress"",
    address = ""Berkeley, CA"",
    pages = ""55--111"",
    abstract = ""Recently, Amazon claimed that it puts a new change into its production system every 1.59 seconds with no risk at all. How can this possibly be true? It's all to do with test-driven development (hereafter TDD)."",
    isbn = ""978-1-4842-6711-0"",
    doi = ""10.1007/978-1-4842-6711-0\_2"",
    url = ""https://doi.org/10.1007/978-1-4842-6711-0\_2""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Why Test-Driven Development Is a Must for Code Quality	https://link.springer.com/chapter/10.1007/978-1-4842-6711-0_2	Apress	nan; Keywords; References
597	Behave	Windows Server-Administration mit PowerShell 5.1	http://link.springer.com/book/10.1007/978-3-658-17666-2	Active Directory; .NET Framenwork; DevOps; Azure-Dienste; Cmdlets; Desired State Configuration; Konfigurationsmanagement; Gruppenrichtlinien-Verwaltung; Remote-Administration; Debuggen; Administration Active Directory; Linux	Peter Monadjemi		https://link.springer.com/book/10.1007/978-3-658-17666-2				Excluded	Excluded	new_screen			2	Springer Link		Windows Server-Administration mit PowerShell 5.1	https://link.springer.com/book/10.1007/978-3-658-17666-2	Springer Link	nan; Venue; Abstract; References; Pages; Year; Bibtex
598	Behave	Secure Generic Remote Workflow Execution with TEEs	In scientific environments, the frequent need to process substantial volumes of data poses a common challenge. Individuals tasked with executing these computations frequently encounter a deficit in local computational resources, leading them to opt for the facilities of a Cloud Service Provider (CSP) for data processing. However, the data subjected to these calculations may be subject to confidentiality constraints. This paper introduces a proof-of-concept framework that leverages Gramine LibOS and Intel SGX, enabling the protection of generic remote workflow computations through SGX enclaves as Trusted Execution Environments (TEEs). The framework entails the delineation of user and CSP behavior and has been implemented using Bash scripts. Furthermore, an infrastructure has been designed for the Data Center Attestation Primitives (DCAP) remote attestation mechanism, wherein the user gains trust in the proper instantiation of the enclave within the CSP. To assess the framework efficacy, it has been tested on two distinct workflows, one trivial and the other involving real-world bioinformatics applications for processing DNA data. The performance study revealed that the framework incurred an acceptable overhead, ranging from a factor of x1.4 to x1.8 compared to unsafe execution practice.	trusted execution environment;  workflow;  Intel SGX;  gramine;  privacy-preserving;  confidential computing; trusted execution environment, workflow, Intel SGX, gramine, privacy-preserving, confidential computing	Brescia, Lorenzo; Aldinucci, Marco		https://doi.org/10.1145/3642978.3652834		8-13	"""@inproceedings{10.1145/3642978.3652834,
    author = ""Brescia, Lorenzo and Aldinucci, Marco"",
    title = ""Secure Generic Remote Workflow Execution with TEEs"",
    year = ""2024"",
    isbn = ""9798400705465"",
    publisher = ""Association for Computing Machinery"",
    address = ""New York, NY, USA"",
    url = ""https://doi.org/10.1145/3642978.3652834"",
    doi = ""10.1145/3642978.3652834"",
    abstract = ""In scientific environments, the frequent need to process substantial volumes of data poses a common challenge. Individuals tasked with executing these computations frequently encounter a deficit in local computational resources, leading them to opt for the facilities of a Cloud Service Provider (CSP) for data processing. However, the data subjected to these calculations may be subject to confidentiality constraints. This paper introduces a proof-of-concept framework that leverages Gramine LibOS and Intel SGX, enabling the protection of generic remote workflow computations through SGX enclaves as Trusted Execution Environments (TEEs). The framework entails the delineation of user and CSP behavior and has been implemented using Bash scripts. Furthermore, an infrastructure has been designed for the Data Center Attestation Primitives (DCAP) remote attestation mechanism, wherein the user gains trust in the proper instantiation of the enclave within the CSP. To assess the framework efficacy, it has been tested on two distinct workflows, one trivial and the other involving real-world bioinformatics applications for processing DNA data. The performance study revealed that the framework incurred an acceptable overhead, ranging from a factor of x1.4 to x1.8 compared to unsafe execution practice."",
    booktitle = ""Proceedings of the 2nd Workshop on Workflows in Distributed Environments"",
    pages = ""8-13"",
    numpages = ""6"",
    keywords = ""trusted execution environment, workflow, Intel SGX, gramine, privacy-preserving, confidential computing"",
    location = ""Athens, Greece"",
    series = ""WiDE '24""
}
"""	Excluded	Excluded	new_screen			2	ACM		Workflow	https://dl.acm.org/doi/10.1145/3642978.3652834	Association for Computing Machinery	nan; Venue; References
599	Behave	Working with Legacy Code	If you have been for a few years, chances are that you have been brought on to add new features to an existing app with a large code base that has been built over a few years and has been worked on by dozens of developers, most of whom have moved on to other projects.	Legal Code; BankAccount Class; Vigilance Control; NSData; EmailAddress	Mishra, Abhishek	iOS Code Testing	https://doi.org/10.1007/978-1-4842-2689-6_8		257--282	"""@Inbook{Mishra2017,
    author = ""Mishra, Abhishek"",
    title = ""Working with Legacy Code"",
    bookTitle = ""iOS Code Testing: Test-Driven Development and Behavior-Driven Development with Swift"",
    year = ""2017"",
    publisher = ""Apress"",
    address = ""Berkeley, CA"",
    pages = ""257--282"",
    abstract = ""If you have been for a few years, chances are that you have been brought on to add new features to an existing app with a large code base that has been built over a few years and has been worked on by dozens of developers, most of whom have moved on to other projects."",
    isbn = ""978-1-4842-2689-6"",
    doi = ""10.1007/978-1-4842-2689-6\_8"",
    url = ""https://doi.org/10.1007/978-1-4842-2689-6\_8""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Working with Legacy Code	https://doi.org/10.1007/978-1-4842-2689-6_8	Apress	nan; References; Link
600	Behave	Writing Your First Set of Unit Tests with Xcode	In this chapter you will download Xcode and learn to use it to create a simple app using test-driven development techniques. The app you will build will use the Single View Application template and allow the user to create different types of cookies by tapping on buttons in the user interface. The app will present a running total of each type of cookie created as well as the total number of cookies created.		Mishra, Abhishek	iOS Code Testing	https://doi.org/10.1007/978-1-4842-2689-6_2		13--41	"""@Inbook{Mishra2017,
    author = ""Mishra, Abhishek"",
    title = ""Writing Your First Set of Unit Tests with Xcode"",
    bookTitle = ""iOS Code Testing: Test-Driven Development and Behavior-Driven Development with Swift"",
    year = ""2017"",
    publisher = ""Apress"",
    address = ""Berkeley, CA"",
    pages = ""13--41"",
    abstract = ""In this chapter you will download Xcode and learn to use it to create a simple app using test-driven development techniques. The app you will build will use the Single View Application template and allow the user to create different types of cookies by tapping on buttons in the user interface. The app will present a running total of each type of cookie created as well as the total number of cookies created."",
    isbn = ""978-1-4842-2689-6"",
    doi = ""10.1007/978-1-4842-2689-6\_2"",
    url = ""https://doi.org/10.1007/978-1-4842-2689-6\_2""
}
"""	Excluded	Excluded	new_screen			2	Springer Link		Writing Your First Set of Unit Tests with Xcode	https://doi.org/10.1007/978-1-4842-2689-6_2	Apress	nan; Keywords; References; Link
